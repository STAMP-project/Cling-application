import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest17 {

    public static boolean debug = false;

    @Test
    public void test08501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08501");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder0.appendln('a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder0.insert(24, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 24");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test08502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08502");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, '4', '4');
    }

    @Test
    public void test08503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08503");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        int int7 = strBuilder3.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.ensureCapacity((int) (byte) 10);
        java.util.stream.IntStream intStream10 = strBuilder9.codePoints();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
    }

    @Test
    public void test08504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08504");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst('4', 'a');
        boolean boolean46 = properties0.remove((java.lang.Object) strBuilder33, (java.lang.Object) '4');
        java.lang.Object obj47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder33.appendFixedWidthPadRight(obj47, (int) 'a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator('a', 49);
        java.lang.Object[] objArray56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendWithSeparators(objArray56, "35.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.replaceFirst("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0000.0\n", "java.io.IOException: java.io.IOException");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test08505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08505");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        java.lang.String str20 = strList14.remove((int) (byte) 0);
        boolean boolean22 = strList14.add("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendAll((java.lang.Object[]) strArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendAll((java.lang.Object[]) strArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.appendln(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        char[] charArray52 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendln(charArray52);
        boolean boolean54 = strBuilder23.equals((java.lang.Object) strBuilder47);
        boolean boolean55 = strList14.remove((java.lang.Object) strBuilder23);
        java.lang.Object[] objArray56 = strList14.toArray();
        java.util.stream.Stream<java.lang.String> strStream57 = strList14.parallelStream();
        java.util.Iterator<java.lang.String> strItor58 = strList14.iterator();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("\n32.0", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getIgnoredMatcher();
        boolean boolean63 = strList14.equals((java.lang.Object) strMatcher62);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str65 = strList14.get(116);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 116, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[, , {}]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[, , {}]");
        org.junit.Assert.assertNotNull(strStream57);
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test08506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08506");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        java.lang.String str10 = strBuilder6.getNewLineText();
        java.util.stream.IntStream intStream11 = strBuilder6.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.append((java.lang.CharSequence) strBuilder6);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "");
        java.lang.String str25 = strBuilder21.getNewLineText();
        java.util.stream.IntStream intStream26 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.append((java.lang.CharSequence) strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder14.append(strBuilder18, 2, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "");
        char[] charArray40 = strBuilder36.toCharArray();
        char[] charArray41 = strBuilder33.getChars(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder18.appendln(charArray40);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder18.insert(120, (int) '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 120");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(intStream11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[]");
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test08507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08507");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("\n32.0");
        int int17 = strBuilder14.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replace((int) (byte) 1, (int) (byte) 1, "35.0\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.append(true);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test08508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08508");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder2.lastIndexOf("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.replaceFirst(" -1.0\n", "###");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('7', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendFixedWidthPadLeft(39, 3, '9');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test08509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08509");
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup0 = org.apache.commons.lang3.text.StrLookup.noneLookup();
        org.junit.Assert.assertNotNull(wildcardStrLookup0);
    }

    @Test
    public void test08510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08510");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray8 = strTokenizer7.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.appendAll((java.lang.Object[]) strArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        char[] charArray18 = strBuilder10.getChars(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        char[] charArray20 = strBuilder2.getChars(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer1.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("\na32.0");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = strTokenizer21.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
    }

    @Test
    public void test08511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08511");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        boolean boolean20 = strList9.add("\n");
        java.util.Spliterator<java.lang.String> strSpliterator21 = strList9.spliterator();
        java.lang.String str23 = strList9.remove(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln((double) '#');
        boolean boolean39 = strBuilder29.equals(strBuilder38);
        boolean boolean40 = strList9.remove((java.lang.Object) strBuilder29);
        java.util.Spliterator<java.lang.String> strSpliterator41 = strList9.spliterator();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strSpliterator21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4#4" + "'", str23, "4#4");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strSpliterator41);
    }

    @Test
    public void test08512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08512");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader19 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray25 = strTokenizer24.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendAll((java.lang.Object[]) strArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream30 = strBuilder20.codePoints();
        java.lang.Object obj31 = properties10.replace((java.lang.Object) reader19, (java.lang.Object) intStream30);
        long long33 = reader19.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray39 = strTokenizer38.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendAll((java.lang.Object[]) strArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder34.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream44 = strBuilder34.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        char[] charArray49 = strBuilder45.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder34.appendln(charArray49);
        int int53 = reader19.read(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder3.append(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray49);
        boolean boolean58 = strTokenizer57.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test08513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08513");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        int int13 = strBuilder10.indexOf(' ', 2);
        java.lang.StringBuffer stringBuffer14 = strBuilder10.toStringBuffer();
        java.lang.String str15 = strBuilder10.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.insert(0, 118);
        java.lang.String str19 = strBuilder18.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer14);
        org.junit.Assert.assertEquals(stringBuffer14.toString(), "3.0");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test08514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08514");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        char char10 = strBuilder8.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.setNewLineText("\n32.0java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        char[] charArray20 = strBuilder16.toCharArray();
        char[] charArray21 = strBuilder13.getChars(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        char[] charArray23 = strBuilder12.getChars(charArray20);
        int int25 = strBuilder12.indexOf("97\nhi!101.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder12.replaceFirst(strMatcher26, "true\njava.io.IOException: hi!false");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(" #\n", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer31.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder12.replaceFirst(strMatcher32, "h");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + char10 + "' != '" + '#' + "'", char10 == '#');
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#36.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#36.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, 3, 6, ., 0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test08515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08515");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.setCharAt(1, '\000');
        java.lang.String str16 = strBuilder11.rightString(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.replaceFirst("[ 4#4]", "#\nfalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray22 = strBuilder21.toCharArray();
        java.io.Writer writer23 = strBuilder21.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendln(strBuilder24, (int) 'a', 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln('#');
        java.lang.StringBuffer stringBuffer36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.append(stringBuffer36, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.deleteFirst("hi!");
        char[] charArray42 = strBuilder33.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer29.reset(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder21.appendln(charArray42);
        java.io.Reader reader45 = strBuilder44.asReader();
        long long47 = reader45.skip(0L);
        reader45.reset();
        reader45.reset();
        reader45.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder19.appendFixedWidthPadRight((java.lang.Object) reader45, (int) (byte) -1, '2');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\n\0002.0java.io.IOException: hi!" + "'", str16, "\n\0002.0java.io.IOException: hi!");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(writer23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test08516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08516");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((int) (byte) 0);
        int int8 = strBuilder7.length();
        java.io.Writer writer9 = strBuilder7.asWriter();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln(true);
        boolean boolean23 = strSubstitutor10.replaceIn(strBuilder20, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst("", "");
        java.lang.String str34 = strBuilder30.getNewLineText();
        java.util.stream.IntStream intStream35 = strBuilder30.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.append((java.lang.CharSequence) strBuilder30);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder27.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder27.appendFixedWidthPadLeft((int) (byte) 1, 32, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder20.appendln(strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.insert(59, (float) 1);
        java.io.Writer writer47 = writer9.append((java.lang.CharSequence) strBuilder46);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(intStream35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(writer47);
    }

    @Test
    public void test08517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08517");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(" 4#4");
        int int2 = strTokenizer1.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray8 = strTokenizer7.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendAll((java.lang.Object[]) strArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray18 = strTokenizer17.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendAll((java.lang.Object[]) strArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.appendln(strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        int int27 = strBuilder26.capacity();
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(stringBuffer28, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder26.setLength(32);
        java.io.Writer writer37 = strBuilder36.asWriter();
        writer37.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        int int43 = strBuilder42.capacity();
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(stringBuffer44, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.insert(1, (double) 32);
        java.lang.String str52 = strBuilder42.rightString((int) ' ');
        boolean boolean54 = strBuilder42.startsWith("");
        char[] charArray55 = strBuilder42.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        writer37.write(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder25.appendAll((java.util.Iterator<java.lang.String>) strTokenizer59);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("tttt4");
        int int63 = strBuilder60.indexOf(strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer1.setTrimmerMatcher(strMatcher62);
        java.lang.String str65 = strTokenizer64.next();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\n32.0" + "'", str52, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + " 4#4" + "'", str65, " 4#4");
    }

    @Test
    public void test08518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08518");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.setCharAt(0, '4');
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        int int19 = strBuilder18.capacity();
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(stringBuffer20, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.insert(1, (double) 32);
        java.util.Properties properties27 = new java.util.Properties();
        int int28 = properties27.size();
        boolean boolean30 = properties27.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        char[] charArray35 = strBuilder31.toCharArray();
        boolean boolean36 = properties27.containsValue((java.lang.Object) charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder18.append(charArray35, (int) (byte) 0, 0);
        boolean boolean40 = properties16.equals((java.lang.Object) 0);
        java.util.Collection<java.lang.Object> objCollection41 = properties16.values();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties16.keys();
        java.util.Properties properties43 = new java.util.Properties();
        int int44 = properties43.size();
        boolean boolean46 = properties43.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst("", "");
        boolean boolean52 = strBuilder50.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln('#');
        java.lang.StringBuffer stringBuffer61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.append(stringBuffer61, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder58.deleteFirst("hi!");
        char[] charArray67 = strBuilder58.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer54.reset(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray67);
        char[] charArray70 = strBuilder50.getChars(charArray67);
        java.lang.Object obj71 = properties43.remove((java.lang.Object) charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        char[] charArray79 = new char[] { ' ', '4', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray79);
        java.lang.Object obj81 = properties16.putIfAbsent((java.lang.Object) charArray70, (java.lang.Object) strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder15.append(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer85.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, \n]");
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), " 4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), " 4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[ , 4, #, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer87);
    }

    @Test
    public void test08519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08519");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray4);
        boolean boolean11 = strTokenizer10.hasPrevious();
        int int12 = strTokenizer10.nextIndex();
        boolean boolean13 = strTokenizer10.hasNext();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test08520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08520");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Set<java.lang.String> strSet17 = properties0.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        properties0.clear();
        java.util.Properties properties20 = new java.util.Properties(properties0);
        properties20.clear();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(objSet18);
    }

    @Test
    public void test08521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08521");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("not tokenized yet]", "StrTokenizer[32.0]");
        int int3 = strTokenizer2.nextIndex();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        java.util.Spliterator<java.lang.String> strSpliterator5 = strList4.spliterator();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strSpliterator5);
    }

    @Test
    public void test08522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08522");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charMatcher('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.deleteFirst("");
        int int6 = strBuilder2.indexOf("");
        int int9 = strBuilder2.lastIndexOf('#', (int) (byte) 0);
        boolean boolean11 = strBuilder2.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder2.appendAll((java.util.Iterator<java.lang.String>) strTokenizer12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.appendSeparator("{}");
        char[] charArray16 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray16);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = strMatcher1.isMatch(charArray16, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(strMatcher17);
    }

    @Test
    public void test08523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08523");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.appendln((double) '$');
        char[] charArray19 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        int int22 = strTokenizer21.size();
        boolean boolean23 = strTokenizer21.hasNext();
        java.util.List<java.lang.String> strList24 = strTokenizer21.getTokenList();
        java.lang.String[] strArray28 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        boolean boolean31 = strList24.addAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.String str33 = strList29.remove(0);
        char[] charArray38 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        int int41 = strTokenizer40.size();
        boolean boolean42 = strTokenizer40.hasNext();
        java.util.List<java.lang.String> strList43 = strTokenizer40.getTokenList();
        java.lang.String[] strArray47 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        boolean boolean50 = strList43.addAll((java.util.Collection<java.lang.String>) strList48);
        boolean boolean51 = strList29.addAll((java.util.Collection<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder6.appendAll((java.lang.Iterable<java.lang.String>) strList29);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("");
        int int57 = strBuilder53.indexOf("");
        int int60 = strBuilder53.lastIndexOf('#', (int) (byte) 0);
        boolean boolean62 = strBuilder53.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder53.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray67 = strTokenizer66.getTokenArray();
        java.lang.String[] strArray68 = strTokenizer66.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder53.appendWithSeparators((java.lang.Object[]) strArray68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder52.appendln((java.lang.Object) "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.insert(4, false);
        char[] charArray75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.append(charArray75, 3, 43);
        boolean boolean80 = strBuilder78.contains('9');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\n32.0" + "'", str33, "\n32.0");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test08524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08524");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer6, (int) (byte) -1, (int) (byte) 100);
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder3.append(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.insert(5, "");
        char[] charArray21 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append((double) 6);
        java.lang.String str26 = strBuilder17.midString(16, 75);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#\n 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#\n 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, \n,  , 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test08525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08525");
        char[] charArray2 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString("hi!");
        java.lang.String str6 = strTokenizer3.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setQuoteChar('e');
        boolean boolean9 = strTokenizer8.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "a4" + "'", str6, "a4");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test08526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08526");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        int int3 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendln(stringBuffer4, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.insert(1, (double) 32);
        java.util.Properties properties11 = new java.util.Properties();
        int int12 = properties11.size();
        boolean boolean14 = properties11.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        boolean boolean20 = properties11.containsValue((java.lang.Object) charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder2.append(charArray19, (int) (byte) 0, 0);
        boolean boolean24 = properties0.equals((java.lang.Object) 0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties0.entrySet();
        java.util.Collection<java.lang.Object> objCollection26 = properties0.values();
        java.util.Set<java.lang.String> strSet27 = properties0.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration28 = properties0.propertyNames();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32 + "'", int3 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(wildcardEnumeration28);
    }

    @Test
    public void test08527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08527");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        int int28 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader36 = strBuilder32.asReader();
        long long38 = reader36.skip((long) '#');
        reader36.mark((int) (short) 10);
        reader36.mark(3);
        long long44 = reader36.skip((long) '4');
        int int45 = reader36.read();
        properties0.load(reader36);
        int int47 = reader36.read();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test08528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08528");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        boolean boolean20 = strList14.add("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendAll((java.lang.Object[]) strArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.replaceFirst('a', 'a');
        char[] charArray35 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        int int38 = strTokenizer37.size();
        boolean boolean39 = strTokenizer37.hasNext();
        java.util.List<java.lang.String> strList40 = strTokenizer37.getTokenList();
        java.lang.String[] strArray44 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = strList40.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder21.appendAll((java.lang.Iterable<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor49 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        int int51 = strBuilder50.capacity();
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(stringBuffer52, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln(true);
        boolean boolean62 = strSubstitutor49.replaceIn(strBuilder59, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder21.append((java.lang.CharSequence) strBuilder59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strBuilder59.asTokenizer();
        char[] charArray69 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ');
        int int72 = strTokenizer71.size();
        boolean boolean73 = strTokenizer71.hasNext();
        java.util.List<java.lang.String> strList74 = strTokenizer71.getTokenList();
        java.lang.String[] strArray78 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        boolean boolean81 = strList74.addAll((java.util.Collection<java.lang.String>) strList79);
        java.util.Spliterator<java.lang.String> strSpliterator82 = strList79.spliterator();
        int int83 = strList79.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int87 = strList79.lastIndexOf((java.lang.Object) strTokenizer86);
        strList79.clear();
        java.util.Spliterator<java.lang.String> strSpliterator89 = strList79.spliterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder59.appendAll((java.lang.Iterable<java.lang.String>) strList79);
        java.util.Iterator<java.lang.String> strItor91 = strList79.iterator();
        boolean boolean92 = strList14.removeAll((java.util.Collection<java.lang.String>) strList79);
        java.lang.Object[] objArray93 = strList79.toArray();
        boolean boolean94 = strList79.isEmpty();
        boolean boolean95 = strList79.isEmpty();
        int int96 = strList79.size();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 32 + "'", int51 == 32);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strSpliterator82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 3 + "'", int83 == 3);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test08529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08529");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder2.lastIndexOf("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendSeparator('a', 'e');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.appendln(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
    }

    @Test
    public void test08530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08530");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[a4]");
    }

    @Test
    public void test08531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08531");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        int int32 = strBuilder31.capacity();
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(stringBuffer33, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder31.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append('#');
        java.lang.Object obj47 = properties0.putIfAbsent((java.lang.Object) strBuilder30, (java.lang.Object) '#');
        boolean boolean48 = properties0.isEmpty();
        java.util.Set<java.lang.String> strSet49 = properties0.stringPropertyNames();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration50 = properties0.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang3.text.StrBuilder cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strSet49);
    }

    @Test
    public void test08532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08532");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray8 = strTokenizer7.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.appendAll((java.lang.Object[]) strArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        char[] charArray18 = strBuilder10.getChars(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        char[] charArray20 = strBuilder2.getChars(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer1.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("\na32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer23.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer23.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
    }

    @Test
    public void test08533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08533");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        properties0.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        int int6 = strBuilder5.capacity();
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(stringBuffer7, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.setLength(32);
        java.io.Writer writer16 = strBuilder15.asWriter();
        writer16.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        writer16.flush();
        writer16.flush();
        properties0.store(writer16, "t");
        writer16.write(39);
        writer16.write("java.io.IOException: java.io.IOException: StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        char[] charArray36 = strBuilder32.toCharArray();
        char[] charArray37 = strBuilder29.getChars(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        boolean boolean39 = strTokenizer38.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst("", "");
        char[] charArray53 = strBuilder49.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.appendln(charArray53);
        int int58 = strMatcher41.isMatch(charArray53, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer38.reset(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray53);
        writer16.write(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setIgnoredChar('6');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(writer16);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
    }

    @Test
    public void test08534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08534");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.insert(1, (double) 32);
        java.lang.String str39 = strBuilder29.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.insert(1, '#');
        boolean boolean43 = strList28.equals((java.lang.Object) strBuilder29);
        boolean boolean44 = strList9.containsAll((java.util.Collection<java.lang.String>) strList28);
        java.lang.String str46 = strList9.remove((int) (short) 0);
        java.util.Iterator<java.lang.String> strItor47 = strList9.iterator();
        java.util.Iterator<java.lang.String> strItor48 = strList9.iterator();
        boolean boolean50 = strList9.add("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst("", "");
        char[] charArray58 = strBuilder54.toCharArray();
        char[] charArray59 = strBuilder51.getChars(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58);
        boolean boolean61 = strTokenizer60.hasPrevious();
        java.util.List<java.lang.String> strList62 = strTokenizer60.getTokenList();
        strList62.clear();
        strList62.clear();
        boolean boolean65 = strList9.retainAll((java.util.Collection<java.lang.String>) strList62);
        java.util.stream.Stream<java.lang.String> strStream66 = strList9.stream();
        strList9.clear();
        java.util.List[][] listArray69 = new java.util.List[0][];
        @SuppressWarnings("unchecked")
        java.util.List<java.lang.String>[][] strListArray70 = (java.util.List<java.lang.String>[][]) listArray69;
        java.util.List<java.lang.String>[][] strListArray71 = strList9.toArray(strListArray70);
        java.util.Iterator<java.lang.String> strItor72 = strList9.iterator();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n32.0" + "'", str39, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4#4" + "'", str46, "4#4");
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertNotNull(strItor48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strStream66);
        org.junit.Assert.assertNotNull(listArray69);
        org.junit.Assert.assertNotNull(strListArray70);
        org.junit.Assert.assertNotNull(strListArray71);
        org.junit.Assert.assertNotNull(strItor72);
    }

    @Test
    public void test08535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08535");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.deleteAll('4');
        int int22 = strBuilder20.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "");
        char[] charArray27 = strBuilder23.toCharArray();
        char[] charArray28 = strBuilder20.getChars(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        char[] charArray30 = strBuilder14.getChars(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        int int35 = strBuilder34.capacity();
        java.lang.StringBuffer stringBuffer36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(stringBuffer36, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int41 = strBuilder39.lastIndexOf(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.insert(1, " #\n");
        char[] charArray45 = strBuilder39.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            int int49 = strMatcher33.isMatch(charArray45, (int) ' ', 25, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 32 + "'", int35 == 32);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "\n #\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "\n #\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[\n,  , #, \n]");
    }

    @Test
    public void test08536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08536");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.deleteAll('4');
        int int22 = strBuilder20.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "");
        char[] charArray27 = strBuilder23.toCharArray();
        char[] charArray28 = strBuilder20.getChars(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        char[] charArray30 = strBuilder14.getChars(charArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.appendln(32);
        java.io.Reader reader42 = strBuilder37.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("", "");
        char[] charArray57 = strBuilder53.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendln(charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder43.replaceFirst(strMatcher59, "StrTokenizer[]");
        int int62 = strBuilder37.lastIndexOf(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "");
        char[] charArray68 = strBuilder64.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, 'a');
        int int74 = strMatcher59.isMatch(charArray68, 3, (int) '$', 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray68);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer76);
    }

    @Test
    public void test08537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08537");
        char[] charArray2 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString("hi!");
        int int6 = strTokenizer5.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterChar('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.setLength(32);
        java.io.Writer writer20 = strBuilder19.asWriter();
        writer20.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) '4');
        java.io.Writer writer37 = writer20.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll("");
        java.io.Writer writer47 = writer20.append((java.lang.CharSequence) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "");
        char[] charArray59 = strBuilder55.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendln(charArray59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray59);
        writer20.write(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer8.reset(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, " 4#4");
        java.lang.String str68 = strTokenizer67.getContent();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(writer20);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(writer47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
    }

    @Test
    public void test08538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08538");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray11 = strTokenizer10.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendAll((java.lang.Object[]) strArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendAll((java.lang.Object[]) strArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder6.appendln(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', '4');
        java.io.Writer writer36 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        char[] charArray48 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendln(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        writer36.write(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.append(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int56 = strBuilder28.indexOf(strMatcher54, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder3.deleteAll(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append("java.io.IOException: hi!false");
        java.lang.StringBuffer stringBuffer60 = strBuilder57.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.delete(236, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(stringBuffer60);
        org.junit.Assert.assertEquals(stringBuffer60.toString(), "true\njava.io.IOException: hi!false");
    }

    @Test
    public void test08539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08539");
        java.io.IOException iOException2 = new java.io.IOException();
        java.lang.Throwable[] throwableArray3 = iOException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException("########", (java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException8 = new java.io.IOException("####\000\000\000\000\000\000\000\000\000\000", (java.lang.Throwable) iOException2);
        java.io.IOException iOException11 = new java.io.IOException("hi!");
        java.io.IOException iOException13 = new java.io.IOException("hi!");
        iOException11.addSuppressed((java.lang.Throwable) iOException13);
        java.io.IOException iOException16 = new java.io.IOException("hi!");
        java.io.IOException iOException18 = new java.io.IOException("hi!");
        iOException16.addSuppressed((java.lang.Throwable) iOException18);
        iOException13.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException21 = new java.io.IOException("hi!", (java.lang.Throwable) iOException18);
        iOException8.addSuppressed((java.lang.Throwable) iOException21);
        java.io.IOException iOException24 = new java.io.IOException();
        java.lang.Throwable[] throwableArray25 = iOException24.getSuppressed();
        java.lang.Throwable[] throwableArray26 = iOException24.getSuppressed();
        java.io.IOException iOException27 = new java.io.IOException("########", (java.lang.Throwable) iOException24);
        iOException21.addSuppressed((java.lang.Throwable) iOException24);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test08540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08540");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream10 = strBuilder0.codePoints();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.insert(286, "1\n\n10\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 286");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
    }

    @Test
    public void test08541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08541");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        boolean boolean9 = properties0.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray16 = strTokenizer15.getTokenArray();
        java.lang.String[] strArray17 = strTokenizer15.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendWithSeparators((java.lang.Object[]) strArray17, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.delete(0, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder13.appendSeparator("1", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder26.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer27.setDelimiterString("100.0\000\000\000\000\000");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setDelimiterString("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer31.reset();
        boolean boolean33 = properties0.equals((java.lang.Object) strTokenizer31);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test08542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08542");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder17.appendFixedWidthPadRight((java.lang.Object) strBuilder26, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int31 = strBuilder17.lastIndexOf(strMatcher30);
        char[] charArray36 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        int int39 = strTokenizer38.size();
        boolean boolean40 = strTokenizer38.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer38.setIgnoredMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder17.deleteFirst(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder14.deleteFirst(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder14.appendSeparator('4', 45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteCharAt((int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteAll("100.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strBuilder51.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer52);
    }

    @Test
    public void test08543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08543");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst('4', 'a');
        boolean boolean46 = properties0.remove((java.lang.Object) strBuilder33, (java.lang.Object) '4');
        java.lang.Object obj47 = properties0.clone();
        boolean boolean48 = properties0.isEmpty();
        java.io.InputStream inputStream49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test08544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08544");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendPadding(10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer12, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer12.reset("\n32.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer12.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) strTokenizer12, 4, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator(' ', 3);
        java.io.Writer writer25 = strBuilder21.asWriter();
        writer25.flush();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(writer25);
    }

    @Test
    public void test08545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08545");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.trim();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        java.lang.String[] strArray33 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer31.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer31.setDelimiterString("1001\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer31.setDelimiterChar('9');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strTokenizer39);
    }

    @Test
    public void test08546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08546");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder17.appendFixedWidthPadRight((java.lang.Object) strBuilder26, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int31 = strBuilder17.lastIndexOf(strMatcher30);
        char[] charArray36 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        int int39 = strTokenizer38.size();
        boolean boolean40 = strTokenizer38.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer38.setIgnoredMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder17.deleteFirst(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder14.deleteFirst(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.appendFixedWidthPadLeft(118, 0, '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.setLength(104);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test08547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08547");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray2 = strTokenizer1.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setIgnoredChar('$');
        boolean boolean5 = strTokenizer1.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer1.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strMatcher6);
    }

    @Test
    public void test08548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08548");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.minimizeCapacity();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test08549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08549");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '#', '7');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
    }

    @Test
    public void test08550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08550");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        reader9.reset();
        long long24 = reader9.skip((long) (short) 0);
        reader9.reset();
        long long27 = reader9.skip((long) (short) 1);
        boolean boolean28 = reader9.markSupported();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test08551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08551");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray20 = strTokenizer19.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendAll((java.lang.Object[]) strArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.replaceFirst('a', 'a');
        char[] charArray29 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        int int32 = strTokenizer31.size();
        boolean boolean33 = strTokenizer31.hasNext();
        java.util.List<java.lang.String> strList34 = strTokenizer31.getTokenList();
        java.lang.String[] strArray38 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        boolean boolean41 = strList34.addAll((java.util.Collection<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder15.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder9.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append(10.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append("true\n###################################3\n");
        int int48 = strBuilder47.capacity();
        java.lang.String str49 = strBuilder47.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.appendln(117);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 112 + "'", int48 == 112);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test08552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08552");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setDelimiterChar('a');
        java.lang.String str9 = strTokenizer8.nextToken();
        int int10 = strTokenizer8.nextIndex();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test08553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08553");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "");
        boolean boolean9 = strBuilder7.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln('#');
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.append(stringBuffer18, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.deleteFirst("hi!");
        char[] charArray24 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer11.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        char[] charArray27 = strBuilder7.getChars(charArray24);
        java.lang.Object obj28 = properties0.remove((java.lang.Object) charArray27);
        java.lang.String str30 = properties0.getProperty("\n32.0");
        java.util.Properties properties31 = new java.util.Properties();
        int int32 = properties31.size();
        java.util.Set<java.lang.Object> objSet33 = properties31.keySet();
        java.util.Properties properties34 = new java.util.Properties(properties31);
        boolean boolean35 = properties0.containsKey((java.lang.Object) properties34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("");
        java.lang.Object obj38 = properties34.get((java.lang.Object) "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[32.0]");
        java.util.stream.IntStream intStream41 = strBuilder40.chars();
        boolean boolean42 = properties34.containsKey((java.lang.Object) strBuilder40);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, \n]");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(intStream41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test08554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08554");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        java.util.ListIterator<java.lang.String> strItor75 = strList9.listIterator((int) (short) 0);
        java.util.List<java.lang.String> strList78 = strList9.subList((int) (short) 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str81 = strList9.set(236, "\ntrue\ntrue\n##############################true#####4\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 236, Size: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strItor75);
        org.junit.Assert.assertNotNull(strList78);
    }

    @Test
    public void test08555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08555");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray3 = strTokenizer2.getTokenArray();
        java.lang.String[] strArray4 = strTokenizer2.getTokenArray();
        boolean boolean5 = strTokenizer2.hasNext();
        int int6 = strTokenizer2.size();
        boolean boolean7 = strTokenizer2.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        char[] charArray16 = strBuilder8.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray24 = strTokenizer23.getTokenArray();
        java.lang.String[] strArray25 = strTokenizer23.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendWithSeparators((java.lang.Object[]) strArray25, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteAll(strMatcher28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher28, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer2.reset(charArray15);
        char[] charArray37 = new char[] { 'a', '$', '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, '$');
        java.util.List<java.lang.String> strList40 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer39.setIgnoredChar('\000');
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher43);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: \000\000\000\000\000\000\000\000\000\000\n", strMatcher43, strMatcher45);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "a$$");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "a$$");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[a, $, $]");
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher43);
    }

    @Test
    public void test08556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08556");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("36.0");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test08557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08557");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.delete(0, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((float) 3);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test08558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08558");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '$', 't');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = strTokenizer10.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strTokenizer10);
    }

    @Test
    public void test08559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08559");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("10.0StrTokenizer[ 4#4]\n10.0\n");
        int int2 = strBuilder1.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        int int4 = strBuilder3.capacity();
        java.lang.StringBuffer stringBuffer5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.appendln(stringBuffer5, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int10 = strBuilder8.lastIndexOf(strMatcher9);
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = strList13.contains(obj15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder8.appendAll((java.lang.Iterable<java.lang.String>) strList13);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append('a');
        int int26 = strBuilder19.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        int int28 = strBuilder27.capacity();
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(stringBuffer29, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.insert(1, (double) 32);
        boolean boolean36 = strBuilder27.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder27.clear();
        int int39 = strBuilder38.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder19.append(strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        int int43 = strBuilder42.capacity();
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(stringBuffer44, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.insert(1, (double) 32);
        java.lang.String str52 = strBuilder42.rightString((int) ' ');
        boolean boolean54 = strBuilder42.startsWith("");
        char[] charArray55 = strBuilder42.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.insert((int) (short) 0, charArray55);
        boolean boolean57 = strList13.contains((java.lang.Object) strBuilder40);
        java.util.Properties properties58 = new java.util.Properties();
        int int59 = properties58.size();
        java.util.Set<java.lang.Object> objSet60 = properties58.keySet();
        java.util.Properties properties63 = new java.util.Properties();
        int int64 = properties63.size();
        boolean boolean66 = properties63.containsKey((java.lang.Object) (-1.0f));
        boolean boolean67 = properties58.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray72 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, ' ');
        int int75 = strTokenizer74.size();
        boolean boolean76 = strTokenizer74.hasNext();
        java.util.List<java.lang.String> strList77 = strTokenizer74.getTokenList();
        java.lang.String[] strArray81 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        boolean boolean84 = strList77.addAll((java.util.Collection<java.lang.String>) strList82);
        java.util.Spliterator<java.lang.String> strSpliterator85 = strList82.spliterator();
        int int86 = strList82.size();
        boolean boolean88 = strList82.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream89 = strList82.stream();
        boolean boolean90 = properties58.containsKey((java.lang.Object) strList82);
        int int91 = strList82.size();
        boolean boolean92 = strList13.retainAll((java.util.Collection<java.lang.String>) strList82);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList82);
        int int95 = strBuilder1.lastIndexOf('2');
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 28 + "'", int2 == 28);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 32 + "'", int28 == 32);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 32 + "'", int39 == 32);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\n32.0" + "'", str52, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(strSpliterator85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 3 + "'", int86 == 3);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strStream89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 4 + "'", int91 == 4);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 30 + "'", int95 == 30);
    }

    @Test
    public void test08560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08560");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        java.io.Writer writer19 = strBuilder17.asWriter();
        int int20 = strBuilder17.length();
        char[] charArray21 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "\n100.0\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(writer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
    }

    @Test
    public void test08561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08561");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, "");
        boolean boolean7 = strTokenizer6.hasNext();
        int int8 = strTokenizer6.previousIndex();
        boolean boolean9 = strTokenizer6.hasNext();
        boolean boolean10 = strTokenizer6.hasPrevious();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test08562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08562");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj4 = properties0.clone();
        java.lang.Object obj5 = properties0.clone();
        java.util.Enumeration<?> wildcardEnumeration6 = properties0.propertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        java.lang.Object obj13 = properties0.remove((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[ 4#4]", '#', '$');
        boolean boolean18 = properties0.contains((java.lang.Object) "StrTokenizer[ 4#4]");
        java.util.Set<java.lang.Object> objSet19 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln('#');
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.append(stringBuffer26, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.replaceFirst('a', '4');
        boolean boolean35 = properties0.equals((java.lang.Object) 'a');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "{}");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test08563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08563");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        java.lang.String str20 = strList14.remove((int) (byte) 0);
        java.util.stream.Stream<java.lang.String> strStream21 = strList14.parallelStream();
        strList14.clear();
        char[] charArray27 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        int int30 = strTokenizer29.size();
        boolean boolean31 = strTokenizer29.hasNext();
        java.util.List<java.lang.String> strList32 = strTokenizer29.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln((double) '#');
        boolean boolean48 = strBuilder38.equals(strBuilder47);
        java.util.stream.IntStream intStream49 = strBuilder38.codePoints();
        boolean boolean50 = strList32.contains((java.lang.Object) strBuilder38);
        boolean boolean51 = strList14.containsAll((java.util.Collection<java.lang.String>) strList32);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(intStream49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test08564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08564");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.insert(1, (double) 32);
        java.lang.String str39 = strBuilder29.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.insert(1, '#');
        boolean boolean43 = strList28.equals((java.lang.Object) strBuilder29);
        boolean boolean44 = strList9.containsAll((java.util.Collection<java.lang.String>) strList28);
        char[] charArray49 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        int int52 = strTokenizer51.size();
        boolean boolean53 = strTokenizer51.hasNext();
        java.util.List<java.lang.String> strList54 = strTokenizer51.getTokenList();
        java.lang.String[] strArray58 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        boolean boolean61 = strList54.addAll((java.util.Collection<java.lang.String>) strList59);
        boolean boolean62 = strList28.containsAll((java.util.Collection<java.lang.String>) strList59);
        java.util.stream.Stream<java.lang.String> strStream63 = strList28.parallelStream();
        boolean boolean65 = strList28.add("0true");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n32.0" + "'", str39, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strStream63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test08565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08565");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln('#');
        char[] charArray44 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        int int47 = strTokenizer46.size();
        boolean boolean48 = strTokenizer46.hasNext();
        java.util.List<java.lang.String> strList49 = strTokenizer46.getTokenList();
        java.lang.String[] strArray53 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        boolean boolean56 = strList49.addAll((java.util.Collection<java.lang.String>) strList54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray59 = strTokenizer58.getTokenArray();
        java.lang.String[] strArray60 = strTokenizer58.getTokenArray();
        boolean boolean61 = strTokenizer58.hasNext();
        int int62 = strTokenizer58.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer58.getQuoteMatcher();
        java.util.List<java.lang.String> strList64 = strTokenizer58.getTokenList();
        boolean boolean65 = strList49.retainAll((java.util.Collection<java.lang.String>) strList64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder37.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList49, "");
        java.lang.Object obj68 = properties0.remove((java.lang.Object) strList49);
        java.io.OutputStream outputStream69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream69, "32.00.0100\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(obj68);
    }

    @Test
    public void test08566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08566");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.setCharAt(0, '4');
        char[] charArray20 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        int int23 = strTokenizer22.size();
        boolean boolean24 = strTokenizer22.hasNext();
        java.util.List<java.lang.String> strList25 = strTokenizer22.getTokenList();
        java.lang.String[] strArray29 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        boolean boolean32 = strList25.addAll((java.util.Collection<java.lang.String>) strList30);
        java.util.Properties properties33 = new java.util.Properties();
        int int34 = properties33.size();
        java.lang.Object obj35 = properties33.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.appendFixedWidthPadRight((java.lang.Object) strBuilder45, (int) (byte) -1, '#');
        java.lang.Object obj49 = properties33.get((java.lang.Object) strBuilder36);
        java.util.Properties properties50 = new java.util.Properties();
        int int51 = properties50.size();
        boolean boolean53 = properties50.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties54 = new java.util.Properties();
        int int55 = properties54.size();
        boolean boolean57 = properties54.containsKey((java.lang.Object) (-1.0f));
        properties50.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        char[] charArray63 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        int int66 = strTokenizer65.size();
        boolean boolean67 = strTokenizer65.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer65.setIgnoredMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst("", "");
        java.lang.Object obj74 = properties50.putIfAbsent((java.lang.Object) strMatcher68, (java.lang.Object) strBuilder70);
        boolean boolean75 = strBuilder36.equals(obj74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder36.appendln((double) 100L);
        java.util.stream.IntStream intStream78 = strBuilder36.chars();
        boolean boolean80 = strBuilder36.contains('$');
        boolean boolean81 = strList30.equals((java.lang.Object) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder15.appendAll((java.lang.Iterable<java.lang.String>) strList30);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder15.appendln((float) 7);
        java.io.Writer writer85 = strBuilder15.asWriter();
        writer85.flush();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "{}");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(intStream78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(writer85);
    }

    @Test
    public void test08567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08567");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("aaaa");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test08568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08568");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.append((java.lang.Object) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder10.appendln((float) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder10.appendFixedWidthPadRight(0, (int) (short) 0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.append(false);
        char[] charArray39 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        int int42 = strTokenizer41.size();
        boolean boolean43 = strTokenizer41.hasNext();
        java.util.List<java.lang.String> strList44 = strTokenizer41.getTokenList();
        java.lang.String[] strArray48 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        boolean boolean51 = strList44.addAll((java.util.Collection<java.lang.String>) strList49);
        java.util.Spliterator<java.lang.String> strSpliterator52 = strList49.spliterator();
        int int53 = strList49.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int57 = strList49.lastIndexOf((java.lang.Object) strTokenizer56);
        strList49.clear();
        int int59 = strList49.size();
        java.lang.Object[] objArray60 = strList49.toArray();
        strList49.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder34.appendAll((java.lang.Iterable<java.lang.String>) strList49);
        java.util.Iterator[] iteratorArray64 = new java.util.Iterator[0];
        @SuppressWarnings("unchecked")
        java.util.Iterator<java.lang.String>[] strItorArray65 = (java.util.Iterator<java.lang.String>[]) iteratorArray64;
        java.util.Iterator<java.lang.String>[] strItorArray66 = strList49.toArray((java.util.Iterator<java.lang.String>[]) iteratorArray64);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strSpliterator52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(iteratorArray64);
        org.junit.Assert.assertNotNull(strItorArray65);
        org.junit.Assert.assertNotNull(strItorArray66);
    }

    @Test
    public void test08569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08569");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("\n32.0a");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.insert(4, 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln(true);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
    }

    @Test
    public void test08570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08570");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        java.lang.String str34 = strBuilder24.rightString((int) ' ');
        boolean boolean36 = strBuilder24.startsWith("");
        char[] charArray37 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.insert((int) (short) 0, charArray37);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        java.util.Set<java.lang.Object> objSet41 = properties39.keySet();
        java.util.Properties properties42 = new java.util.Properties(properties39);
        java.lang.String str43 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strBuilder22, properties42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder22.appendNewLine();
        java.io.Writer writer45 = strBuilder22.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder22.append("\na32");
        java.lang.String str48 = strBuilder22.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.deleteAll('4');
        int int56 = strBuilder54.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.deleteAll('4');
        int int64 = strBuilder62.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst("", "");
        char[] charArray69 = strBuilder65.toCharArray();
        char[] charArray70 = strBuilder62.getChars(charArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder54.appendln(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, "35\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder22.replaceFirst(strMatcher74, "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n32.0" + "'", str34, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n32.0a" + "'", str43, "\n32.0a");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[]");
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test08571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08571");
        java.io.IOException iOException1 = new java.io.IOException("\ntrue\n");
        java.lang.Throwable[] throwableArray2 = iOException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
    }

    @Test
    public void test08572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08572");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(126);
    }

    @Test
    public void test08573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08573");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.reset("{\ntrue\n=1.0}");
        int int13 = strTokenizer12.size();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
    }

    @Test
    public void test08574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08574");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator('a', ' ');
        boolean boolean13 = strBuilder12.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator(' ', (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln((double) '#');
        boolean boolean34 = strBuilder24.equals(strBuilder33);
        java.util.stream.IntStream intStream35 = strBuilder24.codePoints();
        java.util.Iterator<java.lang.String> strItor36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder24.appendWithSeparators(strItor36, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceAll('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendSeparator("\n32.0-1.0", "\n32.0-1.0");
        java.lang.String str50 = strBuilder47.midString((int) 't', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendPadding(4, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder18.append(strBuilder47);
        int int55 = strBuilder18.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder18.deleteAll("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0000.0\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.insert((int) (short) -1, "10.0StrTokenizer[ 4#4]\n10.0\n35.0\n4");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(intStream35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 62 + "'", int55 == 62);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test08575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08575");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer15.reset();
        int int17 = strTokenizer16.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterMatcher(strMatcher20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = strTokenizer19.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
    }

    @Test
    public void test08576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08576");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder33.lastIndexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.insert((int) (short) 1, 32);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        boolean boolean42 = properties39.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties39.entrySet();
        java.lang.Object obj44 = properties0.putIfAbsent((java.lang.Object) strBuilder38, (java.lang.Object) objEntrySet43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        int int46 = strBuilder45.capacity();
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(stringBuffer47, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.insert(1, (double) 32);
        java.lang.String str55 = strBuilder45.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder45.replaceAll("", "hi!");
        boolean boolean59 = properties0.contains((java.lang.Object) "");
        java.util.Properties properties60 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet61 = properties60.stringPropertyNames();
        java.util.Properties properties62 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray69 = strTokenizer68.getTokenArray();
        java.lang.String[] strArray70 = strTokenizer68.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.appendWithSeparators((java.lang.Object[]) strArray70, "4#4");
        char[] charArray75 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray75);
        java.lang.Object obj77 = properties62.getOrDefault((java.lang.Object) strBuilder66, (java.lang.Object) strTokenizer76);
        int int78 = properties62.size();
        java.util.Properties properties79 = new java.util.Properties();
        int int80 = properties79.size();
        boolean boolean82 = properties79.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties83 = new java.util.Properties();
        int int84 = properties83.size();
        boolean boolean86 = properties83.containsKey((java.lang.Object) (-1.0f));
        properties79.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties83);
        java.util.Set<java.lang.Object> objSet88 = properties83.keySet();
        properties62.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties83);
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties62.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration91 = properties62.elements();
        java.util.Set<java.lang.Object> objSet92 = properties62.keySet();
        properties60.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\n32.0" + "'", str55, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objSet88);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertNotNull(objEnumeration91);
        org.junit.Assert.assertNotNull(objSet92);
    }

    @Test
    public void test08577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08577");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert((int) (short) 0, (int) (short) 100);
        java.lang.String str50 = strBuilder44.midString(0, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder44.replaceFirst(' ', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder44.setLength(52);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder44.delete(113, 93);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1" + "'", str50, "1");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test08578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08578");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.ensureCapacity((int) (short) 10);
        boolean boolean13 = strBuilder6.equals((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.setNullText("java.io.IOException");
        java.lang.String str16 = strBuilder12.getNullText();
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.lang.String str27 = properties21.getProperty("h");
        boolean boolean28 = properties21.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder12.appendFixedWidthPadRight((java.lang.Object) properties21, (int) '4', '$');
        int int32 = properties21.size();
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("{}", throwable34);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException35);
        java.lang.Throwable[] throwableArray37 = iOException36.getSuppressed();
        java.io.IOException iOException39 = new java.io.IOException("java.io.IOException: ########");
        iOException36.addSuppressed((java.lang.Throwable) iOException39);
        boolean boolean41 = properties21.contains((java.lang.Object) iOException36);
        java.util.Properties properties42 = new java.util.Properties();
        int int43 = properties42.size();
        boolean boolean45 = properties42.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties46 = new java.util.Properties();
        int int47 = properties46.size();
        boolean boolean49 = properties46.containsKey((java.lang.Object) (-1.0f));
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.lang.String str52 = properties46.getProperty("h");
        boolean boolean53 = properties46.isEmpty();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.io.InputStream inputStream55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties21.loadFromXML(inputStream55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "java.io.IOException" + "'", str16, "java.io.IOException");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test08579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08579");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        java.lang.String str20 = strList14.remove((int) (byte) 0);
        boolean boolean22 = strList14.add("{}");
        java.util.Spliterator<java.lang.String> strSpliterator23 = strList14.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor25 = strList14.listIterator(118);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 118");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strSpliterator23);
    }

    @Test
    public void test08580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08580");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Set<java.lang.String> strSet17 = properties0.stringPropertyNames();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        java.lang.String str20 = strTokenizer19.next();
        boolean boolean21 = strTokenizer19.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer19.getIgnoredMatcher();
        boolean boolean23 = properties0.containsKey((java.lang.Object) strMatcher22);
        properties0.clear();
        java.io.InputStream inputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[]" + "'", str20, "StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test08581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08581");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("{}");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("35.0\n", strMatcher1, strMatcher4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer5.reset();
        boolean boolean7 = strTokenizer6.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test08582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08582");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.appendln((double) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll('a');
        char[] charArray19 = strBuilder14.toCharArray((int) (byte) 1, 53);
        java.util.stream.IntStream intStream20 = strBuilder14.chars();
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties25 = new java.util.Properties();
        int int26 = properties25.size();
        boolean boolean28 = properties25.containsKey((java.lang.Object) (-1.0f));
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        char[] charArray34 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        int int37 = strTokenizer36.size();
        boolean boolean38 = strTokenizer36.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer36.setIgnoredMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "");
        java.lang.Object obj45 = properties21.putIfAbsent((java.lang.Object) strMatcher39, (java.lang.Object) strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        int int53 = strBuilder52.capacity();
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(stringBuffer54, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder52.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.append((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.append('#');
        java.lang.Object obj68 = properties21.putIfAbsent((java.lang.Object) strBuilder51, (java.lang.Object) '#');
        boolean boolean69 = strBuilder14.equalsIgnoreCase(strBuilder51);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder51.clear();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "36.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "36.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[3, 6, ., 0, \n]");
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 32 + "'", int53 == 32);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test08583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08583");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int14 = strBuilder0.lastIndexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln((double) '#');
        boolean boolean30 = strBuilder20.equals(strBuilder29);
        java.util.stream.IntStream intStream31 = strBuilder20.codePoints();
        java.util.Iterator<java.lang.String> strItor32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder20.appendWithSeparators(strItor32, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(' ', ' ');
        int int39 = strBuilder37.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.insert((int) '$', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder0.append(strBuilder42, (int) '\000', 0);
        int int48 = strBuilder42.indexOf("java.io.IOException: \ntrue\n97\nhi!", 100);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
    }

    @Test
    public void test08584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08584");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        java.lang.String str18 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.deleteAll('a');
        boolean boolean22 = strBuilder0.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder0.setNewLineText("\n1.0\n\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test08585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08585");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties4.entrySet();
        properties4.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        java.io.Reader reader15 = strBuilder11.asReader();
        properties4.load(reader15);
        int int17 = reader15.read();
        reader15.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("");
        int int23 = strBuilder19.indexOf("");
        int int26 = strBuilder19.lastIndexOf('#', (int) (byte) 0);
        boolean boolean28 = strBuilder19.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder19.appendAll((java.util.Iterator<java.lang.String>) strTokenizer29);
        boolean boolean31 = strTokenizer29.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer29.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean35 = strTokenizer34.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer34.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray43 = strTokenizer42.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.appendAll((java.lang.Object[]) strArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray53 = strTokenizer52.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.appendAll((java.lang.Object[]) strArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder38.appendln(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst('a', '4');
        java.io.Writer writer68 = strBuilder67.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst("", "");
        char[] charArray80 = strBuilder76.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.appendln(charArray80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray80);
        writer68.write(charArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder60.append(charArray80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer37.reset(charArray80);
        int int87 = strMatcher32.isMatch(charArray80, (int) 't');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, "\ntrue\n");
        int int90 = reader15.read(charArray80);
        boolean boolean91 = reader15.ready();
        reader15.mark(85);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(writer68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[]");
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test08586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08586");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.util.Set<java.lang.Object> objSet25 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append('a');
        int int34 = strBuilder27.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        int int36 = strBuilder35.capacity();
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendln(stringBuffer37, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.insert(1, (double) 32);
        boolean boolean44 = strBuilder35.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder35.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.clear();
        int int47 = strBuilder46.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder27.append(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.setNullText("");
        java.lang.Object obj55 = properties0.getOrDefault((java.lang.Object) strBuilder46, (java.lang.Object) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst("", "");
        char[] charArray63 = strBuilder59.toCharArray();
        char[] charArray64 = strBuilder56.getChars(charArray63);
        java.io.Reader reader65 = strBuilder56.asReader();
        boolean boolean66 = strBuilder56.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst("");
        int int71 = strBuilder67.indexOf("");
        int int74 = strBuilder67.lastIndexOf('#', (int) (byte) 0);
        boolean boolean76 = strBuilder67.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder67.appendAll((java.util.Iterator<java.lang.String>) strTokenizer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder67.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder67.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder67.appendln((int) (byte) 100);
        char[] charArray85 = strBuilder67.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, '#');
        char[] charArray88 = strBuilder56.getChars(charArray85);
        java.lang.Object obj89 = properties0.remove((java.lang.Object) charArray85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, 'e');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer93.setEmptyTokenAsNull(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer93.add("10.0StrTokenizer[ 4#4]\n10.0\n35.0\n4");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 32 + "'", int36 == 32);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(strTokenizer95);
    }

    @Test
    public void test08587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08587");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", '1');
    }

    @Test
    public void test08588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08588");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        int int3 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendln(stringBuffer4, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.insert(1, (double) 32);
        java.util.Properties properties11 = new java.util.Properties();
        int int12 = properties11.size();
        boolean boolean14 = properties11.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        boolean boolean20 = properties11.containsValue((java.lang.Object) charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder2.append(charArray19, (int) (byte) 0, 0);
        boolean boolean24 = properties0.equals((java.lang.Object) 0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties0.entrySet();
        java.util.Collection<java.lang.Object> objCollection26 = properties0.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties0.entrySet();
        properties0.clear();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32 + "'", int3 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(objEntrySet27);
    }

    @Test
    public void test08589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08589");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        char[] charArray18 = strBuilder14.toCharArray();
        char[] charArray19 = strBuilder11.getChars(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray27 = strTokenizer26.getTokenArray();
        java.lang.String[] strArray28 = strTokenizer26.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendWithSeparators((java.lang.Object[]) strArray28, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll(strMatcher31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher31, strMatcher33);
        int int35 = strBuilder10.lastIndexOf(strMatcher33);
        java.lang.String str37 = strBuilder10.substring(0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "3.0" + "'", str37, "3.0");
    }

    @Test
    public void test08590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08590");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) '4');
        java.io.Writer writer28 = writer11.append((java.lang.CharSequence) strBuilder25);
        writer11.write((int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray36 = strTokenizer35.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.appendAll((java.lang.Object[]) strArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder31.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder31.insert((int) (short) 0, (double) (short) -1);
        java.io.Writer writer44 = writer11.append((java.lang.CharSequence) strBuilder43);
        java.io.Writer writer46 = writer44.append('\n');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(writer44);
        org.junit.Assert.assertNotNull(writer46);
    }

    @Test
    public void test08591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08591");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        java.lang.String str34 = strBuilder24.rightString((int) ' ');
        boolean boolean36 = strBuilder24.startsWith("");
        char[] charArray37 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.insert((int) (short) 0, charArray37);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        java.util.Set<java.lang.Object> objSet41 = properties39.keySet();
        java.util.Properties properties42 = new java.util.Properties(properties39);
        java.lang.String str43 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strBuilder22, properties42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder22.appendNewLine();
        java.io.Writer writer45 = strBuilder22.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder22.append("\na32");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendSeparator('\n', 200);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll('t');
        java.io.Reader reader55 = strBuilder54.asReader();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str58 = strBuilder54.substring((int) (byte) 100, (int) '\000');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n32.0" + "'", str34, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n32.0a" + "'", str43, "\n32.0a");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader55);
    }

    @Test
    public void test08592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08592");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        java.lang.String str2 = strTokenizer1.next();
        boolean boolean3 = strTokenizer1.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer1.getIgnoredMatcher();
        java.lang.String str5 = strTokenizer1.previous();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[]" + "'", str2, "StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[]" + "'", str5, "StrTokenizer[]");
    }

    @Test
    public void test08593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08593");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator('a', ' ');
        boolean boolean13 = strBuilder12.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.replaceAll("97true\n###################################a", "true\n###################################\n");
        // The following exception was thrown during execution in test generation
        try {
            char char22 = strBuilder15.charAt(200);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 200");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test08594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08594");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("not tokenized yet]", "StrTokenizer[32.0]");
        int int3 = strTokenizer2.nextIndex();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList4.replaceAll(strUnaryOperator5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(strList4);
    }

    @Test
    public void test08595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08595");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder2.lastIndexOf("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        int int6 = strBuilder5.capacity();
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(stringBuffer7, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder2.appendFixedWidthPadRight((java.lang.Object) strBuilder14, (int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder2.appendSeparator("", "0");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.setLength((int) '4');
        java.io.Writer writer25 = strBuilder22.asWriter();
        java.io.IOException iOException27 = new java.io.IOException("[\n32.0, , , StrTokenizer[]]");
        java.lang.Throwable[] throwableArray28 = iOException27.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendAll((java.lang.Object[]) throwableArray28);
        int int31 = strBuilder22.indexOf('$');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(writer25);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test08596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08596");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        int int11 = strBuilder10.capacity();
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(stringBuffer12, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.insert(1, (double) 32);
        java.lang.String str20 = strBuilder10.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.insert(1, '#');
        boolean boolean24 = strList9.equals((java.lang.Object) strBuilder10);
        boolean boolean26 = strList9.add("true\n###################################3\n");
        java.util.stream.Stream<java.lang.String> strStream27 = strList9.stream();
        strList9.clear();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strStream27);
    }

    @Test
    public void test08597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08597");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj2 = properties1.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        int int4 = strBuilder3.capacity();
        java.lang.StringBuffer stringBuffer5 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.appendln(stringBuffer5, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.appendln((int) (byte) 0);
        java.io.Writer writer11 = strBuilder10.asWriter();
        java.io.IOException iOException12 = new java.io.IOException();
        java.lang.Throwable[] throwableArray13 = iOException12.getSuppressed();
        java.lang.Throwable[] throwableArray14 = iOException12.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendWithSeparators((java.lang.Object[]) throwableArray14, "1");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.setNullText("97\nhi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder10.appendln("32.0");
        char[] charArray25 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        int int28 = strTokenizer27.size();
        boolean boolean29 = strTokenizer27.hasNext();
        java.util.List<java.lang.String> strList30 = strTokenizer27.getTokenList();
        java.lang.String[] strArray34 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        boolean boolean37 = strList30.addAll((java.util.Collection<java.lang.String>) strList35);
        java.util.Spliterator<java.lang.String> strSpliterator38 = strList35.spliterator();
        int int39 = strList35.size();
        boolean boolean41 = strList35.add("StrTokenizer[]");
        java.util.ListIterator<java.lang.String> strItor43 = strList35.listIterator((int) (byte) 0);
        java.lang.Object obj44 = properties1.getOrDefault((java.lang.Object) strBuilder10, (java.lang.Object) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        int int46 = strBuilder45.capacity();
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(stringBuffer47, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder45.setLength(32);
        java.io.Writer writer56 = strBuilder55.asWriter();
        writer56.write((int) (byte) 10);
        writer56.write("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        int int62 = strBuilder61.capacity();
        java.lang.StringBuffer stringBuffer63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(stringBuffer63, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.appendln((int) (byte) 0);
        java.io.Writer writer69 = strBuilder68.asWriter();
        java.io.IOException iOException70 = new java.io.IOException();
        java.lang.Throwable[] throwableArray71 = iOException70.getSuppressed();
        java.lang.Throwable[] throwableArray72 = iOException70.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.appendWithSeparators((java.lang.Object[]) throwableArray72, "1");
        java.io.Writer writer75 = writer56.append((java.lang.CharSequence) strBuilder74);
        properties1.store(writer75, "java.io.IOException: true");
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strSpliterator38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strItor43);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 0 + "'", obj44, (byte) 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(writer56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 32 + "'", int62 == 32);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(writer69);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(writer75);
    }

    @Test
    public void test08598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08598");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        char[] charArray28 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, "");
        boolean boolean31 = strTokenizer30.hasNext();
        int int32 = strTokenizer30.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer30.getIgnoredMatcher();
        boolean boolean34 = strBuilder1.contains(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder1.appendSeparator("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln('e');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test08599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08599");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("\n32.0", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setIgnoredChar('g');
        java.lang.Object obj6 = strTokenizer5.clone();
        java.lang.String str7 = strTokenizer5.next();
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\n32.0" + "'", str7, "\n32.0");
    }

    @Test
    public void test08600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08600");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "h");
        int int37 = strTokenizer33.nextIndex();
        boolean boolean38 = properties0.containsValue((java.lang.Object) strTokenizer33);
        char[] charArray43 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        int int46 = strTokenizer45.size();
        boolean boolean47 = strTokenizer45.hasNext();
        java.util.List<java.lang.String> strList48 = strTokenizer45.getTokenList();
        java.lang.String[] strArray52 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        boolean boolean55 = strList48.addAll((java.util.Collection<java.lang.String>) strList53);
        java.lang.String str57 = strList53.remove(0);
        char[] charArray62 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        int int65 = strTokenizer64.size();
        boolean boolean66 = strTokenizer64.hasNext();
        java.util.List<java.lang.String> strList67 = strTokenizer64.getTokenList();
        java.lang.String[] strArray71 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        boolean boolean74 = strList67.addAll((java.util.Collection<java.lang.String>) strList72);
        boolean boolean75 = strList53.addAll((java.util.Collection<java.lang.String>) strList72);
        java.lang.Object obj76 = properties0.remove((java.lang.Object) strList72);
        java.util.Spliterator<java.lang.String> strSpliterator77 = strList72.spliterator();
        boolean boolean79 = strList72.add("false\n32.032");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\n32.0" + "'", str57, "\n32.0");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(strSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test08601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08601");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((int) (short) 1);
        int int16 = strBuilder10.lastIndexOf("{}", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.minimizeCapacity();
        // The following exception was thrown during execution in test generation
        try {
            char char19 = strBuilder10.charAt(13);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 13");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test08602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08602");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.append(charArray16, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        int int23 = strBuilder22.capacity();
        java.lang.StringBuffer stringBuffer24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(stringBuffer24, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder22.appendSeparator("java.io.IOException: hi!");
        boolean boolean33 = strBuilder9.equals((java.lang.Object) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendln((int) 'e');
        java.lang.StringBuffer stringBuffer36 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.appendSeparator("StrTokenizer[35.0]", (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder32.append((long) 26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendSeparator("35.0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln("java.io.IOException: \n", (int) '\000', 44);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(stringBuffer36);
        org.junit.Assert.assertEquals(stringBuffer36.toString(), "\n32.0java.io.IOException: hi!101\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test08603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08603");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int7 = strBuilder5.lastIndexOf(strMatcher6);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.insert(1, " #\n");
        char[] charArray11 = strBuilder5.toCharArray();
        java.lang.String str12 = strBuilder5.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.appendln(true);
        char[] charArray15 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "");
        char[] charArray25 = strBuilder21.toCharArray();
        char[] charArray26 = strBuilder18.getChars(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        boolean boolean28 = strTokenizer27.hasPrevious();
        java.util.List<java.lang.String> strList29 = strTokenizer27.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer27.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.deleteAll('4');
        int int38 = strBuilder36.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("", "");
        char[] charArray43 = strBuilder39.toCharArray();
        char[] charArray44 = strBuilder36.getChars(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, '#', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer27.reset(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray44);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder5.getChars(132, 79, charArray44, 58);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 79");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "\n #\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "\n #\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[\n,  , #, \n]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\n #\n" + "'", str12, "\n #\n");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "\n #\ntrue\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "\n #\ntrue\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[\n,  , #, \n, t, r, u, e, \n]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[]");
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer50);
    }

    @Test
    public void test08604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08604");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        boolean boolean20 = strList9.add("\n");
        boolean boolean22 = strList9.add("\n2.0");
        java.util.ListIterator<java.lang.String> strItor23 = strList9.listIterator();
        char[] charArray28 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        int int31 = strTokenizer30.size();
        boolean boolean32 = strTokenizer30.hasNext();
        java.util.List<java.lang.String> strList33 = strTokenizer30.getTokenList();
        java.lang.String[] strArray37 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        boolean boolean40 = strList33.addAll((java.util.Collection<java.lang.String>) strList38);
        java.lang.String str42 = strList38.remove(0);
        java.util.stream.Stream<java.lang.String> strStream43 = strList38.stream();
        java.util.Iterator<java.lang.String> strItor44 = strList38.iterator();
        java.lang.Object obj45 = null;
        boolean boolean46 = strList38.contains(obj45);
        int int47 = strList38.size();
        boolean boolean48 = strList9.retainAll((java.util.Collection<java.lang.String>) strList38);
        boolean boolean49 = strList9.isEmpty();
        strList9.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst('a', '4');
        java.io.Writer writer58 = strBuilder57.asWriter();
        writer58.write(" 4#4");
        writer58.write(44);
        int int63 = strList9.lastIndexOf((java.lang.Object) 44);
        // The following exception was thrown during execution in test generation
        try {
            strList9.add(30, "97true\n###################################53true\n###############################$#####\n$");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 30, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\n32.0" + "'", str42, "\n32.0");
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(writer58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test08605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08605");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("-1");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        int int8 = strBuilder7.capacity();
        java.lang.StringBuffer stringBuffer9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(stringBuffer9, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int14 = strBuilder12.lastIndexOf(strMatcher13);
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = strList17.contains(obj19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.appendAll((java.lang.Iterable<java.lang.String>) strList17);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append('a');
        int int30 = strBuilder23.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        int int32 = strBuilder31.capacity();
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(stringBuffer33, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.insert(1, (double) 32);
        boolean boolean40 = strBuilder31.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder31.clear();
        int int43 = strBuilder42.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder23.append(strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        boolean boolean58 = strBuilder46.startsWith("");
        char[] charArray59 = strBuilder46.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder44.insert((int) (short) 0, charArray59);
        boolean boolean61 = strList17.contains((java.lang.Object) strBuilder44);
        java.util.Properties properties62 = new java.util.Properties();
        int int63 = properties62.size();
        java.util.Set<java.lang.Object> objSet64 = properties62.keySet();
        java.util.Properties properties67 = new java.util.Properties();
        int int68 = properties67.size();
        boolean boolean70 = properties67.containsKey((java.lang.Object) (-1.0f));
        boolean boolean71 = properties62.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray76 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, ' ');
        int int79 = strTokenizer78.size();
        boolean boolean80 = strTokenizer78.hasNext();
        java.util.List<java.lang.String> strList81 = strTokenizer78.getTokenList();
        java.lang.String[] strArray85 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        boolean boolean88 = strList81.addAll((java.util.Collection<java.lang.String>) strList86);
        java.util.Spliterator<java.lang.String> strSpliterator89 = strList86.spliterator();
        int int90 = strList86.size();
        boolean boolean92 = strList86.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream93 = strList86.stream();
        boolean boolean94 = properties62.containsKey((java.lang.Object) strList86);
        int int95 = strList86.size();
        boolean boolean96 = strList17.retainAll((java.util.Collection<java.lang.String>) strList86);
        int int97 = strList86.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder6.appendAll((java.lang.Iterable<java.lang.String>) strList86);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strSpliterator89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 3 + "'", int90 == 3);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(strStream93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 4 + "'", int95 == 4);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 4 + "'", int97 == 4);
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test08606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08606");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        int int3 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendln(stringBuffer4, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.insert(1, (double) 32);
        java.util.Properties properties11 = new java.util.Properties();
        int int12 = properties11.size();
        boolean boolean14 = properties11.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        boolean boolean20 = properties11.containsValue((java.lang.Object) charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder2.append(charArray19, (int) (byte) 0, 0);
        boolean boolean24 = properties0.equals((java.lang.Object) 0);
        java.util.Collection<java.lang.Object> objCollection25 = properties0.values();
        java.util.Properties properties26 = new java.util.Properties(properties0);
        int int27 = properties26.size();
        java.lang.String str29 = properties26.getProperty("{}3.0");
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32 + "'", int3 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test08607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08607");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        char[] charArray78 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        int int81 = strTokenizer80.size();
        int int82 = strTokenizer80.previousIndex();
        boolean boolean83 = strList9.equals((java.lang.Object) strTokenizer80);
        java.lang.String str84 = strTokenizer80.next();
        java.lang.String str85 = strTokenizer80.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer80.setEmptyTokenAsNull(true);
        boolean boolean88 = strTokenizer80.hasNext();
        java.lang.String str89 = strTokenizer80.next();
        boolean boolean90 = strTokenizer80.hasPrevious();
        int int91 = strTokenizer80.size();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4#4" + "'", str84, "4#4");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "4#4" + "'", str85, "4#4");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "4#4" + "'", str89, "4#4");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
    }

    @Test
    public void test08608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08608");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder0.appendln('a');
        boolean boolean24 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder0.appendln((double) 108);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test08609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08609");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln('$');
        int int25 = strBuilder20.lastIndexOf('#', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.appendln((long) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln((double) 35);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.appendSeparator("java.io.IOException: {}");
        java.lang.String str34 = strBuilder31.substring(20, 126);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + ".IOException: {}" + "'", str34, ".IOException: {}");
    }

    @Test
    public void test08610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08610");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray11 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        int int14 = strTokenizer13.size();
        boolean boolean15 = strTokenizer13.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer13.setIgnoredMatcher(strMatcher16);
        int int19 = strBuilder3.indexOf(strMatcher16, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.deleteFirst("StrTokenizer[32.0]");
        char[] charArray26 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        int int29 = strTokenizer28.size();
        boolean boolean30 = strTokenizer28.hasNext();
        java.util.List<java.lang.String> strList31 = strTokenizer28.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        char[] charArray36 = strBuilder32.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        boolean boolean40 = strList31.equals((java.lang.Object) charArray36);
        boolean boolean42 = strList31.add("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder21.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList31, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendSeparator('4', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendSeparator('e', 103);
        java.lang.String str51 = strBuilder50.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.replaceAll('#', 't');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "4#4StrTokenizer[not tokenized yet]\ne" + "'", str51, "4#4StrTokenizer[not tokenized yet]\ne");
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test08611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08611");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        int int2 = strBuilder1.capacity();
        java.lang.StringBuffer stringBuffer3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln(stringBuffer3, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        boolean boolean13 = strSubstitutor0.replaceIn(strBuilder10, (int) '$', 0);
        int int16 = strBuilder10.indexOf(" #\n", (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.appendSeparator("97\nhi!", (int) (byte) 10);
        java.lang.String str20 = strBuilder19.getNullText();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 32 + "'", int2 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test08612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08612");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        boolean boolean25 = properties0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst('a', '4');
        char[] charArray37 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        int int40 = strTokenizer39.size();
        boolean boolean41 = strTokenizer39.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setIgnoredMatcher(strMatcher42);
        int int45 = strBuilder29.indexOf(strMatcher42, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder29.deleteFirst("StrTokenizer[32.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        int int49 = strBuilder48.capacity();
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(stringBuffer50, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.appendln((double) '#');
        boolean boolean70 = strBuilder60.equals(strBuilder69);
        java.util.stream.IntStream intStream71 = strBuilder60.codePoints();
        java.util.Iterator<java.lang.String> strItor72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder60.appendWithSeparators(strItor72, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder54.appendln(strBuilder74, 0, (int) (byte) 1);
        java.lang.Object obj81 = properties0.putIfAbsent((java.lang.Object) strBuilder47, (java.lang.Object) strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder47.replaceFirst('4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder47.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder47.appendln("97true\n###################################a");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.ensureCapacity(132);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 32 + "'", int49 == 32);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(intStream71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test08613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08613");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("StrTokenizer[]");
        int int16 = strBuilder12.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray23 = strTokenizer22.getTokenArray();
        java.lang.String[] strArray24 = strTokenizer22.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendWithSeparators((java.lang.Object[]) strArray24, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.delete(0, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder20.appendSeparator("1", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder20.append((double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder12.appendln(strBuilder20);
        int int38 = strBuilder20.indexOf("\n32.0a\n", 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder20.appendln(" -1.0\n");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test08614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08614");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendAll((java.lang.Object[]) strArray7);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        char[] charArray17 = strBuilder9.getChars(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        char[] charArray19 = strBuilder1.getChars(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray19);
        java.lang.String str29 = strTokenizer28.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        java.lang.String str33 = strTokenizer32.next();
        int int34 = strTokenizer32.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer28.setTrimmerMatcher(strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        char[] charArray42 = strBuilder38.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray42);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer48.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher36, strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + " 4#4" + "'", str33, " 4#4");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher49);
    }

    @Test
    public void test08615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08615");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append((double) 10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.appendNull();
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendFixedWidthPadRight(obj7, (int) (short) 10, '$');
        char[] charArray15 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ');
        int int18 = strTokenizer17.size();
        boolean boolean19 = strTokenizer17.hasNext();
        java.util.List<java.lang.String> strList20 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln((double) '#');
        boolean boolean36 = strBuilder26.equals(strBuilder35);
        java.util.stream.IntStream intStream37 = strBuilder26.codePoints();
        boolean boolean38 = strList20.contains((java.lang.Object) strBuilder26);
        java.util.stream.Stream<java.lang.String> strStream39 = strList20.stream();
        java.util.Spliterator<java.lang.String> strSpliterator40 = strList20.spliterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strSpliterator40, 22, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray50 = strTokenizer49.getTokenArray();
        java.lang.String[] strArray51 = strTokenizer49.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendWithSeparators((java.lang.Object[]) strArray51, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder47.delete(0, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder47.appendSeparator("1", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strBuilder60.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("100.0\000\000\000\000\000");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer63.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer63.getIgnoredMatcher();
        int int66 = strBuilder43.indexOf(strMatcher65);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strStream39);
        org.junit.Assert.assertNotNull(strSpliterator40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test08616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08616");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder28.appendln((int) (byte) 0);
        java.lang.StringBuffer stringBuffer36 = strBuilder28.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder22.append(stringBuffer36, 40, (int) 'g');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(stringBuffer36);
        org.junit.Assert.assertEquals(stringBuffer36.toString(), "\n0\n");
    }

    @Test
    public void test08617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08617");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.append(charArray16, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        int int23 = strBuilder22.capacity();
        java.lang.StringBuffer stringBuffer24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(stringBuffer24, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder22.appendSeparator("java.io.IOException: hi!");
        boolean boolean33 = strBuilder9.equals((java.lang.Object) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendln((int) 'e');
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        java.lang.String[] strArray49 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        boolean boolean52 = strList45.addAll((java.util.Collection<java.lang.String>) strList50);
        java.lang.String str54 = strList50.remove(0);
        char[] charArray59 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        int int62 = strTokenizer61.size();
        boolean boolean63 = strTokenizer61.hasNext();
        java.util.List<java.lang.String> strList64 = strTokenizer61.getTokenList();
        java.lang.String[] strArray68 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        boolean boolean71 = strList64.addAll((java.util.Collection<java.lang.String>) strList69);
        boolean boolean72 = strList50.addAll((java.util.Collection<java.lang.String>) strList69);
        java.util.stream.Stream<java.lang.String> strStream73 = strList69.parallelStream();
        java.lang.Object[] objArray74 = strList69.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator75 = strList69.spliterator();
        java.lang.String str77 = strList69.get((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        int int79 = strBuilder78.capacity();
        java.lang.StringBuffer stringBuffer80 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder78.appendln(stringBuffer80, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int85 = strBuilder83.lastIndexOf(strMatcher84);
        java.lang.String[] strArray87 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        java.lang.Object obj90 = null;
        boolean boolean91 = strList88.contains(obj90);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder83.appendAll((java.lang.Iterable<java.lang.String>) strList88);
        boolean boolean93 = strList69.retainAll((java.util.Collection<java.lang.String>) strList88);
        java.util.Properties properties94 = new java.util.Properties();
        int int95 = properties94.size();
        java.lang.Object obj96 = properties94.clone();
        boolean boolean97 = strList88.remove(obj96);
        boolean boolean98 = strList88.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder35.appendAll((java.lang.Iterable<java.lang.String>) strList88);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\n32.0" + "'", str54, "\n32.0");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strStream73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[\n32.0, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[\n32.0, , ]");
        org.junit.Assert.assertNotNull(strSpliterator75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "\n32.0" + "'", str77, "\n32.0");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 32 + "'", int79 == 32);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "{}");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test08618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08618");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        int int28 = properties0.size();
        java.lang.String str29 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties0.keys();
        int int31 = properties0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    }

    @Test
    public void test08619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08619");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append('#');
        int int16 = strBuilder13.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.deleteFirst("###");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.append((double) 58);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.insert((int) '\000', 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder13.appendln(2L);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test08620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08620");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln('#');
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.append(stringBuffer16, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder13.replaceFirst('a', '4');
        boolean boolean25 = strBuilder9.equals(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendSeparator('4', '$');
        int int31 = strBuilder26.lastIndexOf("StrTokenizer[32.0]");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test08621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08621");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.deleteAll('4');
        boolean boolean51 = strBuilder3.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = null;
        int int56 = strBuilder54.lastIndexOf(strMatcher55);
        java.io.Writer writer57 = strBuilder54.asWriter();
        writer57.flush();
        writer57.write("java.io.IOException: \n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(writer57);
    }

    @Test
    public void test08622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08622");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean2 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterChar('a');
        java.lang.String str5 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.reset();
        int int7 = strTokenizer6.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test08623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08623");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        boolean boolean8 = strBuilder3.contains('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.appendln((int) 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendNewLine();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test08624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08624");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder0.delete(1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.setNullText("");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.replaceAll(strMatcher38, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.replaceFirst(strMatcher38, "########a4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder0.replaceAll(strMatcher38, "java.io.IOException: hi!false");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append(10.0d);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test08625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08625");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendSeparator("###");
        int int14 = strBuilder12.lastIndexOf('$');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test08626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08626");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.appendln((double) '$');
        char[] charArray19 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        int int22 = strTokenizer21.size();
        boolean boolean23 = strTokenizer21.hasNext();
        java.util.List<java.lang.String> strList24 = strTokenizer21.getTokenList();
        java.lang.String[] strArray28 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        boolean boolean31 = strList24.addAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.String str33 = strList29.remove(0);
        char[] charArray38 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        int int41 = strTokenizer40.size();
        boolean boolean42 = strTokenizer40.hasNext();
        java.util.List<java.lang.String> strList43 = strTokenizer40.getTokenList();
        java.lang.String[] strArray47 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        boolean boolean50 = strList43.addAll((java.util.Collection<java.lang.String>) strList48);
        boolean boolean51 = strList29.addAll((java.util.Collection<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder6.appendAll((java.lang.Iterable<java.lang.String>) strList29);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("");
        int int57 = strBuilder53.indexOf("");
        int int60 = strBuilder53.lastIndexOf('#', (int) (byte) 0);
        boolean boolean62 = strBuilder53.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder53.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray67 = strTokenizer66.getTokenArray();
        java.lang.String[] strArray68 = strTokenizer66.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder53.appendWithSeparators((java.lang.Object[]) strArray68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder52.appendln((java.lang.Object) "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendSeparator('t', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendln("not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder76.appendNull();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\n32.0" + "'", str33, "\n32.0");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test08627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08627");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("ang3.t", '$', 's');
    }

    @Test
    public void test08628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08628");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.ensureCapacity((int) (short) 10);
        boolean boolean13 = strBuilder6.equals((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.setNullText("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder6.deleteFirst(strMatcher17);
        java.util.stream.IntStream intStream19 = strBuilder6.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder6.appendFixedWidthPadRight((int) '6', (int) '#', '4');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test08629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08629");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.util.Properties properties4 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray11 = strTokenizer10.getTokenArray();
        java.lang.String[] strArray12 = strTokenizer10.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendWithSeparators((java.lang.Object[]) strArray12, "4#4");
        char[] charArray17 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        java.lang.Object obj19 = properties4.getOrDefault((java.lang.Object) strBuilder8, (java.lang.Object) strTokenizer18);
        int int20 = properties4.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendAll((java.lang.Object[]) strArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray36 = strTokenizer35.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.appendAll((java.lang.Object[]) strArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder21.appendln(strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.replaceFirst('4', 'a');
        boolean boolean50 = properties4.remove((java.lang.Object) strBuilder37, (java.lang.Object) '4');
        java.lang.Object obj51 = properties4.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties4.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        int int54 = strBuilder53.capacity();
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendln(stringBuffer55, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder53.insert(1, (double) 32);
        boolean boolean62 = strBuilder53.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder53.appendSeparator('a', ' ');
        boolean boolean66 = strBuilder65.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray72 = strTokenizer71.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.appendAll((java.lang.Object[]) strArray72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.appendln('#');
        java.lang.StringBuffer stringBuffer82 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.append(stringBuffer82, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder79.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder79.appendSeparator("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder79.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder73.append((java.lang.CharSequence) strBuilder92);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder65.append((java.lang.CharSequence) strBuilder73);
        boolean boolean95 = properties4.contains((java.lang.Object) strBuilder65);
        java.util.Collection<java.lang.Object> objCollection96 = properties4.values();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.io.PrintStream printStream98 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.list(printStream98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "{}");
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 32 + "'", int54 == 32);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(objCollection96);
    }

    @Test
    public void test08630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08630");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        boolean boolean8 = strBuilder3.contains('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "");
        char[] charArray13 = strBuilder9.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder3.appendFixedWidthPadLeft((java.lang.Object) strTokenizer20, 8, 'e');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder3.deleteFirst('o');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test08631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08631");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) '4');
        java.io.Writer writer28 = writer11.append((java.lang.CharSequence) strBuilder25);
        java.io.Writer writer30 = writer28.append('4');
        writer30.close();
        char[] charArray34 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34);
        java.lang.String str37 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) charArray34);
        // The following exception was thrown during execution in test generation
        try {
            writer30.write(charArray34, 6, 106);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 106");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(writer30);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer35);
    }

    @Test
    public void test08632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08632");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        long long23 = reader9.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst('a', '4');
        java.io.Writer writer31 = strBuilder30.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("", "");
        char[] charArray43 = strBuilder39.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.appendln(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray43);
        writer31.write(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, '4', '$');
        int int50 = reader9.read(charArray43);
        reader9.close();
        int int52 = reader9.read();
        reader9.mark((int) (byte) -1);
        int int55 = reader9.read();
        boolean boolean56 = reader9.ready();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(writer31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 35 + "'", int52 == 35);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test08633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08633");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "");
        char[] charArray8 = strBuilder4.toCharArray();
        boolean boolean9 = properties0.containsValue((java.lang.Object) charArray8);
        java.lang.Object obj10 = properties0.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        java.lang.Object obj13 = strTokenizer12.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer12.getIgnoredMatcher();
        boolean boolean15 = properties0.containsValue((java.lang.Object) strTokenizer12);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties0.elements();
        java.io.PrintWriter printWriter17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{}");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
    }

    @Test
    public void test08634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08634");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.appendFixedWidthPadLeft(0, 32, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.append((float) 3);
        int int23 = strBuilder20.indexOf(' ', 2);
        java.lang.StringBuffer stringBuffer24 = strBuilder20.toStringBuffer();
        java.lang.String str25 = strBuilder20.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.insert(0, 118);
        boolean boolean29 = strBuilder4.equals((java.lang.Object) strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer24);
        org.junit.Assert.assertEquals(stringBuffer24.toString(), "3.0");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test08635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08635");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        int int18 = reader16.read();
        boolean boolean19 = reader16.markSupported();
        int int20 = reader16.read();
        reader16.reset();
        boolean boolean22 = reader16.ready();
        reader16.reset();
        java.nio.CharBuffer charBuffer24 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int25 = reader16.read(charBuffer24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test08636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08636");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        boolean boolean10 = strTokenizer9.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        char[] charArray24 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln(charArray24);
        int int29 = strMatcher12.isMatch(charArray24, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer9.reset(charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, "tttt4");
        boolean boolean37 = strTokenizer36.hasPrevious();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test08637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08637");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        boolean boolean20 = strList14.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream21 = strList14.stream();
        int int22 = strList14.size();
        boolean boolean23 = strList14.isEmpty();
        java.util.Spliterator<java.lang.String> strSpliterator24 = strList14.spliterator();
        java.lang.Object[] objArray25 = strList14.toArray();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strStream21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strSpliterator24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[\n32.0, , , StrTokenizer[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[\n32.0, , , StrTokenizer[]]");
    }

    @Test
    public void test08638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08638");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        // The following exception was thrown during execution in test generation
        try {
            char char7 = strBuilder5.charAt(132);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 132");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
    }

    @Test
    public void test08639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08639");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        java.lang.String str16 = strTokenizer1.next();
        java.util.List<java.lang.String> strList17 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append('a');
        int int26 = strBuilder19.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strBuilder19.asTokenizer();
        boolean boolean28 = strList17.remove((java.lang.Object) strBuilder19);
        java.util.Spliterator<java.lang.String> strSpliterator29 = strList17.spliterator();
        strList17.clear();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#" + "'", str16, "#");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strSpliterator29);
    }

    @Test
    public void test08640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08640");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        java.io.Reader reader9 = strBuilder0.asReader();
        boolean boolean10 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        int int15 = strBuilder11.indexOf("");
        int int18 = strBuilder11.lastIndexOf('#', (int) (byte) 0);
        boolean boolean20 = strBuilder11.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.appendAll((java.util.Iterator<java.lang.String>) strTokenizer21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder11.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder11.appendln((int) (byte) 100);
        char[] charArray29 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '#');
        char[] charArray32 = strBuilder0.getChars(charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder0.appendSeparator('#', 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator('\000', (int) 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test08641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08641");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((-1));
        java.lang.String str4 = strBuilder1.midString((int) (short) 100, (int) ' ');
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        char[] charArray18 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        int int21 = strTokenizer20.size();
        boolean boolean22 = strTokenizer20.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer20.setIgnoredMatcher(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst("", "");
        java.lang.Object obj29 = properties5.putIfAbsent((java.lang.Object) strMatcher23, (java.lang.Object) strBuilder25);
        java.lang.Object obj32 = properties5.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer38, "h");
        int int42 = strTokenizer38.nextIndex();
        boolean boolean43 = properties5.containsValue((java.lang.Object) strTokenizer38);
        char[] charArray48 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        int int51 = strTokenizer50.size();
        boolean boolean52 = strTokenizer50.hasNext();
        java.util.List<java.lang.String> strList53 = strTokenizer50.getTokenList();
        java.lang.String[] strArray57 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        boolean boolean60 = strList53.addAll((java.util.Collection<java.lang.String>) strList58);
        java.lang.String str62 = strList58.remove(0);
        char[] charArray67 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, ' ');
        int int70 = strTokenizer69.size();
        boolean boolean71 = strTokenizer69.hasNext();
        java.util.List<java.lang.String> strList72 = strTokenizer69.getTokenList();
        java.lang.String[] strArray76 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        boolean boolean79 = strList72.addAll((java.util.Collection<java.lang.String>) strList77);
        boolean boolean80 = strList58.addAll((java.util.Collection<java.lang.String>) strList77);
        java.lang.Object obj81 = properties5.remove((java.lang.Object) strList77);
        java.util.Spliterator<java.lang.String> strSpliterator82 = strList77.spliterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder1.appendln((java.lang.Object) strList77);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.insert(119, (double) 6);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 119");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\n32.0" + "'", str62, "\n32.0");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(strSpliterator82);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test08642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08642");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        boolean boolean20 = strList9.add("\n");
        boolean boolean22 = strList9.add("\n2.0");
        java.util.ListIterator<java.lang.String> strItor23 = strList9.listIterator();
        strList9.clear();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strItor23);
    }

    @Test
    public void test08643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08643");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        int int24 = strBuilder23.capacity();
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(stringBuffer25, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.insert(1, (double) 32);
        java.lang.String str33 = strBuilder23.rightString((int) ' ');
        boolean boolean35 = strBuilder23.startsWith("");
        char[] charArray36 = strBuilder23.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray36);
        boolean boolean38 = strBuilder22.contains(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.appendFixedWidthPadRight((java.lang.Object) strBuilder48, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int53 = strBuilder39.lastIndexOf(strMatcher52);
        char[] charArray58 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, ' ');
        int int61 = strTokenizer60.size();
        boolean boolean62 = strTokenizer60.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer60.setIgnoredMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder39.deleteFirst(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.appendFixedWidthPadLeft(10, (-1), 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder66.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder66.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder66.delete(0, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder66.appendln("\nt\n\n");
        boolean boolean80 = strBuilder22.equals(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\n32.0" + "'", str33, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test08644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08644");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        boolean boolean5 = strBuilder3.endsWith("StrTokenizer[]");
        java.io.Writer writer6 = strBuilder3.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        char[] charArray16 = strBuilder8.getChars(charArray15);
        java.io.Reader reader17 = strBuilder8.asReader();
        boolean boolean18 = strBuilder8.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder8.appendln("StrTokenizer[ 4#4]");
        char[] charArray21 = strBuilder20.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder3.insert(144, charArray21, 117, 80);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 144");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(writer6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "StrTokenizer[ 4#4]\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "StrTokenizer[ 4#4]\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[S, t, r, T, o, k, e, n, i, z, e, r, [,  , 4, #, 4, ], \n]");
    }

    @Test
    public void test08645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08645");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        int int24 = strBuilder23.capacity();
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(stringBuffer25, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.insert(1, (double) 32);
        java.lang.String str33 = strBuilder23.rightString((int) ' ');
        boolean boolean35 = strBuilder23.startsWith("");
        char[] charArray36 = strBuilder23.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray36);
        boolean boolean38 = strBuilder22.contains(strMatcher37);
        int int41 = strBuilder22.indexOf('t', (int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strBuilder22.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\n32.0" + "'", str33, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher43);
    }

    @Test
    public void test08646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08646");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        java.util.ListIterator<java.lang.String> strItor75 = strList9.listIterator((int) (short) 0);
        java.util.List<java.lang.String> strList78 = strList9.subList((int) (short) 1, 1);
        int int79 = strList78.size();
        java.util.stream.Stream<java.lang.String> strStream80 = strList78.stream();
        java.lang.Object obj81 = null;
        int int82 = strList78.indexOf(obj81);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strItor75);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(strStream80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
    }

    @Test
    public void test08647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08647");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        java.lang.String[] strArray30 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        boolean boolean33 = strList26.addAll((java.util.Collection<java.lang.String>) strList31);
        java.util.Spliterator<java.lang.String> strSpliterator34 = strList31.spliterator();
        int int35 = strList31.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int39 = strList31.lastIndexOf((java.lang.Object) strTokenizer38);
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        int int43 = strBuilder42.capacity();
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(stringBuffer44, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(true);
        boolean boolean54 = strSubstitutor41.replaceIn(strBuilder51, (int) '$', 0);
        boolean boolean55 = strList40.equals((java.lang.Object) '$');
        boolean boolean56 = strList9.retainAll((java.util.Collection<java.lang.String>) strList40);
        char[] charArray61 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        int int64 = strTokenizer63.size();
        boolean boolean65 = strTokenizer63.hasNext();
        java.util.List<java.lang.String> strList66 = strTokenizer63.getTokenList();
        java.lang.String[] strArray70 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        boolean boolean73 = strList66.addAll((java.util.Collection<java.lang.String>) strList71);
        java.lang.String str75 = strList71.remove(0);
        java.util.stream.Stream<java.lang.String> strStream76 = strList71.stream();
        boolean boolean77 = strList40.addAll((java.util.Collection<java.lang.String>) strList71);
        int int78 = strList40.size();
        java.util.stream.Stream<java.lang.String> strStream79 = strList40.parallelStream();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strSpliterator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "\n32.0" + "'", str75, "\n32.0");
        org.junit.Assert.assertNotNull(strStream76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 3 + "'", int78 == 3);
        org.junit.Assert.assertNotNull(strStream79);
    }

    @Test
    public void test08648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08648");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        java.io.Writer writer10 = strBuilder5.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((double) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.append(strBuilder14, (int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.appendAll((java.lang.Object[]) strArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        char[] charArray35 = strBuilder31.toCharArray();
        char[] charArray36 = strBuilder28.getChars(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        char[] charArray38 = strBuilder20.getChars(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer41.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder19.replaceAll(strMatcher43, "java.io.IOException: java.io.IOException: StrTokenizer[]");
        java.io.Writer writer46 = strBuilder19.asWriter();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(writer46);
    }

    @Test
    public void test08649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08649");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        java.io.Writer writer7 = strBuilder6.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendln(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray19);
        writer7.write(charArray19);
        writer7.close();
        writer7.close();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(writer7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer21);
    }

    @Test
    public void test08650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08650");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((float) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendln((float) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        java.lang.String[] strArray27 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendWithSeparators((java.lang.Object[]) strArray27, "4#4");
        int int32 = strBuilder23.lastIndexOf(' ', (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder23.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder23.deleteFirst(" #\n");
        boolean boolean38 = strBuilder19.equals((java.lang.Object) strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test08651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08651");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Set<java.lang.String> strSet17 = properties0.stringPropertyNames();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        java.lang.String str20 = strTokenizer19.next();
        boolean boolean21 = strTokenizer19.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer19.getIgnoredMatcher();
        boolean boolean23 = properties0.containsKey((java.lang.Object) strMatcher22);
        int int24 = properties0.size();
        boolean boolean25 = properties0.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "StrTokenizer[]" + "'", str20, "StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test08652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08652");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst('4', 'a');
        boolean boolean46 = properties0.remove((java.lang.Object) strBuilder33, (java.lang.Object) '4');
        java.lang.Object obj47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder33.appendFixedWidthPadRight(obj47, (int) 'a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator('a', 49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer57.reset("");
        java.lang.String str61 = strTokenizer60.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer60.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer60.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer60.getIgnoredMatcher();
        boolean boolean66 = strBuilder55.contains(strMatcher65);
        char[] charArray67 = strBuilder55.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.setQuoteChar('t');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str71 = strTokenizer68.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "97\n                                                                                                 -1a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "97\n                                                                                                 -1a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[9, 7, \n,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  , -, 1, a]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer70);
    }

    @Test
    public void test08653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08653");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        int int16 = strBuilder15.capacity();
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(stringBuffer17, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.insert(1, (double) 32);
        java.lang.String str25 = strBuilder15.rightString((int) ' ');
        boolean boolean27 = strBuilder15.startsWith("");
        char[] charArray28 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray28);
        int int31 = strBuilder12.lastIndexOf(strMatcher29, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder12.appendln("100.0\000\000\000\000\000", (int) (short) 1, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append("java.io.IOException: false");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.append((long) 58);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\n32.0" + "'", str25, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test08654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08654");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.appendNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test08655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08655");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        int int3 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendln(stringBuffer4, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.insert(1, (double) 32);
        java.util.Properties properties11 = new java.util.Properties();
        int int12 = properties11.size();
        boolean boolean14 = properties11.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        boolean boolean20 = properties11.containsValue((java.lang.Object) charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder2.append(charArray19, (int) (byte) 0, 0);
        boolean boolean24 = properties0.equals((java.lang.Object) 0);
        java.lang.String str25 = properties0.toString();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.insert(1, (double) 32);
        java.util.Properties properties37 = new java.util.Properties();
        int int38 = properties37.size();
        boolean boolean40 = properties37.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "");
        char[] charArray45 = strBuilder41.toCharArray();
        boolean boolean46 = properties37.containsValue((java.lang.Object) charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder28.append(charArray45, (int) (byte) 0, 0);
        boolean boolean50 = properties26.equals((java.lang.Object) 0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties26.entrySet();
        java.util.Collection<java.lang.Object> objCollection52 = properties26.values();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Set<java.lang.Object> objSet54 = properties26.keySet();
        java.io.PrintWriter printWriter55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.list(printWriter55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32 + "'", int3 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNotNull(objSet54);
    }

    @Test
    public void test08656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08656");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString(" 4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer3.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        char[] charArray13 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, "true\n###################################3\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, "StrTokenizer[]");
        // The following exception was thrown during execution in test generation
        try {
            int int21 = strMatcher6.isMatch(charArray13, 93, 108, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
    }

    @Test
    public void test08657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08657");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(" 4#4");
        int int2 = strTokenizer1.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset("-1");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterChar('\n');
        java.lang.String str8 = strTokenizer7.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("35.0\n");
        java.lang.String str11 = strTokenizer10.next();
        java.lang.String[] strArray12 = strTokenizer10.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer10.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer7.setDelimiterMatcher(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "-1" + "'", str8, "-1");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "35.0" + "'", str11, "35.0");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
    }

    @Test
    public void test08658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08658");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        long long23 = reader9.skip(0L);
        reader9.close();
        boolean boolean25 = reader9.markSupported();
        boolean boolean26 = reader9.markSupported();
        long long28 = reader9.skip(10L);
        reader9.reset();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
    }

    @Test
    public void test08659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08659");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.deleteAll('4');
        boolean boolean51 = strBuilder3.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("\n-1.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        int int65 = strBuilder64.capacity();
        java.lang.StringBuffer stringBuffer66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendln(stringBuffer66, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int71 = strBuilder69.lastIndexOf(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder60.replaceFirst(strMatcher70, "hi!");
        char[] charArray76 = strBuilder73.toCharArray(0, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder54.append(charArray76);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder54.insert((int) (short) -1, true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 32 + "'", int65 == 32);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test08660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08660");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        char[] charArray16 = strBuilder8.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        char[] charArray18 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        int int23 = strTokenizer22.nextIndex();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test08661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08661");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        reader9.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst("", "");
        char[] charArray34 = strBuilder30.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.appendln(charArray34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray34);
        int int37 = reader9.read(charArray34);
        boolean boolean38 = reader9.ready();
        boolean boolean39 = reader9.ready();
        reader9.mark(3);
        int int42 = reader9.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray49 = strTokenizer48.getTokenArray();
        java.lang.String[] strArray50 = strTokenizer48.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendWithSeparators((java.lang.Object[]) strArray50, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.deleteAll('4');
        int int65 = strBuilder63.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst("", "");
        char[] charArray70 = strBuilder66.toCharArray();
        char[] charArray71 = strBuilder63.getChars(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        char[] charArray73 = strBuilder57.getChars(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, '#');
        // The following exception was thrown during execution in test generation
        try {
            int int78 = reader9.read(charArray73, 62, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[]");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 35 + "'", int42 == 35);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[]");
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[f, a, l, s, e]");
    }

    @Test
    public void test08662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08662");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "h");
        int int37 = strTokenizer33.nextIndex();
        boolean boolean38 = properties0.containsValue((java.lang.Object) strTokenizer33);
        char[] charArray43 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        int int46 = strTokenizer45.size();
        boolean boolean47 = strTokenizer45.hasNext();
        java.util.List<java.lang.String> strList48 = strTokenizer45.getTokenList();
        java.lang.String[] strArray52 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        boolean boolean55 = strList48.addAll((java.util.Collection<java.lang.String>) strList53);
        java.lang.String str57 = strList53.remove(0);
        char[] charArray62 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        int int65 = strTokenizer64.size();
        boolean boolean66 = strTokenizer64.hasNext();
        java.util.List<java.lang.String> strList67 = strTokenizer64.getTokenList();
        java.lang.String[] strArray71 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        boolean boolean74 = strList67.addAll((java.util.Collection<java.lang.String>) strList72);
        boolean boolean75 = strList53.addAll((java.util.Collection<java.lang.String>) strList72);
        java.lang.Object obj76 = properties0.remove((java.lang.Object) strList72);
        java.util.Spliterator<java.lang.String> strSpliterator77 = strList72.spliterator();
        java.util.stream.Stream<java.lang.String> strStream78 = strList72.parallelStream();
        boolean boolean79 = strList72.isEmpty();
        char[] charArray84 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, ' ');
        int int87 = strTokenizer86.size();
        boolean boolean88 = strTokenizer86.hasNext();
        java.util.List<java.lang.String> strList89 = strTokenizer86.getTokenList();
        boolean boolean90 = strTokenizer86.hasNext();
        boolean boolean91 = strList72.remove((java.lang.Object) strTokenizer86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer86.setEmptyTokenAsNull(true);
        java.lang.String str94 = strTokenizer86.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\n32.0" + "'", str57, "\n32.0");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(strSpliterator77);
        org.junit.Assert.assertNotNull(strStream78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "StrTokenizer[4#4]" + "'", str94, "StrTokenizer[4#4]");
    }

    @Test
    public void test08663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08663");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray8 = strTokenizer7.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.appendAll((java.lang.Object[]) strArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        char[] charArray18 = strBuilder10.getChars(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        char[] charArray20 = strBuilder2.getChars(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer1.reset(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("\na32.0");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer21.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
    }

    @Test
    public void test08664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08664");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        char char10 = strBuilder8.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.setLength((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        int int19 = strBuilder18.capacity();
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(stringBuffer20, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int25 = strBuilder23.lastIndexOf(strMatcher24);
        boolean boolean26 = strBuilder16.equalsIgnoreCase(strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln((float) (short) 10);
        java.util.Properties properties29 = new java.util.Properties();
        int int30 = properties29.size();
        java.lang.Object obj31 = properties29.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder32.appendFixedWidthPadRight((java.lang.Object) strBuilder41, (int) (byte) -1, '#');
        java.lang.Object obj45 = properties29.get((java.lang.Object) strBuilder32);
        java.util.Properties properties46 = new java.util.Properties();
        int int47 = properties46.size();
        boolean boolean49 = properties46.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties50 = new java.util.Properties();
        int int51 = properties50.size();
        boolean boolean53 = properties50.containsKey((java.lang.Object) (-1.0f));
        properties46.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        char[] charArray59 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        int int62 = strTokenizer61.size();
        boolean boolean63 = strTokenizer61.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer61.setIgnoredMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst("", "");
        java.lang.Object obj70 = properties46.putIfAbsent((java.lang.Object) strMatcher64, (java.lang.Object) strBuilder66);
        boolean boolean71 = strBuilder32.equals(obj70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder32.appendln((double) 100L);
        java.util.stream.IntStream intStream74 = strBuilder32.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder32.appendFixedWidthPadLeft(0, (int) (byte) -1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceFirst("", "");
        java.io.Reader reader83 = strBuilder79.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.appendSeparator('4');
        int int88 = strBuilder85.indexOf("10.0", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder32.appendln((java.lang.Object) strBuilder85);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.charMatcher('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder32.deleteAll(strMatcher91);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder28.replaceFirst(strMatcher91, "97\nhi!101.0\n");
        int int95 = strBuilder13.lastIndexOf(strMatcher91);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + char10 + "' != '" + '#' + "'", char10 == '#');
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "{}");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(intStream74);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(reader83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test08665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08665");
        char[] charArray3 = new char[] { 'a', '$', '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '$');
        java.util.List<java.lang.String> strList6 = strTokenizer5.getTokenList();
        char[] charArray11 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        int int14 = strTokenizer13.size();
        boolean boolean15 = strTokenizer13.hasNext();
        java.util.List<java.lang.String> strList16 = strTokenizer13.getTokenList();
        java.lang.String[] strArray20 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        boolean boolean23 = strList16.addAll((java.util.Collection<java.lang.String>) strList21);
        char[] charArray28 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        int int31 = strTokenizer30.size();
        boolean boolean32 = strTokenizer30.hasNext();
        java.util.List<java.lang.String> strList33 = strTokenizer30.getTokenList();
        java.lang.String[] strArray37 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        boolean boolean40 = strList33.addAll((java.util.Collection<java.lang.String>) strList38);
        java.util.Spliterator<java.lang.String> strSpliterator41 = strList38.spliterator();
        int int42 = strList38.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int46 = strList38.lastIndexOf((java.lang.Object) strTokenizer45);
        java.util.List<java.lang.String> strList47 = strTokenizer45.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor48 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        int int50 = strBuilder49.capacity();
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(stringBuffer51, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln(true);
        boolean boolean61 = strSubstitutor48.replaceIn(strBuilder58, (int) '$', 0);
        boolean boolean62 = strList47.equals((java.lang.Object) '$');
        boolean boolean63 = strList16.retainAll((java.util.Collection<java.lang.String>) strList47);
        char[] charArray68 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ');
        int int71 = strTokenizer70.size();
        boolean boolean72 = strTokenizer70.hasNext();
        java.util.List<java.lang.String> strList73 = strTokenizer70.getTokenList();
        java.lang.String[] strArray77 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        boolean boolean80 = strList73.addAll((java.util.Collection<java.lang.String>) strList78);
        java.lang.String str82 = strList78.remove(0);
        java.util.stream.Stream<java.lang.String> strStream83 = strList78.stream();
        boolean boolean84 = strList47.addAll((java.util.Collection<java.lang.String>) strList78);
        boolean boolean85 = strList6.removeAll((java.util.Collection<java.lang.String>) strList47);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str87 = strList47.get(58);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 58, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a$$");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a$$");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, $, $]");
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strSpliterator41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 32 + "'", int50 == 32);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "\n32.0" + "'", str82, "\n32.0");
        org.junit.Assert.assertNotNull(strStream83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test08666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08666");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer6.setIgnoredMatcher(strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer6.setDelimiterChar('4');
        boolean boolean13 = strTokenizer12.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.reset();
        int int15 = strTokenizer12.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("\n32.0a", "{\ntrue\n=1.0}");
        int int19 = strTokenizer18.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer12.setDelimiterMatcher(strMatcher20);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
    }

    @Test
    public void test08667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08667");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        boolean boolean7 = strBuilder0.contains(' ');
        java.lang.StringBuffer stringBuffer8 = strBuilder0.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.append('o');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(stringBuffer8);
        org.junit.Assert.assertEquals(stringBuffer8.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test08668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08668");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setDelimiterString("h");
        java.lang.String str5 = strTokenizer2.nextToken();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "java.io.IOException" + "'", str5, "java.io.IOException");
    }

    @Test
    public void test08669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08669");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        int int22 = properties0.size();
        java.lang.String str24 = properties0.getProperty("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.deleteAll(strMatcher42);
        boolean boolean44 = strBuilder31.contains(strMatcher42);
        char[] charArray49 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        int int52 = strTokenizer51.size();
        boolean boolean53 = strTokenizer51.hasNext();
        java.util.List<java.lang.String> strList54 = strTokenizer51.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        int int56 = strBuilder55.capacity();
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(stringBuffer57, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.insert(1, (double) 32);
        java.lang.String str65 = strBuilder55.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder55.insert(1, '#');
        boolean boolean69 = strList54.equals((java.lang.Object) strBuilder55);
        java.lang.Throwable throwable71 = null;
        java.io.IOException iOException72 = new java.io.IOException("{}", throwable71);
        java.lang.Throwable[] throwableArray73 = iOException72.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder55.appendWithSeparators((java.lang.Object[]) throwableArray73, "10.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder55.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln("a4");
        java.lang.Object obj79 = properties0.getOrDefault((java.lang.Object) strBuilder31, (java.lang.Object) "a4");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet80 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet81 = properties0.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.deleteFirst("");
        int int86 = strBuilder82.indexOf("");
        int int89 = strBuilder82.lastIndexOf('#', (int) (byte) 0);
        java.io.Reader reader90 = strBuilder82.asReader();
        boolean boolean91 = reader90.ready();
        properties0.load(reader90);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet93 = properties0.entrySet();
        java.io.InputStream inputStream94 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 32 + "'", int56 == 32);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\n32.0" + "'", str65, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "a4" + "'", obj79, "a4");
        org.junit.Assert.assertNotNull(objEntrySet80);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(reader90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objEntrySet93);
    }

    @Test
    public void test08670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08670");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        int int2 = strBuilder1.capacity();
        java.lang.StringBuffer stringBuffer3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln(stringBuffer3, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int8 = strBuilder6.lastIndexOf(strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        boolean boolean10 = strBuilder6.contains(strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("4#4#\n", strMatcher9);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 32 + "'", int2 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test08671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08671");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer5, "h");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln("\n36E", (int) (short) -1, (int) 'o');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
    }

    @Test
    public void test08672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08672");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((int) (byte) 0);
        java.io.Writer writer8 = strBuilder7.asWriter();
        java.io.IOException iOException9 = new java.io.IOException();
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.lang.Throwable[] throwableArray11 = iOException9.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendWithSeparators((java.lang.Object[]) throwableArray11, "1");
        java.io.Reader reader14 = strBuilder13.asReader();
        java.io.IOException iOException16 = new java.io.IOException("rg.apache.");
        java.io.IOException iOException18 = new java.io.IOException("hi!");
        java.io.IOException iOException20 = new java.io.IOException("hi!");
        iOException18.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException23 = new java.io.IOException("hi!");
        java.io.IOException iOException25 = new java.io.IOException("hi!");
        iOException23.addSuppressed((java.lang.Throwable) iOException25);
        iOException20.addSuppressed((java.lang.Throwable) iOException25);
        java.lang.Throwable[] throwableArray28 = iOException20.getSuppressed();
        iOException16.addSuppressed((java.lang.Throwable) iOException20);
        java.lang.Throwable[] throwableArray30 = iOException20.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendAll((java.lang.Object[]) throwableArray30);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer8);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test08673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08673");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        java.util.Properties properties19 = new java.util.Properties();
        int int20 = properties19.size();
        boolean boolean22 = properties19.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties23 = new java.util.Properties();
        int int24 = properties23.size();
        boolean boolean26 = properties23.containsKey((java.lang.Object) (-1.0f));
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.lang.String str29 = properties23.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration30 = properties23.propertyNames();
        int int31 = properties23.size();
        java.util.Properties properties33 = new java.util.Properties();
        int int34 = properties33.size();
        boolean boolean36 = properties33.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        boolean boolean42 = strBuilder40.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln('#');
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.append(stringBuffer51, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.deleteFirst("hi!");
        char[] charArray57 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer44.reset(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        char[] charArray60 = strBuilder40.getChars(charArray57);
        java.lang.Object obj61 = properties33.remove((java.lang.Object) charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray60);
        java.lang.Object obj63 = properties23.put((java.lang.Object) 74, (java.lang.Object) charArray60);
        char[] charArray64 = strBuilder18.getChars(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray60);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, \n]");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, \n]");
    }

    @Test
    public void test08674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08674");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        boolean boolean21 = strBuilder19.contains('a');
        int int22 = strBuilder19.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln((double) 106);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 80 + "'", int22 == 80);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test08675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08675");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        java.lang.String str34 = strBuilder24.rightString((int) ' ');
        boolean boolean36 = strBuilder24.startsWith("");
        char[] charArray37 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.insert((int) (short) 0, charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.appendSeparator('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        char[] charArray48 = strBuilder44.toCharArray();
        char[] charArray49 = strBuilder41.getChars(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        boolean boolean51 = strTokenizer50.hasPrevious();
        java.util.List<java.lang.String> strList52 = strTokenizer50.getTokenList();
        strList52.clear();
        strList52.clear();
        java.util.List[] listArray56 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.lang.String>[] strListArray57 = (java.util.List<java.lang.String>[]) listArray56;
        java.util.List<java.lang.String>[] strListArray58 = strList52.toArray(strListArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder22.appendWithSeparators((java.lang.Object[]) strListArray57, "java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln((long) 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        char[] charArray67 = strBuilder63.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, 'a');
        java.lang.String[] strArray70 = strTokenizer69.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder60.appendWithSeparators((java.lang.Object[]) strArray70, "StrTokenizer[]");
        java.lang.Iterable<java.lang.String> strIterable73 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendWithSeparators(strIterable73, "java.io.IOException: {\ntrue\n=1.0}");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.ensureCapacity((int) (byte) -1);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n32.0" + "'", str34, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(listArray56);
        org.junit.Assert.assertNotNull(strListArray57);
        org.junit.Assert.assertNotNull(strListArray58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test08676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08676");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("", "0");
        boolean boolean15 = strTokenizer14.hasPrevious();
        boolean boolean16 = strTokenizer14.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "");
        char[] charArray21 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.deleteAll(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer26.setIgnoredMatcher(strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer14.setTrimmerMatcher(strMatcher37);
        java.lang.String str41 = strTokenizer40.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer40.getDelimiterMatcher();
        boolean boolean43 = strBuilder10.contains(strMatcher42);
        java.io.IOException iOException45 = new java.io.IOException("StrTokenizer[]");
        java.io.IOException iOException46 = new java.io.IOException((java.lang.Throwable) iOException45);
        java.lang.Throwable[] throwableArray47 = iOException46.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder10.appendAll((java.lang.Object[]) throwableArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst("", "");
        char[] charArray53 = strBuilder49.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, 'a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.deleteAll(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer58.setIgnoredMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer71.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder10.appendAll((java.util.Iterator<java.lang.String>) strTokenizer72);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.delete((int) '\n', 75);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "StrTokenizer[]" + "'", str41, "StrTokenizer[]");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test08677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08677");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer6, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendFixedWidthPadRight(32, (int) 't', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("\n1.0\n52");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.minimizeCapacity();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test08678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08678");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.appendln(charArray14);
        int int19 = strMatcher2.isMatch(charArray14, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray25 = strTokenizer24.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendAll((java.lang.Object[]) strArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder20.appendln(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst('a', '4');
        java.io.Writer writer50 = strBuilder49.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst("", "");
        char[] charArray62 = strBuilder58.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendln(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray62);
        writer50.write(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder42.append(charArray62);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", strMatcher2, strMatcher67);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        java.util.Properties properties70 = new java.util.Properties();
        int int71 = properties70.size();
        boolean boolean73 = properties70.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties74 = new java.util.Properties();
        int int75 = properties74.size();
        boolean boolean77 = properties74.containsKey((java.lang.Object) (-1.0f));
        properties70.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties74);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties74.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet80 = properties74.entrySet();
        boolean boolean81 = properties74.isEmpty();
        java.lang.String str82 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strMatcher69, properties74);
        boolean boolean83 = properties74.isEmpty();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(writer50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[]");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertNotNull(objEntrySet80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test08679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08679");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        java.lang.Object obj30 = properties0.setProperty("hi!", "hi!");
        java.lang.String str32 = properties0.getProperty("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.replaceFirst('4', 'a');
        boolean boolean42 = properties0.containsKey((java.lang.Object) 'a');
        java.util.Set<java.lang.Object> objSet43 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = properties0.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.deleteAll('4');
        int int52 = strBuilder50.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.replaceFirst("java.io.IOException: hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.setNullText("");
        int int60 = strBuilder50.indexOf("true\n###################################3\n", (int) 't');
        boolean boolean61 = properties0.containsValue((java.lang.Object) "true\n###################################3\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test08680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08680");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        int int9 = strBuilder0.indexOf("java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendln((float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.appendNull();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.deleteCharAt(11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 11");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test08681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08681");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray11 = strTokenizer10.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendAll((java.lang.Object[]) strArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendAll((java.lang.Object[]) strArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder6.appendln(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', '4');
        java.io.Writer writer36 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        char[] charArray48 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendln(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        writer36.write(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.append(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int56 = strBuilder28.indexOf(strMatcher54, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder3.deleteAll(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendSeparator('$');
        // The following exception was thrown during execution in test generation
        try {
            char char63 = strBuilder61.charAt(20);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 20");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test08682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08682");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties4.entrySet();
        properties4.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        java.io.Reader reader15 = strBuilder11.asReader();
        properties4.load(reader15);
        java.lang.Object obj17 = properties4.clone();
        java.util.Set<java.lang.Object> objSet18 = properties4.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties4.entrySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{}");
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEntrySet19);
    }

    @Test
    public void test08683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08683");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder33.lastIndexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.insert((int) (short) 1, 32);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        boolean boolean42 = properties39.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties39.entrySet();
        java.lang.Object obj44 = properties0.putIfAbsent((java.lang.Object) strBuilder38, (java.lang.Object) objEntrySet43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        int int46 = strBuilder45.capacity();
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(stringBuffer47, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int52 = strBuilder50.lastIndexOf(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.insert((int) (short) 1, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.setNullText("");
        char[] charArray64 = strBuilder63.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.insert(0, true);
        java.io.Writer writer68 = strBuilder63.asWriter();
        boolean boolean69 = properties0.remove((java.lang.Object) "java.io.IOException: hi!", (java.lang.Object) writer68);
        writer68.write((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceFirst("", "");
        char[] charArray76 = strBuilder72.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray76, 'a');
        writer68.write(charArray76);
        java.lang.CharSequence charSequence80 = null;
        java.io.Writer writer81 = writer68.append(charSequence80);
        writer68.close();
        writer68.write(81);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(writer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[]");
        org.junit.Assert.assertNotNull(writer81);
    }

    @Test
    public void test08684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08684");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader19 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray25 = strTokenizer24.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendAll((java.lang.Object[]) strArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream30 = strBuilder20.codePoints();
        java.lang.Object obj31 = properties10.replace((java.lang.Object) reader19, (java.lang.Object) intStream30);
        long long33 = reader19.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray39 = strTokenizer38.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendAll((java.lang.Object[]) strArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder34.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream44 = strBuilder34.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        char[] charArray49 = strBuilder45.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder34.appendln(charArray49);
        int int53 = reader19.read(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder3.append(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln(50);
        java.util.stream.IntStream intStream57 = strBuilder56.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.appendSeparator("tue", (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendln((long) (byte) 1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(intStream57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test08685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08685");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(" 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("-1", "100.0\n");
        int int6 = strBuilder1.indexOf(" -1.0\n");
        java.lang.String str8 = strBuilder1.leftString((int) '\n');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = strBuilder1.substring(37, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + " 4#4" + "'", str8, " 4#4");
    }

    @Test
    public void test08686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08686");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((double) '4');
        int int11 = strBuilder6.lastIndexOf("[\n32.0, , , StrTokenizer[]]", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.setNullText("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.append((float) 166);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append(120);
        java.util.Properties properties18 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int36 = strBuilder34.lastIndexOf(strMatcher35);
        boolean boolean37 = strBuilder27.equalsIgnoreCase(strBuilder34);
        char[] charArray40 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray40);
        boolean boolean42 = properties18.replace((java.lang.Object) strBuilder24, (java.lang.Object) strBuilder27, (java.lang.Object) strTokenizer41);
        int int45 = strBuilder27.lastIndexOf("4#4", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder27.appendSeparator("a4", 53);
        boolean boolean49 = strBuilder17.equals(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test08687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08687");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln((double) '#');
        boolean boolean25 = strBuilder15.equals(strBuilder24);
        java.util.stream.IntStream intStream26 = strBuilder15.codePoints();
        boolean boolean27 = strList9.contains((java.lang.Object) strBuilder15);
        java.util.stream.Stream<java.lang.String> strStream28 = strList9.stream();
        strList9.clear();
        char[] charArray35 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        int int38 = strTokenizer37.size();
        boolean boolean39 = strTokenizer37.hasNext();
        java.util.List<java.lang.String> strList40 = strTokenizer37.getTokenList();
        java.lang.String[] strArray44 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = strList40.addAll((java.util.Collection<java.lang.String>) strList45);
        java.lang.String str49 = strList45.remove(0);
        char[] charArray54 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        int int57 = strTokenizer56.size();
        boolean boolean58 = strTokenizer56.hasNext();
        java.util.List<java.lang.String> strList59 = strTokenizer56.getTokenList();
        java.lang.String[] strArray63 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        boolean boolean66 = strList59.addAll((java.util.Collection<java.lang.String>) strList64);
        boolean boolean67 = strList45.addAll((java.util.Collection<java.lang.String>) strList64);
        java.util.stream.Stream<java.lang.String> strStream68 = strList64.parallelStream();
        java.lang.Object[] objArray69 = strList64.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator70 = strList64.spliterator();
        java.lang.String str72 = strList64.get((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        int int74 = strBuilder73.capacity();
        java.lang.StringBuffer stringBuffer75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.appendln(stringBuffer75, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int80 = strBuilder78.lastIndexOf(strMatcher79);
        java.lang.String[] strArray82 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.lang.Object obj85 = null;
        boolean boolean86 = strList83.contains(obj85);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder78.appendAll((java.lang.Iterable<java.lang.String>) strList83);
        boolean boolean88 = strList64.retainAll((java.util.Collection<java.lang.String>) strList83);
        java.util.Properties properties89 = new java.util.Properties();
        int int90 = properties89.size();
        java.lang.Object obj91 = properties89.clone();
        boolean boolean92 = strList83.remove(obj91);
        boolean boolean93 = strList83.isEmpty();
        int int94 = strList83.size();
        boolean boolean95 = strList9.addAll((int) (short) 0, (java.util.Collection<java.lang.String>) strList83);
        strList83.clear();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strStream28);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\n32.0" + "'", str49, "\n32.0");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strStream68);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[\n32.0, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[\n32.0, , ]");
        org.junit.Assert.assertNotNull(strSpliterator70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "\n32.0" + "'", str72, "\n32.0");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 32 + "'", int74 == 32);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "{}");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test08688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08688");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Enumeration<?> wildcardEnumeration16 = properties0.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties0.elements();
        java.util.Properties properties18 = new java.util.Properties();
        int int19 = properties18.size();
        java.lang.Object obj20 = properties18.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) strBuilder30, (int) (byte) -1, '#');
        java.lang.Object obj34 = properties18.get((java.lang.Object) strBuilder21);
        java.util.Properties properties35 = new java.util.Properties();
        int int36 = properties35.size();
        boolean boolean38 = properties35.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        boolean boolean42 = properties39.containsKey((java.lang.Object) (-1.0f));
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        char[] charArray48 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        int int51 = strTokenizer50.size();
        boolean boolean52 = strTokenizer50.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer50.setIgnoredMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "");
        java.lang.Object obj59 = properties35.putIfAbsent((java.lang.Object) strMatcher53, (java.lang.Object) strBuilder55);
        boolean boolean60 = strBuilder21.equals(obj59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder21.appendln((double) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray69 = strTokenizer68.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder63.appendAll((java.lang.Object[]) strArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst("", "");
        char[] charArray78 = strBuilder74.toCharArray();
        char[] charArray79 = strBuilder71.getChars(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78);
        char[] charArray81 = strBuilder63.getChars(charArray78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer84.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer84.getQuoteMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer84.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder62.deleteAll(strMatcher87);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.deleteFirst("\n32.0 ");
        boolean boolean92 = strBuilder90.contains("true\n###################################");
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder90.replaceAll('#', '$');
        java.lang.Object obj96 = properties0.remove((java.lang.Object) strBuilder90);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder90.insert((int) '2', 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 50");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(wildcardEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[]");
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[]");
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNull(obj96);
    }

    @Test
    public void test08689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08689");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        char char10 = strBuilder8.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.setNewLineText("\n32.0java.io.IOException: hi!");
        char[] charArray13 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        int int18 = strTokenizer17.previousIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.appendFixedWidthPadLeft((java.lang.Object) strTokenizer17, 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceAll('6', '1');
        java.util.stream.IntStream intStream25 = strBuilder24.chars();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + char10 + "' != '" + '#' + "'", char10 == '#');
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#36.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#36.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 3, 6, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(intStream25);
    }

    @Test
    public void test08690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08690");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 't', '\000');
        int int4 = strTokenizer3.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer3.getDelimiterMatcher();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strMatcher5);
    }

    @Test
    public void test08691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08691");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer5, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength((int) (byte) 100);
        java.lang.String str12 = strBuilder10.substring(35);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.append(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("{}");
        int int18 = strBuilder14.indexOf(strMatcher16, 62);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.append((float) 3);
        boolean boolean30 = strBuilder14.equals(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "");
        char[] charArray47 = strBuilder43.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder40.append(charArray47, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        int int54 = strBuilder53.capacity();
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendln(stringBuffer55, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder53.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder53.appendSeparator("java.io.IOException: hi!");
        boolean boolean64 = strBuilder40.equals((java.lang.Object) strBuilder63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strBuilder63.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setIgnoreEmptyTokens(true);
        java.lang.String[] strArray68 = strTokenizer65.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder22.appendAll((java.lang.Object[]) strArray68);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000" + "'", str12, "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 32 + "'", int54 == 32);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test08692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08692");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((double) 100L);
        java.util.stream.IntStream intStream45 = strBuilder3.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder3.append((double) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder3.ensureCapacity((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder3.appendSeparator(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append(74);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(intStream45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test08693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08693");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        char[] charArray78 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        int int81 = strTokenizer80.size();
        int int82 = strTokenizer80.previousIndex();
        boolean boolean83 = strList9.equals((java.lang.Object) strTokenizer80);
        java.lang.String str84 = strTokenizer80.next();
        java.lang.String str85 = strTokenizer80.previous();
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer80.getQuoteMatcher();
        int int87 = strTokenizer80.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer80.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4#4" + "'", str84, "4#4");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "4#4" + "'", str85, "4#4");
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test08694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08694");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        java.util.Collection<java.lang.Object> objCollection18 = properties1.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', '4');
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        java.io.Writer writer35 = strBuilder34.asWriter();
        properties27.store(writer35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        java.io.Reader reader42 = strBuilder38.asReader();
        properties27.load(reader42);
        boolean boolean44 = reader42.ready();
        int int45 = reader42.read();
        java.lang.Object obj46 = properties1.getOrDefault((java.lang.Object) 'a', (java.lang.Object) int45);
        java.lang.String str48 = properties1.getProperty("");
        java.lang.Object obj49 = properties1.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setDelimiterString("{}");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getIgnoredMatcher();
        boolean boolean56 = properties1.equals((java.lang.Object) strTokenizer54);
        properties1.clear();
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(writer35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (-1) + "'", obj46, (-1));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "{}");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test08695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08695");
        java.lang.Throwable throwable4 = null;
        java.io.IOException iOException5 = new java.io.IOException("{}", throwable4);
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        java.io.IOException iOException7 = new java.io.IOException("\n", (java.lang.Throwable) iOException5);
        java.lang.Throwable throwable9 = null;
        java.io.IOException iOException10 = new java.io.IOException("\n32.0", throwable9);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray12 = iOException10.getSuppressed();
        iOException5.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException14 = new java.io.IOException("#\n$", (java.lang.Throwable) iOException5);
        java.io.IOException iOException15 = new java.io.IOException("\n\0002.0java.io.IOException: hi!", (java.lang.Throwable) iOException14);
        java.lang.Throwable[] throwableArray16 = iOException15.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test08696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08696");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        strList45.clear();
        strList45.clear();
        java.util.ListIterator<java.lang.String> strItor65 = strList45.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            strList45.add(5, "-1.0ttt");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strItor65);
    }

    @Test
    public void test08697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08697");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst("java.io.IOException: hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replaceFirst("\n32.0java.io.IOException: hi!", "java.io.IOException: hi!");
        int int18 = strBuilder15.lastIndexOf("aaaa\nfalse\n", (int) (byte) 0);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test08698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08698");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        char[] charArray22 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ');
        int int25 = strTokenizer24.size();
        boolean boolean26 = strTokenizer24.hasNext();
        java.util.List<java.lang.String> strList27 = strTokenizer24.getTokenList();
        java.lang.String[] strArray31 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        boolean boolean34 = strList27.addAll((java.util.Collection<java.lang.String>) strList32);
        java.util.Spliterator<java.lang.String> strSpliterator35 = strList32.spliterator();
        int int36 = strList32.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int40 = strList32.lastIndexOf((java.lang.Object) strTokenizer39);
        java.util.List<java.lang.String> strList41 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        int int44 = strBuilder43.capacity();
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(stringBuffer45, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln(true);
        boolean boolean55 = strSubstitutor42.replaceIn(strBuilder52, (int) '$', 0);
        boolean boolean56 = strList41.equals((java.lang.Object) '$');
        boolean boolean57 = strList14.containsAll((java.util.Collection<java.lang.String>) strList41);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst("", "");
        char[] charArray65 = strBuilder61.toCharArray();
        char[] charArray66 = strBuilder58.getChars(charArray65);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65);
        boolean boolean68 = strTokenizer67.hasPrevious();
        java.util.List<java.lang.String> strList69 = strTokenizer67.getTokenList();
        java.lang.Object[] objArray70 = strList69.toArray();
        java.lang.Object[] objArray71 = strList14.toArray(objArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("{}");
        boolean boolean74 = strList14.contains((java.lang.Object) "{}");
        java.util.stream.Stream<java.lang.String> strStream75 = strList14.stream();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strSpliterator35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 3 + "'", int36 == 3);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 32 + "'", int44 == 32);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[\n32.0, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[\n32.0, , ]");
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strStream75);
    }

    @Test
    public void test08699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08699");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder3.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append((double) 6);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendSeparator("java.io.IOException: StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test08700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08700");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        java.lang.String[] strArray30 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        boolean boolean33 = strList26.addAll((java.util.Collection<java.lang.String>) strList31);
        java.util.Spliterator<java.lang.String> strSpliterator34 = strList31.spliterator();
        int int35 = strList31.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int39 = strList31.lastIndexOf((java.lang.Object) strTokenizer38);
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        int int43 = strBuilder42.capacity();
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(stringBuffer44, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(true);
        boolean boolean54 = strSubstitutor41.replaceIn(strBuilder51, (int) '$', 0);
        boolean boolean55 = strList40.equals((java.lang.Object) '$');
        boolean boolean56 = strList9.retainAll((java.util.Collection<java.lang.String>) strList40);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor58 = strList40.listIterator(62);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 62");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strSpliterator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test08701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08701");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer14.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer14, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer14.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setEmptyTokenAsNull(true);
        java.lang.String str22 = strTokenizer19.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer19, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder1.append(false);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "32.0" + "'", str22, "32.0");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test08702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08702");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        char[] charArray16 = strBuilder8.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        char[] charArray18 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray18);
        boolean boolean28 = strTokenizer27.hasPrevious();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test08703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08703");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int3 = strBuilder1.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendln("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000", 5, (int) ' ');
        java.io.Reader reader8 = strBuilder1.asReader();
        long long10 = reader8.skip((long) 56);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 36L + "'", long10 == 36L);
    }

    @Test
    public void test08704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08704");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer(" #java.io.IOException: {\ntrue\n=1.0}");
    }

    @Test
    public void test08705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08705");
        char[] charArray2 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, '\n');
        java.lang.String str6 = strTokenizer5.next();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer5.set("\n1.0\n\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "a4" + "'", str6, "a4");
    }

    @Test
    public void test08706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08706");
        java.io.IOException iOException2 = new java.io.IOException("StrTokenizer[]");
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.lang.Throwable throwable5 = null;
        java.io.IOException iOException6 = new java.io.IOException("\n32.0", throwable5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.util.Properties properties8 = new java.util.Properties();
        int int9 = properties8.size();
        boolean boolean11 = properties8.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties12 = new java.util.Properties();
        int int13 = properties12.size();
        boolean boolean15 = properties12.containsKey((java.lang.Object) (-1.0f));
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.lang.String str18 = properties12.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration19 = properties12.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties12.entrySet();
        java.io.IOException iOException21 = new java.io.IOException();
        java.lang.Throwable[] throwableArray22 = iOException21.getSuppressed();
        java.lang.Throwable[] throwableArray23 = iOException21.getSuppressed();
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException21);
        boolean boolean25 = properties12.containsValue((java.lang.Object) iOException24);
        iOException7.addSuppressed((java.lang.Throwable) iOException24);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException7);
        iOException3.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException30 = new java.io.IOException("StrTokenizer[]");
        iOException3.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException34 = new java.io.IOException("hi!");
        java.io.IOException iOException36 = new java.io.IOException("hi!");
        iOException34.addSuppressed((java.lang.Throwable) iOException36);
        java.io.IOException iOException39 = new java.io.IOException("hi!");
        java.io.IOException iOException41 = new java.io.IOException("hi!");
        iOException39.addSuppressed((java.lang.Throwable) iOException41);
        iOException36.addSuppressed((java.lang.Throwable) iOException41);
        java.io.IOException iOException44 = new java.io.IOException("hi!", (java.lang.Throwable) iOException41);
        java.io.IOException iOException47 = new java.io.IOException("hi!");
        java.io.IOException iOException49 = new java.io.IOException("hi!");
        iOException47.addSuppressed((java.lang.Throwable) iOException49);
        java.io.IOException iOException51 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException49);
        iOException41.addSuppressed((java.lang.Throwable) iOException49);
        java.util.Properties properties53 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray60 = strTokenizer59.getTokenArray();
        java.lang.String[] strArray61 = strTokenizer59.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendWithSeparators((java.lang.Object[]) strArray61, "4#4");
        char[] charArray66 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray66);
        java.lang.Object obj68 = properties53.getOrDefault((java.lang.Object) strBuilder57, (java.lang.Object) strTokenizer67);
        int int69 = properties53.size();
        int int70 = properties53.size();
        java.io.IOException iOException71 = new java.io.IOException();
        java.lang.Throwable[] throwableArray72 = iOException71.getSuppressed();
        boolean boolean73 = properties53.equals((java.lang.Object) iOException71);
        java.io.IOException iOException74 = new java.io.IOException((java.lang.Throwable) iOException71);
        java.io.IOException iOException75 = new java.io.IOException((java.lang.Throwable) iOException71);
        iOException41.addSuppressed((java.lang.Throwable) iOException75);
        java.io.IOException iOException79 = new java.io.IOException();
        java.lang.Throwable[] throwableArray80 = iOException79.getSuppressed();
        java.lang.Throwable[] throwableArray81 = iOException79.getSuppressed();
        java.io.IOException iOException82 = new java.io.IOException("########", (java.lang.Throwable) iOException79);
        java.io.IOException iOException83 = new java.io.IOException((java.lang.Throwable) iOException79);
        java.io.IOException iOException84 = new java.io.IOException((java.lang.Throwable) iOException79);
        java.io.IOException iOException85 = new java.io.IOException("####\000\000\000\000\000\000\000\000\000\000", (java.lang.Throwable) iOException79);
        iOException75.addSuppressed((java.lang.Throwable) iOException85);
        iOException3.addSuppressed((java.lang.Throwable) iOException75);
        java.io.IOException iOException88 = new java.io.IOException("100.0\n 116.0\n", (java.lang.Throwable) iOException3);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(wildcardEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(throwableArray81);
    }

    @Test
    public void test08707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08707");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray11 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        int int14 = strTokenizer13.size();
        boolean boolean15 = strTokenizer13.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer13.setIgnoredMatcher(strMatcher16);
        int int19 = strBuilder3.indexOf(strMatcher16, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.deleteAll("StrTokenizer[]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence24 = strBuilder3.subSequence(75, 57);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 57");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test08708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08708");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.clear();
        int int12 = strBuilder11.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader20 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        int int23 = strBuilder22.capacity();
        java.lang.StringBuffer stringBuffer24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(stringBuffer24, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.insert(1, (double) 32);
        int int31 = strBuilder22.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder22.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder21.append(strBuilder22);
        boolean boolean38 = strBuilder21.contains('\000');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 32 + "'", int31 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test08709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08709");
        java.io.IOException iOException1 = new java.io.IOException("hi!");
        java.io.IOException iOException3 = new java.io.IOException("hi!");
        iOException1.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException6 = new java.io.IOException("hi!");
        java.io.IOException iOException8 = new java.io.IOException("hi!");
        iOException6.addSuppressed((java.lang.Throwable) iOException8);
        iOException3.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.lang.String str12 = iOException3.toString();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "java.io.IOException: hi!" + "'", str12, "java.io.IOException: hi!");
    }

    @Test
    public void test08710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08710");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.deleteAll("StrTokenizer[]");
        int int28 = strBuilder26.lastIndexOf('#');
        char[] charArray33 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        int int36 = strTokenizer35.size();
        boolean boolean37 = strTokenizer35.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer35.setIgnoredMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder26.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder26.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder26.setNullText("{\n36.0\n=StrTokenizer[not tokenized yet], =0.23\n-1}");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test08711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08711");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("\n32.0java.io.IOException: hi!101\nStrTokenizer[35.0]");
    }

    @Test
    public void test08712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08712");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset("");
        java.lang.String str5 = strTokenizer4.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        int int16 = strBuilder15.capacity();
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(stringBuffer17, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int22 = strBuilder20.lastIndexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.replaceFirst(strMatcher21, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer4.setIgnoredMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setIgnoredChar('4');
        boolean boolean28 = strTokenizer27.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = strTokenizer27.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test08713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08713");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        char[] charArray18 = strBuilder14.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "");
        boolean boolean21 = strTokenizer20.hasNext();
        boolean boolean22 = strTokenizer20.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator("hi!", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.setNullText("0.0100\n");
        java.io.IOException iOException31 = new java.io.IOException("hi!");
        java.io.IOException iOException33 = new java.io.IOException("hi!");
        iOException31.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException35 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException33);
        java.lang.Throwable[] throwableArray36 = iOException35.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder23.appendWithSeparators((java.lang.Object[]) throwableArray36, "\n32.0java.io.IOException: hi!116\n\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append(37);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test08714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08714");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("0\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setEmptyTokenAsNull(true);
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test08715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08715");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.clear();
        int int12 = strBuilder11.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader20 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.replaceFirst("\n32.0", "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder11.appendSeparator("#\n4#44#443.0", "#");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder11.trim();
        java.io.Reader reader29 = strBuilder11.asReader();
        int int30 = reader29.read();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 35 + "'", int30 == 35);
    }

    @Test
    public void test08716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08716");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "h");
        int int37 = strTokenizer33.nextIndex();
        boolean boolean38 = properties0.containsValue((java.lang.Object) strTokenizer33);
        java.util.Set<java.lang.Object> objSet39 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "");
        char[] charArray44 = strBuilder40.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setEmptyTokenAsNull(false);
        java.lang.Object obj50 = properties0.get((java.lang.Object) false);
        properties0.clear();
        java.util.Properties properties52 = new java.util.Properties();
        int int53 = properties52.size();
        boolean boolean55 = properties52.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties52.entrySet();
        java.lang.Object obj57 = properties52.clone();
        java.util.Collection<java.lang.Object> objCollection58 = properties52.values();
        java.lang.Object obj59 = properties0.get((java.lang.Object) properties52);
        java.util.Enumeration<?> wildcardEnumeration60 = properties0.propertyNames();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "{}");
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(wildcardEnumeration60);
    }

    @Test
    public void test08717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08717");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        boolean boolean13 = strBuilder10.contains("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.delete(0, 0);
        java.lang.String str18 = strBuilder17.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(false);
        char[] charArray27 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        int int30 = strTokenizer29.size();
        boolean boolean31 = strTokenizer29.hasNext();
        java.util.List<java.lang.String> strList32 = strTokenizer29.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "");
        char[] charArray37 = strBuilder33.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        boolean boolean41 = strList32.equals((java.lang.Object) charArray37);
        char[] charArray46 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, ' ');
        int int49 = strTokenizer48.size();
        boolean boolean50 = strTokenizer48.hasNext();
        java.util.List<java.lang.String> strList51 = strTokenizer48.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        int int53 = strBuilder52.capacity();
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.appendln(stringBuffer54, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.insert(1, (double) 32);
        java.lang.String str62 = strBuilder52.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder52.insert(1, '#');
        boolean boolean66 = strList51.equals((java.lang.Object) strBuilder52);
        boolean boolean67 = strList32.containsAll((java.util.Collection<java.lang.String>) strList51);
        char[] charArray72 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, ' ');
        int int75 = strTokenizer74.size();
        boolean boolean76 = strTokenizer74.hasNext();
        java.util.List<java.lang.String> strList77 = strTokenizer74.getTokenList();
        java.lang.String[] strArray81 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        boolean boolean84 = strList77.addAll((java.util.Collection<java.lang.String>) strList82);
        boolean boolean85 = strList51.containsAll((java.util.Collection<java.lang.String>) strList82);
        char[] charArray90 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray90, ' ');
        java.lang.String str93 = strTokenizer92.next();
        int int94 = strTokenizer92.previousIndex();
        boolean boolean95 = strList51.contains((java.lang.Object) int94);
        java.lang.Object[] objArray96 = strList51.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder22.appendAll(objArray96);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 32 + "'", int53 == 32);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "\n32.0" + "'", str62, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[ , 4, #, 4]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "4#4" + "'", str93, "4#4");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[4#4]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[4#4]");
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test08718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08718");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendSeparator("true\n###################################\n32.0", (int) 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNewLine();
        int int19 = strBuilder17.indexOf("\n36.0\n\n32.0");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test08719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08719");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(" 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("-1", "100.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("not tokenized yet]", "java.io.IOException: false");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray14 = strTokenizer13.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.appendAll((java.lang.Object[]) strArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "");
        char[] charArray23 = strBuilder19.toCharArray();
        char[] charArray24 = strBuilder16.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        char[] charArray26 = strBuilder8.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.append('a');
        int int45 = strBuilder38.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        boolean boolean55 = strBuilder46.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder46.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.clear();
        int int58 = strBuilder57.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder38.append(strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        int int62 = strBuilder61.capacity();
        java.lang.StringBuffer stringBuffer63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(stringBuffer63, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder61.insert(1, (double) 32);
        java.lang.String str71 = strBuilder61.rightString((int) ' ');
        boolean boolean73 = strBuilder61.startsWith("");
        char[] charArray74 = strBuilder61.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder59.insert((int) (short) 0, charArray74);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("l");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceFirst("", "");
        char[] charArray82 = strBuilder78.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, "");
        boolean boolean85 = strTokenizer84.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer84.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, strMatcher77, strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer36.setTrimmerMatcher(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder7.replaceAll(strMatcher77, "-1");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder7.appendSeparator("1\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder7.deleteFirst('#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder7.insert(32, "true\n###################################");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 32 + "'", int58 == 32);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 32 + "'", int62 == 32);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "\n32.0" + "'", str71, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test08720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08720");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray3 = strTokenizer2.getTokenArray();
        java.lang.String[] strArray4 = strTokenizer2.getTokenArray();
        boolean boolean5 = strTokenizer2.hasNext();
        int int6 = strTokenizer2.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer2.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher7);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setIgnoredMatcher(strMatcher9);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer10);
    }

    @Test
    public void test08721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08721");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append((double) 10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceAll("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        char[] charArray20 = strBuilder16.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendln(charArray20);
        char[] charArray22 = strBuilder3.getChars(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceAll(strMatcher37, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "10.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "10.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[1, 0, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test08722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08722");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst('4', 'a');
        boolean boolean46 = properties0.remove((java.lang.Object) strBuilder33, (java.lang.Object) '4');
        java.lang.Object obj47 = properties0.clone();
        java.util.Properties properties48 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader57 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray63 = strTokenizer62.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.appendAll((java.lang.Object[]) strArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder58.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream68 = strBuilder58.codePoints();
        java.lang.Object obj69 = properties48.replace((java.lang.Object) reader57, (java.lang.Object) intStream68);
        reader57.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceFirst("", "");
        char[] charArray82 = strBuilder78.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder77.appendln(charArray82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray82);
        int int85 = reader57.read(charArray82);
        boolean boolean86 = reader57.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder87.replaceFirst("", "");
        char[] charArray91 = strBuilder87.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray91, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray91);
        int int95 = reader57.read(charArray91);
        properties0.load(reader57);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet97 = properties0.entrySet();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(intStream68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[]");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertNotNull(objEntrySet97);
    }

    @Test
    public void test08723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08723");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', '4');
        int int10 = strTokenizer9.previousIndex();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test08724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08724");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        char[] charArray17 = strBuilder9.getChars(charArray16);
        java.io.Reader reader18 = strBuilder9.asReader();
        java.lang.Object obj19 = properties0.remove((java.lang.Object) strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        int int21 = strBuilder20.capacity();
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(stringBuffer22, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.appendln((int) (byte) 0);
        java.io.Writer writer28 = strBuilder27.asWriter();
        java.io.IOException iOException29 = new java.io.IOException();
        java.lang.Throwable[] throwableArray30 = iOException29.getSuppressed();
        java.lang.Throwable[] throwableArray31 = iOException29.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendWithSeparators((java.lang.Object[]) throwableArray31, "1");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.setNullText("97\nhi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder27.appendln("32.0");
        java.util.Properties properties38 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray45 = strTokenizer44.getTokenArray();
        java.lang.String[] strArray46 = strTokenizer44.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendWithSeparators((java.lang.Object[]) strArray46, "4#4");
        char[] charArray51 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray51);
        java.lang.Object obj53 = properties38.getOrDefault((java.lang.Object) strBuilder42, (java.lang.Object) strTokenizer52);
        int int54 = properties38.size();
        int int55 = properties38.size();
        java.util.Set<java.lang.String> strSet56 = properties38.stringPropertyNames();
        java.lang.Object obj57 = properties0.replace((java.lang.Object) strBuilder37, (java.lang.Object) strSet56);
        java.util.Set<java.lang.String> strSet58 = properties0.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(strSet58);
    }

    @Test
    public void test08725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08725");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        long long23 = reader9.skip(0L);
        reader9.close();
        boolean boolean25 = reader9.markSupported();
        long long27 = reader9.skip((long) 44);
        reader9.close();
        boolean boolean29 = reader9.markSupported();
        boolean boolean30 = reader9.markSupported();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test08726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08726");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        int int5 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.append((int) (short) 0);
        boolean boolean9 = strBuilder7.contains('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.deleteAll("java.io.IOException: hi!");
        java.io.Writer writer12 = strBuilder11.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendSeparator('1', '9');
        boolean boolean17 = strBuilder11.contains('$');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(writer12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test08727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08727");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer6, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.replace(0, 74, "\n32.0java.io.IOException: hi!StrTokenizer[4#4]\ntrue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("\n100.0\n", "\n\000\n");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test08728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08728");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.insert(1, (double) 32);
        java.lang.String str26 = strBuilder16.rightString((int) ' ');
        boolean boolean28 = strBuilder16.startsWith("");
        char[] charArray29 = strBuilder16.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray29);
        writer11.write(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setDelimiterString("10.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer33.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setEmptyTokenAsNull(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n32.0" + "'", str26, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
    }

    @Test
    public void test08729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08729");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.keys();
        char[] charArray8 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, ' ');
        int int11 = strTokenizer10.size();
        boolean boolean12 = strTokenizer10.hasNext();
        java.util.List<java.lang.String> strList13 = strTokenizer10.getTokenList();
        java.lang.String[] strArray17 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        boolean boolean20 = strList13.addAll((java.util.Collection<java.lang.String>) strList18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray23 = strTokenizer22.getTokenArray();
        java.lang.String[] strArray24 = strTokenizer22.getTokenArray();
        boolean boolean25 = strTokenizer22.hasNext();
        int int26 = strTokenizer22.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer22.getQuoteMatcher();
        java.util.List<java.lang.String> strList28 = strTokenizer22.getTokenList();
        boolean boolean29 = strList13.retainAll((java.util.Collection<java.lang.String>) strList28);
        char[] charArray34 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        int int37 = strTokenizer36.size();
        boolean boolean38 = strTokenizer36.hasNext();
        java.util.List<java.lang.String> strList39 = strTokenizer36.getTokenList();
        java.lang.String[] strArray43 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        boolean boolean46 = strList39.addAll((java.util.Collection<java.lang.String>) strList44);
        java.util.Spliterator<java.lang.String> strSpliterator47 = strList44.spliterator();
        int int48 = strList44.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int52 = strList44.lastIndexOf((java.lang.Object) strTokenizer51);
        boolean boolean53 = strList13.removeAll((java.util.Collection<java.lang.String>) strList44);
        java.util.stream.Stream<java.lang.String> strStream54 = strList44.parallelStream();
        boolean boolean55 = properties0.contains((java.lang.Object) strStream54);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strSpliterator47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3 + "'", int48 == 3);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test08730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08730");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (byte) 1, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendln((long) (-1));
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strBuilder8.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoreEmptyTokens(false);
        java.lang.String str15 = strTokenizer12.previousToken();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer12.add("gggggggg26");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test08731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08731");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteAll("");
        java.lang.String str10 = strBuilder8.rightString((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendln(0.0f);
        int int13 = strBuilder12.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.insert(0, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("35.0\n");
        java.lang.String[] strArray19 = strTokenizer18.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.appendAll((java.lang.Object[]) strArray19);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4#4" + "'", str10, "4#4");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 14 + "'", int13 == 14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test08732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08732");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        boolean boolean12 = strBuilder0.startsWith("");
        char[] charArray13 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.ensureCapacity((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.replaceAll('a', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.appendSeparator("t", (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder15.setNullText("rg.apache.");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test08733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08733");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean2 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray10 = strTokenizer9.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.appendAll((java.lang.Object[]) strArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray20 = strTokenizer19.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendAll((java.lang.Object[]) strArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder5.appendln(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        java.io.Writer writer35 = strBuilder34.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "");
        char[] charArray47 = strBuilder43.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendln(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        writer35.write(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder27.append(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer4.reset(charArray47);
        java.lang.String str53 = strTokenizer52.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer54.setDelimiterString("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getQuoteMatcher();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str58 = strTokenizer56.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(writer35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
    }

    @Test
    public void test08734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08734");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.insert(1, (double) 32);
        java.lang.String str39 = strBuilder29.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.insert(1, '#');
        boolean boolean43 = strList28.equals((java.lang.Object) strBuilder29);
        boolean boolean44 = strList9.containsAll((java.util.Collection<java.lang.String>) strList28);
        char[] charArray49 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        int int52 = strTokenizer51.size();
        boolean boolean53 = strTokenizer51.hasNext();
        java.util.List<java.lang.String> strList54 = strTokenizer51.getTokenList();
        java.lang.String[] strArray58 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        boolean boolean61 = strList54.addAll((java.util.Collection<java.lang.String>) strList59);
        boolean boolean62 = strList28.containsAll((java.util.Collection<java.lang.String>) strList59);
        char[] charArray67 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, ' ');
        int int70 = strTokenizer69.size();
        boolean boolean71 = strTokenizer69.hasNext();
        java.util.List<java.lang.String> strList72 = strTokenizer69.getTokenList();
        java.lang.String[] strArray76 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        boolean boolean79 = strList72.addAll((java.util.Collection<java.lang.String>) strList77);
        java.util.Spliterator<java.lang.String> strSpliterator80 = strList77.spliterator();
        int int81 = strList77.size();
        java.lang.String str83 = strList77.remove((int) (byte) 0);
        java.util.stream.Stream<java.lang.String> strStream84 = strList77.parallelStream();
        boolean boolean85 = strList59.retainAll((java.util.Collection<java.lang.String>) strList77);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str87 = strList59.remove(194);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 194, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n32.0" + "'", str39, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strSpliterator80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 3 + "'", int81 == 3);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "\n32.0" + "'", str83, "\n32.0");
        org.junit.Assert.assertNotNull(strStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test08735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08735");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        int int24 = strBuilder23.capacity();
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(stringBuffer25, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.insert(1, (double) 32);
        java.lang.String str33 = strBuilder23.rightString((int) ' ');
        boolean boolean35 = strBuilder23.startsWith("");
        char[] charArray36 = strBuilder23.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray36);
        boolean boolean38 = strBuilder22.contains(strMatcher37);
        boolean boolean40 = strBuilder22.contains("{");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder22.appendln((float) 'g');
        java.util.Properties properties43 = new java.util.Properties();
        int int44 = properties43.size();
        boolean boolean46 = properties43.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties47 = new java.util.Properties();
        int int48 = properties47.size();
        boolean boolean50 = properties47.containsKey((java.lang.Object) (-1.0f));
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "");
        char[] charArray59 = strBuilder55.toCharArray();
        char[] charArray60 = strBuilder52.getChars(charArray59);
        java.io.Reader reader61 = strBuilder52.asReader();
        java.lang.Object obj62 = properties43.remove((java.lang.Object) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder52.appendln((double) 200);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder52.append((long) 48);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder42.appendFixedWidthPadLeft((java.lang.Object) strBuilder52, (int) 'a', 's');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("100.0");
        java.lang.String str72 = strTokenizer71.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer71.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer76.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer74.setTrimmerMatcher(strMatcher77);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder42.appendAll((java.util.Iterator<java.lang.String>) strTokenizer78);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\n32.0" + "'", str33, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[]");
        org.junit.Assert.assertNotNull(reader61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "100.0" + "'", str72, "100.0");
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test08736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08736");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder2.lastIndexOf("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        int int6 = strBuilder5.capacity();
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(stringBuffer7, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder2.appendFixedWidthPadRight((java.lang.Object) strBuilder14, (int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder2.appendSeparator("", "0");
        java.lang.String str23 = strBuilder2.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test08737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08737");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln((double) '#');
        java.util.Properties properties6 = new java.util.Properties();
        int int7 = properties6.size();
        boolean boolean9 = properties6.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties10 = new java.util.Properties();
        int int11 = properties10.size();
        boolean boolean13 = properties10.containsKey((java.lang.Object) (-1.0f));
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        char[] charArray19 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        int int22 = strTokenizer21.size();
        boolean boolean23 = strTokenizer21.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer21.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "");
        java.lang.Object obj30 = properties6.putIfAbsent((java.lang.Object) strMatcher24, (java.lang.Object) strBuilder26);
        boolean boolean31 = properties6.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst('a', '4');
        char[] charArray43 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        int int46 = strTokenizer45.size();
        boolean boolean47 = strTokenizer45.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer45.setIgnoredMatcher(strMatcher48);
        int int51 = strBuilder35.indexOf(strMatcher48, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder35.deleteFirst("StrTokenizer[32.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        int int55 = strBuilder54.capacity();
        java.lang.StringBuffer stringBuffer56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(stringBuffer56, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder72.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln((double) '#');
        boolean boolean76 = strBuilder66.equals(strBuilder75);
        java.util.stream.IntStream intStream77 = strBuilder66.codePoints();
        java.util.Iterator<java.lang.String> strItor78 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder66.appendWithSeparators(strItor78, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder60.appendln(strBuilder80, 0, (int) (byte) 1);
        java.lang.Object obj87 = properties6.putIfAbsent((java.lang.Object) strBuilder53, (java.lang.Object) strBuilder86);
        int int90 = strBuilder86.indexOf("true\n###################################", 10);
        boolean boolean91 = strBuilder5.equals(strBuilder86);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder86.setLength(108);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(intStream77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test08738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08738");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((double) '#');
        boolean boolean22 = strBuilder12.equals(strBuilder21);
        java.util.stream.IntStream intStream23 = strBuilder12.codePoints();
        java.util.Iterator<java.lang.String> strItor24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder12.appendWithSeparators(strItor24, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder6.appendln(strBuilder26, 0, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendAll((java.lang.Object[]) strArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder33.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray48 = strTokenizer47.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendAll((java.lang.Object[]) strArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder33.appendln(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder32.replaceAll(strMatcher56, "#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.setNullText("########a4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendSeparator("97\n", 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.insert(7, "97\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = strBuilder64.substring(47);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test08739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08739");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("\n");
        int int17 = strBuilder14.lastIndexOf('4', 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.replaceAll("true\n", " -1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("97\nhi!StrTokenizer[]");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test08740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08740");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        java.lang.String[] strArray30 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        boolean boolean33 = strList26.addAll((java.util.Collection<java.lang.String>) strList31);
        java.util.Spliterator<java.lang.String> strSpliterator34 = strList31.spliterator();
        int int35 = strList31.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int39 = strList31.lastIndexOf((java.lang.Object) strTokenizer38);
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        int int43 = strBuilder42.capacity();
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(stringBuffer44, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(true);
        boolean boolean54 = strSubstitutor41.replaceIn(strBuilder51, (int) '$', 0);
        boolean boolean55 = strList40.equals((java.lang.Object) '$');
        boolean boolean56 = strList9.retainAll((java.util.Collection<java.lang.String>) strList40);
        java.util.stream.Stream<java.lang.String> strStream57 = strList9.stream();
        java.lang.Object[] objArray58 = strList9.toArray();
        strList9.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList62 = strList9.subList(1, 103);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 103");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strSpliterator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strStream57);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
    }

    @Test
    public void test08741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08741");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        char char10 = strBuilder8.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendAll((java.lang.Object[]) strArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        char[] charArray26 = strBuilder22.toCharArray();
        char[] charArray27 = strBuilder19.getChars(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        char[] charArray29 = strBuilder11.getChars(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer32.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder8.append((java.lang.Object) strTokenizer32);
        java.lang.String str36 = strTokenizer32.nextToken();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + char10 + "' != '" + '#' + "'", char10 == '#');
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test08742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08742");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst('a', '4');
        char[] charArray17 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, ' ');
        int int20 = strTokenizer19.size();
        boolean boolean21 = strTokenizer19.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer19.setIgnoredMatcher(strMatcher22);
        int int25 = strBuilder9.indexOf(strMatcher22, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.deleteFirst("StrTokenizer[32.0]");
        char[] charArray32 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, ' ');
        int int35 = strTokenizer34.size();
        boolean boolean36 = strTokenizer34.hasNext();
        java.util.List<java.lang.String> strList37 = strTokenizer34.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        char[] charArray42 = strBuilder38.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray42);
        boolean boolean46 = strList37.equals((java.lang.Object) charArray42);
        boolean boolean48 = strList37.add("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder27.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList37, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        int int52 = strBuilder51.capacity();
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(stringBuffer53, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.insert(1, (double) 32);
        java.util.Properties properties60 = new java.util.Properties();
        int int61 = properties60.size();
        boolean boolean63 = properties60.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "");
        char[] charArray68 = strBuilder64.toCharArray();
        boolean boolean69 = properties60.containsValue((java.lang.Object) charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder51.append(charArray68, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder27.append(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder76.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder77.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder77.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder77.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder27.append((java.lang.CharSequence) strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder5.appendFixedWidthPadLeft((java.lang.Object) strBuilder27, (int) (short) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder27.appendPadding(32, '\000');
        int int95 = strBuilder93.lastIndexOf('a');
        boolean boolean97 = strBuilder93.contains("##############################");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 32 + "'", int52 == 32);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test08743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08743");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        int int2 = strBuilder1.capacity();
        java.lang.StringBuffer stringBuffer3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln(stringBuffer3, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        boolean boolean13 = strSubstitutor0.replaceIn(strBuilder10, (int) '$', 0);
        int int16 = strBuilder10.indexOf(" #\n", (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.insert(5, (float) (byte) 0);
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties25 = new java.util.Properties();
        int int26 = properties25.size();
        boolean boolean28 = properties25.containsKey((java.lang.Object) (-1.0f));
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.util.Collection<java.lang.Object> objCollection30 = properties21.values();
        java.util.Set<java.lang.Object> objSet31 = properties21.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder19.insert(4, (java.lang.Object) objSet31);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader42 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray48 = strTokenizer47.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendAll((java.lang.Object[]) strArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream53 = strBuilder43.codePoints();
        java.lang.Object obj54 = properties33.replace((java.lang.Object) reader42, (java.lang.Object) intStream53);
        long long56 = reader42.skip(0L);
        boolean boolean57 = reader42.ready();
        reader42.close();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst("", "");
        char[] charArray72 = strBuilder68.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.appendln(charArray72);
        int int77 = strMatcher60.isMatch(charArray72, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray72);
        int int80 = reader42.read(charArray72);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder19.appendln(charArray72);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder19.appendNewLine();
        int int84 = strBuilder82.lastIndexOf('4');
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 32 + "'", int2 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(intStream53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test08744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08744");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "3.0");
    }

    @Test
    public void test08745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08745");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Set<java.lang.String> strSet17 = properties0.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('a', '4');
        java.io.Writer writer28 = strBuilder27.asWriter();
        properties20.store(writer28, "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        properties0.clear();
        int int33 = properties0.size();
        java.lang.Object obj34 = properties0.clone();
        boolean boolean35 = properties0.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test08746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08746");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer5, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer5.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setEmptyTokenAsNull(true);
        java.util.List<java.lang.String> strList13 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer10.setDelimiterString("false");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer10.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.setNullText("");
        char[] charArray24 = strBuilder23.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.insert(0, true);
        char[] charArray28 = strBuilder23.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer10.reset(charArray28);
        int int30 = strTokenizer10.nextIndex();
        int int31 = strTokenizer10.previousIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer10.set("\n0.1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "true");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "true");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[t, r, u, e]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test08747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08747");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst('4', 'a');
        boolean boolean46 = properties0.remove((java.lang.Object) strBuilder33, (java.lang.Object) '4');
        java.lang.Object obj47 = properties0.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties0.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        int int50 = strBuilder49.capacity();
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(stringBuffer51, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder49.insert(1, (double) 32);
        boolean boolean58 = strBuilder49.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder49.appendSeparator('a', ' ');
        boolean boolean62 = strBuilder61.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer68.reset("");
        java.lang.String str72 = strTokenizer71.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer71.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer71.getDelimiterMatcher();
        int int77 = strBuilder64.indexOf(strMatcher75, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder64.appendSeparator('e', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray87 = strTokenizer86.getTokenArray();
        java.lang.String[] strArray88 = strTokenizer86.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder84.appendWithSeparators((java.lang.Object[]) strArray88, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.deleteAll(strMatcher91);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder90.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder93.replaceAll("{}3.0", "");
        java.lang.Object obj97 = properties0.getOrDefault((java.lang.Object) strBuilder64, (java.lang.Object) "");
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder64.appendNull();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 32 + "'", int50 == 32);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertEquals("'" + obj97 + "' != '" + "" + "'", obj97, "");
        org.junit.Assert.assertNotNull(strBuilder98);
    }

    @Test
    public void test08748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08748");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset("");
        java.lang.Object obj5 = strTokenizer1.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer1.setEmptyTokenAsNull(false);
        java.lang.String str8 = strTokenizer7.previousToken();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test08749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08749");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        java.lang.String[] strArray30 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        boolean boolean33 = strList26.addAll((java.util.Collection<java.lang.String>) strList31);
        java.lang.String str35 = strList31.remove(0);
        boolean boolean36 = strList14.containsAll((java.util.Collection<java.lang.String>) strList31);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "");
        char[] charArray44 = strBuilder40.toCharArray();
        char[] charArray45 = strBuilder37.getChars(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        boolean boolean47 = strTokenizer46.hasPrevious();
        java.util.List<java.lang.String> strList48 = strTokenizer46.getTokenList();
        boolean boolean50 = strList48.add("StrTokenizer[not tokenized yet]");
        int int51 = strList48.size();
        strList48.clear();
        boolean boolean53 = strList14.addAll((java.util.Collection<java.lang.String>) strList48);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n32.0" + "'", str35, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test08750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08750");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Collection<java.lang.Object> objCollection16 = properties0.values();
        boolean boolean17 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties0.elements();
        java.lang.String str21 = properties0.getProperty("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000", "\na32.0");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\na32.0" + "'", str21, "\na32.0");
    }

    @Test
    public void test08751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08751");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        java.lang.Object obj3 = strTokenizer1.clone();
        java.lang.Object obj4 = strTokenizer1.clone();
        java.lang.String[] strArray5 = strTokenizer1.getTokenArray();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.set("StrTokenizer[\n32.0-1.0]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test08752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08752");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.clear();
        int int12 = strBuilder11.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder24.append(charArray31, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray42 = strTokenizer41.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendAll((java.lang.Object[]) strArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder37.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray52 = strTokenizer51.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendAll((java.lang.Object[]) strArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder37.appendln(strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst("", "");
        char[] charArray66 = strBuilder62.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.appendln(charArray66);
        boolean boolean68 = strBuilder37.equals((java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getDelimiterMatcher();
        int int73 = strBuilder37.indexOf(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder11.append((java.lang.Object) strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder11.appendSeparator('g', (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder11.appendln(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[]");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test08753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08753");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("\n");
        java.io.Reader reader15 = strBuilder14.asReader();
        java.io.Writer writer16 = strBuilder14.asWriter();
        // The following exception was thrown during execution in test generation
        try {
            writer16.write("#\n0.0", 57, 62);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(writer16);
    }

    @Test
    public void test08754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08754");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean2 = strTokenizer1.hasNext();
        char[] charArray7 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, ' ');
        int int10 = strTokenizer9.size();
        boolean boolean11 = strTokenizer9.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer9.setIgnoredMatcher(strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer1.setDelimiterMatcher(strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.reset("{\n36.0\n=StrTokenizer[not tokenized yet]}");
        char[] charArray17 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer14.reset(charArray17);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
    }

    @Test
    public void test08755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08755");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("\n32.0java.io.IOException: hi!116\n\n\n");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
    }

    @Test
    public void test08756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08756");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        char[] charArray6 = strBuilder5.toCharArray();
        java.lang.String str7 = strBuilder5.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        char[] charArray24 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder17.append(charArray24, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        int int31 = strBuilder30.capacity();
        java.lang.StringBuffer stringBuffer32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendln(stringBuffer32, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder30.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder30.appendSeparator("java.io.IOException: hi!");
        boolean boolean41 = strBuilder17.equals((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        int int50 = strBuilder49.capacity();
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(stringBuffer51, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int56 = strBuilder54.lastIndexOf(strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder45.replaceFirst(strMatcher55, "hi!");
        int int59 = strBuilder40.lastIndexOf(strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder40.appendln("{StrTokenizer[not tokenized yet]=}");
        boolean boolean62 = strBuilder5.equals(strBuilder61);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "true\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "true\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[t, r, u, e, \n]");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 32 + "'", int31 == 32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 32 + "'", int50 == 32);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test08757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08757");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        int int5 = strBuilder1.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceFirst('$', 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendSeparator("true\n###################################org.apache.co", 93);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.insert(53, (int) '\n');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test08758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08758");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray11 = strTokenizer10.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendAll((java.lang.Object[]) strArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendAll((java.lang.Object[]) strArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder6.appendln(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', '4');
        java.io.Writer writer36 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        char[] charArray48 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendln(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        writer36.write(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.append(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int56 = strBuilder28.indexOf(strMatcher54, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder3.deleteAll(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.insert(0, (long) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln((int) (short) 100);
        int int67 = strBuilder64.lastIndexOf(" ", 116);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.appendSeparator("java.io.IOException: {\ntrue\n=1.0}", "97\nhi!StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder64.append((float) 4);
        boolean boolean74 = strBuilder72.contains("\n32.0 ");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.minimizeCapacity();
        int int77 = strBuilder75.lastIndexOf("0.0100\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.insert(158, (float) 126);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 158");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test08759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08759");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer5, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer5.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setEmptyTokenAsNull(true);
        java.util.List<java.lang.String> strList13 = strTokenizer10.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer10.setDelimiterString("false");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer10.setIgnoredChar('4');
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        boolean boolean20 = strList18.add("");
        java.util.ListIterator<java.lang.String> strItor21 = strList18.listIterator();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strItor21);
    }

    @Test
    public void test08760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08760");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.appendln((double) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll('a');
        char[] charArray19 = strBuilder14.toCharArray((int) (byte) 1, 53);
        java.util.stream.IntStream intStream20 = strBuilder14.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) strBuilder30, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder21.lastIndexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln((double) '#');
        boolean boolean51 = strBuilder41.equals(strBuilder50);
        java.util.stream.IntStream intStream52 = strBuilder41.codePoints();
        java.util.Iterator<java.lang.String> strItor53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder41.appendWithSeparators(strItor53, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst(' ', ' ');
        int int60 = strBuilder58.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.insert((int) '$', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder21.append(strBuilder63, (int) '\000', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder14.appendln(strBuilder66);
        java.io.Writer writer68 = strBuilder67.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln('#');
        int int76 = strBuilder72.lastIndexOf(" 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder72.appendSeparator('g', (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder67.appendFixedWidthPadRight((java.lang.Object) 'a', (int) (byte) 1, 'e');
        java.lang.String str83 = strBuilder67.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "36.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "36.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[3, 6, ., 0, \n]");
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(intStream52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(writer68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test08761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08761");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("4#4StrTokenizer[not tokenized yet]\ne");
    }

    @Test
    public void test08762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08762");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        java.lang.String str4 = strBuilder0.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendln((float) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.setNullText(" ");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.trim();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test08763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08763");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset("");
        java.lang.String str5 = strTokenizer4.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        int int16 = strBuilder15.capacity();
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(stringBuffer17, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int22 = strBuilder20.lastIndexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.replaceFirst(strMatcher21, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer4.setIgnoredMatcher(strMatcher21);
        java.lang.String str26 = strTokenizer4.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer4.setDelimiterString("\ntrue\n52.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.setIgnoredChar('s');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
    }

    @Test
    public void test08764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08764");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 't', 'a');
        java.lang.Object obj13 = strTokenizer12.clone();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test08765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08765");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        java.io.Reader reader9 = strBuilder0.asReader();
        boolean boolean10 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        int int15 = strBuilder11.indexOf("");
        int int18 = strBuilder11.lastIndexOf('#', (int) (byte) 0);
        boolean boolean20 = strBuilder11.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.appendAll((java.util.Iterator<java.lang.String>) strTokenizer21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder11.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder11.appendln((int) (byte) 100);
        char[] charArray29 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '#');
        char[] charArray32 = strBuilder0.getChars(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        boolean boolean34 = strTokenizer33.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setQuoteChar(' ');
        int int37 = strTokenizer33.nextIndex();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test08766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08766");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        int int19 = strBuilder18.capacity();
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(stringBuffer20, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.insert(1, (double) 32);
        java.util.Properties properties27 = new java.util.Properties();
        int int28 = properties27.size();
        boolean boolean30 = properties27.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        char[] charArray35 = strBuilder31.toCharArray();
        boolean boolean36 = properties27.containsValue((java.lang.Object) charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder18.append(charArray35, (int) (byte) 0, 0);
        int int40 = reader16.read(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, "{\ntrue\n=1.0}");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '\n');
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test08767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08767");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        long long23 = reader9.skip(0L);
        reader9.close();
        boolean boolean25 = reader9.markSupported();
        long long27 = reader9.skip((long) 'a');
        reader9.close();
        int int29 = reader9.read();
        boolean boolean30 = reader9.markSupported();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1L + "'", long27 == 1L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test08768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08768");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendSeparator("{}");
        java.io.Writer writer8 = strBuilder5.asWriter();
        writer8.close();
        writer8.write("0.0true");
        char[] charArray12 = null;
        writer8.write(charArray12);
        writer8.close();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer8);
    }

    @Test
    public void test08769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08769");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Set<java.lang.String> strSet17 = properties0.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "");
        java.io.Reader reader22 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst(' ', '4');
        java.io.Reader reader28 = strBuilder27.asReader();
        boolean boolean29 = reader28.markSupported();
        int int30 = reader28.read();
        properties0.load(reader28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln('#');
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.append(stringBuffer38, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder35.appendSeparator('$', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder35.append((float) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder35.deleteAll("t");
        int int55 = strBuilder53.indexOf("tue");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendSeparator('e', (int) (byte) 0);
        java.lang.Object obj59 = properties0.remove((java.lang.Object) strBuilder53);
        java.util.Properties properties61 = new java.util.Properties();
        int int62 = properties61.size();
        boolean boolean64 = properties61.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties65 = new java.util.Properties();
        int int66 = properties65.size();
        boolean boolean68 = properties65.containsKey((java.lang.Object) (-1.0f));
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        char[] charArray74 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, ' ');
        int int77 = strTokenizer76.size();
        boolean boolean78 = strTokenizer76.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer76.setIgnoredMatcher(strMatcher79);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceFirst("", "");
        java.lang.Object obj85 = properties61.putIfAbsent((java.lang.Object) strMatcher79, (java.lang.Object) strBuilder81);
        java.util.Set<java.lang.Object> objSet86 = properties61.keySet();
        java.util.Set<java.lang.Object> objSet87 = properties61.keySet();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder53.insert(40, (java.lang.Object) objSet87);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 40");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objSet86);
        org.junit.Assert.assertNotNull(objSet87);
    }

    @Test
    public void test08770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08770");
        char[] charArray2 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString("########a4\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterChar('a');
        boolean boolean8 = strTokenizer5.hasNext();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test08771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08771");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        int int22 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendAll((java.lang.Object[]) strArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.ensureCapacity((int) (short) 10);
        boolean boolean36 = strBuilder29.equals((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.setNullText("java.io.IOException");
        java.io.Writer writer39 = strBuilder35.asWriter();
        char[] charArray42 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        java.lang.String str46 = strTokenizer43.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer43.setDelimiterString("StrTokenizer[ 4#4]");
        int int49 = strTokenizer48.nextIndex();
        java.lang.Object obj50 = properties0.put((java.lang.Object) writer39, (java.lang.Object) strTokenizer48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        boolean boolean55 = properties53.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties53.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("");
        int int61 = strBuilder57.indexOf("");
        int int64 = strBuilder57.lastIndexOf('#', (int) (byte) 0);
        boolean boolean66 = strBuilder57.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder57.appendAll((java.util.Iterator<java.lang.String>) strTokenizer67);
        boolean boolean69 = strTokenizer67.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer67.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("{}");
        java.lang.Object obj73 = properties53.replace((java.lang.Object) strTokenizer67, (java.lang.Object) "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder83.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder85.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.appendln((double) '#');
        boolean boolean89 = strBuilder79.equals(strBuilder88);
        java.util.stream.IntStream intStream90 = strBuilder79.codePoints();
        java.util.Iterator<java.lang.String> strItor91 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder79.appendWithSeparators(strItor91, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder79.append((long) 3);
        boolean boolean96 = properties53.equals((java.lang.Object) strBuilder79);
        java.util.Enumeration<java.lang.Object> objEnumeration97 = properties53.elements();
        java.lang.Object obj98 = properties0.putIfAbsent((java.lang.Object) "", (java.lang.Object) objEnumeration97);
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(writer39);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "a4" + "'", str46, "a4");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(intStream90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(objEnumeration97);
        org.junit.Assert.assertNull(obj98);
    }

    @Test
    public void test08772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08772");
        char[] charArray2 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString("hi!");
        boolean boolean6 = strTokenizer3.hasNext();
        boolean boolean7 = strTokenizer3.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer3.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setIgnoredChar('e');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
    }

    @Test
    public void test08773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08773");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.deleteAll('4');
        boolean boolean51 = strBuilder3.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder3.appendSeparator('e', 'a');
        java.lang.StringBuffer stringBuffer55 = strBuilder54.toStringBuffer();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "1\ne");
    }

    @Test
    public void test08774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08774");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        java.util.Collection<java.lang.Object> objCollection22 = properties0.values();
        properties0.clear();
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream24, "\n32.0a10 true\n###################################\n32.0-1.0aaaa");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objCollection22);
    }

    @Test
    public void test08775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08775");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        int int5 = strBuilder4.capacity();
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(stringBuffer6, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int11 = strBuilder9.lastIndexOf(strMatcher10);
        boolean boolean12 = strBuilder2.equalsIgnoreCase(strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.insert((int) (byte) 0, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder2.deleteAll('t');
        java.lang.String str19 = strBuilder2.leftString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder2.appendSeparator("\n#\n\n", "a\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendFixedWidthPadRight(41, (int) 'g', '1');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1" + "'", str19, "1");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test08776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08776");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.replaceFirst("StrTokenizer[not tokenized yet]", "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.insert((int) (short) 1, (float) (-1));
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append(stringBuffer21, (-1), 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator("{}3.0", "1001\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.setCharAt(0, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder24.appendln(strBuilder39);
        java.lang.String str41 = strBuilder40.getNullText();
        int int44 = strBuilder40.lastIndexOf("97\n", 3);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test08777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08777");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Collection<java.lang.Object> objCollection16 = properties0.values();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) strBuilder30, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder21.lastIndexOf(strMatcher34);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setIgnoredMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder21.deleteFirst(strMatcher45);
        java.lang.Object obj48 = properties0.getOrDefault((java.lang.Object) strTokenizer20, (java.lang.Object) strBuilder47);
        java.lang.String str49 = strBuilder47.getNullText();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "");
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test08778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08778");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.util.Set<java.lang.Object> objSet25 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append('a');
        int int34 = strBuilder27.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        int int36 = strBuilder35.capacity();
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendln(stringBuffer37, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.insert(1, (double) 32);
        boolean boolean44 = strBuilder35.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder35.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.clear();
        int int47 = strBuilder46.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder27.append(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.setNullText("");
        java.lang.Object obj55 = properties0.getOrDefault((java.lang.Object) strBuilder46, (java.lang.Object) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder46.deleteFirst("0.0100\n");
        int int60 = strBuilder57.lastIndexOf("[\n32.0, , , StrTokenizer[]]", (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 32 + "'", int36 == 32);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test08779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08779");
        char[] charArray2 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString("hi!");
        int int6 = strTokenizer5.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.setDelimiterChar('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.setLength(32);
        java.io.Writer writer20 = strBuilder19.asWriter();
        writer20.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.append((float) '4');
        java.io.Writer writer37 = writer20.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll("");
        java.io.Writer writer47 = writer20.append((java.lang.CharSequence) strBuilder44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "");
        char[] charArray59 = strBuilder55.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendln(charArray59);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray59);
        writer20.write(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer8.reset(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, " 4#4");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str68 = strTokenizer67.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(writer20);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(writer47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer65);
    }

    @Test
    public void test08780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08780");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        int int5 = strBuilder4.capacity();
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(stringBuffer6, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int11 = strBuilder9.lastIndexOf(strMatcher10);
        boolean boolean12 = strBuilder2.equalsIgnoreCase(strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray18 = strTokenizer17.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendAll((java.lang.Object[]) strArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer23 = strBuilder22.toStringBuffer();
        char[] charArray28 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        int int31 = strTokenizer30.size();
        boolean boolean32 = strTokenizer30.hasNext();
        java.util.List<java.lang.String> strList33 = strTokenizer30.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "");
        char[] charArray38 = strBuilder34.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        boolean boolean42 = strList33.equals((java.lang.Object) charArray38);
        char[] charArray47 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        int int50 = strTokenizer49.size();
        boolean boolean51 = strTokenizer49.hasNext();
        java.util.List<java.lang.String> strList52 = strTokenizer49.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        int int54 = strBuilder53.capacity();
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendln(stringBuffer55, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder53.insert(1, (double) 32);
        java.lang.String str63 = strBuilder53.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder53.insert(1, '#');
        boolean boolean67 = strList52.equals((java.lang.Object) strBuilder53);
        boolean boolean68 = strList33.containsAll((java.util.Collection<java.lang.String>) strList52);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder22.appendAll((java.lang.Iterable<java.lang.String>) strList52);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int72 = strList52.lastIndexOf((java.lang.Object) "hi!");
        java.util.Iterator<java.lang.String> strItor73 = strList52.iterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder2.appendAll((java.lang.Iterable<java.lang.String>) strList52);
        java.lang.Object obj75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.appendFixedWidthPadLeft(obj75, 0, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.appendln('#');
        java.lang.StringBuffer stringBuffer87 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder84.append(stringBuffer87, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder84.deleteFirst("hi!");
        char[] charArray93 = strBuilder84.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer80.reset(charArray93);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray93);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder78.append(charArray93);
        java.lang.String str97 = strBuilder78.toString();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(stringBuffer23);
        org.junit.Assert.assertEquals(stringBuffer23.toString(), "");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 32 + "'", int54 == 32);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\n32.0" + "'", str63, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strItor73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "4#4#\n" + "'", str97, "4#4#\n");
    }

    @Test
    public void test08781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08781");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder33.lastIndexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.insert((int) (short) 1, 32);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        boolean boolean42 = properties39.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties39.entrySet();
        java.lang.Object obj44 = properties0.putIfAbsent((java.lang.Object) strBuilder38, (java.lang.Object) objEntrySet43);
        boolean boolean46 = strBuilder38.startsWith("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder38.setNullText("java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder38.reverse();
        int int50 = strBuilder38.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3 + "'", int50 == 3);
    }

    @Test
    public void test08782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08782");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln((double) '#');
        char[] charArray6 = strBuilder3.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, 'a', 'o');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "35.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "35.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[3, 5, ., 0, \n]");
        org.junit.Assert.assertNotNull(strTokenizer7);
    }

    @Test
    public void test08783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08783");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append((double) 10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceAll("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        char[] charArray20 = strBuilder16.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendln(charArray20);
        char[] charArray22 = strBuilder3.getChars(charArray20);
        int int23 = strBuilder3.length();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "10.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "10.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[1, 0, ., 0]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
    }

    @Test
    public void test08784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08784");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("-1.0tttttttt#");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test08785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08785");
        java.io.IOException iOException2 = new java.io.IOException();
        java.lang.Throwable[] throwableArray3 = iOException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException("########", (java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException8 = new java.io.IOException("####\000\000\000\000\000\000\000\000\000\000", (java.lang.Throwable) iOException2);
        java.io.IOException iOException10 = new java.io.IOException("{\ntrue\n=1.0}");
        java.io.IOException iOException13 = new java.io.IOException("hi!");
        java.io.IOException iOException15 = new java.io.IOException("hi!");
        iOException13.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException18 = new java.io.IOException("hi!");
        java.io.IOException iOException20 = new java.io.IOException("hi!");
        iOException18.addSuppressed((java.lang.Throwable) iOException20);
        iOException15.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException24 = new java.io.IOException("hi!");
        iOException15.addSuppressed((java.lang.Throwable) iOException24);
        java.lang.Throwable[] throwableArray26 = iOException24.getSuppressed();
        java.io.IOException iOException27 = new java.io.IOException("\n32.0-1.0", (java.lang.Throwable) iOException24);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException27);
        iOException10.addSuppressed((java.lang.Throwable) iOException27);
        iOException2.addSuppressed((java.lang.Throwable) iOException10);
        java.lang.String str31 = iOException2.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "java.io.IOException" + "'", str31, "java.io.IOException");
    }

    @Test
    public void test08786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08786");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        java.util.Collection<java.lang.Object> objCollection18 = properties1.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', '4');
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        java.io.Writer writer35 = strBuilder34.asWriter();
        properties27.store(writer35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        java.io.Reader reader42 = strBuilder38.asReader();
        properties27.load(reader42);
        boolean boolean44 = reader42.ready();
        int int45 = reader42.read();
        java.lang.Object obj46 = properties1.getOrDefault((java.lang.Object) 'a', (java.lang.Object) int45);
        java.lang.String str48 = properties1.getProperty("");
        java.lang.Object obj49 = properties1.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        int int51 = strBuilder50.capacity();
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(stringBuffer52, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder50.setLength(32);
        java.io.Writer writer61 = strBuilder60.asWriter();
        java.util.Properties properties62 = new java.util.Properties();
        int int63 = properties62.size();
        boolean boolean65 = properties62.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties66 = new java.util.Properties();
        int int67 = properties66.size();
        boolean boolean69 = properties66.containsKey((java.lang.Object) (-1.0f));
        properties62.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        char[] charArray75 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, ' ');
        int int78 = strTokenizer77.size();
        boolean boolean79 = strTokenizer77.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer77.setIgnoredMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.replaceFirst("", "");
        java.lang.Object obj86 = properties62.putIfAbsent((java.lang.Object) strMatcher80, (java.lang.Object) strBuilder82);
        java.util.stream.IntStream intStream87 = strBuilder82.codePoints();
        java.io.Writer writer88 = writer61.append((java.lang.CharSequence) strBuilder82);
        boolean boolean89 = properties1.containsValue((java.lang.Object) writer88);
        java.lang.Object obj90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj91 = properties1.get(obj90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(writer35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (-1) + "'", obj46, (-1));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "{}");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 32 + "'", int51 == 32);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(writer61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(intStream87);
        org.junit.Assert.assertNotNull(writer88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test08787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08787");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("###", 'a', 'e');
        boolean boolean4 = strTokenizer3.hasPrevious();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test08788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08788");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln((long) 116);
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.append(stringBuffer11, (int) '#', 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) 112);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test08789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08789");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.trim();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strBuilder3.asTokenizer();
        boolean boolean6 = strTokenizer5.isEmptyTokenAsNull();
        java.util.List<java.lang.String> strList7 = strTokenizer5.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendln(charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.setNewLineText("\n");
        java.io.Reader reader23 = strBuilder22.asReader();
        java.io.Writer writer24 = strBuilder22.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray30 = strTokenizer29.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.appendAll((java.lang.Object[]) strArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder25.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray40 = strTokenizer39.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendAll((java.lang.Object[]) strArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder25.appendln(strBuilder41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("");
        int int47 = strBuilder43.indexOf("");
        int int50 = strBuilder43.lastIndexOf('#', (int) (byte) 0);
        boolean boolean52 = strBuilder43.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder43.appendAll((java.util.Iterator<java.lang.String>) strTokenizer53);
        boolean boolean55 = strTokenizer53.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer53.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.setIgnoreEmptyTokens(false);
        boolean boolean60 = strBuilder25.equals((java.lang.Object) strTokenizer57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer62.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strTokenizer62.getIgnoredMatcher();
        java.lang.String[] strArray67 = strTokenizer62.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder25.appendAll((java.lang.Object[]) strArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder22.appendAll((java.lang.Object[]) strArray67);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.deleteFirst(strMatcher71);
        boolean boolean73 = strList7.contains((java.lang.Object) strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendln(10.0f);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test08790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08790");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray14 = strTokenizer13.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.appendAll((java.lang.Object[]) strArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.replaceFirst('a', 'a');
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        java.lang.String[] strArray32 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        boolean boolean35 = strList28.addAll((java.util.Collection<java.lang.String>) strList33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder9.appendAll((java.lang.Iterable<java.lang.String>) strList33);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        boolean boolean38 = strBuilder9.contains(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder3.append((java.lang.Object) strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        int int41 = strBuilder40.capacity();
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(stringBuffer42, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.insert(1, (double) 32);
        java.util.Properties properties49 = new java.util.Properties();
        int int50 = properties49.size();
        boolean boolean52 = properties49.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("", "");
        char[] charArray57 = strBuilder53.toCharArray();
        boolean boolean58 = properties49.containsValue((java.lang.Object) charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder40.append(charArray57, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, '4', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        int int67 = strMatcher37.isMatch(charArray57, 3);
        java.lang.String str68 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) 3);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 32 + "'", int41 == 32);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "3" + "'", str68, "3");
    }

    @Test
    public void test08791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08791");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        boolean boolean12 = strTokenizer10.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        char[] charArray28 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendln(charArray28);
        int int33 = strMatcher16.isMatch(charArray28, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer14.setTrimmerMatcher(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        char[] charArray39 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, "");
        boolean boolean42 = strTokenizer41.hasNext();
        int int43 = strTokenizer41.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer41.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer34.setIgnoredMatcher(strMatcher44);
        boolean boolean46 = strTokenizer45.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer45.set("true\n###################################a4\n10\n4#4");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test08792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08792");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.append(charArray16, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        int int23 = strBuilder22.capacity();
        java.lang.StringBuffer stringBuffer24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(stringBuffer24, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder22.appendSeparator("java.io.IOException: hi!");
        boolean boolean33 = strBuilder9.equals((java.lang.Object) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendln((int) 'e');
        java.lang.StringBuffer stringBuffer36 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        int int42 = strBuilder40.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder40.append("");
        boolean boolean45 = strBuilder32.equals(strBuilder44);
        java.lang.String str48 = strBuilder44.midString(59, (int) (short) 100);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(stringBuffer36);
        org.junit.Assert.assertEquals(stringBuffer36.toString(), "\n32.0java.io.IOException: hi!101\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
    }

    @Test
    public void test08793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08793");
        java.io.IOException iOException2 = new java.io.IOException("hi!");
        java.io.IOException iOException4 = new java.io.IOException("hi!");
        iOException2.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException7 = new java.io.IOException("StrTokenizer[]");
        iOException4.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException("{", (java.lang.Throwable) iOException7);
    }

    @Test
    public void test08794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08794");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        boolean boolean75 = strList9.add("StrTokenizer[not tokenized yet]");
        boolean boolean77 = strList9.add("");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder80.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder81.replaceFirst('4', 'a');
        char[] charArray87 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder81.append(charArray87, 10, (int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder81.append('4');
        java.lang.StringBuffer stringBuffer93 = strBuilder92.toStringBuffer();
        boolean boolean94 = strList9.equals((java.lang.Object) stringBuffer93);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(stringBuffer93);
        org.junit.Assert.assertEquals(stringBuffer93.toString(), "4");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test08795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08795");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "");
        boolean boolean9 = strBuilder7.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln('#');
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.append(stringBuffer18, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.deleteFirst("hi!");
        char[] charArray24 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer11.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        char[] charArray27 = strBuilder7.getChars(charArray24);
        java.lang.Object obj28 = properties0.remove((java.lang.Object) charArray27);
        java.lang.String str30 = properties0.getProperty("\n32.0");
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties0.keys();
        properties0.clear();
        java.lang.Object obj35 = properties0.setProperty("0.0true", "eeeeeeeeeeeeeeeeeeeeeeeeee");
        java.io.OutputStream outputStream36 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream36, "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000true\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, \n]");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test08796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08796");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strBuilder1.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.appendSeparator('a', 41);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.appendPadding(48, '\n');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test08797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08797");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.Object obj4 = properties0.clone();
        int int5 = properties0.size();
        java.io.OutputStream outputStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream6, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "{}");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test08798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08798");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer5, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer5.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer12.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        int int18 = strBuilder14.indexOf("");
        int int21 = strBuilder14.lastIndexOf('#', (int) (byte) 0);
        boolean boolean23 = strBuilder14.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer24);
        boolean boolean26 = strTokenizer24.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer24.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        char[] charArray42 = strBuilder38.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendln(charArray42);
        int int47 = strMatcher30.isMatch(charArray42, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer28.setTrimmerMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst("", "");
        char[] charArray53 = strBuilder49.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, "");
        boolean boolean56 = strTokenizer55.hasNext();
        int int57 = strTokenizer55.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer55.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer48.setIgnoredMatcher(strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer13.setDelimiterMatcher(strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer13.setIgnoredChar('$');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getQuoteMatcher();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
    }

    @Test
    public void test08799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08799");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.clear();
        int int12 = strBuilder11.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader20 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendln(strBuilder16);
        java.lang.String str23 = strBuilder11.rightString(57);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#\n" + "'", str23, "#\n");
    }

    @Test
    public void test08800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08800");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        int int8 = strTokenizer6.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray14 = strTokenizer13.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.appendAll((java.lang.Object[]) strArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.ensureCapacity((int) (short) 10);
        boolean boolean22 = strBuilder15.equals((java.lang.Object) strBuilder21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("\n0\n32.0\n97\nhi!", "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0000.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getDelimiterMatcher();
        int int28 = strBuilder21.lastIndexOf(strMatcher26, 116);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer6.setTrimmerMatcher(strMatcher26);
        int int30 = strTokenizer29.size();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test08801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08801");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        int int7 = strBuilder3.indexOf("#");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append((long) 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendPadding(57, '3');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test08802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08802");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        int int2 = strBuilder1.capacity();
        java.lang.StringBuffer stringBuffer3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln(stringBuffer3, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        boolean boolean13 = strSubstitutor0.replaceIn(strBuilder10, (int) '$', 0);
        int int16 = strBuilder10.indexOf(" #\n", (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.insert(5, (float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder10.appendln((long) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendSeparator('e', '3');
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 32 + "'", int2 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test08803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08803");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendln(32);
        java.io.Reader reader11 = strBuilder6.asReader();
        reader11.mark((int) ' ');
        reader11.close();
        int int15 = reader11.read();
        boolean boolean16 = reader11.markSupported();
        boolean boolean17 = reader11.markSupported();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 35 + "'", int15 == 35);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test08804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08804");
        char[] charArray2 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        java.lang.String[] strArray4 = strTokenizer3.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.reset("l");
        boolean boolean7 = strTokenizer6.hasPrevious();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test08805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08805");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties0.entrySet();
        java.lang.Object obj5 = properties0.clone();
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.io.IOException iOException8 = new java.io.IOException("\n");
        java.lang.Throwable[] throwableArray9 = iOException8.getSuppressed();
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.lang.Object obj11 = properties0.remove((java.lang.Object) iOException8);
        java.lang.Object obj12 = properties0.clone();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
    }

    @Test
    public void test08806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08806");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray19 = strTokenizer18.getTokenArray();
        java.lang.String[] strArray20 = strTokenizer18.getTokenArray();
        boolean boolean21 = strTokenizer18.hasNext();
        int int22 = strTokenizer18.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer18.getQuoteMatcher();
        java.util.List<java.lang.String> strList24 = strTokenizer18.getTokenList();
        boolean boolean25 = strList9.retainAll((java.util.Collection<java.lang.String>) strList24);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        java.util.List<java.lang.String> strList35 = strTokenizer32.getTokenList();
        java.lang.String[] strArray39 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        boolean boolean42 = strList35.addAll((java.util.Collection<java.lang.String>) strList40);
        java.util.Spliterator<java.lang.String> strSpliterator43 = strList40.spliterator();
        int int44 = strList40.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int48 = strList40.lastIndexOf((java.lang.Object) strTokenizer47);
        boolean boolean49 = strList9.removeAll((java.util.Collection<java.lang.String>) strList40);
        boolean boolean50 = strList9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray57 = strTokenizer56.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.appendAll((java.lang.Object[]) strArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst("", "");
        char[] charArray66 = strBuilder62.toCharArray();
        char[] charArray67 = strBuilder59.getChars(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray66);
        char[] charArray69 = strBuilder51.getChars(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ', '4');
        java.lang.String str73 = strTokenizer72.previousToken();
        int int74 = strList9.lastIndexOf((java.lang.Object) str73);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strSpliterator43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[]");
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[]");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
    }

    @Test
    public void test08807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08807");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(28);
        java.io.IOException iOException3 = new java.io.IOException("hi!");
        java.io.IOException iOException5 = new java.io.IOException("hi!");
        iOException3.addSuppressed((java.lang.Throwable) iOException5);
        java.io.IOException iOException8 = new java.io.IOException("hi!");
        java.io.IOException iOException10 = new java.io.IOException("hi!");
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        iOException5.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException14 = new java.io.IOException("hi!");
        iOException5.addSuppressed((java.lang.Throwable) iOException14);
        java.util.Properties properties16 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray23 = strTokenizer22.getTokenArray();
        java.lang.String[] strArray24 = strTokenizer22.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendWithSeparators((java.lang.Object[]) strArray24, "4#4");
        char[] charArray29 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray29);
        java.lang.Object obj31 = properties16.getOrDefault((java.lang.Object) strBuilder20, (java.lang.Object) strTokenizer30);
        int int32 = properties16.size();
        int int33 = properties16.size();
        java.io.IOException iOException34 = new java.io.IOException();
        java.lang.Throwable[] throwableArray35 = iOException34.getSuppressed();
        boolean boolean36 = properties16.equals((java.lang.Object) iOException34);
        java.io.IOException iOException37 = new java.io.IOException((java.lang.Throwable) iOException34);
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException34);
        java.io.IOException iOException41 = new java.io.IOException("hi!");
        java.io.IOException iOException43 = new java.io.IOException("hi!");
        iOException41.addSuppressed((java.lang.Throwable) iOException43);
        java.io.IOException iOException45 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException43);
        java.lang.Throwable throwable48 = null;
        java.io.IOException iOException49 = new java.io.IOException("{}", throwable48);
        java.lang.Throwable[] throwableArray50 = iOException49.getSuppressed();
        java.io.IOException iOException51 = new java.io.IOException("\n", (java.lang.Throwable) iOException49);
        iOException45.addSuppressed((java.lang.Throwable) iOException49);
        java.io.IOException iOException53 = new java.io.IOException((java.lang.Throwable) iOException49);
        java.lang.Throwable throwable55 = null;
        java.io.IOException iOException56 = new java.io.IOException("\n32.0", throwable55);
        java.io.IOException iOException57 = new java.io.IOException((java.lang.Throwable) iOException56);
        java.util.Properties properties58 = new java.util.Properties();
        int int59 = properties58.size();
        boolean boolean61 = properties58.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties62 = new java.util.Properties();
        int int63 = properties62.size();
        boolean boolean65 = properties62.containsKey((java.lang.Object) (-1.0f));
        properties58.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        java.lang.String str68 = properties62.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration69 = properties62.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties62.entrySet();
        java.io.IOException iOException71 = new java.io.IOException();
        java.lang.Throwable[] throwableArray72 = iOException71.getSuppressed();
        java.lang.Throwable[] throwableArray73 = iOException71.getSuppressed();
        java.io.IOException iOException74 = new java.io.IOException((java.lang.Throwable) iOException71);
        boolean boolean75 = properties62.containsValue((java.lang.Object) iOException74);
        iOException57.addSuppressed((java.lang.Throwable) iOException74);
        iOException53.addSuppressed((java.lang.Throwable) iOException57);
        iOException34.addSuppressed((java.lang.Throwable) iOException57);
        iOException5.addSuppressed((java.lang.Throwable) iOException34);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder1.appendFixedWidthPadLeft((java.lang.Object) iOException34, 131, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder1.appendln(true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(wildcardEnumeration69);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test08808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08808");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst('4', 'a');
        boolean boolean46 = properties0.remove((java.lang.Object) strBuilder33, (java.lang.Object) '4');
        java.lang.Object obj47 = properties0.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties0.entrySet();
        java.util.Properties properties49 = new java.util.Properties(properties0);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertNotNull(objEntrySet48);
    }

    @Test
    public void test08809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08809");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        boolean boolean11 = properties4.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.appendln(32);
        java.io.Reader reader23 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "");
        char[] charArray38 = strBuilder34.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendln(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder24.replaceFirst(strMatcher40, "StrTokenizer[]");
        int int43 = strBuilder18.lastIndexOf(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "");
        char[] charArray55 = strBuilder51.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.appendln(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray55);
        int int61 = strMatcher40.isMatch(charArray55, (int) (byte) 0, (int) (byte) 100, (int) (byte) 100);
        boolean boolean62 = properties4.equals((java.lang.Object) int61);
        java.util.Collection<java.lang.Object> objCollection63 = properties4.values();
        java.lang.String str64 = properties4.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objCollection63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{}" + "'", str64, "{}");
    }

    @Test
    public void test08810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08810");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        java.lang.Object obj30 = properties0.setProperty("hi!", "hi!");
        boolean boolean31 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties0.keySet();
        java.io.OutputStream outputStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream33, "eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee4\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objSet32);
    }

    @Test
    public void test08811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08811");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties0.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln((double) '#');
        boolean boolean20 = strBuilder10.equals(strBuilder19);
        java.util.stream.IntStream intStream21 = strBuilder10.codePoints();
        java.util.Iterator<java.lang.String> strItor22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendWithSeparators(strItor22, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(' ', ' ');
        java.io.Writer writer28 = strBuilder27.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer34, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder29.setLength((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.insert((int) '4', (double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder27.append(strBuilder42, 32, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(' ', '4');
        boolean boolean61 = properties0.remove((java.lang.Object) strBuilder45, (java.lang.Object) '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getIgnoredMatcher();
        int int66 = strBuilder45.lastIndexOf(strMatcher65);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test08812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08812");
        char[] charArray3 = new char[] { 'a', '$', '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '$');
        java.util.List<java.lang.String> strList6 = strTokenizer5.getTokenList();
        boolean boolean7 = strList6.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream8 = strList6.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray14 = strTokenizer13.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.appendAll((java.lang.Object[]) strArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer19 = strBuilder18.toStringBuffer();
        char[] charArray24 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        int int27 = strTokenizer26.size();
        boolean boolean28 = strTokenizer26.hasNext();
        java.util.List<java.lang.String> strList29 = strTokenizer26.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst("", "");
        char[] charArray34 = strBuilder30.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray34);
        boolean boolean38 = strList29.equals((java.lang.Object) charArray34);
        char[] charArray43 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        int int46 = strTokenizer45.size();
        boolean boolean47 = strTokenizer45.hasNext();
        java.util.List<java.lang.String> strList48 = strTokenizer45.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        int int50 = strBuilder49.capacity();
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(stringBuffer51, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder49.insert(1, (double) 32);
        java.lang.String str59 = strBuilder49.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder49.insert(1, '#');
        boolean boolean63 = strList48.equals((java.lang.Object) strBuilder49);
        boolean boolean64 = strList29.containsAll((java.util.Collection<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder18.appendAll((java.lang.Iterable<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int68 = strList48.lastIndexOf((java.lang.Object) "hi!");
        char[] charArray73 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, ' ');
        int int76 = strTokenizer75.size();
        boolean boolean77 = strTokenizer75.hasNext();
        java.util.List<java.lang.String> strList78 = strTokenizer75.getTokenList();
        java.lang.String[] strArray82 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        boolean boolean85 = strList78.addAll((java.util.Collection<java.lang.String>) strList83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray88 = strTokenizer87.getTokenArray();
        java.lang.String[] strArray89 = strTokenizer87.getTokenArray();
        boolean boolean90 = strTokenizer87.hasNext();
        int int91 = strTokenizer87.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer87.getQuoteMatcher();
        java.util.List<java.lang.String> strList93 = strTokenizer87.getTokenList();
        boolean boolean94 = strList78.retainAll((java.util.Collection<java.lang.String>) strList93);
        boolean boolean95 = strList48.removeAll((java.util.Collection<java.lang.String>) strList93);
        java.lang.Object[] objArray96 = strList48.toArray();
        boolean boolean97 = strList6.addAll((java.util.Collection<java.lang.String>) strList48);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str99 = strList6.get(30);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 30, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a$$");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a$$");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, $, $]");
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strStream8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(stringBuffer19);
        org.junit.Assert.assertEquals(stringBuffer19.toString(), "");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 32 + "'", int50 == 32);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\n32.0" + "'", str59, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[4#4]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[4#4]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test08813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08813");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        java.io.Writer writer18 = strBuilder0.asWriter();
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        java.lang.String[] strArray32 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        boolean boolean35 = strList28.addAll((java.util.Collection<java.lang.String>) strList33);
        java.util.Properties properties36 = new java.util.Properties();
        int int37 = properties36.size();
        java.lang.Object obj38 = properties36.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.appendFixedWidthPadRight((java.lang.Object) strBuilder48, (int) (byte) -1, '#');
        java.lang.Object obj52 = properties36.get((java.lang.Object) strBuilder39);
        java.util.Properties properties53 = new java.util.Properties();
        int int54 = properties53.size();
        boolean boolean56 = properties53.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties57 = new java.util.Properties();
        int int58 = properties57.size();
        boolean boolean60 = properties57.containsKey((java.lang.Object) (-1.0f));
        properties53.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        char[] charArray66 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, ' ');
        int int69 = strTokenizer68.size();
        boolean boolean70 = strTokenizer68.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer68.setIgnoredMatcher(strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst("", "");
        java.lang.Object obj77 = properties53.putIfAbsent((java.lang.Object) strMatcher71, (java.lang.Object) strBuilder73);
        boolean boolean78 = strBuilder39.equals(obj77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder39.appendln((double) 100L);
        java.util.stream.IntStream intStream81 = strBuilder39.chars();
        boolean boolean83 = strBuilder39.contains('$');
        boolean boolean84 = strList33.equals((java.lang.Object) strBuilder39);
        java.util.ListIterator<java.lang.String> strItor85 = strList33.listIterator();
        java.lang.Object[] objArray86 = strList33.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder0.appendAll(objArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.appendSeparator("4");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(writer18);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(intStream81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strItor85);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[\n32.0, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[\n32.0, , ]");
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test08814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08814");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: \n32.0");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test08815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08815");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer15.reset();
        int int17 = strTokenizer16.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.reset("{}");
        boolean boolean24 = strTokenizer21.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test08816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08816");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("1");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray4 = strBuilder3.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray4);
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray4);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray4);
        int int9 = strBuilder1.lastIndexOf(strMatcher8);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test08817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08817");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        int int2 = strBuilder1.capacity();
        java.lang.StringBuffer stringBuffer3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln(stringBuffer3, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        boolean boolean13 = strSubstitutor0.replaceIn(strBuilder10, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.String str24 = strBuilder20.getNewLineText();
        java.util.stream.IntStream intStream25 = strBuilder20.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder17.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder17.appendFixedWidthPadLeft((int) (byte) 1, 32, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder10.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder10.appendln((double) 84);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 32 + "'", int2 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(intStream25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test08818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08818");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((double) '#');
        boolean boolean22 = strBuilder12.equals(strBuilder21);
        java.util.stream.IntStream intStream23 = strBuilder12.codePoints();
        java.util.Iterator<java.lang.String> strItor24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder12.appendWithSeparators(strItor24, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder6.appendln(strBuilder26, 0, (int) (byte) 1);
        int int33 = strBuilder6.size();
        java.lang.String str36 = strBuilder6.midString(14, 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test08819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08819");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.deleteAll(strMatcher22);
        boolean boolean24 = strBuilder10.equalsIgnoreCase(strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.appendSeparator(" #\n", (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder18.insert((int) (short) 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        int int32 = strBuilder31.capacity();
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(stringBuffer33, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.insert(1, (double) 32);
        boolean boolean40 = strBuilder31.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder31.clear();
        int int43 = strBuilder42.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader51 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder42.appendln(strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder42.replaceFirst("\n32.0", "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder30.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("\ntrue\n52.0");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test08820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08820");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        boolean boolean17 = properties0.isEmpty();
        java.util.Properties properties18 = new java.util.Properties(properties0);
        int int19 = properties18.size();
        java.io.OutputStream outputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.storeToXML(outputStream20, "3");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test08821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08821");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.io.IOException iOException4 = new java.io.IOException("hi!");
        java.io.IOException iOException6 = new java.io.IOException("hi!");
        iOException4.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException6);
        java.lang.Throwable throwable10 = null;
        java.io.IOException iOException11 = new java.io.IOException("\n32.0", throwable10);
        iOException8.addSuppressed((java.lang.Throwable) iOException11);
        boolean boolean13 = properties0.containsValue((java.lang.Object) iOException11);
        java.util.Collection<java.lang.Object> objCollection14 = properties0.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln((double) '#');
        boolean boolean30 = strBuilder20.equals(strBuilder29);
        java.util.stream.IntStream intStream31 = strBuilder20.codePoints();
        java.util.Iterator<java.lang.String> strItor32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder20.appendWithSeparators(strItor32, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst(' ', ' ');
        java.util.Properties properties38 = new java.util.Properties();
        int int39 = properties38.size();
        java.lang.Object obj40 = properties38.clone();
        java.util.Set<java.lang.String> strSet41 = properties38.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder34.appendFixedWidthPadLeft((java.lang.Object) properties38, (int) '$', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder34.insert(2, 10.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder34.setLength(43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder34.deleteAll('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder34.deleteFirst("#\n4#4");
        boolean boolean54 = properties0.contains((java.lang.Object) strBuilder34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer56.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setDelimiterString(" 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.appendln(32);
        java.io.Reader reader72 = strBuilder67.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.replaceFirst("", "");
        char[] charArray87 = strBuilder83.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder82.appendln(charArray87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray87);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder73.replaceFirst(strMatcher89, "StrTokenizer[]");
        int int92 = strBuilder67.lastIndexOf(strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer58.setDelimiterMatcher(strMatcher89);
        boolean boolean94 = strBuilder34.contains(strMatcher89);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[]");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test08822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08822");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "h");
        int int37 = strTokenizer33.nextIndex();
        boolean boolean38 = properties0.containsValue((java.lang.Object) strTokenizer33);
        char[] charArray43 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        int int46 = strTokenizer45.size();
        boolean boolean47 = strTokenizer45.hasNext();
        java.util.List<java.lang.String> strList48 = strTokenizer45.getTokenList();
        java.lang.String[] strArray52 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        boolean boolean55 = strList48.addAll((java.util.Collection<java.lang.String>) strList53);
        java.lang.String str57 = strList53.remove(0);
        char[] charArray62 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        int int65 = strTokenizer64.size();
        boolean boolean66 = strTokenizer64.hasNext();
        java.util.List<java.lang.String> strList67 = strTokenizer64.getTokenList();
        java.lang.String[] strArray71 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        boolean boolean74 = strList67.addAll((java.util.Collection<java.lang.String>) strList72);
        boolean boolean75 = strList53.addAll((java.util.Collection<java.lang.String>) strList72);
        java.lang.Object obj76 = properties0.remove((java.lang.Object) strList72);
        int int77 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet79 = properties0.entrySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\n32.0" + "'", str57, "\n32.0");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNotNull(objEntrySet79);
    }

    @Test
    public void test08823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08823");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        boolean boolean9 = properties0.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        java.util.Spliterator<java.lang.String> strSpliterator27 = strList24.spliterator();
        int int28 = strList24.size();
        boolean boolean30 = strList24.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream31 = strList24.stream();
        boolean boolean32 = properties0.containsKey((java.lang.Object) strList24);
        java.util.stream.Stream<java.lang.String> strStream33 = strList24.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        int int35 = strBuilder34.capacity();
        java.lang.StringBuffer stringBuffer36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(stringBuffer36, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.insert(1, (double) 32);
        boolean boolean43 = strBuilder34.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder34.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder44.append((java.lang.Object) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder44.appendln((float) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("");
        int int65 = strBuilder61.indexOf("");
        int int68 = strBuilder61.lastIndexOf('#', (int) (byte) 0);
        boolean boolean70 = strBuilder61.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder61.appendAll((java.util.Iterator<java.lang.String>) strTokenizer71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder61.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder61.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder61.appendln((int) (byte) 100);
        java.io.IOException iOException81 = new java.io.IOException("hi!");
        java.io.IOException iOException83 = new java.io.IOException("hi!");
        iOException81.addSuppressed((java.lang.Throwable) iOException83);
        java.io.IOException iOException85 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException83);
        java.lang.Throwable[] throwableArray86 = iOException85.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder78.appendAll((java.lang.Object[]) throwableArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder60.appendAll((java.lang.Object[]) throwableArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder88.appendNewLine();
        int int90 = strList24.lastIndexOf((java.lang.Object) strBuilder89);
        int int91 = strBuilder89.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder89.appendSeparator('9');
        char[] charArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder89.insert(286, charArray95, 4, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 286");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSpliterator27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 32 + "'", int35 == 32);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 32 + "'", int91 == 32);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test08824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08824");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        boolean boolean7 = strBuilder0.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteFirst('$');
        boolean boolean11 = strBuilder0.endsWith("\naaaa100");
        java.util.Properties properties12 = new java.util.Properties();
        int int13 = properties12.size();
        java.lang.Object obj14 = properties12.clone();
        java.util.Collection<java.lang.Object> objCollection15 = properties12.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.append((java.lang.Object) objCollection15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.insert(9, "3");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 9");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test08825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08825");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "");
        char[] charArray12 = strBuilder8.toCharArray();
        char[] charArray13 = strBuilder5.getChars(charArray12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, '#', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer17.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.setIgnoredChar('$');
        boolean boolean21 = strTokenizer18.hasNext();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test08826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08826");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.insert(1, (double) 32);
        boolean boolean34 = strBuilder25.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder25.appendSeparator('a', ' ');
        boolean boolean38 = strBuilder37.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray44 = strTokenizer43.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.appendAll((java.lang.Object[]) strArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln('#');
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.append(stringBuffer54, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder51.appendSeparator("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder45.append((java.lang.CharSequence) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder37.append((java.lang.CharSequence) strBuilder45);
        boolean boolean67 = properties0.containsValue((java.lang.Object) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder37.deleteFirst('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder37.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder37.deleteFirst('1');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test08827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08827");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        java.io.Reader reader4 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendln(charArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendln((double) '$');
        char[] charArray24 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        int int27 = strTokenizer26.size();
        boolean boolean28 = strTokenizer26.hasNext();
        java.util.List<java.lang.String> strList29 = strTokenizer26.getTokenList();
        java.lang.String[] strArray33 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = strList29.addAll((java.util.Collection<java.lang.String>) strList34);
        java.lang.String str38 = strList34.remove(0);
        char[] charArray43 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        int int46 = strTokenizer45.size();
        boolean boolean47 = strTokenizer45.hasNext();
        java.util.List<java.lang.String> strList48 = strTokenizer45.getTokenList();
        java.lang.String[] strArray52 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        boolean boolean55 = strList48.addAll((java.util.Collection<java.lang.String>) strList53);
        boolean boolean56 = strList34.addAll((java.util.Collection<java.lang.String>) strList53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder11.appendAll((java.lang.Iterable<java.lang.String>) strList34);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder0.append((java.lang.CharSequence) strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder0.setLength(117);
        char[] charArray63 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, '#', 'e');
        java.lang.String str69 = strTokenizer68.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer68);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader4);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\n32.0" + "'", str38, "\n32.0");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "a4" + "'", str69, "a4");
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test08828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08828");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader26 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream37 = strBuilder27.codePoints();
        java.lang.Object obj38 = properties17.replace((java.lang.Object) reader26, (java.lang.Object) intStream37);
        reader26.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst("", "");
        char[] charArray51 = strBuilder47.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendln(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray51);
        int int54 = reader26.read(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.insert(0, (java.lang.Object) charArray51);
        boolean boolean56 = strBuilder14.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder14.insert((int) (short) 1, "\n32.0");
        char[] charArray60 = strBuilder14.toCharArray();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[[, \n, 3, 2, ., 0, C, @, 2, 0, a, b, 7, 6, e, e, 3, 5, ., 0, \n]");
    }

    @Test
    public void test08829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08829");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[ 4#4]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setQuoteChar('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendAll((java.lang.Object[]) strArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder4.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray19 = strTokenizer18.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendAll((java.lang.Object[]) strArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder4.appendln(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        char[] charArray33 = strBuilder29.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.appendln(charArray33);
        boolean boolean35 = strBuilder4.equals((java.lang.Object) strBuilder28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strTokenizer38.getDelimiterMatcher();
        int int40 = strBuilder4.indexOf(strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer3.setDelimiterMatcher(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer41);
    }

    @Test
    public void test08830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08830");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        boolean boolean20 = strList9.add("\n");
        boolean boolean22 = strList9.add("\n2.0");
        java.util.ListIterator<java.lang.String> strItor23 = strList9.listIterator();
        char[] charArray28 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        int int31 = strTokenizer30.size();
        boolean boolean32 = strTokenizer30.hasNext();
        java.util.List<java.lang.String> strList33 = strTokenizer30.getTokenList();
        java.lang.String[] strArray37 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        boolean boolean40 = strList33.addAll((java.util.Collection<java.lang.String>) strList38);
        java.lang.String str42 = strList38.remove(0);
        java.util.stream.Stream<java.lang.String> strStream43 = strList38.stream();
        java.util.Iterator<java.lang.String> strItor44 = strList38.iterator();
        java.lang.Object obj45 = null;
        boolean boolean46 = strList38.contains(obj45);
        int int47 = strList38.size();
        boolean boolean48 = strList9.retainAll((java.util.Collection<java.lang.String>) strList38);
        java.util.ListIterator<java.lang.String> strItor49 = strList38.listIterator();
        java.util.Iterator<java.lang.String> strItor50 = strList38.iterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln((double) '#');
        boolean boolean66 = strBuilder56.equals(strBuilder65);
        java.util.stream.IntStream intStream67 = strBuilder56.codePoints();
        java.util.Iterator<java.lang.String> strItor68 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder56.appendWithSeparators(strItor68, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst(' ', ' ');
        int int75 = strBuilder73.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.insert((int) '$', '$');
        java.lang.Class<?> wildcardClass79 = strBuilder78.getClass();
        int int80 = strList38.indexOf((java.lang.Object) strBuilder78);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = strList38.get(84);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 84, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\n32.0" + "'", str42, "\n32.0");
        org.junit.Assert.assertNotNull(strStream43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strItor49);
        org.junit.Assert.assertNotNull(strItor50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(intStream67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test08831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08831");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.append(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test08832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08832");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("\na32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setEmptyTokenAsNull(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = strTokenizer1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
    }

    @Test
    public void test08833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08833");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        java.lang.String str4 = strBuilder0.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendln((float) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.setNullText(" ");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator('3', 120);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test08834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08834");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("{}", throwable3);
        java.lang.Throwable[] throwableArray5 = iOException4.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException("\n", (java.lang.Throwable) iOException4);
        java.lang.Throwable throwable8 = null;
        java.io.IOException iOException9 = new java.io.IOException("\n32.0", throwable8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray11 = iOException9.getSuppressed();
        iOException4.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException13 = new java.io.IOException("#\n$", (java.lang.Throwable) iOException4);
        java.io.IOException iOException15 = new java.io.IOException("StrTokenizer[]");
        java.lang.Throwable[] throwableArray16 = iOException15.getSuppressed();
        iOException13.addSuppressed((java.lang.Throwable) iOException15);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test08835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08835");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(' ', ' ');
        java.io.Writer writer23 = strBuilder22.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder24.setLength((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.insert((int) '4', (double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.append(strBuilder37, 32, (int) (byte) 10);
        char[] charArray41 = strBuilder37.toCharArray();
        int int44 = strBuilder37.indexOf('g', 0);
        char[] charArray49 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        int int52 = strTokenizer51.size();
        boolean boolean53 = strTokenizer51.hasNext();
        java.util.List<java.lang.String> strList54 = strTokenizer51.getTokenList();
        java.lang.String[] strArray58 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        boolean boolean61 = strList54.addAll((java.util.Collection<java.lang.String>) strList59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray64 = strTokenizer63.getTokenArray();
        java.lang.String[] strArray65 = strTokenizer63.getTokenArray();
        boolean boolean66 = strTokenizer63.hasNext();
        int int67 = strTokenizer63.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer63.getQuoteMatcher();
        java.util.List<java.lang.String> strList69 = strTokenizer63.getTokenList();
        boolean boolean70 = strList54.retainAll((java.util.Collection<java.lang.String>) strList69);
        char[] charArray75 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, ' ');
        int int78 = strTokenizer77.size();
        boolean boolean79 = strTokenizer77.hasNext();
        java.util.List<java.lang.String> strList80 = strTokenizer77.getTokenList();
        java.lang.String[] strArray84 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        boolean boolean87 = strList80.addAll((java.util.Collection<java.lang.String>) strList85);
        java.util.Spliterator<java.lang.String> strSpliterator88 = strList85.spliterator();
        int int89 = strList85.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int93 = strList85.lastIndexOf((java.lang.Object) strTokenizer92);
        boolean boolean94 = strList54.removeAll((java.util.Collection<java.lang.String>) strList85);
        int int95 = strList54.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder37.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList54, "97\nhi!StrTokenizer[]");
        java.lang.Object[] objArray98 = strList54.toArray();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(writer23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strList80);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(strSpliterator88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 3 + "'", int89 == 3);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNotNull(objArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray98), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray98), "[]");
    }

    @Test
    public void test08836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08836");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[35.0]", "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0000.0\n");
    }

    @Test
    public void test08837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08837");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.setCharAt(0, '4');
        char[] charArray20 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        int int23 = strTokenizer22.size();
        boolean boolean24 = strTokenizer22.hasNext();
        java.util.List<java.lang.String> strList25 = strTokenizer22.getTokenList();
        java.lang.String[] strArray29 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        boolean boolean32 = strList25.addAll((java.util.Collection<java.lang.String>) strList30);
        java.util.Properties properties33 = new java.util.Properties();
        int int34 = properties33.size();
        java.lang.Object obj35 = properties33.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.appendFixedWidthPadRight((java.lang.Object) strBuilder45, (int) (byte) -1, '#');
        java.lang.Object obj49 = properties33.get((java.lang.Object) strBuilder36);
        java.util.Properties properties50 = new java.util.Properties();
        int int51 = properties50.size();
        boolean boolean53 = properties50.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties54 = new java.util.Properties();
        int int55 = properties54.size();
        boolean boolean57 = properties54.containsKey((java.lang.Object) (-1.0f));
        properties50.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        char[] charArray63 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        int int66 = strTokenizer65.size();
        boolean boolean67 = strTokenizer65.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer65.setIgnoredMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst("", "");
        java.lang.Object obj74 = properties50.putIfAbsent((java.lang.Object) strMatcher68, (java.lang.Object) strBuilder70);
        boolean boolean75 = strBuilder36.equals(obj74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder36.appendln((double) 100L);
        java.util.stream.IntStream intStream78 = strBuilder36.chars();
        boolean boolean80 = strBuilder36.contains('$');
        boolean boolean81 = strList30.equals((java.lang.Object) strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder15.appendAll((java.lang.Iterable<java.lang.String>) strList30);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.appendln(0.0d);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "{}");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(intStream78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test08838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08838");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer6, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.deleteFirst("hi!");
        int int14 = strBuilder3.lastIndexOf('$', (int) '#');
        java.io.Writer writer15 = strBuilder3.asWriter();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(writer15);
    }

    @Test
    public void test08839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08839");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) '9');
    }

    @Test
    public void test08840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08840");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator('a', ' ');
        boolean boolean13 = strBuilder12.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray19 = strTokenizer18.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendAll((java.lang.Object[]) strArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln('#');
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.append(stringBuffer29, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder26.appendSeparator("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder26.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder20.append((java.lang.CharSequence) strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder12.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("\n32.0", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer44.getIgnoredMatcher();
        int int46 = strBuilder41.indexOf(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.insert((int) '\n', (float) 25);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test08841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08841");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.replaceFirst("[\n32.0, , , StrTokenizer[]]", "true\n###################################");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendln((float) 8);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test08842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08842");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "");
        boolean boolean9 = strBuilder7.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln('#');
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.append(stringBuffer18, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.deleteFirst("hi!");
        char[] charArray24 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer11.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        char[] charArray27 = strBuilder7.getChars(charArray24);
        java.lang.Object obj28 = properties0.remove((java.lang.Object) charArray27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties0.elements();
        java.util.Set<java.lang.Object> objSet30 = properties0.keySet();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties(properties31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst('a', '4');
        java.io.Writer writer40 = strBuilder39.asWriter();
        properties32.store(writer40, "");
        writer40.write(32);
        writer40.write((int) '4');
        writer40.flush();
        char[] charArray48 = null;
        writer40.write(charArray48, 116, 10);
        properties0.store(writer40, "");
        java.io.Writer writer55 = writer40.append('$');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, \n]");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(writer40);
        org.junit.Assert.assertNotNull(writer55);
    }

    @Test
    public void test08843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08843");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer6, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendFixedWidthPadRight(32, (int) 't', 'a');
        boolean boolean17 = strBuilder11.endsWith("0.0true");
        char[] charArray20 = strBuilder11.toCharArray(0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendAll((java.lang.Object[]) strArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer31 = strBuilder30.toStringBuffer();
        java.util.stream.IntStream intStream32 = stringBuffer31.chars();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder11.appendln(stringBuffer31, 6, 25);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(stringBuffer31);
        org.junit.Assert.assertEquals(stringBuffer31.toString(), "");
        org.junit.Assert.assertNotNull(intStream32);
    }

    @Test
    public void test08844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08844");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Set<java.lang.String> strSet17 = properties0.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('a', '4');
        java.io.Writer writer28 = strBuilder27.asWriter();
        properties20.store(writer28, "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        properties0.clear();
        java.lang.String str34 = properties0.getProperty("java.io.IOException: {\ntrue\n=1.0}");
        java.lang.String str36 = properties0.getProperty("\n0\n32.0\n97\nhi!");
        java.io.InputStream inputStream37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test08845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08845");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray2 = strBuilder1.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.appendSeparator("32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.append("java.io.IOException: {\ntrue\n=1.0}");
        java.io.Reader reader7 = strBuilder4.asReader();
        reader7.mark(74);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
    }

    @Test
    public void test08846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08846");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer6, (int) (byte) -1, (int) (byte) 100);
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder3.append(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.insert(5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln((double) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder23.appendFixedWidthPadRight((java.lang.Object) strBuilder32, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.append("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder20.append(strBuilder37);
        java.util.stream.IntStream intStream39 = strBuilder37.chars();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(intStream39);
    }

    @Test
    public void test08847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08847");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        boolean boolean9 = properties0.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        java.util.Spliterator<java.lang.String> strSpliterator27 = strList24.spliterator();
        int int28 = strList24.size();
        boolean boolean30 = strList24.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream31 = strList24.stream();
        boolean boolean32 = properties0.containsKey((java.lang.Object) strList24);
        int int33 = strList24.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        int int35 = strBuilder34.capacity();
        java.lang.StringBuffer stringBuffer36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(stringBuffer36, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.appendln((int) (byte) 0);
        java.io.Writer writer42 = strBuilder41.asWriter();
        java.io.Writer writer43 = strBuilder41.asWriter();
        int int44 = strList24.lastIndexOf((java.lang.Object) strBuilder41);
        boolean boolean46 = strList24.add("java.io.IOException: java.io.IOException: StrTokenizer[]");
        strList24.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSpliterator27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 32 + "'", int35 == 32);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(writer42);
        org.junit.Assert.assertNotNull(writer43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test08848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08848");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        int int5 = strBuilder4.capacity();
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(stringBuffer6, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int11 = strBuilder9.lastIndexOf(strMatcher10);
        boolean boolean12 = strBuilder2.equalsIgnoreCase(strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln((float) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteAll("###");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test08849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08849");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((int) (short) 1);
        int int16 = strBuilder10.lastIndexOf("{}", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (long) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln("StrTokenizer[ 4#4]");
        int int25 = strBuilder19.size();
        int int26 = strBuilder19.length();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder19.append("true\n###################################", 144, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 26 + "'", int25 == 26);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 26 + "'", int26 == 26);
    }

    @Test
    public void test08850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08850");
        char[] charArray3 = new char[] { 'a', '$', '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '$');
        java.util.List<java.lang.String> strList6 = strTokenizer5.getTokenList();
        boolean boolean7 = strList6.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream8 = strList6.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor10 = strList6.listIterator((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a$$");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a$$");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, $, $]");
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strStream8);
    }

    @Test
    public void test08851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08851");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.appendln(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        int int19 = strBuilder18.capacity();
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(stringBuffer20, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.insert(1, (double) 32);
        java.lang.String str28 = strBuilder18.rightString((int) ' ');
        boolean boolean30 = strBuilder18.startsWith("");
        char[] charArray31 = strBuilder18.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray31);
        int int34 = strBuilder15.lastIndexOf(strMatcher32, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder15.appendln("100.0\000\000\000\000\000", (int) (short) 1, 4);
        boolean boolean39 = properties1.containsKey((java.lang.Object) strBuilder15);
        // The following exception was thrown during execution in test generation
        try {
            char char41 = strBuilder15.charAt(49);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 49");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\n32.0" + "'", str28, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test08852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08852");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        char char10 = strBuilder8.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendAll((java.lang.Object[]) strArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        char[] charArray26 = strBuilder22.toCharArray();
        char[] charArray27 = strBuilder19.getChars(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        char[] charArray29 = strBuilder11.getChars(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer32.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder8.append((java.lang.Object) strTokenizer32);
        java.io.Writer writer36 = strBuilder8.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray42 = strTokenizer41.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendAll((java.lang.Object[]) strArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder37.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray52 = strTokenizer51.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendAll((java.lang.Object[]) strArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder37.appendln(strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst("", "");
        char[] charArray66 = strBuilder62.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.appendln(charArray66);
        boolean boolean68 = strBuilder37.equals((java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder69.appendFixedWidthPadRight((java.lang.Object) strBuilder78, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.append("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder81.replaceFirst("StrTokenizer[not tokenized yet]", "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.insert((int) (short) 1, (float) (-1));
        int int91 = strBuilder89.indexOf(" ");
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder61.appendln((java.lang.Object) " ");
        java.lang.Object obj93 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder92.appendln(obj93);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder8.append((java.lang.CharSequence) strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + char10 + "' != '" + '#' + "'", char10 == '#');
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[]");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test08853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08853");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean2 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterChar('a');
        int int5 = strTokenizer1.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test08854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08854");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.setNullText("");
        java.lang.Object obj33 = properties0.get((java.lang.Object) strBuilder32);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties(properties34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst('a', '4');
        java.io.Writer writer43 = strBuilder42.asWriter();
        properties35.store(writer43, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "");
        java.io.Reader reader50 = strBuilder46.asReader();
        properties35.load(reader50);
        boolean boolean52 = reader50.ready();
        int int53 = reader50.read();
        properties0.load(reader50);
        reader50.mark(32);
        reader50.close();
        boolean boolean58 = reader50.ready();
        reader50.mark(57);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(writer43);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test08855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08855");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("false", ' ', '$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer3.reset();
        java.lang.String str5 = strTokenizer3.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "false" + "'", str5, "false");
        org.junit.Assert.assertNotNull(strTokenizer7);
    }

    @Test
    public void test08856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08856");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test08857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08857");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("\n0\n32.0\n97\nhi!");
    }

    @Test
    public void test08858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08858");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        char[] charArray16 = strBuilder8.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        char[] charArray18 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean21 = strTokenizer20.hasNext();
        java.lang.String[] strArray22 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder0.appendWithSeparators((java.lang.Object[]) strArray22, "\n-1.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder25.appendFixedWidthPadRight((java.lang.Object) strBuilder34, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("\n");
        boolean boolean42 = strBuilder24.equalsIgnoreCase(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray50 = strTokenizer49.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.appendAll((java.lang.Object[]) strArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "");
        char[] charArray59 = strBuilder55.toCharArray();
        char[] charArray60 = strBuilder52.getChars(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59);
        char[] charArray62 = strBuilder44.getChars(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer64.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer64.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("10.0", strMatcher68);
        int int72 = strBuilder24.indexOf(strMatcher68, (int) '4');
        java.util.stream.IntStream intStream73 = strBuilder24.chars();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(intStream73);
    }

    @Test
    public void test08859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08859");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        char[] charArray23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder1.append(charArray23, 15, 36);
        java.lang.String str28 = strBuilder1.rightString(39);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "a" + "'", str28, "a");
    }

    @Test
    public void test08860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08860");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("a4", strMatcher1);
        int int3 = strTokenizer2.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        char[] charArray10 = strBuilder6.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, "");
        boolean boolean13 = strTokenizer12.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer12.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer2.setQuoteMatcher(strMatcher14);
        int int16 = strTokenizer15.nextIndex();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setDelimiterChar('#');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer15.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strTokenizer19);
    }

    @Test
    public void test08861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08861");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Set<java.lang.String> strSet17 = properties0.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('a', '4');
        java.io.Writer writer28 = strBuilder27.asWriter();
        properties20.store(writer28, "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.lang.String str33 = properties20.getProperty("#");
        java.util.Collection<java.lang.Object> objCollection34 = properties20.values();
        java.util.Enumeration<?> wildcardEnumeration35 = properties20.propertyNames();
        java.util.Set<java.lang.Object> objSet36 = properties20.keySet();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(objCollection34);
        org.junit.Assert.assertNotNull(wildcardEnumeration35);
        org.junit.Assert.assertNotNull(objSet36);
    }

    @Test
    public void test08862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08862");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        boolean boolean25 = properties0.isEmpty();
        java.lang.Object obj28 = properties0.setProperty(" 4#4", "\na32");
        boolean boolean29 = properties0.isEmpty();
        int int30 = properties0.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("35.0\n4");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendAll((java.lang.Object[]) strArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln('#');
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.append(stringBuffer48, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder45.appendSeparator("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder45.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder39.append((java.lang.CharSequence) strBuilder58);
        java.lang.Object obj60 = properties0.put((java.lang.Object) strTokenizer32, (java.lang.Object) strBuilder39);
        java.util.Collection<java.lang.Object> objCollection61 = properties0.values();
        java.util.Properties properties62 = new java.util.Properties();
        int int63 = properties62.size();
        boolean boolean65 = properties62.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties66 = new java.util.Properties();
        int int67 = properties66.size();
        boolean boolean69 = properties66.containsKey((java.lang.Object) (-1.0f));
        properties62.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        char[] charArray75 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, ' ');
        int int78 = strTokenizer77.size();
        boolean boolean79 = strTokenizer77.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer77.setIgnoredMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.replaceFirst("", "");
        java.lang.Object obj86 = properties62.putIfAbsent((java.lang.Object) strMatcher80, (java.lang.Object) strBuilder82);
        boolean boolean87 = properties62.isEmpty();
        java.util.Set<java.lang.String> strSet88 = properties62.stringPropertyNames();
        java.lang.String str90 = properties62.getProperty("#\nStrTokenizer[not tokenized yet]ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt#");
        java.util.Properties properties91 = new java.util.Properties(properties62);
        boolean boolean92 = properties62.isEmpty();
        java.util.Set<java.lang.Object> objSet93 = properties62.keySet();
        java.lang.Object obj94 = properties62.clone();
        boolean boolean95 = properties0.contains(obj94);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strSet88);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objSet93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test08863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08863");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("true\n###################################a4\n", '2', 't');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(false);
        int int6 = strTokenizer3.size();
        boolean boolean7 = strTokenizer3.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test08864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08864");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendSeparator("\na32.0", 93);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendFixedWidthPadLeft(48, 43, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln('t');
        java.lang.String str24 = strBuilder21.substring(25, 74);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "444444444444444444444448t\n" + "'", str24, "444444444444444444444448t\n");
    }

    @Test
    public void test08865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08865");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("true\n###################################3\n", '4', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset("100.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer3.setIgnoredChar('e');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.deleteAll('4');
        int int15 = strBuilder13.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.deleteAll('4');
        int int23 = strBuilder21.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        char[] charArray28 = strBuilder24.toCharArray();
        char[] charArray29 = strBuilder21.getChars(charArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder13.appendln(charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer36, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer36.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer43.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder13.deleteFirst(strMatcher44);
        boolean boolean47 = strBuilder13.contains('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        boolean boolean53 = strBuilder51.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln('#');
        java.lang.StringBuffer stringBuffer62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.append(stringBuffer62, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder59.deleteFirst("hi!");
        char[] charArray68 = strBuilder59.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer55.reset(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        char[] charArray71 = strBuilder51.getChars(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder13.appendln(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '9');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("############################################org.apac");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer74.setIgnoredMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer3.setQuoteMatcher(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, \n]");
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer78);
    }

    @Test
    public void test08866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08866");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties4.entrySet();
        char[] charArray18 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        int int21 = strTokenizer20.size();
        boolean boolean22 = strTokenizer20.hasNext();
        java.util.List<java.lang.String> strList23 = strTokenizer20.getTokenList();
        java.lang.String[] strArray27 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        boolean boolean30 = strList23.addAll((java.util.Collection<java.lang.String>) strList28);
        java.util.Spliterator<java.lang.String> strSpliterator31 = strList28.spliterator();
        char[] charArray36 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, ' ');
        int int39 = strTokenizer38.size();
        boolean boolean40 = strTokenizer38.hasNext();
        java.util.List<java.lang.String> strList41 = strTokenizer38.getTokenList();
        java.lang.String[] strArray45 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        boolean boolean48 = strList41.addAll((java.util.Collection<java.lang.String>) strList46);
        java.util.Spliterator<java.lang.String> strSpliterator49 = strList46.spliterator();
        int int50 = strList46.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int54 = strList46.lastIndexOf((java.lang.Object) strTokenizer53);
        java.util.List<java.lang.String> strList55 = strTokenizer53.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor56 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        int int58 = strBuilder57.capacity();
        java.lang.StringBuffer stringBuffer59 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(stringBuffer59, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.appendln(true);
        boolean boolean69 = strSubstitutor56.replaceIn(strBuilder66, (int) '$', 0);
        boolean boolean70 = strList55.equals((java.lang.Object) '$');
        boolean boolean71 = strList28.containsAll((java.util.Collection<java.lang.String>) strList55);
        java.lang.Object obj72 = properties4.getOrDefault((java.lang.Object) '$', (java.lang.Object) boolean71);
        java.util.Set<java.lang.Object> objSet73 = properties4.keySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strSpliterator31);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strSpliterator49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3 + "'", int50 == 3);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 32 + "'", int58 == 32);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + false + "'", obj72, false);
        org.junit.Assert.assertNotNull(objSet73);
    }

    @Test
    public void test08867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08867");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceAll("#", "true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator("StrTokenizer[not tokenized yet]", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        int int21 = strBuilder19.lastIndexOf("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        int int23 = strBuilder22.capacity();
        java.lang.StringBuffer stringBuffer24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(stringBuffer24, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder19.appendFixedWidthPadRight((java.lang.Object) strBuilder31, (int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder19.appendSeparator("", "0");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder13.append((java.lang.Object) strBuilder19);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader50 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray56 = strTokenizer55.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.appendAll((java.lang.Object[]) strArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder51.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream61 = strBuilder51.codePoints();
        java.lang.Object obj62 = properties41.replace((java.lang.Object) reader50, (java.lang.Object) intStream61);
        long long64 = reader50.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst('a', '4');
        java.io.Writer writer72 = strBuilder71.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst("", "");
        char[] charArray84 = strBuilder80.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.appendln(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray84);
        writer72.write(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, '4', '$');
        int int91 = reader50.read(charArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder19.appendFixedWidthPadLeft((java.lang.Object) reader50, 100, '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder19.append(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(intStream61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(writer72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[]");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test08868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08868");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.insert(1, (double) 32);
        java.util.Properties properties25 = new java.util.Properties();
        int int26 = properties25.size();
        boolean boolean28 = properties25.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        char[] charArray33 = strBuilder29.toCharArray();
        boolean boolean34 = properties25.containsValue((java.lang.Object) charArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder16.append(charArray33, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder16.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder0.append((java.lang.Object) true);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder0.replaceAll(strMatcher42, "{\ntrue\n=1.0}");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder0.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteAll("");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test08869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08869");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties4.keys();
        java.util.Set<java.lang.Object> objSet10 = properties4.keySet();
        boolean boolean11 = properties4.isEmpty();
        properties4.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer18, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer18.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setEmptyTokenAsNull(true);
        boolean boolean26 = strTokenizer23.hasNext();
        boolean boolean27 = strTokenizer23.isEmptyTokenAsNull();
        boolean boolean28 = properties4.contains((java.lang.Object) boolean27);
        java.util.Set<java.lang.Object> objSet29 = properties4.keySet();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("true\n###################################\n", '2', 'e');
        java.util.Properties properties34 = new java.util.Properties();
        int int35 = properties34.size();
        boolean boolean37 = properties34.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties34.entrySet();
        java.lang.Object obj39 = properties34.clone();
        java.util.Properties properties40 = new java.util.Properties();
        int int41 = properties40.size();
        boolean boolean43 = properties40.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = properties40.entrySet();
        java.lang.Object obj45 = properties40.clone();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.lang.Object obj47 = properties4.putIfAbsent((java.lang.Object) '2', (java.lang.Object) properties34);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration48 = properties4.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Character cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "{}");
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test08870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08870");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        boolean boolean25 = properties0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst('a', '4');
        char[] charArray37 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        int int40 = strTokenizer39.size();
        boolean boolean41 = strTokenizer39.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setIgnoredMatcher(strMatcher42);
        int int45 = strBuilder29.indexOf(strMatcher42, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder29.deleteFirst("StrTokenizer[32.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        int int49 = strBuilder48.capacity();
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(stringBuffer50, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.appendln((double) '#');
        boolean boolean70 = strBuilder60.equals(strBuilder69);
        java.util.stream.IntStream intStream71 = strBuilder60.codePoints();
        java.util.Iterator<java.lang.String> strItor72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder60.appendWithSeparators(strItor72, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder54.appendln(strBuilder74, 0, (int) (byte) 1);
        java.lang.Object obj81 = properties0.putIfAbsent((java.lang.Object) strBuilder47, (java.lang.Object) strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder47.replaceFirst('4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder47.appendln((double) 0);
        java.lang.String str87 = strBuilder86.getNullText();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 32 + "'", int49 == 32);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(intStream71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test08871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08871");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset("4#4");
        int int7 = strTokenizer4.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln('#');
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.append(stringBuffer16, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.deleteFirst("hi!");
        char[] charArray22 = strBuilder13.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer9.reset(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer23.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer23.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer4.setDelimiterMatcher(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer26);
    }

    @Test
    public void test08872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08872");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("\n32.0", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        char[] charArray8 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln('#');
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append(stringBuffer20, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.deleteFirst("hi!");
        char[] charArray26 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer13.reset(charArray26);
        boolean boolean28 = properties0.replace((java.lang.Object) iOException4, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer13);
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream29, "\n32.010\n\000\000\000\000\000\000\000100");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test08873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08873");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        java.lang.Object[] objArray19 = strList9.toArray();
        java.util.stream.Stream<java.lang.String> strStream20 = strList9.parallelStream();
        char[] charArray25 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        int int28 = strTokenizer27.size();
        boolean boolean29 = strTokenizer27.hasNext();
        java.util.List<java.lang.String> strList30 = strTokenizer27.getTokenList();
        java.lang.String[] strArray34 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        boolean boolean37 = strList30.addAll((java.util.Collection<java.lang.String>) strList35);
        char[] charArray42 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        int int45 = strTokenizer44.size();
        boolean boolean46 = strTokenizer44.hasNext();
        java.util.List<java.lang.String> strList47 = strTokenizer44.getTokenList();
        java.lang.String[] strArray51 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        boolean boolean54 = strList47.addAll((java.util.Collection<java.lang.String>) strList52);
        java.util.Spliterator<java.lang.String> strSpliterator55 = strList52.spliterator();
        int int56 = strList52.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int60 = strList52.lastIndexOf((java.lang.Object) strTokenizer59);
        java.util.List<java.lang.String> strList61 = strTokenizer59.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor62 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        int int64 = strBuilder63.capacity();
        java.lang.StringBuffer stringBuffer65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.appendln(stringBuffer65, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder63.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.appendln(true);
        boolean boolean75 = strSubstitutor62.replaceIn(strBuilder72, (int) '$', 0);
        boolean boolean76 = strList61.equals((java.lang.Object) '$');
        boolean boolean77 = strList30.retainAll((java.util.Collection<java.lang.String>) strList61);
        java.util.Iterator<java.lang.String> strItor78 = strList61.iterator();
        java.util.stream.Stream<java.lang.String> strStream79 = strList61.stream();
        java.util.stream.Stream<java.lang.String> strStream80 = strList61.parallelStream();
        boolean boolean81 = strList9.retainAll((java.util.Collection<java.lang.String>) strList61);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[4#4]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[4#4]");
        org.junit.Assert.assertNotNull(strStream20);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strSpliterator55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 3 + "'", int56 == 3);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 32 + "'", int64 == 32);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strItor78);
        org.junit.Assert.assertNotNull(strStream79);
        org.junit.Assert.assertNotNull(strStream80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test08874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08874");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setDelimiterString("");
        boolean boolean18 = strTokenizer15.isIgnoreEmptyTokens();
        boolean boolean19 = strTokenizer15.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer15.set("t");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test08875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08875");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Enumeration<?> wildcardEnumeration16 = properties0.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection18 = properties0.values();
        java.util.Properties properties19 = new java.util.Properties(properties0);
        java.lang.Object obj22 = properties19.setProperty("1\n-1.0\n{}32\n", "aaaa\nfalse\n");
        java.io.InputStream inputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.load(inputStream23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(wildcardEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test08876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08876");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadLeft(32, (int) (short) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.deleteAll('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder1.appendSeparator('\000');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.insert(62, "");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 62");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
    }

    @Test
    public void test08877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08877");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendPadding(10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer12, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer12.reset("\n32.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer12.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder6.appendFixedWidthPadRight((java.lang.Object) strTokenizer12, 4, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator(' ', 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.deleteAll('9');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test08878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08878");
        java.io.IOException iOException2 = new java.io.IOException();
        java.lang.Throwable[] throwableArray3 = iOException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException("########", (java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException8 = new java.io.IOException("{h={}}", (java.lang.Throwable) iOException2);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test08879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08879");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer15.reset();
        java.lang.String str17 = strTokenizer16.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.reset("-1");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setQuoteChar('a');
        java.lang.String str22 = strTokenizer19.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer19.setIgnoredChar('g');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#" + "'", str17, "#");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "-1" + "'", str22, "-1");
        org.junit.Assert.assertNotNull(strTokenizer24);
    }

    @Test
    public void test08880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08880");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray2 = strBuilder1.toCharArray();
        java.io.Writer writer3 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendln(strBuilder4, (int) 'a', 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln('#');
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.append(stringBuffer16, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.deleteFirst("hi!");
        char[] charArray22 = strBuilder13.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer9.reset(charArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder1.appendln(charArray22);
        java.io.Reader reader25 = strBuilder24.asReader();
        long long27 = reader25.skip(0L);
        long long29 = reader25.skip((long) 118);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(writer3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 4L + "'", long29 == 4L);
    }

    @Test
    public void test08881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08881");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray2 = strTokenizer1.getTokenArray();
        java.lang.String[] strArray3 = strTokenizer1.getTokenArray();
        boolean boolean4 = strTokenizer1.hasNext();
        int int5 = strTokenizer1.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer1.getQuoteMatcher();
        java.util.List<java.lang.String> strList7 = strTokenizer1.getTokenList();
        java.io.Reader[] readerArray8 = new java.io.Reader[] {};
        java.io.Reader[] readerArray9 = strList7.toArray(readerArray8);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator10 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList7.replaceAll(strUnaryOperator10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(readerArray8);
        org.junit.Assert.assertNotNull(readerArray9);
    }

    @Test
    public void test08882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08882");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.insert(1, (double) 32);
        java.util.Properties properties25 = new java.util.Properties();
        int int26 = properties25.size();
        boolean boolean28 = properties25.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        char[] charArray33 = strBuilder29.toCharArray();
        boolean boolean34 = properties25.containsValue((java.lang.Object) charArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder16.append(charArray33, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder16.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder0.append((java.lang.Object) true);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder0.replaceAll(strMatcher42, "{\ntrue\n=1.0}");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder0.appendSeparator("32.0", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((float) 3);
        int int52 = strBuilder47.indexOf('\000', (int) 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.setNewLineText(" -1.0\n");
        java.util.Properties properties55 = new java.util.Properties();
        int int56 = properties55.size();
        boolean boolean58 = properties55.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties59 = new java.util.Properties();
        int int60 = properties59.size();
        boolean boolean62 = properties59.containsKey((java.lang.Object) (-1.0f));
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        char[] charArray68 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ');
        int int71 = strTokenizer70.size();
        boolean boolean72 = strTokenizer70.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer70.setIgnoredMatcher(strMatcher73);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst("", "");
        java.lang.Object obj79 = properties55.putIfAbsent((java.lang.Object) strMatcher73, (java.lang.Object) strBuilder75);
        java.lang.Object obj82 = properties55.setProperty(" 4#4", "\n32.0");
        int int83 = properties55.size();
        java.lang.String str84 = properties55.toString();
        java.util.Collection<java.lang.Object> objCollection85 = properties55.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder47.appendFixedWidthPadRight((java.lang.Object) objCollection85, 15, 'a');
        java.lang.String str89 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) objCollection85);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
        org.junit.Assert.assertNotNull(objCollection85);
        org.junit.Assert.assertNotNull(strBuilder88);
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[, \n32.0]" + "'", str89, "[, \n32.0]");
    }

    @Test
    public void test08883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08883");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.delete(0, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendSeparator("1", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder3.append((double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder3.appendln((long) 25);
        int int20 = strBuilder3.size();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader30 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray36 = strTokenizer35.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.appendAll((java.lang.Object[]) strArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder31.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream41 = strBuilder31.codePoints();
        java.lang.Object obj42 = properties21.replace((java.lang.Object) reader30, (java.lang.Object) intStream41);
        reader30.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "");
        char[] charArray55 = strBuilder51.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.appendln(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray55);
        int int58 = reader30.read(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray55);
        int int60 = strTokenizer59.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer59.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder3.appendFixedWidthPadLeft((java.lang.Object) strTokenizer64, 7, 'o');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(intStream41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test08884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08884");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.setNullText("");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.replaceAll(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.replaceFirst(strMatcher13, "########a4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder5.appendPadding((int) (short) 0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder5.appendSeparator("StrTokenizer[]", (int) (short) 10);
        int int24 = strBuilder23.capacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.replaceFirst(strMatcher25, "\n100.0\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 28 + "'", int24 == 28);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test08885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08885");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.insert((int) (byte) 1, (float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.appendln((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        int int22 = strBuilder21.capacity();
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(stringBuffer23, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.insert(1, (double) 32);
        java.lang.String str31 = strBuilder21.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        char[] charArray39 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, "");
        boolean boolean42 = strTokenizer41.hasNext();
        boolean boolean43 = strTokenizer41.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder34.appendAll((java.util.Iterator<java.lang.String>) strTokenizer41);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append(' ');
        java.lang.String str48 = strBuilder46.leftString(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.insert(4, 0);
        boolean boolean53 = strBuilder46.contains('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder20.append(strBuilder46);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 32 + "'", int22 == 32);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\n32.0" + "'", str31, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\n32.0" + "'", str48, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test08886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08886");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("a4", strMatcher1);
        int int3 = strTokenizer2.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer2.setIgnoreEmptyTokens(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = strTokenizer2.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
    }

    @Test
    public void test08887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08887");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        int int3 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendln(stringBuffer4, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.insert(1, (double) 32);
        java.util.Properties properties11 = new java.util.Properties();
        int int12 = properties11.size();
        boolean boolean14 = properties11.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        boolean boolean20 = properties11.containsValue((java.lang.Object) charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder2.append(charArray19, (int) (byte) 0, 0);
        boolean boolean24 = properties0.equals((java.lang.Object) 0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties0.entrySet();
        java.util.Collection<java.lang.Object> objCollection26 = properties0.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendPadding(10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer39, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer39.reset("\n32.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strTokenizer39.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder33.appendFixedWidthPadRight((java.lang.Object) strTokenizer39, 4, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator(' ', 3);
        java.io.Writer writer52 = strBuilder48.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln((double) '#');
        boolean boolean68 = strBuilder58.equals(strBuilder67);
        java.util.stream.IntStream intStream69 = strBuilder58.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder58.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder58.minimizeCapacity();
        java.lang.String str72 = strBuilder71.getNewLineText();
        boolean boolean73 = strBuilder71.isEmpty();
        java.io.Writer writer74 = writer52.append((java.lang.CharSequence) strBuilder71);
        properties0.store(writer74, "OException");
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32 + "'", int3 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(writer52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(intStream69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(writer74);
    }

    @Test
    public void test08888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08888");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(53);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadLeft((java.lang.Object) "\naaaa100", 103, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "");
        char[] charArray13 = strBuilder9.toCharArray();
        char[] charArray14 = strBuilder6.getChars(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        boolean boolean16 = strTokenizer15.hasPrevious();
        java.util.List<java.lang.String> strList17 = strTokenizer15.getTokenList();
        java.lang.Object[] objArray18 = strList17.toArray();
        java.util.ListIterator<java.lang.String> strItor19 = strList17.listIterator();
        boolean boolean21 = strList17.add("97\nhi!101.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder5.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList17, "\ntrue\n");
        java.util.stream.IntStream intStream24 = strBuilder23.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNullText("");
        char[] charArray31 = strBuilder30.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, "true\n###################################3\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, "e6.0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder23.appendln(charArray31, 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 0");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(strItor19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strMatcher38);
    }

    @Test
    public void test08889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08889");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceAll("#", "true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator('#', 51);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.lang.String str27 = properties21.getProperty("h");
        boolean boolean28 = properties21.isEmpty();
        properties21.clear();
        boolean boolean30 = strBuilder13.equals((java.lang.Object) properties21);
        java.lang.Object obj33 = properties21.setProperty("{\ntrue\n=1.0}", " -1.0\n");
        java.lang.Object obj36 = properties21.setProperty("\n32.032", "\nt\n\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test08890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08890");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst('a', '4');
        java.io.Writer writer8 = strBuilder7.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        char[] charArray20 = strBuilder16.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendln(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray20);
        writer8.write(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, '4', '$');
        int int27 = strTokenizer26.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer26.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        int int33 = strBuilder29.indexOf("");
        int int36 = strBuilder29.lastIndexOf('#', (int) (byte) 0);
        boolean boolean38 = strBuilder29.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer39);
        boolean boolean41 = strTokenizer39.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("", "");
        char[] charArray57 = strBuilder53.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendln(charArray57);
        int int62 = strMatcher45.isMatch(charArray57, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer43.setTrimmerMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer26.setDelimiterMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("a4", strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.appendln('#');
        java.lang.StringBuffer stringBuffer72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.append(stringBuffer72, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.deleteFirst("hi!");
        char[] charArray78 = strBuilder69.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher79, strMatcher80);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher82);
        int int87 = strMatcher45.isMatch(charArray78, 119, (int) 's', (int) '6');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, \n]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test08891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08891");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray2 = strTokenizer1.getTokenArray();
        java.lang.String[] strArray3 = strTokenizer1.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer1.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.setDelimiterString("1001\n");
        java.lang.Object obj7 = strTokenizer6.clone();
        boolean boolean8 = strTokenizer6.hasNext();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test08892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08892");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        int int13 = strBuilder12.capacity();
        java.lang.StringBuffer stringBuffer14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(stringBuffer14, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.insert(1, (double) 32);
        java.lang.String str22 = strBuilder12.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "");
        char[] charArray30 = strBuilder26.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, "");
        boolean boolean33 = strTokenizer32.hasNext();
        boolean boolean34 = strTokenizer32.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder25.appendAll((java.util.Iterator<java.lang.String>) strTokenizer32);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator("hi!", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder10.appendFixedWidthPadRight((java.lang.Object) "hi!", 10, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder10.append((java.lang.CharSequence) strBuilder47);
        int int49 = strBuilder48.length();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\n32.0" + "'", str22, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 47 + "'", int49 == 47);
    }

    @Test
    public void test08893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08893");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        reader9.reset();
        long long24 = reader9.skip((long) (short) 0);
        reader9.reset();
        int int26 = reader9.read();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 35 + "'", int26 == 35);
    }

    @Test
    public void test08894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08894");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder5.append((long) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder5.append('a');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test08895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08895");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("\n\0002.0java.io.IOException: hi!");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test08896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08896");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        boolean boolean20 = strList9.add("\n");
        java.util.Spliterator<java.lang.String> strSpliterator21 = strList9.spliterator();
        java.lang.String str23 = strList9.remove(0);
        char[] charArray28 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        int int31 = strTokenizer30.size();
        boolean boolean32 = strTokenizer30.hasNext();
        java.util.List<java.lang.String> strList33 = strTokenizer30.getTokenList();
        java.lang.String[] strArray37 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        boolean boolean40 = strList33.addAll((java.util.Collection<java.lang.String>) strList38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray43 = strTokenizer42.getTokenArray();
        java.lang.String[] strArray44 = strTokenizer42.getTokenArray();
        boolean boolean45 = strTokenizer42.hasNext();
        int int46 = strTokenizer42.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer42.getQuoteMatcher();
        java.util.List<java.lang.String> strList48 = strTokenizer42.getTokenList();
        boolean boolean49 = strList33.retainAll((java.util.Collection<java.lang.String>) strList48);
        boolean boolean51 = strList48.add("35.0\n4");
        boolean boolean52 = strList9.retainAll((java.util.Collection<java.lang.String>) strList48);
        java.util.stream.Stream<java.lang.String> strStream53 = strList48.parallelStream();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strSpliterator21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4#4" + "'", str23, "4#4");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strStream53);
    }

    @Test
    public void test08897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08897");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.appendAll((java.lang.Object[]) strArray9);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        char[] charArray18 = strBuilder14.toCharArray();
        char[] charArray19 = strBuilder11.getChars(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        char[] charArray21 = strBuilder3.getChars(charArray18);
        int int25 = strMatcher2.isMatch(charArray21, 7, 7, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, 'e', ' ');
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test08898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08898");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        char[] charArray16 = strBuilder8.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        char[] charArray18 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer22.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(strMatcher23);
    }

    @Test
    public void test08899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08899");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.append((-1.0d));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        char[] charArray20 = strBuilder16.toCharArray();
        char[] charArray21 = strBuilder13.getChars(charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder12.appendln(charArray20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.insert(101, (double) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 101");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test08900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08900");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.replaceFirst('a', ' ');
        java.lang.String str13 = strBuilder6.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.ensureCapacity(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteAll(' ');
        java.io.Reader reader20 = strBuilder17.asReader();
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        java.lang.Object obj23 = properties21.clone();
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        properties21.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        int int27 = strBuilder26.capacity();
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(stringBuffer28, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder26.setLength(32);
        java.io.Writer writer37 = strBuilder36.asWriter();
        writer37.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        writer37.flush();
        writer37.flush();
        properties21.store(writer37, "t");
        writer37.write(39);
        writer37.write("java.io.IOException: java.io.IOException: StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("", "");
        char[] charArray57 = strBuilder53.toCharArray();
        char[] charArray58 = strBuilder50.getChars(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        boolean boolean60 = strTokenizer59.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst("", "");
        char[] charArray74 = strBuilder70.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.appendln(charArray74);
        int int79 = strMatcher62.isMatch(charArray74, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer59.reset(charArray74);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray74);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray74);
        writer37.write(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, '\000');
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray74);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder17.replace(strMatcher87, "\n100.0\n3\n", 28, 3, 22);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[]");
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[]");
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strMatcher87);
    }

    @Test
    public void test08901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08901");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(116);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadRight((int) ' ', (int) 't', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.setNewLineText("\nt\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.insert(50, "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000true\n");
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test08902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08902");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.insert(1, (double) 32);
        java.lang.String str39 = strBuilder29.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.insert(1, '#');
        boolean boolean43 = strList28.equals((java.lang.Object) strBuilder29);
        boolean boolean44 = strList9.containsAll((java.util.Collection<java.lang.String>) strList28);
        java.lang.String str46 = strList9.remove((int) (short) 0);
        java.util.Iterator<java.lang.String> strItor47 = strList9.iterator();
        char[] charArray52 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, ' ');
        int int55 = strTokenizer54.size();
        boolean boolean56 = strTokenizer54.hasNext();
        java.util.List<java.lang.String> strList57 = strTokenizer54.getTokenList();
        boolean boolean58 = strList9.containsAll((java.util.Collection<java.lang.String>) strList57);
        char[] charArray63 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        int int66 = strTokenizer65.size();
        boolean boolean67 = strTokenizer65.hasNext();
        java.util.List<java.lang.String> strList68 = strTokenizer65.getTokenList();
        java.lang.String[] strArray72 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        boolean boolean75 = strList68.addAll((java.util.Collection<java.lang.String>) strList73);
        java.util.Spliterator<java.lang.String> strSpliterator76 = strList73.spliterator();
        int int77 = strList73.size();
        boolean boolean79 = strList73.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream80 = strList73.stream();
        java.util.Iterator<java.lang.String> strItor81 = strList73.iterator();
        boolean boolean82 = strList9.retainAll((java.util.Collection<java.lang.String>) strList73);
        java.util.Iterator<java.lang.String> strItor83 = strList9.iterator();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n32.0" + "'", str39, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4#4" + "'", str46, "4#4");
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strSpliterator76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 3 + "'", int77 == 3);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strStream80);
        org.junit.Assert.assertNotNull(strItor81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strItor83);
    }

    @Test
    public void test08903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08903");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.deleteAll("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.setIgnoredChar('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer31, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder26.appendSeparator('4', 116);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder26.deleteAll('9');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test08904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08904");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor28 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(true);
        boolean boolean41 = strSubstitutor28.replaceIn(strBuilder38, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder0.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strBuilder38.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("-1");
        java.lang.String str46 = strTokenizer45.next();
        int int47 = strTokenizer45.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\ntrue\n" + "'", str46, "\ntrue\n");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
    }

    @Test
    public void test08905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08905");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        java.lang.String str10 = strBuilder6.getNewLineText();
        java.util.stream.IntStream intStream11 = strBuilder6.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.append((java.lang.CharSequence) strBuilder6);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.deleteAll('4');
        int int20 = strBuilder18.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "");
        char[] charArray25 = strBuilder21.toCharArray();
        char[] charArray26 = strBuilder18.getChars(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder3.append(charArray26);
        int int34 = strBuilder3.indexOf("a10", (-1));
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(intStream11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test08906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08906");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        char[] charArray78 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        int int81 = strTokenizer80.size();
        int int82 = strTokenizer80.previousIndex();
        boolean boolean83 = strList9.equals((java.lang.Object) strTokenizer80);
        java.lang.String str84 = strTokenizer80.next();
        java.lang.String str85 = strTokenizer80.previous();
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer80.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer80.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer80.setQuoteMatcher(strMatcher89);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4#4" + "'", str84, "4#4");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "4#4" + "'", str85, "4#4");
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer90);
    }

    @Test
    public void test08907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08907");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "");
        char[] charArray21 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln(charArray21);
        int int26 = strMatcher9.isMatch(charArray21, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray42 = strTokenizer41.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendAll((java.lang.Object[]) strArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder27.appendln(strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst('a', '4');
        java.io.Writer writer57 = strBuilder56.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst("", "");
        char[] charArray69 = strBuilder65.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.appendln(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray69);
        writer57.write(charArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder49.append(charArray69);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", strMatcher9, strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder0.appendln((java.lang.Object) strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder0.appendln(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.append('9');
        java.lang.String str85 = strBuilder82.substring(0, 47);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(writer57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[]");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "\norg.pache.commons.lang3.text.StrMatcher$NoMatc" + "'", str85, "\norg.pache.commons.lang3.text.StrMatcher$NoMatc");
    }

    @Test
    public void test08908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08908");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        int int18 = reader16.read();
        boolean boolean19 = reader16.markSupported();
        int int20 = reader16.read();
        boolean boolean21 = reader16.markSupported();
        int int22 = reader16.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.append('a');
        int int31 = strBuilder24.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strBuilder24.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray40 = strTokenizer39.getTokenArray();
        java.lang.String[] strArray41 = strTokenizer39.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendWithSeparators((java.lang.Object[]) strArray41, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteAll(strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.deleteAll('4');
        int int56 = strBuilder54.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst("", "");
        char[] charArray61 = strBuilder57.toCharArray();
        char[] charArray62 = strBuilder54.getChars(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        char[] charArray64 = strBuilder48.getChars(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder24.insert((int) (byte) 0, charArray64);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray64);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = reader16.read(charArray64, 50, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher66);
    }

    @Test
    public void test08909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08909");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        strList14.clear();
        java.util.ListIterator<java.lang.String> strItor24 = strList14.listIterator();
        java.lang.Object obj25 = null;
        boolean boolean26 = strList14.contains(obj25);
        java.util.ListIterator<java.lang.String> strItor27 = strList14.listIterator();
        strList14.clear();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strItor27);
    }

    @Test
    public void test08910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08910");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: hi!", ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        char[] charArray20 = strBuilder16.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendln(charArray20);
        int int25 = strMatcher8.isMatch(charArray20, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray31 = strTokenizer30.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendAll((java.lang.Object[]) strArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray41 = strTokenizer40.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendAll((java.lang.Object[]) strArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder26.appendln(strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst('a', '4');
        java.io.Writer writer56 = strBuilder55.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "");
        char[] charArray68 = strBuilder64.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder63.appendln(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        writer56.write(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder48.append(charArray68);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", strMatcher8, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("true\n###################################", strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("tue", strMatcher4, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.setIgnoredChar('#');
        java.util.List<java.lang.String> strList79 = strTokenizer78.getTokenList();
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(writer56);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strList79);
    }

    @Test
    public void test08911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08911");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        boolean boolean20 = strList14.add("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendAll((java.lang.Object[]) strArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.replaceFirst('a', 'a');
        char[] charArray35 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        int int38 = strTokenizer37.size();
        boolean boolean39 = strTokenizer37.hasNext();
        java.util.List<java.lang.String> strList40 = strTokenizer37.getTokenList();
        java.lang.String[] strArray44 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = strList40.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder21.appendAll((java.lang.Iterable<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor49 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        int int51 = strBuilder50.capacity();
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(stringBuffer52, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln(true);
        boolean boolean62 = strSubstitutor49.replaceIn(strBuilder59, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder21.append((java.lang.CharSequence) strBuilder59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strBuilder59.asTokenizer();
        char[] charArray69 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ');
        int int72 = strTokenizer71.size();
        boolean boolean73 = strTokenizer71.hasNext();
        java.util.List<java.lang.String> strList74 = strTokenizer71.getTokenList();
        java.lang.String[] strArray78 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        boolean boolean81 = strList74.addAll((java.util.Collection<java.lang.String>) strList79);
        java.util.Spliterator<java.lang.String> strSpliterator82 = strList79.spliterator();
        int int83 = strList79.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int87 = strList79.lastIndexOf((java.lang.Object) strTokenizer86);
        strList79.clear();
        java.util.Spliterator<java.lang.String> strSpliterator89 = strList79.spliterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder59.appendAll((java.lang.Iterable<java.lang.String>) strList79);
        java.util.Iterator<java.lang.String> strItor91 = strList79.iterator();
        boolean boolean92 = strList14.removeAll((java.util.Collection<java.lang.String>) strList79);
        java.lang.Object[] objArray93 = strList79.toArray();
        boolean boolean95 = strList79.add("aaaa\n35.0");
        // The following exception was thrown during execution in test generation
        try {
            strList79.add((int) 'e', "\n36.0\n\n32.0");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 101, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 32 + "'", int51 == 32);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strSpliterator82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 3 + "'", int83 == 3);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test08912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08912");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int14 = strBuilder0.lastIndexOf(strMatcher13);
        char[] charArray19 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        int int22 = strTokenizer21.size();
        boolean boolean23 = strTokenizer21.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer21.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder0.deleteFirst(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder0.appendln(0.0d);
        java.io.Writer writer29 = strBuilder28.asWriter();
        writer29.close();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(writer29);
    }

    @Test
    public void test08913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08913");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder33.lastIndexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.insert((int) (short) 1, 32);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        boolean boolean42 = properties39.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties39.entrySet();
        java.lang.Object obj44 = properties0.putIfAbsent((java.lang.Object) strBuilder38, (java.lang.Object) objEntrySet43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        int int46 = strBuilder45.capacity();
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(stringBuffer47, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.insert(1, (double) 32);
        java.lang.String str55 = strBuilder45.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder45.replaceAll("", "hi!");
        boolean boolean59 = properties0.contains((java.lang.Object) "");
        java.util.Properties properties60 = new java.util.Properties(properties0);
        properties60.clear();
        java.util.Set<java.lang.Object> objSet62 = properties60.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        int int65 = strBuilder64.capacity();
        java.lang.StringBuffer stringBuffer66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendln(stringBuffer66, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder64.insert(1, (double) 32);
        boolean boolean73 = strBuilder64.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder64.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder64.clear();
        int int76 = strBuilder75.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader84 = strBuilder80.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder75.appendln(strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder75.replaceFirst("\n32.0", "StrTokenizer[not tokenized yet]");
        boolean boolean89 = properties60.containsValue((java.lang.Object) strBuilder75);
        java.lang.String str91 = properties60.getProperty("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\n32.0" + "'", str55, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 32 + "'", int65 == 32);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 32 + "'", int76 == 32);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(reader84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test08914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08914");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.appendFixedWidthPadLeft(0, 5, '4');
        java.io.Writer writer17 = strBuilder3.asWriter();
        java.io.Writer writer19 = writer17.append('e');
        // The following exception was thrown during execution in test generation
        try {
            java.io.Writer writer23 = writer19.append((java.lang.CharSequence) "\n#\n\n", (int) 'e', 204);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 204");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(writer17);
        org.junit.Assert.assertNotNull(writer19);
    }

    @Test
    public void test08915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08915");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("a4", strMatcher1);
        int int3 = strTokenizer2.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        char[] charArray10 = strBuilder6.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, "");
        boolean boolean13 = strTokenizer12.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer12.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer2.setQuoteMatcher(strMatcher14);
        int int16 = strTokenizer15.nextIndex();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
    }

    @Test
    public void test08916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08916");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((float) '$');
        char char27 = strBuilder25.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.setNewLineText("\n32.0java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "");
        char[] charArray37 = strBuilder33.toCharArray();
        char[] charArray38 = strBuilder30.getChars(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        char[] charArray40 = strBuilder29.getChars(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer15.reset(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray37);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + char27 + "' != '" + '#' + "'", char27 == '#');
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#36.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#36.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 3, 6, ., 0]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer42);
    }

    @Test
    public void test08917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08917");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        java.lang.String str20 = strList14.remove((int) (byte) 0);
        char[] charArray25 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        int int28 = strTokenizer27.size();
        boolean boolean29 = strTokenizer27.hasNext();
        java.util.List<java.lang.String> strList30 = strTokenizer27.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        int int32 = strBuilder31.capacity();
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(stringBuffer33, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.insert(1, (double) 32);
        java.lang.String str41 = strBuilder31.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.insert(1, '#');
        boolean boolean45 = strList30.equals((java.lang.Object) strBuilder31);
        boolean boolean46 = strList14.retainAll((java.util.Collection<java.lang.String>) strList30);
        java.util.Spliterator<java.lang.String> strSpliterator47 = strList14.spliterator();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\n32.0" + "'", str41, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strSpliterator47);
    }

    @Test
    public void test08918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08918");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(" 4#4");
        int int2 = strTokenizer1.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.reset("-1");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setDelimiterChar('\n');
        int int8 = strTokenizer5.nextIndex();
        int int9 = strTokenizer5.previousIndex();
        boolean boolean10 = strTokenizer5.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer5.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test08919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08919");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        java.lang.String str10 = strBuilder6.getNewLineText();
        java.util.stream.IntStream intStream11 = strBuilder6.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.append((java.lang.CharSequence) strBuilder6);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.setLength((int) (short) 100);
        java.lang.String str15 = strBuilder3.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.replaceFirst('\n', '\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(intStream11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test08920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08920");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000", '#', '2');
    }

    @Test
    public void test08921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08921");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder0.appendln('a');
        boolean boolean24 = strBuilder0.isEmpty();
        boolean boolean26 = strBuilder0.startsWith("\n-1.0");
        java.lang.Throwable throwable28 = null;
        java.io.IOException iOException29 = new java.io.IOException("{}", throwable28);
        java.lang.Throwable[] throwableArray30 = iOException29.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder0.appendAll((java.lang.Object[]) throwableArray30);
        java.lang.String str32 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) throwableArray30);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test08922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08922");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties4.entrySet();
        java.io.IOException iOException13 = new java.io.IOException();
        java.lang.Throwable[] throwableArray14 = iOException13.getSuppressed();
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException13);
        boolean boolean17 = properties4.containsValue((java.lang.Object) iOException16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("StrTokenizer[java.io.IOException]", "IOException: h");
        java.util.Properties properties23 = new java.util.Properties();
        int int24 = properties23.size();
        java.util.Set<java.lang.Object> objSet25 = properties23.keySet();
        java.util.Properties properties28 = new java.util.Properties();
        int int29 = properties28.size();
        boolean boolean31 = properties28.containsKey((java.lang.Object) (-1.0f));
        boolean boolean32 = properties23.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray37 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        int int40 = strTokenizer39.size();
        boolean boolean41 = strTokenizer39.hasNext();
        java.util.List<java.lang.String> strList42 = strTokenizer39.getTokenList();
        java.lang.String[] strArray46 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        boolean boolean49 = strList42.addAll((java.util.Collection<java.lang.String>) strList47);
        java.util.Spliterator<java.lang.String> strSpliterator50 = strList47.spliterator();
        int int51 = strList47.size();
        boolean boolean53 = strList47.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream54 = strList47.stream();
        boolean boolean55 = properties23.containsKey((java.lang.Object) strList47);
        int int56 = strList47.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        int int58 = strBuilder57.capacity();
        java.lang.StringBuffer stringBuffer59 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(stringBuffer59, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.appendln((int) (byte) 0);
        java.io.Writer writer65 = strBuilder64.asWriter();
        java.io.Writer writer66 = strBuilder64.asWriter();
        int int67 = strList47.lastIndexOf((java.lang.Object) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder22.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList47, "########");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        int int71 = strBuilder70.capacity();
        java.lang.StringBuffer stringBuffer72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.appendln(stringBuffer72, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder70.insert(1, (double) 32);
        java.util.Properties properties79 = new java.util.Properties();
        int int80 = properties79.size();
        boolean boolean82 = properties79.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.replaceFirst("", "");
        char[] charArray87 = strBuilder83.toCharArray();
        boolean boolean88 = properties79.containsValue((java.lang.Object) charArray87);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder70.append(charArray87, (int) (byte) 0, 0);
        java.lang.Object obj92 = properties4.put((java.lang.Object) strBuilder69, (java.lang.Object) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strSpliterator50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3 + "'", int51 == 3);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 4 + "'", int56 == 4);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 32 + "'", int58 == 32);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(writer65);
        org.junit.Assert.assertNotNull(writer66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 32 + "'", int71 == 32);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test08923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08923");
        char[] charArray2 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString("hi!");
        boolean boolean6 = strTokenizer3.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test08924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08924");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor24 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln(true);
        boolean boolean37 = strSubstitutor24.replaceIn(strBuilder34, (int) '$', 0);
        boolean boolean38 = strList23.equals((java.lang.Object) '$');
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        java.util.Set<java.lang.Object> objSet41 = properties39.keySet();
        java.util.Properties properties44 = new java.util.Properties();
        int int45 = properties44.size();
        boolean boolean47 = properties44.containsKey((java.lang.Object) (-1.0f));
        boolean boolean48 = properties39.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray53 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        int int56 = strTokenizer55.size();
        boolean boolean57 = strTokenizer55.hasNext();
        java.util.List<java.lang.String> strList58 = strTokenizer55.getTokenList();
        java.lang.String[] strArray62 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        boolean boolean65 = strList58.addAll((java.util.Collection<java.lang.String>) strList63);
        java.util.Spliterator<java.lang.String> strSpliterator66 = strList63.spliterator();
        int int67 = strList63.size();
        boolean boolean69 = strList63.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream70 = strList63.stream();
        boolean boolean71 = properties39.containsKey((java.lang.Object) strList63);
        boolean boolean72 = strList23.retainAll((java.util.Collection<java.lang.String>) strList63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray76 = strTokenizer75.getTokenArray();
        java.lang.String[] strArray77 = strTokenizer75.getTokenArray();
        boolean boolean78 = strTokenizer75.hasNext();
        int int79 = strTokenizer75.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = strTokenizer75.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher80);
        java.util.List<java.lang.String> strList82 = strTokenizer81.getTokenList();
        boolean boolean83 = strList63.containsAll((java.util.Collection<java.lang.String>) strList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList86 = strList63.subList(117, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(117) > toIndex(-1)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strSpliterator66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 3 + "'", int67 == 3);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strStream70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test08925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08925");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.insert((int) (short) 0, "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.append((java.lang.CharSequence) strBuilder19);
        int int22 = strBuilder20.indexOf('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer28, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder23.setLength((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.insert((int) '4', (double) (byte) 1);
        char[] charArray39 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        int int44 = strBuilder43.capacity();
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(stringBuffer45, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.insert(1, (double) 32);
        java.lang.String str53 = strBuilder43.rightString((int) ' ');
        boolean boolean55 = strBuilder43.startsWith("");
        char[] charArray56 = strBuilder43.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer42.setDelimiterMatcher(strMatcher57);
        int int59 = strBuilder33.indexOf(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder33.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder20.appendFixedWidthPadRight((java.lang.Object) strBuilder33, 50, 't');
        java.util.Properties properties65 = new java.util.Properties();
        int int66 = properties65.size();
        boolean boolean68 = properties65.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties69 = new java.util.Properties();
        int int70 = properties69.size();
        boolean boolean72 = properties69.containsKey((java.lang.Object) (-1.0f));
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties69);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties69.keys();
        java.util.Set<java.lang.Object> objSet75 = properties69.keySet();
        boolean boolean76 = properties69.isEmpty();
        java.lang.String str77 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strBuilder33, properties69);
        boolean boolean78 = properties69.isEmpty();
        java.util.Set<java.lang.String> strSet79 = properties69.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection80 = properties69.values();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 32 + "'", int44 == 32);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\n32.0" + "'", str53, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 53 + "'", int59 == 53);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNotNull(objSet75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000true\n" + "'", str77, "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000true\n");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strSet79);
        org.junit.Assert.assertNotNull(objCollection80);
    }

    @Test
    public void test08926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08926");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        boolean boolean12 = strBuilder0.startsWith("");
        char[] charArray13 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        int int18 = strBuilder17.capacity();
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(stringBuffer19, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer28.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.replaceFirst(strMatcher30, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer16.setQuoteMatcher(strMatcher30);
        int int35 = strBuilder0.lastIndexOf(strMatcher30, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder0.setLength((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst('#', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.insert(93, 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendFixedWidthPadRight(100, 120, '9');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 32 + "'", int18 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test08927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08927");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        char[] charArray78 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        int int81 = strTokenizer80.size();
        int int82 = strTokenizer80.previousIndex();
        boolean boolean83 = strList9.equals((java.lang.Object) strTokenizer80);
        java.lang.String str84 = strTokenizer80.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer80.setDelimiterString("{}");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer80.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer80.getTrimmerMatcher();
        boolean boolean90 = strTokenizer80.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer80.setIgnoredChar('9');
        boolean boolean93 = strTokenizer80.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4#4" + "'", str84, "4#4");
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test08928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08928");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.deleteAll('4');
        java.util.stream.IntStream intStream11 = strBuilder10.chars();
        java.lang.String str14 = strBuilder10.substring(0, 286);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(intStream11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "a" + "'", str14, "a");
    }

    @Test
    public void test08929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08929");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray11 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        int int14 = strTokenizer13.size();
        boolean boolean15 = strTokenizer13.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer13.setIgnoredMatcher(strMatcher16);
        int int19 = strBuilder3.indexOf(strMatcher16, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.deleteFirst("StrTokenizer[32.0]");
        char[] charArray26 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        int int29 = strTokenizer28.size();
        boolean boolean30 = strTokenizer28.hasNext();
        java.util.List<java.lang.String> strList31 = strTokenizer28.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        char[] charArray36 = strBuilder32.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        boolean boolean40 = strList31.equals((java.lang.Object) charArray36);
        boolean boolean42 = strList31.add("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder21.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList31, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.appendSeparator('4', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln((double) '#');
        boolean boolean63 = strBuilder53.equals(strBuilder62);
        java.util.stream.IntStream intStream64 = strBuilder53.codePoints();
        java.util.Iterator<java.lang.String> strItor65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder53.appendWithSeparators(strItor65, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst(' ', ' ');
        java.util.Properties properties71 = new java.util.Properties();
        int int72 = properties71.size();
        java.lang.Object obj73 = properties71.clone();
        java.util.Set<java.lang.String> strSet74 = properties71.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder67.appendFixedWidthPadLeft((java.lang.Object) properties71, (int) '$', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder67.insert(2, 10.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder44.append((java.lang.CharSequence) strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceFirst("java.io.IOException: StrTokenizer[not tokenized yet]", "3");
        char[] charArray85 = strBuilder81.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder81.reverse();
        int int89 = strBuilder86.lastIndexOf('7', 22);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(intStream64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "{}");
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "4#4StrTokenizer[not tokenized yet]\ntr10.0ue\n#####################################################################{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "4#4StrTokenizer[not tokenized yet]\ntr10.0ue\n#####################################################################{}");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[4, #, 4, S, t, r, T, o, k, e, n, i, z, e, r, [, n, o, t,  , t, o, k, e, n, i, z, e, d,  , y, e, t, ], \n, t, r, 1, 0, ., 0, u, e, \n, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, {, }]");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test08930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08930");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        boolean boolean12 = strBuilder0.startsWith("");
        char[] charArray13 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.ensureCapacity((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.replaceAll("java.io.IOException: {}", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendSeparator('t', '$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        java.lang.String[] strArray27 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer25.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer25.setDelimiterString("1001\n");
        java.lang.String str31 = strTokenizer30.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strTokenizer30.getQuoteMatcher();
        int int34 = strBuilder23.lastIndexOf(strMatcher32, 113);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test08931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08931");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        char[] charArray18 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setDelimiterString("\n32.0#a1111111");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(strTokenizer23);
    }

    @Test
    public void test08932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08932");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('a', '4');
        java.io.Writer writer34 = strBuilder33.asWriter();
        properties26.store(writer34, "");
        java.util.Properties properties37 = new java.util.Properties();
        int int38 = properties37.size();
        boolean boolean40 = properties37.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties41 = new java.util.Properties();
        int int42 = properties41.size();
        boolean boolean44 = properties41.containsKey((java.lang.Object) (-1.0f));
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.keys();
        boolean boolean47 = properties26.containsValue((java.lang.Object) objEnumeration46);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Collection<java.lang.Object> objCollection49 = properties26.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray55 = strTokenizer54.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.appendAll((java.lang.Object[]) strArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder50.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray65 = strTokenizer64.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.appendAll((java.lang.Object[]) strArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder50.appendln(strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendln((long) 'a');
        java.lang.Object obj70 = properties26.get((java.lang.Object) 'a');
        java.util.Set<java.lang.Object> objSet71 = properties26.keySet();
        java.util.Properties properties72 = new java.util.Properties();
        int int73 = properties72.size();
        java.util.Set<java.lang.Object> objSet74 = properties72.keySet();
        java.lang.Object obj75 = properties26.get((java.lang.Object) objSet74);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objSet71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(objSet74);
        org.junit.Assert.assertNull(obj75);
    }

    @Test
    public void test08933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08933");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        properties0.clear();
        char[] charArray33 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        int int36 = strTokenizer35.size();
        boolean boolean37 = strTokenizer35.hasNext();
        java.util.List<java.lang.String> strList38 = strTokenizer35.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("", "");
        char[] charArray43 = strBuilder39.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray43);
        boolean boolean47 = strList38.equals((java.lang.Object) charArray43);
        java.util.Spliterator<java.lang.String> strSpliterator48 = strList38.spliterator();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer50.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer53.reset("4#4");
        int int56 = strList38.indexOf((java.lang.Object) "4#4");
        java.util.ListIterator<java.lang.String> strItor57 = strList38.listIterator();
        java.lang.Object obj58 = properties0.remove((java.lang.Object) strList38);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties0.entrySet();
        java.util.Collection<java.lang.Object> objCollection60 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties0.keys();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strSpliterator48);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strItor57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(objEnumeration62);
    }

    @Test
    public void test08934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08934");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset("");
        java.lang.String str5 = strTokenizer4.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setIgnoreEmptyTokens(true);
        int int8 = strTokenizer7.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer7.setIgnoredChar('g');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = strTokenizer12.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
    }

    @Test
    public void test08935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08935");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer5, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer5.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoredChar('9');
        boolean boolean15 = strTokenizer14.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test08936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08936");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((int) (short) 1);
        int int16 = strBuilder10.lastIndexOf("{}", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (long) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.appendln("StrTokenizer[ 4#4]");
        java.lang.Object obj25 = null;
        boolean boolean26 = strBuilder19.equals(obj25);
        java.util.Properties properties27 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray34 = strTokenizer33.getTokenArray();
        java.lang.String[] strArray35 = strTokenizer33.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.appendWithSeparators((java.lang.Object[]) strArray35, "4#4");
        char[] charArray40 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray40);
        java.lang.Object obj42 = properties27.getOrDefault((java.lang.Object) strBuilder31, (java.lang.Object) strTokenizer41);
        java.util.Collection<java.lang.Object> objCollection43 = properties27.values();
        boolean boolean44 = properties27.isEmpty();
        properties27.clear();
        java.lang.Object obj46 = properties27.clone();
        boolean boolean47 = properties27.isEmpty();
        properties27.clear();
        int int49 = properties27.size();
        int int50 = properties27.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln((double) '#');
        boolean boolean66 = strBuilder56.equals(strBuilder65);
        java.util.stream.IntStream intStream67 = strBuilder56.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder56.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder56.minimizeCapacity();
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = null;
        int int71 = strBuilder69.lastIndexOf(strMatcher70);
        boolean boolean72 = properties27.containsKey((java.lang.Object) strBuilder69);
        java.lang.String str73 = org.apache.commons.lang3.text.StrSubstitutor.replace(obj25, properties27);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(intStream67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test08937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08937");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        int int9 = strBuilder0.capacity();
        int int11 = strBuilder0.lastIndexOf('g');
        int int13 = strBuilder0.lastIndexOf('o');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test08938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08938");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendSeparator("{}");
        java.io.Writer writer8 = strBuilder5.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendSeparator("\n32.0java.io.IOException: hi!");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test08939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08939");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.deleteAll(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer9.setIgnoredMatcher(strMatcher20);
        java.lang.String str23 = strTokenizer9.previousToken();
        boolean boolean24 = strTokenizer9.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer9.setDelimiterChar('e');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strTokenizer26);
    }

    @Test
    public void test08940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08940");
        char[] charArray3 = new char[] { 'a', '$', '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '$');
        java.util.List<java.lang.String> strList6 = strTokenizer5.getTokenList();
        boolean boolean7 = strList6.isEmpty();
        java.util.stream.Stream<java.lang.String> strStream8 = strList6.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray14 = strTokenizer13.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.appendAll((java.lang.Object[]) strArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer19 = strBuilder18.toStringBuffer();
        char[] charArray24 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        int int27 = strTokenizer26.size();
        boolean boolean28 = strTokenizer26.hasNext();
        java.util.List<java.lang.String> strList29 = strTokenizer26.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst("", "");
        char[] charArray34 = strBuilder30.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray34);
        boolean boolean38 = strList29.equals((java.lang.Object) charArray34);
        char[] charArray43 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        int int46 = strTokenizer45.size();
        boolean boolean47 = strTokenizer45.hasNext();
        java.util.List<java.lang.String> strList48 = strTokenizer45.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        int int50 = strBuilder49.capacity();
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(stringBuffer51, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder49.insert(1, (double) 32);
        java.lang.String str59 = strBuilder49.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder49.insert(1, '#');
        boolean boolean63 = strList48.equals((java.lang.Object) strBuilder49);
        boolean boolean64 = strList29.containsAll((java.util.Collection<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder18.appendAll((java.lang.Iterable<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int68 = strList48.lastIndexOf((java.lang.Object) "hi!");
        char[] charArray73 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, ' ');
        int int76 = strTokenizer75.size();
        boolean boolean77 = strTokenizer75.hasNext();
        java.util.List<java.lang.String> strList78 = strTokenizer75.getTokenList();
        java.lang.String[] strArray82 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        boolean boolean85 = strList78.addAll((java.util.Collection<java.lang.String>) strList83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray88 = strTokenizer87.getTokenArray();
        java.lang.String[] strArray89 = strTokenizer87.getTokenArray();
        boolean boolean90 = strTokenizer87.hasNext();
        int int91 = strTokenizer87.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer87.getQuoteMatcher();
        java.util.List<java.lang.String> strList93 = strTokenizer87.getTokenList();
        boolean boolean94 = strList78.retainAll((java.util.Collection<java.lang.String>) strList93);
        boolean boolean95 = strList48.removeAll((java.util.Collection<java.lang.String>) strList93);
        java.lang.Object[] objArray96 = strList48.toArray();
        boolean boolean97 = strList6.addAll((java.util.Collection<java.lang.String>) strList48);
        int int98 = strList6.size();
        int int99 = strList6.size();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a$$");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a$$");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, $, $]");
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strStream8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(stringBuffer19);
        org.junit.Assert.assertEquals(stringBuffer19.toString(), "");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 32 + "'", int50 == 32);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\n32.0" + "'", str59, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[4#4]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[4#4]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 2 + "'", int98 == 2);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 2 + "'", int99 == 2);
    }

    @Test
    public void test08941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08941");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString(" 4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setIgnoreEmptyTokens(true);
        boolean boolean8 = strTokenizer7.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.reset("\n-1.0");
        java.lang.String str11 = strTokenizer10.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer10.getQuoteMatcher();
        boolean boolean13 = strTokenizer10.isIgnoreEmptyTokens();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer10.add("\n#\n\n\000");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\n-1.0" + "'", str11, "\n-1.0");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test08942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08942");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        java.io.Writer writer10 = strBuilder5.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((double) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.append(strBuilder14, (int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.append(true);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test08943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08943");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset("");
        java.lang.Object obj5 = strTokenizer1.clone();
        java.lang.String[] strArray6 = strTokenizer1.getTokenArray();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strArray6);
    }

    @Test
    public void test08944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08944");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('a', '4');
        java.io.Writer writer30 = strBuilder29.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        char[] charArray42 = strBuilder38.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendln(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        writer30.write(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder22.append(charArray42);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int50 = strBuilder22.indexOf(strMatcher48, 0);
        int int52 = strBuilder22.indexOf("1");
        java.util.Properties properties53 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        int int65 = strBuilder64.capacity();
        java.lang.StringBuffer stringBuffer66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendln(stringBuffer66, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int71 = strBuilder69.lastIndexOf(strMatcher70);
        boolean boolean72 = strBuilder62.equalsIgnoreCase(strBuilder69);
        char[] charArray75 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray75);
        boolean boolean77 = properties53.replace((java.lang.Object) strBuilder59, (java.lang.Object) strBuilder62, (java.lang.Object) strTokenizer76);
        int int80 = strBuilder62.lastIndexOf("4#4", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strBuilder62.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder22.appendFixedWidthPadLeft((java.lang.Object) strBuilder62, 43, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder62.append('3');
        java.lang.String str87 = strBuilder62.getNullText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(writer30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 32 + "'", int65 == 32);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test08945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08945");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        java.lang.String str13 = strBuilder12.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('#');
        java.lang.StringBuffer stringBuffer24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.append(stringBuffer24, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.deleteFirst("hi!");
        char[] charArray30 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer17.reset(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer31.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer32.reset();
        java.lang.String[] strArray34 = strTokenizer33.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder12.appendAll((java.lang.Object[]) strArray34);
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties36.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader45 = strBuilder41.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray51 = strTokenizer50.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendAll((java.lang.Object[]) strArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream56 = strBuilder46.codePoints();
        java.lang.Object obj57 = properties36.replace((java.lang.Object) reader45, (java.lang.Object) intStream56);
        long long59 = reader45.skip(0L);
        boolean boolean60 = reader45.ready();
        reader45.close();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst("", "");
        char[] charArray75 = strBuilder71.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendln(charArray75);
        int int80 = strMatcher63.isMatch(charArray75, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray75);
        int int83 = reader45.read(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray75);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder12.appendln(charArray75);
        char[] charArray86 = strBuilder85.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, 's', 'o');
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, strMatcher90);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(intStream56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "\ntrue\n#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "\ntrue\n#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[\n, t, r, u, e, \n, #, \n]");
    }

    @Test
    public void test08946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08946");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        java.lang.String str10 = strBuilder6.getNewLineText();
        java.util.stream.IntStream intStream11 = strBuilder6.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.append((java.lang.CharSequence) strBuilder6);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.appendFixedWidthPadLeft((int) (byte) 1, 32, '$');
        java.util.Properties properties19 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        int int31 = strBuilder30.capacity();
        java.lang.StringBuffer stringBuffer32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.appendln(stringBuffer32, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int37 = strBuilder35.lastIndexOf(strMatcher36);
        boolean boolean38 = strBuilder28.equalsIgnoreCase(strBuilder35);
        char[] charArray41 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray41);
        boolean boolean43 = properties19.replace((java.lang.Object) strBuilder25, (java.lang.Object) strBuilder28, (java.lang.Object) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        int int45 = strBuilder44.capacity();
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln(stringBuffer46, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.setNullText("");
        java.lang.Object obj52 = properties19.get((java.lang.Object) strBuilder51);
        java.util.Properties properties53 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray60 = strTokenizer59.getTokenArray();
        java.lang.String[] strArray61 = strTokenizer59.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendWithSeparators((java.lang.Object[]) strArray61, "4#4");
        char[] charArray66 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray66);
        java.lang.Object obj68 = properties53.getOrDefault((java.lang.Object) strBuilder57, (java.lang.Object) strTokenizer67);
        int int69 = properties53.size();
        int int70 = properties53.size();
        java.util.Set<java.lang.String> strSet71 = properties53.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder51.appendAll((java.lang.Iterable<java.lang.String>) strSet71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder72.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.replaceAll('t', ' ');
        boolean boolean77 = strBuilder18.equalsIgnoreCase(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(intStream11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 32 + "'", int31 == 32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 32 + "'", int45 == 32);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test08947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08947");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, '4', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray17);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strTokenizer26);
    }

    @Test
    public void test08948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08948");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        java.util.ListIterator<java.lang.String> strItor24 = strList14.listIterator((int) (short) 1);
        java.util.stream.Stream<java.lang.String> strStream25 = strList14.parallelStream();
        java.util.Iterator<java.lang.String> strItor26 = strList14.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = strList14.set(57, "100.0\000\000\000\000\000");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 57, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(strStream25);
        org.junit.Assert.assertNotNull(strItor26);
    }

    @Test
    public void test08949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08949");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        int int16 = strBuilder15.capacity();
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(stringBuffer17, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.insert(1, (double) 32);
        java.lang.String str25 = strBuilder15.rightString((int) ' ');
        boolean boolean27 = strBuilder15.startsWith("");
        char[] charArray28 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray28);
        int int31 = strBuilder12.lastIndexOf(strMatcher29, (int) 'a');
        int int34 = strBuilder12.indexOf("[ 4#4]", 106);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder12.ensureCapacity(108);
        java.lang.String str38 = strBuilder12.rightString(98);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\n32.0" + "'", str25, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\n" + "'", str38, "\n");
    }

    @Test
    public void test08950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08950");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        java.lang.String str23 = strTokenizer21.nextToken();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = strTokenizer21.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + " 4#4" + "'", str23, " 4#4");
    }

    @Test
    public void test08951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08951");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        int int2 = strBuilder1.capacity();
        java.lang.StringBuffer stringBuffer3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln(stringBuffer3, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        boolean boolean13 = strSubstitutor0.replaceIn(strBuilder10, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("");
        java.lang.String str16 = strSubstitutor0.replace((java.lang.Object) "");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor18 = strSubstitutor0.setVariableSuffix("0");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strSubstitutor18.getVariablePrefixMatcher();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 32 + "'", int2 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strSubstitutor18);
        org.junit.Assert.assertNotNull(strMatcher19);
    }

    @Test
    public void test08952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08952");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer2.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        int int7 = strBuilder6.capacity();
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.appendln(stringBuffer8, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int13 = strBuilder11.lastIndexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.insert(1, " #\n");
        char[] charArray17 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer2.reset(charArray17);
        boolean boolean19 = strTokenizer2.isIgnoreEmptyTokens();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 32 + "'", int7 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "\n #\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "\n #\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[\n,  , #, \n]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test08953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08953");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.insert(1, (double) 32);
        java.lang.String str39 = strBuilder29.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.insert(1, '#');
        boolean boolean43 = strList28.equals((java.lang.Object) strBuilder29);
        boolean boolean44 = strList9.containsAll((java.util.Collection<java.lang.String>) strList28);
        char[] charArray49 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        int int52 = strTokenizer51.size();
        boolean boolean53 = strTokenizer51.hasNext();
        java.util.List<java.lang.String> strList54 = strTokenizer51.getTokenList();
        java.lang.String[] strArray58 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        boolean boolean61 = strList54.addAll((java.util.Collection<java.lang.String>) strList59);
        boolean boolean62 = strList28.containsAll((java.util.Collection<java.lang.String>) strList59);
        java.util.ListIterator<java.lang.String> strItor63 = strList28.listIterator();
        java.util.stream.Stream<java.lang.String> strStream64 = strList28.stream();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", '$');
        java.util.List<java.lang.String> strList68 = strTokenizer67.getTokenList();
        boolean boolean69 = strList28.addAll((java.util.Collection<java.lang.String>) strList68);
        boolean boolean71 = strList28.add("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n32.0" + "'", str39, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strItor63);
        org.junit.Assert.assertNotNull(strStream64);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test08954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08954");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        int int2 = strBuilder1.capacity();
        java.lang.StringBuffer stringBuffer3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln(stringBuffer3, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        boolean boolean13 = strSubstitutor0.replaceIn(strBuilder10, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.String str24 = strBuilder20.getNewLineText();
        java.util.stream.IntStream intStream25 = strBuilder20.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder17.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder17.appendFixedWidthPadLeft((int) (byte) 1, 32, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder10.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder17.insert((int) (short) 0, 10);
        char[] charArray41 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        int int44 = strTokenizer43.size();
        boolean boolean45 = strTokenizer43.hasNext();
        java.util.List<java.lang.String> strList46 = strTokenizer43.getTokenList();
        java.lang.String[] strArray50 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        boolean boolean53 = strList46.addAll((java.util.Collection<java.lang.String>) strList51);
        java.util.Spliterator<java.lang.String> strSpliterator54 = strList51.spliterator();
        int int55 = strList51.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int59 = strList51.lastIndexOf((java.lang.Object) strTokenizer58);
        java.util.List<java.lang.String> strList60 = strTokenizer58.getTokenList();
        java.lang.String str62 = strList60.remove(0);
        strList60.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder36.appendAll((java.lang.Iterable<java.lang.String>) strList60);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor66 = strList60.listIterator(169);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 169");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 32 + "'", int2 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(intStream25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strSpliterator54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 3 + "'", int55 == 3);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + " 4#4" + "'", str62, " 4#4");
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test08955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08955");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.clear();
        java.lang.String str13 = strBuilder11.leftString(36);
        java.lang.String str14 = strBuilder11.getNullText();
        int int15 = strBuilder11.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test08956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08956");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        java.lang.String str10 = strBuilder6.getNewLineText();
        java.util.stream.IntStream intStream11 = strBuilder6.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.append((java.lang.CharSequence) strBuilder6);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.setLength((int) (short) 100);
        java.lang.String str15 = strBuilder3.getNullText();
        java.util.stream.IntStream intStream16 = strBuilder3.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        int int18 = strBuilder17.capacity();
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(stringBuffer19, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.insert(1, (double) 32);
        boolean boolean26 = strBuilder17.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder17.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder17.clear();
        int int29 = strBuilder28.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.append("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        char[] charArray48 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder41.append(charArray48, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray59 = strTokenizer58.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendAll((java.lang.Object[]) strArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder54.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray69 = strTokenizer68.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.appendAll((java.lang.Object[]) strArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder54.appendln(strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceFirst("", "");
        char[] charArray83 = strBuilder79.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder78.appendln(charArray83);
        boolean boolean85 = strBuilder54.equals((java.lang.Object) strBuilder78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer88.getDelimiterMatcher();
        int int90 = strBuilder54.indexOf(strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder28.append((java.lang.Object) strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder28.appendSeparator('g', (int) (short) 10);
        boolean boolean96 = strBuilder3.equalsIgnoreCase(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(intStream11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 32 + "'", int18 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[]");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test08957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08957");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceAll("{}3.0", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendNull();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test08958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08958");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader26 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream37 = strBuilder27.codePoints();
        java.lang.Object obj38 = properties17.replace((java.lang.Object) reader26, (java.lang.Object) intStream37);
        reader26.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst("", "");
        char[] charArray51 = strBuilder47.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendln(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray51);
        int int54 = reader26.read(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.insert(0, (java.lang.Object) charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.append((float) 't');
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("\n32.0-1.0");
        int int61 = strBuilder57.indexOf(strMatcher59, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder57.appendSeparator("97\n", 52);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        int int66 = strBuilder65.capacity();
        java.lang.StringBuffer stringBuffer67 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.appendln(stringBuffer67, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder65.insert(1, (double) 32);
        boolean boolean74 = strBuilder65.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder65.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder65.append((long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder77.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder64.appendln(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 32 + "'", int66 == 32);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test08959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08959");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer(" 52 \n");
    }

    @Test
    public void test08960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08960");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        boolean boolean19 = strList14.isEmpty();
        java.lang.String str21 = strList14.remove((int) (short) 1);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test08961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08961");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append((double) 10L);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendFixedWidthPadLeft(obj6, (int) (byte) -1, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("StrTokenizer[ 4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln((float) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strBuilder11.asTokenizer();
        java.lang.String str15 = strTokenizer14.toString();
        boolean boolean16 = strTokenizer14.hasNext();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str15, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test08962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08962");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        int int22 = strBuilder18.indexOf("");
        int int25 = strBuilder18.lastIndexOf('#', (int) (byte) 0);
        boolean boolean27 = strBuilder18.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer28);
        boolean boolean30 = strTokenizer28.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer28.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setIgnoreEmptyTokens(false);
        boolean boolean35 = strBuilder0.equals((java.lang.Object) strTokenizer32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer37.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer37.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer37.getIgnoredMatcher();
        java.lang.String[] strArray42 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder0.appendAll((java.lang.Object[]) strArray42);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder0.insert(100, "{h={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test08963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08963");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        java.io.Reader reader8 = strBuilder0.asReader();
        int int10 = strBuilder0.lastIndexOf("StrTokenizer[ 4#4]");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test08964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08964");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoredChar('e');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, "");
        boolean boolean20 = strTokenizer19.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer19.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer12.setDelimiterMatcher(strMatcher21);
        java.lang.String str23 = strTokenizer12.nextToken();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test08965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08965");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.Object obj4 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        int int6 = strBuilder5.capacity();
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(stringBuffer7, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.setLength(32);
        java.io.Writer writer16 = strBuilder15.asWriter();
        writer16.write((int) (byte) 1);
        properties0.store(writer16, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((double) '#');
        char[] charArray27 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray27);
        writer16.write(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, "[32.0]");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "{}");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(writer16);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "35.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "35.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[3, 5, ., 0, \n]");
        org.junit.Assert.assertNotNull(strTokenizer28);
    }

    @Test
    public void test08966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08966");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append("\n");
        java.util.Iterator<java.lang.String> strItor15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendAll(strItor15);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        char[] charArray66 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, ' ');
        int int69 = strTokenizer68.size();
        boolean boolean70 = strTokenizer68.hasNext();
        java.util.List<java.lang.String> strList71 = strTokenizer68.getTokenList();
        java.lang.String[] strArray75 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        boolean boolean78 = strList71.addAll((java.util.Collection<java.lang.String>) strList76);
        boolean boolean79 = strList45.containsAll((java.util.Collection<java.lang.String>) strList76);
        char[] charArray84 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, ' ');
        java.lang.String str87 = strTokenizer86.next();
        int int88 = strTokenizer86.previousIndex();
        boolean boolean89 = strList45.contains((java.lang.Object) int88);
        java.lang.Object[] objArray90 = strList45.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder14.appendWithSeparators(objArray90, "java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder14.replaceAll(' ', '$');
        org.apache.commons.lang3.text.StrMatcher strMatcher97 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("[\n32.0, , ]");
        int int98 = strBuilder14.indexOf(strMatcher97);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[ , 4, #, 4]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "4#4" + "'", str87, "4#4");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[4#4]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[4#4]");
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strMatcher97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
    }

    @Test
    public void test08967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08967");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert((int) (short) 0, (int) (short) 100);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = null;
        int int50 = strBuilder47.lastIndexOf(strMatcher48, 16);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test08968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08968");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        boolean boolean20 = strList14.add("StrTokenizer[]");
        int int21 = strList14.size();
        java.lang.String str23 = strList14.remove(3);
        boolean boolean25 = strList14.add(" #\n");
        char[] charArray31 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        int int34 = strTokenizer33.size();
        boolean boolean35 = strTokenizer33.hasNext();
        java.util.List<java.lang.String> strList36 = strTokenizer33.getTokenList();
        java.lang.String[] strArray40 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        boolean boolean43 = strList36.addAll((java.util.Collection<java.lang.String>) strList41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray46 = strTokenizer45.getTokenArray();
        java.lang.String[] strArray47 = strTokenizer45.getTokenArray();
        boolean boolean48 = strTokenizer45.hasNext();
        int int49 = strTokenizer45.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer45.getQuoteMatcher();
        java.util.List<java.lang.String> strList51 = strTokenizer45.getTokenList();
        boolean boolean52 = strList36.retainAll((java.util.Collection<java.lang.String>) strList51);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = strList14.addAll(35, (java.util.Collection<java.lang.String>) strList51);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "StrTokenizer[]" + "'", str23, "StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test08969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08969");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int7 = strBuilder5.lastIndexOf(strMatcher6);
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strList10.contains(obj12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.appendAll((java.lang.Iterable<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append('a');
        int int23 = strBuilder16.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        boolean boolean33 = strBuilder24.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.clear();
        int int36 = strBuilder35.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder16.append(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        int int40 = strBuilder39.capacity();
        java.lang.StringBuffer stringBuffer41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(stringBuffer41, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.insert(1, (double) 32);
        java.lang.String str49 = strBuilder39.rightString((int) ' ');
        boolean boolean51 = strBuilder39.startsWith("");
        char[] charArray52 = strBuilder39.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder37.insert((int) (short) 0, charArray52);
        boolean boolean54 = strList10.contains((java.lang.Object) strBuilder37);
        java.util.Properties properties55 = new java.util.Properties();
        int int56 = properties55.size();
        java.util.Set<java.lang.Object> objSet57 = properties55.keySet();
        java.util.Properties properties60 = new java.util.Properties();
        int int61 = properties60.size();
        boolean boolean63 = properties60.containsKey((java.lang.Object) (-1.0f));
        boolean boolean64 = properties55.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray69 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ');
        int int72 = strTokenizer71.size();
        boolean boolean73 = strTokenizer71.hasNext();
        java.util.List<java.lang.String> strList74 = strTokenizer71.getTokenList();
        java.lang.String[] strArray78 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        boolean boolean81 = strList74.addAll((java.util.Collection<java.lang.String>) strList79);
        java.util.Spliterator<java.lang.String> strSpliterator82 = strList79.spliterator();
        int int83 = strList79.size();
        boolean boolean85 = strList79.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream86 = strList79.stream();
        boolean boolean87 = properties55.containsKey((java.lang.Object) strList79);
        int int88 = strList79.size();
        boolean boolean89 = strList10.retainAll((java.util.Collection<java.lang.String>) strList79);
        java.util.stream.Stream<java.lang.String> strStream90 = strList79.parallelStream();
        java.util.ListIterator<java.lang.String> strItor91 = strList79.listIterator();
        java.util.Iterator<java.lang.String> strItor92 = strList79.iterator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 32 + "'", int36 == 32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\n32.0" + "'", str49, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strSpliterator82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 3 + "'", int83 == 3);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strStream86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 4 + "'", int88 == 4);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strStream90);
        org.junit.Assert.assertNotNull(strItor91);
        org.junit.Assert.assertNotNull(strItor92);
    }

    @Test
    public void test08970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08970");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        int int13 = strBuilder9.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.setLength(106);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test08971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08971");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, '$', 't');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        boolean boolean11 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer10.getIgnoredMatcher();
        boolean boolean13 = strTokenizer10.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = strTokenizer10.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test08972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08972");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer15.reset();
        int int17 = strTokenizer16.previousIndex();
        java.lang.String str18 = strTokenizer16.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer16.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#" + "'", str18, "#");
        org.junit.Assert.assertNotNull(strTokenizer20);
    }

    @Test
    public void test08973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08973");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties0.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln((double) '#');
        boolean boolean20 = strBuilder10.equals(strBuilder19);
        java.util.stream.IntStream intStream21 = strBuilder10.codePoints();
        java.util.Iterator<java.lang.String> strItor22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendWithSeparators(strItor22, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(' ', ' ');
        java.io.Writer writer28 = strBuilder27.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer34, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder29.setLength((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.insert((int) '4', (double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder27.append(strBuilder42, 32, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(' ', '4');
        boolean boolean61 = properties0.remove((java.lang.Object) strBuilder45, (java.lang.Object) '4');
        java.util.Set<java.lang.Object> objSet62 = properties0.keySet();
        java.io.OutputStream outputStream63 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream63, "java.io.IOException: \ntrue\n97\nhi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objSet62);
    }

    @Test
    public void test08974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08974");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray2 = strTokenizer1.getTokenArray();
        java.lang.String[] strArray3 = strTokenizer1.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer1.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer1.reset("{}");
        java.lang.String str8 = strTokenizer7.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.setIgnoredChar('e');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer7.setIgnoreEmptyTokens(true);
        boolean boolean13 = strTokenizer7.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = strTokenizer7.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test08975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08975");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        java.util.Properties properties22 = new java.util.Properties();
        int int23 = properties22.size();
        boolean boolean25 = properties22.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties26 = new java.util.Properties();
        int int27 = properties26.size();
        boolean boolean29 = properties26.containsKey((java.lang.Object) (-1.0f));
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        char[] charArray35 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        int int38 = strTokenizer37.size();
        boolean boolean39 = strTokenizer37.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer37.setIgnoredMatcher(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst("", "");
        java.lang.Object obj46 = properties22.putIfAbsent((java.lang.Object) strMatcher40, (java.lang.Object) strBuilder42);
        java.lang.Object obj49 = properties22.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        int int51 = strBuilder50.capacity();
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(stringBuffer52, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int57 = strBuilder55.lastIndexOf(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.insert((int) (short) 1, 32);
        java.util.Properties properties61 = new java.util.Properties();
        int int62 = properties61.size();
        boolean boolean64 = properties61.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties61.entrySet();
        java.lang.Object obj66 = properties22.putIfAbsent((java.lang.Object) strBuilder60, (java.lang.Object) objEntrySet65);
        java.lang.String str67 = strBuilder60.getNewLineText();
        boolean boolean68 = properties0.equals((java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder60.appendFixedWidthPadRight(0, 43, 'e');
        boolean boolean74 = strBuilder60.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder60.setNullText("97\nhi!");
        int int78 = strBuilder60.indexOf("java.io.IOException: \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder60.append("2");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder60.deleteAll("#\n4#44#443.0");
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 32 + "'", int51 == 32);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test08976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08976");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        char[] charArray18 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.appendln("java.io.IOException");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test08977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08977");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "h");
        int int37 = strTokenizer33.nextIndex();
        boolean boolean38 = properties0.containsValue((java.lang.Object) strTokenizer33);
        char[] charArray43 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        int int46 = strTokenizer45.size();
        boolean boolean47 = strTokenizer45.hasNext();
        java.util.List<java.lang.String> strList48 = strTokenizer45.getTokenList();
        java.lang.String[] strArray52 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        boolean boolean55 = strList48.addAll((java.util.Collection<java.lang.String>) strList53);
        java.lang.String str57 = strList53.remove(0);
        char[] charArray62 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        int int65 = strTokenizer64.size();
        boolean boolean66 = strTokenizer64.hasNext();
        java.util.List<java.lang.String> strList67 = strTokenizer64.getTokenList();
        java.lang.String[] strArray71 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        boolean boolean74 = strList67.addAll((java.util.Collection<java.lang.String>) strList72);
        boolean boolean75 = strList53.addAll((java.util.Collection<java.lang.String>) strList72);
        java.lang.Object obj76 = properties0.remove((java.lang.Object) strList72);
        java.util.Spliterator<java.lang.String> strSpliterator77 = strList72.spliterator();
        java.util.stream.Stream<java.lang.String> strStream78 = strList72.parallelStream();
        boolean boolean79 = strList72.isEmpty();
        int int80 = strList72.size();
        java.lang.Object[] objArray81 = strList72.toArray();
        java.util.stream.Stream<java.lang.String> strStream82 = strList72.parallelStream();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\n32.0" + "'", str57, "\n32.0");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(strSpliterator77);
        org.junit.Assert.assertNotNull(strStream78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 3 + "'", int80 == 3);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[\n32.0, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[\n32.0, , ]");
        org.junit.Assert.assertNotNull(strStream82);
    }

    @Test
    public void test08978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08978");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: {}", 't', '4');
        int int4 = strTokenizer3.size();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    }

    @Test
    public void test08979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08979");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean2 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray10 = strTokenizer9.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.appendAll((java.lang.Object[]) strArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray20 = strTokenizer19.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendAll((java.lang.Object[]) strArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder5.appendln(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        java.io.Writer writer35 = strBuilder34.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "");
        char[] charArray47 = strBuilder43.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendln(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        writer35.write(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder27.append(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer4.reset(charArray47);
        boolean boolean53 = strTokenizer52.hasNext();
        int int54 = strTokenizer52.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer52.setDelimiterString("java.io.IOException: java.io.IOException: \n32.0");
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(writer35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer56);
    }

    @Test
    public void test08980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08980");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("StrTokenizer[]");
        java.util.Iterator<java.lang.String> strItor15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendWithSeparators(strItor15, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder19.appendFixedWidthPadRight((java.lang.Object) strBuilder28, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int33 = strBuilder19.lastIndexOf(strMatcher32);
        char[] charArray38 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        int int41 = strTokenizer40.size();
        boolean boolean42 = strTokenizer40.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer40.setIgnoredMatcher(strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder19.deleteFirst(strMatcher43);
        int int46 = strBuilder17.lastIndexOf(strMatcher43);
        int int47 = strBuilder17.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder17.appendln((double) 8);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test08981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08981");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        java.io.Reader reader4 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        char[] charArray15 = strBuilder7.getChars(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean17 = strTokenizer16.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendln(charArray31);
        int int36 = strMatcher19.isMatch(charArray31, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer16.reset(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setQuoteChar('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray48 = strTokenizer47.getTokenArray();
        java.lang.String[] strArray49 = strTokenizer47.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.appendWithSeparators((java.lang.Object[]) strArray49, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteAll(strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray62 = strTokenizer61.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendAll((java.lang.Object[]) strArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder57.replaceFirst('a', 'a');
        char[] charArray71 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, ' ');
        int int74 = strTokenizer73.size();
        boolean boolean75 = strTokenizer73.hasNext();
        java.util.List<java.lang.String> strList76 = strTokenizer73.getTokenList();
        java.lang.String[] strArray80 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        boolean boolean83 = strList76.addAll((java.util.Collection<java.lang.String>) strList81);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder57.appendAll((java.lang.Iterable<java.lang.String>) strList81);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder51.appendAll((java.lang.Iterable<java.lang.String>) strList81);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder41.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList81, "4#4");
        java.util.ListIterator<java.lang.String> strItor88 = strList81.listIterator();
        java.lang.String str89 = strItor88.next();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strItor88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "\n32.0" + "'", str89, "\n32.0");
    }

    @Test
    public void test08982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08982");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Set<java.lang.Object> objSet10 = properties4.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        java.lang.String[] strArray18 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendWithSeparators((java.lang.Object[]) strArray18, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray31 = strTokenizer30.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendAll((java.lang.Object[]) strArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.replaceFirst('a', 'a');
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        java.lang.String[] strArray49 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        boolean boolean52 = strList45.addAll((java.util.Collection<java.lang.String>) strList50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder26.appendAll((java.lang.Iterable<java.lang.String>) strList50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder20.appendAll((java.lang.Iterable<java.lang.String>) strList50);
        boolean boolean55 = properties4.containsValue((java.lang.Object) strList50);
        java.util.Collection<java.lang.Object> objCollection56 = properties4.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        int int58 = strBuilder57.capacity();
        java.lang.StringBuffer stringBuffer59 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(stringBuffer59, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder57.insert(1, (double) 32);
        java.util.Properties properties66 = new java.util.Properties();
        int int67 = properties66.size();
        boolean boolean69 = properties66.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst("", "");
        char[] charArray74 = strBuilder70.toCharArray();
        boolean boolean75 = properties66.containsValue((java.lang.Object) charArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder57.append(charArray74, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder57.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.insert((int) (byte) 0, (long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.appendln((long) ' ');
        boolean boolean86 = properties4.equals((java.lang.Object) ' ');
        java.lang.String str87 = properties4.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 32 + "'", int58 == 32);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "{}" + "'", str87, "{}");
    }

    @Test
    public void test08983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08983");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet3 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        int int8 = strBuilder4.indexOf("");
        int int11 = strBuilder4.lastIndexOf('#', (int) (byte) 0);
        boolean boolean13 = strBuilder4.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder4.appendAll((java.util.Iterator<java.lang.String>) strTokenizer14);
        boolean boolean16 = strTokenizer14.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("{}");
        java.lang.Object obj20 = properties0.replace((java.lang.Object) strTokenizer14, (java.lang.Object) "{}");
        java.util.List<java.lang.String> strList21 = strTokenizer14.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst('a', '4');
        char[] charArray33 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        int int36 = strTokenizer35.size();
        boolean boolean37 = strTokenizer35.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer35.setIgnoredMatcher(strMatcher38);
        int int41 = strBuilder25.indexOf(strMatcher38, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder25.deleteFirst("StrTokenizer[32.0]");
        int int44 = strList21.lastIndexOf((java.lang.Object) "StrTokenizer[32.0]");
        java.util.Spliterator<java.lang.String> strSpliterator45 = strList21.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = strList21.set(104, "{\ntrue\n=1.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 104, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator45);
    }

    @Test
    public void test08984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08984");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendln(charArray19);
        int int24 = strMatcher7.isMatch(charArray19, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher5, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, "32.01#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '1', 't');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer29);
    }

    @Test
    public void test08985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08985");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Collection<java.lang.Object> objCollection16 = properties0.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst('a', '4');
        java.io.Writer writer24 = strBuilder23.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        char[] charArray36 = strBuilder32.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.appendln(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray36);
        writer24.write(charArray36);
        properties0.store(writer24, "#36.0106\n");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strTokenizer38);
    }

    @Test
    public void test08986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08986");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("\n32.0", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        char[] charArray8 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln('#');
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append(stringBuffer20, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.deleteFirst("hi!");
        char[] charArray26 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer13.reset(charArray26);
        boolean boolean28 = properties0.replace((java.lang.Object) iOException4, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer13);
        java.io.IOException iOException30 = new java.io.IOException("{");
        iOException4.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException32 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.lang.Throwable[] throwableArray33 = iOException30.getSuppressed();
        java.io.IOException iOException34 = new java.io.IOException((java.lang.Throwable) iOException30);
        java.io.IOException iOException35 = new java.io.IOException((java.lang.Throwable) iOException30);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(throwableArray33);
    }

    @Test
    public void test08987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08987");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        int int24 = strBuilder23.capacity();
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(stringBuffer25, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.insert(1, (double) 32);
        java.lang.String str33 = strBuilder23.rightString((int) ' ');
        boolean boolean35 = strBuilder23.startsWith("");
        char[] charArray36 = strBuilder23.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray36);
        boolean boolean38 = strBuilder22.contains(strMatcher37);
        int int41 = strBuilder22.indexOf('t', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder22.appendSeparator('$');
        java.io.Reader reader44 = strBuilder22.asReader();
        java.nio.CharBuffer charBuffer45 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int46 = reader44.read(charBuffer45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\n32.0" + "'", str33, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader44);
    }

    @Test
    public void test08988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08988");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        int int9 = strBuilder0.indexOf("java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendln((float) 100L);
        java.lang.String str12 = strBuilder11.getNewLineText();
        int int15 = strBuilder11.lastIndexOf("java.io.IOException: StrTokenizer[not tokenized yet]", 0);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test08989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08989");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.append((long) 4);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test08990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08990");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.append((java.lang.Object) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder10.appendln((float) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        int int31 = strBuilder27.indexOf("");
        int int34 = strBuilder27.lastIndexOf('#', (int) (byte) 0);
        boolean boolean36 = strBuilder27.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder27.appendAll((java.util.Iterator<java.lang.String>) strTokenizer37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder27.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder27.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder27.appendln((int) (byte) 100);
        java.io.IOException iOException47 = new java.io.IOException("hi!");
        java.io.IOException iOException49 = new java.io.IOException("hi!");
        iOException47.addSuppressed((java.lang.Throwable) iOException49);
        java.io.IOException iOException51 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException49);
        java.lang.Throwable[] throwableArray52 = iOException51.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder44.appendAll((java.lang.Object[]) throwableArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder26.appendAll((java.lang.Object[]) throwableArray52);
        java.lang.String str55 = strBuilder26.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder26.appendNull();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.setCharAt(53, 't');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 53");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test08991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08991");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.appendSeparator('e', 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendNewLine();
        int int16 = strBuilder10.lastIndexOf('7');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test08992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08992");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder3.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.append((float) '4');
        int int60 = strBuilder55.indexOf("", (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean63 = strTokenizer62.hasNext();
        java.lang.String[] strArray64 = strTokenizer62.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder55.appendWithSeparators((java.lang.Object[]) strArray64, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder45.appendWithSeparators((java.lang.Object[]) strArray64, "a4");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence71 = strBuilder68.subSequence((int) 'u', 25);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 25");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test08993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08993");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoredChar('4');
        int int5 = strTokenizer4.nextIndex();
        boolean boolean6 = strTokenizer4.hasNext();
        int int7 = strTokenizer4.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test08994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08994");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray11 = strTokenizer10.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendAll((java.lang.Object[]) strArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendAll((java.lang.Object[]) strArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder6.appendln(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', '4');
        java.io.Writer writer36 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        char[] charArray48 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendln(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        writer36.write(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.append(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int56 = strBuilder28.indexOf(strMatcher54, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder3.deleteAll(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.insert(0, (long) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln((int) (short) 100);
        int int67 = strBuilder64.lastIndexOf(" ", 116);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.appendSeparator("java.io.IOException: {\ntrue\n=1.0}", "97\nhi!StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder64.append((float) 4);
        boolean boolean74 = strBuilder72.contains("\n32.0 ");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.deleteFirst("IOException: h");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder72.appendSeparator("[32.0]", "true\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test08995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08995");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        int int5 = strBuilder4.capacity();
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(stringBuffer6, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int11 = strBuilder9.lastIndexOf(strMatcher10);
        boolean boolean12 = strBuilder2.equalsIgnoreCase(strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, 'a');
        java.lang.String[] strArray20 = strTokenizer19.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setDelimiterChar('#');
        java.lang.String str23 = strTokenizer22.previousToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder2.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer22, "1");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator("true\n##############################true#####4", (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer34, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer34.reset("\n32.0");
        java.lang.String[] strArray40 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder25.appendAll((java.lang.Object[]) strArray40);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test08996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08996");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charMatcher('7');
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test08997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08997");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        int int21 = strBuilder20.capacity();
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(stringBuffer22, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.insert(1, (double) 32);
        java.lang.String str30 = strBuilder20.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder20.insert(1, '#');
        boolean boolean34 = strList19.equals((java.lang.Object) strBuilder20);
        boolean boolean36 = strList19.add("true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder9.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList19, "1001\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder39.appendFixedWidthPadRight((java.lang.Object) strBuilder48, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int53 = strBuilder39.lastIndexOf(strMatcher52);
        char[] charArray58 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, ' ');
        int int61 = strTokenizer60.size();
        boolean boolean62 = strTokenizer60.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer60.setIgnoredMatcher(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder39.deleteFirst(strMatcher63);
        boolean boolean66 = strBuilder9.contains(strMatcher63);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder9.appendln((double) 19);
        int int71 = strBuilder9.lastIndexOf('#', 16);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n32.0" + "'", str30, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 5 + "'", int71 == 5);
    }

    @Test
    public void test08998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08998");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray2 = strTokenizer1.getTokenArray();
        java.lang.String[] strArray3 = strTokenizer1.getTokenArray();
        boolean boolean4 = strTokenizer1.hasNext();
        int int5 = strTokenizer1.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer1.setQuoteChar('a');
        boolean boolean9 = strTokenizer8.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer8.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer11.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer11.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
    }

    @Test
    public void test08999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test08999");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        char[] charArray16 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.append(charArray16);
        boolean boolean20 = properties0.equals((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln((double) '#');
        boolean boolean36 = strBuilder26.equals(strBuilder35);
        java.util.stream.IntStream intStream37 = strBuilder26.codePoints();
        java.util.Iterator<java.lang.String> strItor38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder26.appendWithSeparators(strItor38, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(' ', ' ');
        int int45 = strBuilder43.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.insert((int) '$', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.insert((int) (short) 0, 53);
        boolean boolean52 = properties0.equals((java.lang.Object) (short) 0);
        int int53 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        int int55 = strBuilder54.capacity();
        java.lang.StringBuffer stringBuffer56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(stringBuffer56, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.insert(1, (double) 32);
        int int63 = strBuilder54.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder54.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder54.append((float) 5);
        char[] charArray68 = strBuilder54.toCharArray();
        boolean boolean69 = properties0.equals((java.lang.Object) charArray68);
        java.util.Set<java.lang.String> strSet70 = properties0.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[ , 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 32 + "'", int63 == 32);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "\n32.032.05.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "\n32.032.05.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[\n, 3, 2, ., 0, 3, 2, ., 0, 5, ., 0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strSet70);
    }

    @Test
    public void test09000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest17.test09000");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = strTokenizer2.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
    }
}
