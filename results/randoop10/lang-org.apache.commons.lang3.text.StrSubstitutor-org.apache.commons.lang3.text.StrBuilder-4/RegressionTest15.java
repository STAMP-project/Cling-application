import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest15 {

    public static boolean debug = false;

    @Test
    public void test07501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07501");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.lang.String str16 = strBuilder12.getNewLineText();
        java.util.stream.IntStream intStream17 = strBuilder12.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder9.append((java.lang.CharSequence) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        java.lang.String str31 = strBuilder27.getNewLineText();
        java.util.stream.IntStream intStream32 = strBuilder27.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.append((java.lang.CharSequence) strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder20.append(strBuilder24, 2, (int) 'a');
        char[] charArray42 = new char[] { 'a', '$', '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, '$');
        java.util.List<java.lang.String> strList45 = strTokenizer44.getTokenList();
        char[] charArray50 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        int int53 = strTokenizer52.size();
        boolean boolean54 = strTokenizer52.hasNext();
        java.util.List<java.lang.String> strList55 = strTokenizer52.getTokenList();
        java.lang.String[] strArray59 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        boolean boolean62 = strList55.addAll((java.util.Collection<java.lang.String>) strList60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray65 = strTokenizer64.getTokenArray();
        java.lang.String[] strArray66 = strTokenizer64.getTokenArray();
        boolean boolean67 = strTokenizer64.hasNext();
        int int68 = strTokenizer64.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer64.getQuoteMatcher();
        java.util.List<java.lang.String> strList70 = strTokenizer64.getTokenList();
        boolean boolean71 = strList55.retainAll((java.util.Collection<java.lang.String>) strList70);
        boolean boolean72 = strList45.addAll((java.util.Collection<java.lang.String>) strList70);
        java.util.Iterator<java.lang.String> strItor73 = strList45.iterator();
        java.lang.Object[] objArray74 = strList45.toArray();
        boolean boolean75 = strList45.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder38.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList45, "StrTokenizer[{}]");
        boolean boolean78 = strBuilder3.equalsIgnoreCase(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(intStream32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a$$");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a$$");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, $, $]");
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strItor73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[a]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test07502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07502");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int7 = strBuilder5.lastIndexOf(strMatcher6);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.insert((int) (short) 1, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteAll("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.append((float) 53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder10.asTokenizer();
        java.util.stream.IntStream intStream16 = strBuilder10.codePoints();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(intStream16);
    }

    @Test
    public void test07503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07503");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) '4');
        java.io.Writer writer28 = writer11.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll("");
        java.io.Writer writer38 = writer11.append((java.lang.CharSequence) strBuilder35);
        java.io.Writer writer40 = writer38.append(' ');
        writer40.write("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(writer38);
        org.junit.Assert.assertNotNull(writer40);
    }

    @Test
    public void test07504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07504");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        char[] charArray16 = strBuilder8.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        char[] charArray18 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean21 = strTokenizer20.hasNext();
        java.lang.String[] strArray22 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder0.appendWithSeparators((java.lang.Object[]) strArray22, "\n-1.0");
        java.util.stream.IntStream intStream25 = strBuilder24.chars();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("\n32.0", 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.replaceAll(strMatcher29, "97\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.deleteFirst("0\n");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(intStream25);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test07505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07505");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        char[] charArray6 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        int int9 = strTokenizer8.size();
        boolean boolean10 = strTokenizer8.hasNext();
        java.util.List<java.lang.String> strList11 = strTokenizer8.getTokenList();
        java.lang.String[] strArray15 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = strList11.addAll((java.util.Collection<java.lang.String>) strList16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        java.lang.String[] strArray22 = strTokenizer20.getTokenArray();
        boolean boolean23 = strTokenizer20.hasNext();
        int int24 = strTokenizer20.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer20.getQuoteMatcher();
        java.util.List<java.lang.String> strList26 = strTokenizer20.getTokenList();
        boolean boolean27 = strList11.retainAll((java.util.Collection<java.lang.String>) strList26);
        strList11.clear();
        java.lang.Object obj29 = properties0.remove((java.lang.Object) strList11);
        java.util.Properties properties30 = new java.util.Properties();
        int int31 = properties30.size();
        java.lang.Object obj32 = properties30.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder33.appendFixedWidthPadRight((java.lang.Object) strBuilder42, (int) (byte) -1, '#');
        java.lang.Object obj46 = properties30.get((java.lang.Object) strBuilder33);
        java.util.Properties properties47 = new java.util.Properties();
        int int48 = properties47.size();
        boolean boolean50 = properties47.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties51 = new java.util.Properties();
        int int52 = properties51.size();
        boolean boolean54 = properties51.containsKey((java.lang.Object) (-1.0f));
        properties47.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        char[] charArray60 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ');
        int int63 = strTokenizer62.size();
        boolean boolean64 = strTokenizer62.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer62.setIgnoredMatcher(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst("", "");
        java.lang.Object obj71 = properties47.putIfAbsent((java.lang.Object) strMatcher65, (java.lang.Object) strBuilder67);
        boolean boolean72 = strBuilder33.equals(obj71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder33.appendln((double) 100L);
        java.util.stream.IntStream intStream75 = strBuilder33.chars();
        boolean boolean76 = properties0.containsKey((java.lang.Object) strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder33.appendSeparator('\000', 's');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.insert((int) 'e', '9');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 101");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "{}");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test07506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07506");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '$', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("a4", strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setDelimiterMatcher(strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.reset("t");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
    }

    @Test
    public void test07507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07507");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("rg.apache.", "4");
    }

    @Test
    public void test07508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07508");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        int int8 = strTokenizer6.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer6.setDelimiterChar('$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        int int13 = strTokenizer12.size();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test07509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07509");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        boolean boolean12 = strBuilder0.startsWith("");
        char[] charArray13 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.ensureCapacity((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.replaceAll('a', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        char[] charArray28 = strBuilder24.toCharArray();
        char[] charArray29 = strBuilder21.getChars(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder20.append(charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.setNewLineText("a\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder31.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendSeparator("java.io.IOException: 35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append((int) '9');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test07510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07510");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        long long23 = reader9.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray29 = strTokenizer28.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendAll((java.lang.Object[]) strArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream34 = strBuilder24.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        char[] charArray39 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder24.appendln(charArray39);
        int int43 = reader9.read(charArray39);
        boolean boolean44 = reader9.markSupported();
        boolean boolean45 = reader9.ready();
        reader9.mark((int) (byte) 0);
        reader9.close();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test07511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07511");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj2 = properties1.clone();
        int int3 = properties1.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEntrySet4);
    }

    @Test
    public void test07512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07512");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        int int12 = properties4.size();
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader22 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendAll((java.lang.Object[]) strArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream33 = strBuilder23.codePoints();
        java.lang.Object obj34 = properties13.replace((java.lang.Object) reader22, (java.lang.Object) intStream33);
        long long36 = reader22.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('a', '4');
        java.io.Writer writer44 = strBuilder43.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst("", "");
        char[] charArray56 = strBuilder52.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.appendln(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray56);
        writer44.write(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '4', '$');
        int int63 = reader22.read(charArray56);
        reader22.close();
        int int65 = reader22.read();
        int int66 = reader22.read();
        boolean boolean67 = properties4.containsKey((java.lang.Object) reader22);
        java.util.Set<java.lang.Object> objSet68 = properties4.keySet();
        java.util.Properties properties69 = new java.util.Properties(properties4);
        java.util.Properties properties70 = new java.util.Properties();
        int int71 = properties70.size();
        boolean boolean73 = properties70.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties74 = new java.util.Properties();
        int int75 = properties74.size();
        boolean boolean77 = properties74.containsKey((java.lang.Object) (-1.0f));
        properties70.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties74);
        java.util.Set<java.lang.Object> objSet79 = properties74.keySet();
        java.util.Set<java.lang.Object> objSet80 = properties74.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder83.minimizeCapacity();
        java.lang.StringBuffer stringBuffer85 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder84.appendln(stringBuffer85, (int) (byte) 1, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder84.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder89.appendln(' ');
        boolean boolean92 = properties74.containsValue((java.lang.Object) strBuilder89);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties74);
        java.lang.Object obj96 = properties4.setProperty("java.io.IOException", "\n #\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(writer44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[]");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 35 + "'", int65 == 35);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objSet79);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(obj96);
    }

    @Test
    public void test07513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07513");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("10.0StrTokenizer[ 4#4]\n10.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('4', 49);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendln(stringBuffer11, (int) (byte) 1, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendln((int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.append((long) (short) -1);
        java.util.Properties properties21 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        java.lang.String[] strArray29 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.appendWithSeparators((java.lang.Object[]) strArray29, "4#4");
        char[] charArray34 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray34);
        java.lang.Object obj36 = properties21.getOrDefault((java.lang.Object) strBuilder25, (java.lang.Object) strTokenizer35);
        int int37 = properties21.size();
        int int38 = properties21.size();
        java.io.IOException iOException39 = new java.io.IOException();
        java.lang.Throwable[] throwableArray40 = iOException39.getSuppressed();
        boolean boolean41 = properties21.equals((java.lang.Object) iOException39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        int int43 = strBuilder42.capacity();
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(stringBuffer44, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder42.setLength(32);
        java.io.Writer writer53 = strBuilder52.asWriter();
        writer53.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        char[] charArray58 = null;
        writer53.write(charArray58);
        writer53.write("\n32.0-1.0", (int) (short) 0, 0);
        properties21.store(writer53, "32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.appendln('#');
        java.lang.StringBuffer stringBuffer72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.append(stringBuffer72, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.deleteFirst("hi!");
        char[] charArray78 = strBuilder69.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray78);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer85.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder80.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer85, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer85.reset("\n32.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer85.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, strMatcher91);
        writer53.write(charArray78);
        char[] charArray94 = strBuilder20.getChars(charArray78);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder3.append(charArray78);
        java.util.stream.IntStream intStream96 = strBuilder3.codePoints();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(writer53);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, \n]");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), "-1\n-1");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), "-1\n-1");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[-, 1, \n, -, 1]");
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(intStream96);
    }

    @Test
    public void test07514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07514");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer5, "h");
        int int11 = strBuilder0.indexOf("StrTokenizer[32.0]", 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.appendSeparator('\000', 25);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.appendFixedWidthPadRight((int) (byte) 1, 57, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.trim();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test07515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07515");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        boolean boolean25 = properties0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst('a', '4');
        char[] charArray37 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        int int40 = strTokenizer39.size();
        boolean boolean41 = strTokenizer39.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setIgnoredMatcher(strMatcher42);
        int int45 = strBuilder29.indexOf(strMatcher42, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder29.deleteFirst("StrTokenizer[32.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        int int49 = strBuilder48.capacity();
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(stringBuffer50, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.appendln((double) '#');
        boolean boolean70 = strBuilder60.equals(strBuilder69);
        java.util.stream.IntStream intStream71 = strBuilder60.codePoints();
        java.util.Iterator<java.lang.String> strItor72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder60.appendWithSeparators(strItor72, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder54.appendln(strBuilder74, 0, (int) (byte) 1);
        java.lang.Object obj81 = properties0.putIfAbsent((java.lang.Object) strBuilder47, (java.lang.Object) strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder47.replaceFirst('4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder47.replaceAll("aaaaaaaaaaaaaaaaaaaaaaaaa", "\n32.0 ");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 32 + "'", int49 == 32);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(intStream71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test07516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07516");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder9.appendln(".0", 75, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
    }

    @Test
    public void test07517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07517");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('a', '4');
        java.io.Writer writer34 = strBuilder33.asWriter();
        properties26.store(writer34, "");
        java.util.Properties properties37 = new java.util.Properties();
        int int38 = properties37.size();
        boolean boolean40 = properties37.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties41 = new java.util.Properties();
        int int42 = properties41.size();
        boolean boolean44 = properties41.containsKey((java.lang.Object) (-1.0f));
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.keys();
        boolean boolean47 = properties26.containsValue((java.lang.Object) objEnumeration46);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Collection<java.lang.Object> objCollection49 = properties26.values();
        java.util.Properties properties50 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray57 = strTokenizer56.getTokenArray();
        java.lang.String[] strArray58 = strTokenizer56.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendWithSeparators((java.lang.Object[]) strArray58, "4#4");
        char[] charArray63 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray63);
        java.lang.Object obj65 = properties50.getOrDefault((java.lang.Object) strBuilder54, (java.lang.Object) strTokenizer64);
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        boolean boolean70 = properties26.containsKey((java.lang.Object) strTokenizer68);
        boolean boolean71 = strTokenizer68.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer68.reset();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = strTokenizer72.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strTokenizer72);
    }

    @Test
    public void test07518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07518");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln('#');
        java.lang.StringBuffer stringBuffer9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(stringBuffer9, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.deleteFirst("hi!");
        char[] charArray15 = strBuilder6.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer2.reset(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer16.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("\n32.0", strMatcher18, strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        boolean boolean23 = strTokenizer21.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test07519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07519");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        java.lang.String str20 = strList14.remove((int) (byte) 0);
        boolean boolean22 = strList14.add("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendAll((java.lang.Object[]) strArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendAll((java.lang.Object[]) strArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.appendln(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        char[] charArray52 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendln(charArray52);
        boolean boolean54 = strBuilder23.equals((java.lang.Object) strBuilder47);
        boolean boolean55 = strList14.remove((java.lang.Object) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder23.replaceAll("{}", "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder23.appendNewLine();
        boolean boolean61 = strBuilder23.endsWith("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder23.setNullText("0.0true");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder23.setNullText("\n-1.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteCharAt(0);
        java.lang.StringBuffer stringBuffer68 = strBuilder67.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.appendln(true);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(stringBuffer68);
        org.junit.Assert.assertEquals(stringBuffer68.toString(), "\n");
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test07520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07520");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("4#4]\n4#4\n", "100.0\n 116.0\n");
    }

    @Test
    public void test07521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07521");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append((float) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        char[] charArray24 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln(charArray24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.setNewLineText("\n");
        java.io.Reader reader28 = strBuilder27.asReader();
        java.io.Writer writer29 = strBuilder27.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.deleteAll('#');
        java.io.Writer writer32 = strBuilder27.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder12.append((java.lang.Object) writer32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder12.appendln((int) '6');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(writer29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(writer32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test07522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07522");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[java.io.IOException]", ' ', 'g');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.set("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07523");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln('#');
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.append(stringBuffer15, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder12.appendSeparator("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder6.append((java.lang.CharSequence) strBuilder25);
        char[] charArray31 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, ' ');
        int int34 = strTokenizer33.size();
        boolean boolean35 = strTokenizer33.hasNext();
        java.util.List<java.lang.String> strList36 = strTokenizer33.getTokenList();
        java.lang.String[] strArray40 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        boolean boolean43 = strList36.addAll((java.util.Collection<java.lang.String>) strList41);
        java.util.Spliterator<java.lang.String> strSpliterator44 = strList41.spliterator();
        int int45 = strList41.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int49 = strList41.lastIndexOf((java.lang.Object) strTokenizer48);
        strList41.clear();
        int int51 = strList41.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder25.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList41, "10.0StrTokenizer[ 4#4]\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder25.setLength(45);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder25.append("10.0StrTokenizer[ 4#4]\n10.0\n35.0\n4", (int) '7', 101);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strSpliterator44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3 + "'", int45 == 3);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test07524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07524");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.ensureCapacity((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("true\n###################################");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendSeparator("#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer27, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer27.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setEmptyTokenAsNull(true);
        boolean boolean35 = strTokenizer32.hasNext();
        int int36 = strTokenizer32.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer32.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder21.replaceAll(strMatcher37, "10.0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.appendln("\na32", (int) (byte) -1, 108);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test07525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07525");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((double) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder3.replaceAll('$', '#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.delete(28, 74);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test07526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07526");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.delete(0, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.deleteFirst("StrTokenizer[not");
        int int16 = strBuilder14.lastIndexOf("StrTokenizer[h]");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test07527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07527");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset("");
        java.lang.String str5 = strTokenizer4.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        int int16 = strBuilder15.capacity();
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(stringBuffer17, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int22 = strBuilder20.lastIndexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.replaceFirst(strMatcher21, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer4.setIgnoredMatcher(strMatcher21);
        java.lang.String str26 = strTokenizer25.getContent();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test07528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07528");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        java.io.Reader reader10 = strBuilder6.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.append(strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.setNewLineText("r");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "");
        char[] charArray23 = strBuilder19.toCharArray();
        char[] charArray24 = strBuilder16.getChars(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23);
        boolean boolean26 = strTokenizer25.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "");
        char[] charArray40 = strBuilder36.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendln(charArray40);
        int int45 = strMatcher28.isMatch(charArray40, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer25.reset(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder15.replaceFirst(strMatcher48, "true\na4\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test07529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07529");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.deleteFirst(' ');
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        java.util.List<java.lang.String> strList35 = strTokenizer32.getTokenList();
        java.lang.String[] strArray39 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        boolean boolean42 = strList35.addAll((java.util.Collection<java.lang.String>) strList40);
        java.util.Spliterator<java.lang.String> strSpliterator43 = strList40.spliterator();
        int int44 = strList40.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int48 = strList40.lastIndexOf((java.lang.Object) strTokenizer47);
        strList40.clear();
        int int50 = strList40.size();
        int int51 = strList40.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder25.appendAll((java.lang.Iterable<java.lang.String>) strList40);
        strList40.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = strList40.get(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strSpliterator43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test07530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07530");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) '4');
        char[] charArray14 = strBuilder11.toCharArray(9, 51);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[0]");
    }

    @Test
    public void test07531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07531");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray19 = strTokenizer18.getTokenArray();
        java.lang.String[] strArray20 = strTokenizer18.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendWithSeparators((java.lang.Object[]) strArray20, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteAll(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder12.appendFixedWidthPadRight((java.lang.Object) strBuilder27, 0, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: hi!", ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder12.deleteFirst(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        int int37 = strBuilder36.capacity();
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln(stringBuffer38, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder36.appendSeparator("java.io.IOException: hi!");
        java.lang.Throwable throwable48 = null;
        java.io.IOException iOException49 = new java.io.IOException("{}", throwable48);
        java.lang.Throwable[] throwableArray50 = iOException49.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendAll((java.lang.Object[]) throwableArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder12.appendAll((java.lang.Object[]) throwableArray50);
        java.lang.String str53 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 32 + "'", int37 == 32);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\n" + "'", str53, "\n");
    }

    @Test
    public void test07532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07532");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("\n32.0#4\nt", '9');
    }

    @Test
    public void test07533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07533");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendSeparator("true\n###################################\n32.0", (int) 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln("36.0");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test07534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07534");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.insert(0, (long) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = strBuilder10.substring((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test07535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07535");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean2 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray10 = strTokenizer9.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.appendAll((java.lang.Object[]) strArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray20 = strTokenizer19.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendAll((java.lang.Object[]) strArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder5.appendln(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        java.io.Writer writer35 = strBuilder34.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "");
        char[] charArray47 = strBuilder43.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendln(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        writer35.write(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder27.append(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer4.reset(charArray47);
        java.lang.String str53 = strTokenizer52.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer52.setIgnoredMatcher(strMatcher54);
        char[] charArray60 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, ' ');
        int int63 = strTokenizer62.size();
        boolean boolean64 = strTokenizer62.hasNext();
        java.util.List<java.lang.String> strList65 = strTokenizer62.getTokenList();
        java.lang.String[] strArray69 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        boolean boolean72 = strList65.addAll((java.util.Collection<java.lang.String>) strList70);
        java.util.Spliterator<java.lang.String> strSpliterator73 = strList70.spliterator();
        int int74 = strList70.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int78 = strList70.lastIndexOf((java.lang.Object) strTokenizer77);
        java.util.List<java.lang.String> strList79 = strTokenizer77.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray86 = strTokenizer85.getTokenArray();
        java.lang.String[] strArray87 = strTokenizer85.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder83.appendWithSeparators((java.lang.Object[]) strArray87, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder89.deleteAll(strMatcher90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer77.setIgnoredMatcher(strMatcher90);
        java.lang.String str93 = strTokenizer77.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer77.setIgnoredChar('a');
        boolean boolean96 = strTokenizer77.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher97 = strTokenizer77.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = strTokenizer52.setIgnoredMatcher(strMatcher97);
        boolean boolean99 = strTokenizer52.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(writer35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strSpliterator73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "StrTokenizer[ 4#4]" + "'", str93, "StrTokenizer[ 4#4]");
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(strMatcher97);
        org.junit.Assert.assertNotNull(strTokenizer98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test07536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07536");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.setNullText("");
        java.lang.Object obj33 = properties0.get((java.lang.Object) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((long) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll('#');
        int int40 = strBuilder35.indexOf(' ', 43);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.append("########a4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst('a', '4');
        char[] charArray54 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        int int57 = strTokenizer56.size();
        boolean boolean58 = strTokenizer56.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer56.setIgnoredMatcher(strMatcher59);
        int int62 = strBuilder46.indexOf(strMatcher59, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder46.deleteFirst("StrTokenizer[32.0]");
        char[] charArray69 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ');
        int int72 = strTokenizer71.size();
        boolean boolean73 = strTokenizer71.hasNext();
        java.util.List<java.lang.String> strList74 = strTokenizer71.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst("", "");
        char[] charArray79 = strBuilder75.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray79, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray79);
        boolean boolean83 = strList74.equals((java.lang.Object) charArray79);
        boolean boolean85 = strList74.add("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder64.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList74, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder42.appendAll((java.lang.Iterable<java.lang.String>) strList74);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList91 = strList74.subList((int) '$', (int) '\000');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(36) > toIndex(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test07537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07537");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer5, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer5.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setEmptyTokenAsNull(true);
        java.lang.String str13 = strTokenizer10.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("#\nfalse\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer10.setTrimmerMatcher(strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer10.setIgnoredChar('4');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "32.0" + "'", str13, "32.0");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
    }

    @Test
    public void test07538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07538");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (byte) 1, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.clear();
        java.io.IOException iOException10 = new java.io.IOException("\n");
        java.lang.Throwable[] throwableArray11 = iOException10.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendAll((java.lang.Object[]) throwableArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strBuilder3.asTokenizer();
        java.io.Reader reader14 = strBuilder3.asReader();
        boolean boolean15 = reader14.markSupported();
        boolean boolean16 = reader14.markSupported();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(reader14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test07539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07539");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.appendln(58);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("00.0\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.deleteFirst(strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("\ntrue\n", strMatcher13);
        java.lang.String str16 = strTokenizer15.next();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\ntrue\n" + "'", str16, "\ntrue\n");
    }

    @Test
    public void test07540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07540");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "hi!");
        java.util.Iterator<java.lang.String> strItor19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendAll(strItor19);
        boolean boolean21 = strBuilder14.equals(strBuilder18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.insert(81, 13);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 81");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test07541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07541");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setLength(4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strBuilder14.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strTokenizer15);
    }

    @Test
    public void test07542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07542");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendln(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer2.setIgnoredMatcher(strMatcher17);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
    }

    @Test
    public void test07543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07543");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        boolean boolean5 = strBuilder3.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln('#');
        java.lang.StringBuffer stringBuffer14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append(stringBuffer14, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.deleteFirst("hi!");
        char[] charArray20 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer7.reset(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray20);
        char[] charArray23 = strBuilder3.getChars(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, 'e', '\000');
        java.lang.Object obj27 = strTokenizer26.clone();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, \n]");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test07544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07544");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int7 = strBuilder5.lastIndexOf(strMatcher6);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.insert(1, " #\n");
        char[] charArray11 = strBuilder5.toCharArray();
        java.lang.String str12 = strBuilder5.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        java.io.Reader reader17 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "");
        char[] charArray27 = strBuilder23.toCharArray();
        char[] charArray28 = strBuilder20.getChars(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        boolean boolean30 = strTokenizer29.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "");
        char[] charArray44 = strBuilder40.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.appendln(charArray44);
        int int49 = strMatcher32.isMatch(charArray44, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer29.reset(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer51.setQuoteChar('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder19.appendAll((java.util.Iterator<java.lang.String>) strTokenizer51);
        java.util.List<java.lang.String> strList55 = strTokenizer51.getTokenList();
        java.lang.String str56 = strTokenizer51.previousToken();
        java.util.List<java.lang.String> strList57 = strTokenizer51.getTokenList();
        java.lang.String[] strArray58 = strTokenizer51.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder5.appendAll((java.lang.Object[]) strArray58);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "\n #\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "\n #\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[\n,  , #, \n]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\n #\n" + "'", str12, "\n #\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test07545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07545");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        boolean boolean25 = properties0.isEmpty();
        java.lang.Object obj28 = properties0.setProperty(" 4#4", "\na32");
        boolean boolean29 = properties0.isEmpty();
        int int30 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder(116);
        boolean boolean33 = properties0.equals((java.lang.Object) 116);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test07546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07546");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray18 = strTokenizer17.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendAll((java.lang.Object[]) strArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream23 = strBuilder13.codePoints();
        java.lang.String str24 = strBuilder13.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.appendFixedWidthPadRight((int) (short) 10, 5, ' ');
        int int30 = strBuilder13.indexOf("StrTokenizer[4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder3.appendln(strBuilder13);
        int int34 = strBuilder13.indexOf("\n32.0java.io.IOException: hi!116\n\n\n", (int) '\n');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test07547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07547");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        char[] charArray16 = strBuilder8.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        char[] charArray18 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(strTokenizer24);
    }

    @Test
    public void test07548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07548");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("IOException: h");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test07549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07549");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        java.util.Collection<java.lang.Object> objCollection18 = properties1.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', '4');
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        java.io.Writer writer35 = strBuilder34.asWriter();
        properties27.store(writer35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        java.io.Reader reader42 = strBuilder38.asReader();
        properties27.load(reader42);
        boolean boolean44 = reader42.ready();
        int int45 = reader42.read();
        java.lang.Object obj46 = properties1.getOrDefault((java.lang.Object) 'a', (java.lang.Object) int45);
        boolean boolean47 = properties1.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(writer35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (-1) + "'", obj46, (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test07550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07550");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.lang.String str18 = strList14.remove(0);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        java.lang.String[] strArray32 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        boolean boolean35 = strList28.addAll((java.util.Collection<java.lang.String>) strList33);
        boolean boolean36 = strList14.addAll((java.util.Collection<java.lang.String>) strList33);
        java.util.stream.Stream<java.lang.String> strStream37 = strList33.parallelStream();
        java.lang.Object[] objArray38 = strList33.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator39 = strList33.spliterator();
        java.lang.String str41 = strList33.get((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        int int43 = strBuilder42.capacity();
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(stringBuffer44, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int49 = strBuilder47.lastIndexOf(strMatcher48);
        java.lang.String[] strArray51 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.lang.Object obj54 = null;
        boolean boolean55 = strList52.contains(obj54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder47.appendAll((java.lang.Iterable<java.lang.String>) strList52);
        boolean boolean57 = strList33.retainAll((java.util.Collection<java.lang.String>) strList52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.appendPadding(4, 'a');
        boolean boolean73 = strList52.remove((java.lang.Object) strBuilder72);
        java.util.stream.Stream<java.lang.String> strStream74 = strList52.stream();
        boolean boolean76 = strList52.add("java.io.IOException: java.io.IOException");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\n32.0" + "'", str18, "\n32.0");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[\n32.0, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[\n32.0, , ]");
        org.junit.Assert.assertNotNull(strSpliterator39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\n32.0" + "'", str41, "\n32.0");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strStream74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test07551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07551");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((int) (byte) 0);
        java.io.Writer writer8 = strBuilder7.asWriter();
        java.io.IOException iOException9 = new java.io.IOException();
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.lang.Throwable[] throwableArray11 = iOException9.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendWithSeparators((java.lang.Object[]) throwableArray11, "1");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.setNullText("97\nhi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder7.appendln("32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "");
        char[] charArray22 = strBuilder18.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "");
        char[] charArray37 = strBuilder33.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.appendln(charArray37);
        int int42 = strMatcher25.isMatch(charArray37, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher23, strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder17.replaceAll(strMatcher23, "java.io.IOException: \n");
        boolean boolean47 = strBuilder45.contains(' ');
        java.lang.String str50 = strBuilder45.midString(6, 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer8);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test07552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07552");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln((double) '#');
        boolean boolean25 = strBuilder15.equals(strBuilder24);
        java.util.stream.IntStream intStream26 = strBuilder15.codePoints();
        boolean boolean27 = strList9.contains((java.lang.Object) strBuilder15);
        java.util.stream.Stream<java.lang.String> strStream28 = strList9.stream();
        java.util.Iterator<java.lang.String> strItor29 = strList9.iterator();
        // The following exception was thrown during execution in test generation
        try {
            strItor29.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strStream28);
        org.junit.Assert.assertNotNull(strItor29);
    }

    @Test
    public void test07553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07553");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        java.lang.Object obj30 = properties0.setProperty("hi!", "hi!");
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties0.keys();
        java.io.OutputStream outputStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream32, "\ntrue\n\000\000\000\000{}0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
    }

    @Test
    public void test07554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07554");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        java.util.ListIterator<java.lang.String> strItor75 = strList9.listIterator((int) (short) 0);
        boolean boolean76 = strList9.isEmpty();
        strList9.clear();
        strList9.clear();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strItor75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test07555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07555");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "h");
        int int37 = strTokenizer33.nextIndex();
        boolean boolean38 = properties0.containsValue((java.lang.Object) strTokenizer33);
        java.util.Set<java.lang.Object> objSet39 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "");
        char[] charArray44 = strBuilder40.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setEmptyTokenAsNull(false);
        java.lang.Object obj50 = properties0.get((java.lang.Object) false);
        boolean boolean51 = properties0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.appendSeparator('#', 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.appendSeparator('#');
        java.lang.Object obj66 = properties0.get((java.lang.Object) strBuilder58);
        java.lang.String str67 = properties0.toString();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties0.entrySet();
        java.io.OutputStream outputStream69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream69, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEntrySet68);
    }

    @Test
    public void test07556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07556");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        boolean boolean13 = strBuilder10.contains("4#4");
        java.io.IOException iOException16 = new java.io.IOException("hi!");
        java.io.IOException iOException18 = new java.io.IOException("hi!");
        iOException16.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException21 = new java.io.IOException("hi!");
        java.io.IOException iOException23 = new java.io.IOException("hi!");
        iOException21.addSuppressed((java.lang.Throwable) iOException23);
        iOException18.addSuppressed((java.lang.Throwable) iOException23);
        java.io.IOException iOException26 = new java.io.IOException("hi!", (java.lang.Throwable) iOException23);
        java.lang.Throwable[] throwableArray27 = iOException23.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendAll((java.lang.Object[]) throwableArray27);
        int int31 = strBuilder10.indexOf("100.0\000\000\000\000\000", 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln((double) '#');
        boolean boolean47 = strBuilder37.equals(strBuilder46);
        java.util.stream.IntStream intStream48 = strBuilder37.codePoints();
        java.util.Iterator<java.lang.String> strItor49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder37.appendWithSeparators(strItor49, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst(' ', ' ');
        java.io.Writer writer55 = strBuilder54.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = strTokenizer61.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder56.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer61, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder56.setLength((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.insert((int) '4', (double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder54.append(strBuilder69, 32, (int) (byte) 10);
        char[] charArray73 = strBuilder69.toCharArray();
        boolean boolean74 = strBuilder10.equals((java.lang.Object) strBuilder69);
        int int76 = strBuilder69.lastIndexOf('9');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(intStream48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(writer55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[\000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, 1, ., 0, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000, \000]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test07557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07557");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setQuoteChar('$');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer8.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append((float) '$');
        char char20 = strBuilder18.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray27 = strTokenizer26.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.appendAll((java.lang.Object[]) strArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        char[] charArray36 = strBuilder32.toCharArray();
        char[] charArray37 = strBuilder29.getChars(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        char[] charArray39 = strBuilder21.getChars(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer42.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strTokenizer42.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder18.append((java.lang.Object) strTokenizer42);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.append('a');
        int int54 = strBuilder47.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strBuilder47.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray63 = strTokenizer62.getTokenArray();
        java.lang.String[] strArray64 = strTokenizer62.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.appendWithSeparators((java.lang.Object[]) strArray64, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteAll(strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder66.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.deleteAll('4');
        int int79 = strBuilder77.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst("", "");
        char[] charArray84 = strBuilder80.toCharArray();
        char[] charArray85 = strBuilder77.getChars(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray84);
        char[] charArray87 = strBuilder71.getChars(charArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder47.insert((int) (byte) 0, charArray87);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray87);
        char[] charArray90 = strBuilder18.getChars(charArray87);
        int int92 = strMatcher9.isMatch(charArray87, 53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray87);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + char20 + "' != '" + '#' + "'", char20 == '#');
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[]");
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[]");
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "#36.0StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "#36.0StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[#, 3, 6, ., 0, S, t, r, T, o, k, e, n, i, z, e, r, [, n, o, t,  , t, o, k, e, n, i, z, e, d,  , y, e, t, ]]");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
    }

    @Test
    public void test07558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07558");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        boolean boolean75 = strList9.add("StrTokenizer[not tokenized yet]");
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor77 = strList9.listIterator(12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 12");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test07559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07559");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("\n32.0", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        char[] charArray8 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln('#');
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append(stringBuffer20, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.deleteFirst("hi!");
        char[] charArray26 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer13.reset(charArray26);
        boolean boolean28 = properties0.replace((java.lang.Object) iOException4, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer13);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties0.entrySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEntrySet29);
    }

    @Test
    public void test07560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07560");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.ensureCapacity(53);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder5.ensureCapacity((int) (byte) 1);
        java.lang.String str24 = strBuilder5.substring(32, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder5.appendFixedWidthPadLeft(101, (int) '#', ' ');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "########" + "'", str24, "########");
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test07561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07561");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        properties0.clear();
        java.util.Properties properties29 = new java.util.Properties();
        int int30 = properties29.size();
        boolean boolean32 = properties29.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties29.entrySet();
        boolean boolean34 = properties29.isEmpty();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test07562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07562");
        char[] charArray3 = new char[] { 'a', '$', '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '$');
        java.util.List<java.lang.String> strList6 = strTokenizer5.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer5.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray10 = strBuilder9.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "");
        char[] charArray27 = strBuilder23.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendln(charArray27);
        int int32 = strMatcher15.isMatch(charArray27, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendAll((java.lang.Object[]) strArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder33.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray48 = strTokenizer47.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendAll((java.lang.Object[]) strArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder33.appendln(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst('a', '4');
        java.io.Writer writer63 = strBuilder62.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst("", "");
        char[] charArray75 = strBuilder71.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendln(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray75);
        writer63.write(charArray75);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder55.append(charArray75);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", strMatcher15, strMatcher80);
        int int83 = strBuilder9.indexOf(strMatcher80, 5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer5.setDelimiterMatcher(strMatcher80);
        java.lang.String str85 = strTokenizer84.next();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a$$");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a$$");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, $, $]");
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(writer63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "a" + "'", str85, "a");
    }

    @Test
    public void test07563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07563");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        int int5 = strBuilder4.capacity();
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(stringBuffer6, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int11 = strBuilder9.lastIndexOf(strMatcher10);
        boolean boolean12 = strBuilder2.equalsIgnoreCase(strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.insert((int) (byte) 0, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder2.deleteAll('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder2.ensureCapacity(56);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test07564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07564");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        char[] charArray78 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        int int81 = strTokenizer80.size();
        int int82 = strTokenizer80.previousIndex();
        boolean boolean83 = strList9.equals((java.lang.Object) strTokenizer80);
        java.lang.String str84 = strTokenizer80.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer80.setDelimiterString("{}");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer80.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer80.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer80.setQuoteChar('e');
        int int92 = strTokenizer80.previousIndex();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4#4" + "'", str84, "4#4");
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
    }

    @Test
    public void test07565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07565");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst('4', 'a');
        boolean boolean46 = properties0.remove((java.lang.Object) strBuilder33, (java.lang.Object) '4');
        java.lang.Object obj47 = properties0.clone();
        java.util.Collection<java.lang.Object> objCollection48 = properties0.values();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertNotNull(objCollection48);
    }

    @Test
    public void test07566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07566");
        java.io.IOException iOException2 = new java.io.IOException("hi!");
        java.io.IOException iOException4 = new java.io.IOException("hi!");
        iOException2.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException7 = new java.io.IOException("hi!");
        java.io.IOException iOException9 = new java.io.IOException("hi!");
        iOException7.addSuppressed((java.lang.Throwable) iOException9);
        iOException4.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException12 = new java.io.IOException("hi!", (java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray13 = iOException9.getSuppressed();
        java.io.IOException iOException15 = new java.io.IOException("#######a4\n");
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException15);
        iOException9.addSuppressed((java.lang.Throwable) iOException15);
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test07567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07567");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.replaceAll('a', '3');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteCharAt(62);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 62");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test07568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07568");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.appendln((double) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.deleteAll('4');
        boolean boolean22 = strBuilder15.contains(' ');
        boolean boolean23 = strBuilder6.equalsIgnoreCase(strBuilder15);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder15.ensureCapacity(286);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test07569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07569");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendln(32);
        java.io.Reader reader11 = strBuilder6.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln('#');
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.append(stringBuffer18, (int) (byte) -1, (int) (byte) 100);
        char[] charArray26 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder15.append(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.insert(5, "");
        char[] charArray33 = strBuilder29.toCharArray();
        int int36 = reader11.read(charArray33, (int) (short) 1, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strTokenizer42.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder37.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer42, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer42.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strTokenizer49.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher50);
        boolean boolean52 = strTokenizer51.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "#\n 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "#\n 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[#, \n,  , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test07570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07570");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[\n32.0-1.0]");
        int int2 = strTokenizer1.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test07571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07571");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("java.io.IOException: hi!");
        java.lang.Throwable throwable12 = null;
        java.io.IOException iOException13 = new java.io.IOException("{}", throwable12);
        java.lang.Throwable[] throwableArray14 = iOException13.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendAll((java.lang.Object[]) throwableArray14);
        java.io.Reader reader16 = strBuilder10.asReader();
        boolean boolean17 = reader16.ready();
        reader16.reset();
        java.nio.CharBuffer charBuffer19 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int20 = reader16.read(charBuffer19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test07572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07572");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties4.entrySet();
        java.io.IOException iOException13 = new java.io.IOException();
        java.lang.Throwable[] throwableArray14 = iOException13.getSuppressed();
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException13);
        boolean boolean17 = properties4.containsValue((java.lang.Object) iOException16);
        char[] charArray23 = new char[] { ' ', '4', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray27 = strBuilder26.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst('a', 'a');
        java.lang.String str41 = strBuilder39.rightString((int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.deleteFirst('$');
        java.lang.Object obj46 = properties4.put((java.lang.Object) strTokenizer29, (java.lang.Object) strBuilder45);
        char[] charArray49 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        int int52 = strBuilder51.capacity();
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(stringBuffer53, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.appendln((int) (byte) 0);
        java.io.Writer writer59 = strBuilder58.asWriter();
        java.io.IOException iOException60 = new java.io.IOException();
        java.lang.Throwable[] throwableArray61 = iOException60.getSuppressed();
        java.lang.Throwable[] throwableArray62 = iOException60.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.appendWithSeparators((java.lang.Object[]) throwableArray62, "1");
        java.lang.Object obj65 = properties4.getOrDefault((java.lang.Object) charArray49, (java.lang.Object) throwableArray62);
        properties4.clear();
        properties4.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteFirst("");
        int int72 = strBuilder68.indexOf("");
        int int75 = strBuilder68.lastIndexOf('#', (int) (byte) 0);
        java.io.Reader reader76 = strBuilder68.asReader();
        long long78 = reader76.skip((long) (short) -1);
        properties4.load(reader76);
        boolean boolean80 = properties4.isEmpty();
        java.io.OutputStream outputStream81 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream81, "\n32.0-1.0");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 32 + "'", int52 == 32);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(writer59);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(reader76);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test07573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07573");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("java.io.IOException: ");
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test07574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07574");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendSeparator("StrTokenizer[]", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.append(false);
        java.lang.String str11 = strBuilder10.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append("java.io.IOException: hi!false");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(50);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.deleteAll("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setLength(33);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "java.io.IOException: hi!false" + "'", str11, "java.io.IOException: hi!false");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test07575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07575");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean2 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.setQuoteChar('$');
        java.lang.String str7 = strTokenizer1.previousToken();
        java.lang.String str8 = strTokenizer1.toString();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "StrTokenizer[]" + "'", str8, "StrTokenizer[]");
    }

    @Test
    public void test07576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07576");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.insert(1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.setCharAt(1, 'a');
        java.util.stream.IntStream intStream17 = strBuilder16.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        int int19 = strBuilder18.capacity();
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(stringBuffer20, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.insert(1, (double) 32);
        java.lang.String str28 = strBuilder18.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder18.insert(1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder16.append((java.lang.CharSequence) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder16.appendSeparator("java.io.IOException: {\ntrue\n=1.0}");
        java.io.Writer writer35 = strBuilder16.asWriter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\n32.0" + "'", str28, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(writer35);
    }

    @Test
    public void test07577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07577");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[0.0100\n]", "35.0\n");
    }

    @Test
    public void test07578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07578");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.appendln(charArray7, (int) (short) 1, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(0, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendPadding((int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendPadding((int) (byte) 0, ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.insert((int) '6', "4#40.0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 54");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test07579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07579");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        java.lang.String str20 = strList14.remove((int) (byte) 0);
        boolean boolean22 = strList14.add("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendAll((java.lang.Object[]) strArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendAll((java.lang.Object[]) strArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.appendln(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        char[] charArray52 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendln(charArray52);
        boolean boolean54 = strBuilder23.equals((java.lang.Object) strBuilder47);
        boolean boolean55 = strList14.remove((java.lang.Object) strBuilder23);
        java.util.Iterator<java.lang.String> strItor56 = strList14.iterator();
        java.lang.Comparable[][] comparableArray58 = new java.lang.Comparable[0][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][] strComparableArray59 = (java.lang.Comparable<java.lang.String>[][]) comparableArray58;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String>[][] strComparableArray60 = strList14.toArray(strComparableArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strItor56);
        org.junit.Assert.assertNotNull(comparableArray58);
        org.junit.Assert.assertNotNull(strComparableArray59);
    }

    @Test
    public void test07580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07580");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("\n32.0-1.0", '2', '3');
    }

    @Test
    public void test07581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07581");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray19 = strTokenizer18.getTokenArray();
        java.lang.String[] strArray20 = strTokenizer18.getTokenArray();
        boolean boolean21 = strTokenizer18.hasNext();
        int int22 = strTokenizer18.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer18.getQuoteMatcher();
        java.util.List<java.lang.String> strList24 = strTokenizer18.getTokenList();
        boolean boolean25 = strList9.retainAll((java.util.Collection<java.lang.String>) strList24);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader36 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray42 = strTokenizer41.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendAll((java.lang.Object[]) strArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder37.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream47 = strBuilder37.codePoints();
        java.lang.Object obj48 = properties27.replace((java.lang.Object) reader36, (java.lang.Object) intStream47);
        reader36.reset();
        properties26.load(reader36);
        int int51 = strList9.indexOf((java.lang.Object) properties26);
        strList9.add((int) (byte) 0, "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        int int56 = strBuilder55.capacity();
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(stringBuffer57, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int62 = strBuilder60.lastIndexOf(strMatcher61);
        java.lang.String[] strArray64 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.lang.Object obj67 = null;
        boolean boolean68 = strList65.contains(obj67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.appendAll((java.lang.Iterable<java.lang.String>) strList65);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst("", "");
        char[] charArray77 = strBuilder73.toCharArray();
        char[] charArray78 = strBuilder70.getChars(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        boolean boolean80 = strTokenizer79.hasPrevious();
        java.util.List<java.lang.String> strList81 = strTokenizer79.getTokenList();
        java.lang.Object[] objArray82 = strList81.toArray();
        java.util.ListIterator<java.lang.String> strItor83 = strList81.listIterator();
        boolean boolean85 = strList81.add("97\nhi!101.0\n");
        boolean boolean86 = strList65.containsAll((java.util.Collection<java.lang.String>) strList81);
        boolean boolean87 = strList9.addAll((java.util.Collection<java.lang.String>) strList65);
        java.util.ListIterator<java.lang.String> strItor88 = strList9.listIterator();
        boolean boolean90 = strList9.add("\n32.0-1.0");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 32 + "'", int56 == 32);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertNotNull(strItor83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(strItor88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test07582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07582");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        boolean boolean4 = strTokenizer1.hasNext();
        boolean boolean5 = strTokenizer1.hasNext();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test07583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07583");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties4.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties4.keys();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader20 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendAll((java.lang.Object[]) strArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream31 = strBuilder21.codePoints();
        java.lang.Object obj32 = properties11.replace((java.lang.Object) reader20, (java.lang.Object) intStream31);
        boolean boolean33 = reader20.ready();
        boolean boolean34 = properties4.containsValue((java.lang.Object) reader20);
        boolean boolean35 = reader20.markSupported();
        boolean boolean36 = reader20.markSupported();
        reader20.close();
        long long39 = reader20.skip((long) 8);
        int int40 = reader20.read();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test07584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07584");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder33.lastIndexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.insert((int) (short) 1, 32);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        boolean boolean42 = properties39.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties39.entrySet();
        java.lang.Object obj44 = properties0.putIfAbsent((java.lang.Object) strBuilder38, (java.lang.Object) objEntrySet43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        int int46 = strBuilder45.capacity();
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(stringBuffer47, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.insert(1, (double) 32);
        java.lang.String str55 = strBuilder45.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder45.replaceAll("", "hi!");
        boolean boolean59 = properties0.contains((java.lang.Object) "");
        java.util.Properties properties60 = new java.util.Properties(properties0);
        properties60.clear();
        java.util.Set<java.lang.Object> objSet62 = properties60.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        int int65 = strBuilder64.capacity();
        java.lang.StringBuffer stringBuffer66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendln(stringBuffer66, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder64.insert(1, (double) 32);
        boolean boolean73 = strBuilder64.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder64.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder64.clear();
        int int76 = strBuilder75.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader84 = strBuilder80.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder75.appendln(strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder75.replaceFirst("\n32.0", "StrTokenizer[not tokenized yet]");
        boolean boolean89 = properties60.containsValue((java.lang.Object) strBuilder75);
        int int90 = properties60.size();
        java.io.OutputStream outputStream91 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties60.storeToXML(outputStream91, "StrTokenizer[32.0]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\n32.0" + "'", str55, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 32 + "'", int65 == 32);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 32 + "'", int76 == 32);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(reader84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
    }

    @Test
    public void test07585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07585");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) '4');
        java.io.Writer writer28 = writer11.append((java.lang.CharSequence) strBuilder25);
        writer11.close();
        java.io.Writer writer31 = writer11.append(' ');
        writer31.write(2);
        writer31.flush();
        writer31.flush();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(writer31);
    }

    @Test
    public void test07586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07586");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((int) (short) 1);
        int int16 = strBuilder10.lastIndexOf("{}", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert((int) (short) 1, (long) '$');
        java.lang.String str25 = strBuilder19.midString((int) (byte) 100, 39);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.deleteAll('1');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test07587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07587");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("\ntrue\n\000\000\000\000{}", "35.0\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setDelimiterString("");
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test07588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07588");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        java.lang.String str16 = strTokenizer1.next();
        java.util.List<java.lang.String> strList17 = strTokenizer1.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer1.setQuoteChar('\000');
        boolean boolean20 = strTokenizer19.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#" + "'", str16, "#");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test07589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07589");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "h");
        int int37 = strTokenizer33.nextIndex();
        boolean boolean38 = properties0.containsValue((java.lang.Object) strTokenizer33);
        java.util.Properties properties39 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray46 = strTokenizer45.getTokenArray();
        java.lang.String[] strArray47 = strTokenizer45.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendWithSeparators((java.lang.Object[]) strArray47, "4#4");
        char[] charArray52 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray52);
        java.lang.Object obj54 = properties39.getOrDefault((java.lang.Object) strBuilder43, (java.lang.Object) strTokenizer53);
        int int55 = properties39.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray61 = strTokenizer60.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendAll((java.lang.Object[]) strArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray71 = strTokenizer70.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.appendAll((java.lang.Object[]) strArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder56.appendln(strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder78.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder79.replaceFirst('4', 'a');
        boolean boolean85 = properties39.remove((java.lang.Object) strBuilder72, (java.lang.Object) '4');
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Collection<java.lang.Object> objCollection87 = properties0.values();
        java.util.Set<java.lang.Object> objSet88 = properties0.keySet();
        java.util.Collection<java.lang.Object> objCollection89 = properties0.values();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objCollection87);
        org.junit.Assert.assertNotNull(objSet88);
        org.junit.Assert.assertNotNull(objCollection89);
    }

    @Test
    public void test07590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07590");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray11 = strTokenizer10.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendAll((java.lang.Object[]) strArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendAll((java.lang.Object[]) strArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder6.appendln(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', '4');
        java.io.Writer writer36 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        char[] charArray48 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendln(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        writer36.write(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.append(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int56 = strBuilder28.indexOf(strMatcher54, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder3.deleteAll(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendSeparator('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendSeparator("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000", (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append((float) (short) 10);
        int int69 = strBuilder64.indexOf("java.io.IOException: false", 50);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test07591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07591");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, "#\nStrTokenizer[not tokenized yet]ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt#");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
    }

    @Test
    public void test07592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07592");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        char[] charArray16 = strBuilder8.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        char[] charArray18 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean21 = strTokenizer20.hasNext();
        java.lang.String[] strArray22 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder0.appendWithSeparators((java.lang.Object[]) strArray22, "\n-1.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendSeparator('a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence29 = strBuilder24.subSequence(14, 117);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 117");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test07593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07593");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        char[] charArray6 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        int int9 = strTokenizer8.size();
        boolean boolean10 = strTokenizer8.hasNext();
        java.util.List<java.lang.String> strList11 = strTokenizer8.getTokenList();
        java.lang.String[] strArray15 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = strList11.addAll((java.util.Collection<java.lang.String>) strList16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        java.lang.String[] strArray22 = strTokenizer20.getTokenArray();
        boolean boolean23 = strTokenizer20.hasNext();
        int int24 = strTokenizer20.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer20.getQuoteMatcher();
        java.util.List<java.lang.String> strList26 = strTokenizer20.getTokenList();
        boolean boolean27 = strList11.retainAll((java.util.Collection<java.lang.String>) strList26);
        strList11.clear();
        java.lang.Object obj29 = properties0.remove((java.lang.Object) strList11);
        java.util.Set<java.lang.String> strSet30 = properties0.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.setNullText("");
        char[] charArray37 = strBuilder36.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append(100);
        java.lang.Object obj46 = properties0.remove((java.lang.Object) strBuilder43);
        java.util.Properties properties47 = new java.util.Properties(properties0);
        int int48 = properties47.size();
        java.io.PrintWriter printWriter49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties47.list(printWriter49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test07594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07594");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.deleteAll('4');
        int int22 = strBuilder20.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "");
        char[] charArray27 = strBuilder23.toCharArray();
        char[] charArray28 = strBuilder20.getChars(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        char[] charArray30 = strBuilder14.getChars(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "");
        char[] charArray45 = strBuilder41.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.appendln(charArray45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, 't');
        // The following exception was thrown during execution in test generation
        try {
            int int51 = strMatcher33.isMatch(charArray45, 50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
    }

    @Test
    public void test07595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07595");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(' ', ' ');
        java.util.Properties properties23 = new java.util.Properties();
        int int24 = properties23.size();
        java.lang.Object obj25 = properties23.clone();
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.appendFixedWidthPadLeft((java.lang.Object) properties23, (int) '$', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder19.insert(2, 10.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder19.appendln(strBuilder40);
        boolean boolean42 = strBuilder40.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendPadding(131, 'e');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "{}");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test07596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07596");
        java.lang.Throwable throwable1 = null;
        java.io.IOException iOException2 = new java.io.IOException("{}", throwable1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException("hi!");
        java.io.IOException iOException8 = new java.io.IOException("hi!");
        iOException6.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException8);
        java.lang.Throwable throwable12 = null;
        java.io.IOException iOException13 = new java.io.IOException("\n32.0", throwable12);
        iOException10.addSuppressed((java.lang.Throwable) iOException13);
        iOException3.addSuppressed((java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray16 = iOException10.getSuppressed();
        java.io.IOException iOException18 = new java.io.IOException("hi!");
        iOException10.addSuppressed((java.lang.Throwable) iOException18);
        java.lang.Throwable[] throwableArray20 = iOException18.getSuppressed();
        java.lang.String str21 = iOException18.toString();
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "java.io.IOException: hi!" + "'", str21, "java.io.IOException: hi!");
    }

    @Test
    public void test07597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07597");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        int int17 = properties0.size();
        java.io.IOException iOException18 = new java.io.IOException();
        java.lang.Throwable[] throwableArray19 = iOException18.getSuppressed();
        boolean boolean20 = properties0.equals((java.lang.Object) iOException18);
        boolean boolean22 = properties0.containsKey((java.lang.Object) " #\n");
        java.util.Set<java.lang.String> strSet23 = properties0.stringPropertyNames();
        java.lang.Object obj24 = properties0.clone();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
    }

    @Test
    public void test07598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07598");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.setNullText("");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.replaceAll(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.replaceFirst(strMatcher13, "########a4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder5.appendPadding((int) (short) 0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll("tue");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test07599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07599");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer6, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.deleteFirst("hi!");
        char[] charArray12 = strBuilder3.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.setNewLineText("java.io.IOException: hi!");
        java.io.Reader reader15 = strBuilder3.asReader();
        reader15.mark((-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        int int19 = strBuilder18.capacity();
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(stringBuffer20, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.insert(1, (double) 32);
        java.util.Properties properties27 = new java.util.Properties();
        int int28 = properties27.size();
        boolean boolean30 = properties27.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        char[] charArray35 = strBuilder31.toCharArray();
        boolean boolean36 = properties27.containsValue((java.lang.Object) charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder18.append(charArray35, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        int int44 = reader15.read(charArray35);
        boolean boolean45 = reader15.ready();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, \n]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test07600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07600");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendSeparator("StrTokenizer[]", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.append(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test07601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07601");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.append((java.lang.Object) (byte) 1);
        java.lang.String str25 = strBuilder10.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder10.appendln((long) 80);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test07602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07602");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("StrTokenizer[]");
        int int16 = strBuilder12.indexOf(" 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln((double) '#');
        boolean boolean32 = strBuilder22.equals(strBuilder31);
        java.util.stream.IntStream intStream33 = strBuilder22.codePoints();
        java.util.Iterator<java.lang.String> strItor34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder22.appendWithSeparators(strItor34, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "");
        char[] charArray47 = strBuilder43.toCharArray();
        char[] charArray48 = strBuilder40.getChars(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        boolean boolean50 = strTokenizer49.hasPrevious();
        java.util.List<java.lang.String> strList51 = strTokenizer49.getTokenList();
        boolean boolean52 = strTokenizer49.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer49.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder36.replaceAll(strMatcher53, "\n32.0java.io.IOException: hi!");
        boolean boolean56 = strBuilder12.equals(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder12.appendPadding(116, 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.ensureCapacity(6);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("");
        int int66 = strBuilder62.indexOf("");
        int int69 = strBuilder62.lastIndexOf('#', (int) (byte) 0);
        boolean boolean71 = strBuilder62.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder62.appendAll((java.util.Iterator<java.lang.String>) strTokenizer72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder62.appendSeparator("{}");
        char[] charArray76 = strBuilder75.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.appendln(strBuilder77, 25, 53);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder59.appendFixedWidthPadRight((java.lang.Object) 25, 2, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder59.minimizeCapacity();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[]");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test07603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07603");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(' ', ' ');
        java.io.Writer writer23 = strBuilder22.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder24.setLength((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.insert((int) '4', (double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.append(strBuilder37, 32, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder22.appendln((double) 8L);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendSeparator('9', '6');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(writer23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test07604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07604");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        java.lang.String str10 = strBuilder6.getNewLineText();
        java.util.stream.IntStream intStream11 = strBuilder6.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.append((java.lang.CharSequence) strBuilder6);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.appendFixedWidthPadLeft((int) (byte) 1, 32, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.setNullText("32.0");
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties21.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        int int29 = strBuilder25.indexOf("");
        int int32 = strBuilder25.lastIndexOf('#', (int) (byte) 0);
        boolean boolean34 = strBuilder25.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder25.appendAll((java.util.Iterator<java.lang.String>) strTokenizer35);
        boolean boolean37 = strTokenizer35.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("{}");
        java.lang.Object obj41 = properties21.replace((java.lang.Object) strTokenizer35, (java.lang.Object) "{}");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder20.append((java.lang.Object) strTokenizer35);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder20.append((double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append('t');
        int int48 = strBuilder47.size();
        int int49 = strBuilder47.size();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.append("", (int) '\n', 37);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(intStream11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 151 + "'", int48 == 151);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 151 + "'", int49 == 151);
    }

    @Test
    public void test07605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07605");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("StrTokenizer[java.io.IOException]", "IOException: h");
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        java.util.Set<java.lang.Object> objSet7 = properties5.keySet();
        java.util.Properties properties10 = new java.util.Properties();
        int int11 = properties10.size();
        boolean boolean13 = properties10.containsKey((java.lang.Object) (-1.0f));
        boolean boolean14 = properties5.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray19 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        int int22 = strTokenizer21.size();
        boolean boolean23 = strTokenizer21.hasNext();
        java.util.List<java.lang.String> strList24 = strTokenizer21.getTokenList();
        java.lang.String[] strArray28 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        boolean boolean31 = strList24.addAll((java.util.Collection<java.lang.String>) strList29);
        java.util.Spliterator<java.lang.String> strSpliterator32 = strList29.spliterator();
        int int33 = strList29.size();
        boolean boolean35 = strList29.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream36 = strList29.stream();
        boolean boolean37 = properties5.containsKey((java.lang.Object) strList29);
        int int38 = strList29.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        int int40 = strBuilder39.capacity();
        java.lang.StringBuffer stringBuffer41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(stringBuffer41, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder39.appendln((int) (byte) 0);
        java.io.Writer writer47 = strBuilder46.asWriter();
        java.io.Writer writer48 = strBuilder46.asWriter();
        int int49 = strList29.lastIndexOf((java.lang.Object) strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder4.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList29, "########");
        java.util.Collection<java.lang.String> strCollection52 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = strList29.addAll(strCollection52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strSpliterator32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 4 + "'", int38 == 4);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(writer47);
        org.junit.Assert.assertNotNull(writer48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test07606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07606");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.insert(1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.setCharAt(1, 'a');
        java.util.stream.IntStream intStream17 = strBuilder16.codePoints();
        java.lang.String str18 = strBuilder16.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.appendln((double) 49);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "");
        char[] charArray37 = strBuilder33.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.append(charArray37, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        int int44 = strBuilder43.capacity();
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(stringBuffer45, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder43.appendSeparator("java.io.IOException: hi!");
        boolean boolean54 = strBuilder30.equals((java.lang.Object) strBuilder53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strBuilder53.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.append('e');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder20.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder53.replace(0, 286, "0.01.0");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(intStream17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\na32.0" + "'", str18, "\na32.0");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 32 + "'", int44 == 32);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test07607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07607");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        strList14.clear();
        char[] charArray27 = new char[] { 'a', '$', '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, '$');
        java.util.List<java.lang.String> strList30 = strTokenizer29.getTokenList();
        char[] charArray35 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        int int38 = strTokenizer37.size();
        boolean boolean39 = strTokenizer37.hasNext();
        java.util.List<java.lang.String> strList40 = strTokenizer37.getTokenList();
        java.lang.String[] strArray44 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = strList40.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray50 = strTokenizer49.getTokenArray();
        java.lang.String[] strArray51 = strTokenizer49.getTokenArray();
        boolean boolean52 = strTokenizer49.hasNext();
        int int53 = strTokenizer49.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer49.getQuoteMatcher();
        java.util.List<java.lang.String> strList55 = strTokenizer49.getTokenList();
        boolean boolean56 = strList40.retainAll((java.util.Collection<java.lang.String>) strList55);
        boolean boolean57 = strList30.addAll((java.util.Collection<java.lang.String>) strList55);
        strList30.clear();
        boolean boolean59 = strList14.addAll((java.util.Collection<java.lang.String>) strList30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("\na32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setEmptyTokenAsNull(true);
        boolean boolean64 = strList30.equals((java.lang.Object) strTokenizer61);
        boolean boolean65 = strTokenizer61.hasPrevious();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a$$");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a$$");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, $, $]");
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test07608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07608");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("1001\n");
        boolean boolean2 = strTokenizer1.hasNext();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test07609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07609");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.trim();
        java.util.Properties properties11 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray18 = strTokenizer17.getTokenArray();
        java.lang.String[] strArray19 = strTokenizer17.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendWithSeparators((java.lang.Object[]) strArray19, "4#4");
        char[] charArray24 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray24);
        java.lang.Object obj26 = properties11.getOrDefault((java.lang.Object) strBuilder15, (java.lang.Object) strTokenizer25);
        java.util.Collection<java.lang.Object> objCollection27 = properties11.values();
        boolean boolean28 = properties11.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "");
        char[] charArray40 = strBuilder36.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.appendln((double) '$');
        java.lang.Object obj44 = properties11.get((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder10.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray51 = strTokenizer50.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendAll((java.lang.Object[]) strArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray61 = strTokenizer60.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendAll((java.lang.Object[]) strArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder46.appendln(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst("", "");
        char[] charArray75 = strBuilder71.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendln(charArray75);
        boolean boolean77 = strBuilder46.equals((java.lang.Object) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder35.appendFixedWidthPadRight((java.lang.Object) strBuilder46, 1, 'a');
        int int83 = strBuilder46.lastIndexOf('t', 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder46.setNewLineText("true\n#####");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder46.append("rg.apace.common", 101, 75);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test07610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07610");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.replace(0, (int) (byte) 100, "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray16 = strTokenizer15.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendAll((java.lang.Object[]) strArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        int int24 = strBuilder11.lastIndexOf(strMatcher22, (int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder1.replace(strMatcher22, "l", 1, 43, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder1.deleteAll('7');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test07611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07611");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        int int5 = strBuilder1.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceFirst('$', 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("java.io.IOException: ", "0.0{}\n");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test07612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07612");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean10 = strTokenizer9.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setDelimiterChar('a');
        int int13 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer9.setIgnoredChar(' ');
        java.lang.String[] strArray16 = strTokenizer15.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder0.appendWithSeparators((java.lang.Object[]) strArray16, "###");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.delete((int) (short) 0, 53);
        java.io.Reader reader22 = strBuilder18.asReader();
        long long24 = reader22.skip((long) 43);
        boolean boolean25 = reader22.ready();
        boolean boolean26 = reader22.ready();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test07613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07613");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.ensureCapacity((int) (short) 10);
        boolean boolean13 = strBuilder6.equals((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.setNullText("java.io.IOException");
        java.lang.String str16 = strBuilder12.getNullText();
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.lang.String str27 = properties21.getProperty("h");
        boolean boolean28 = properties21.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder12.appendFixedWidthPadRight((java.lang.Object) properties21, (int) '4', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendFixedWidthPadLeft(33, 7, 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "java.io.IOException" + "'", str16, "java.io.IOException");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test07614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07614");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder2.lastIndexOf("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        int int6 = strBuilder5.capacity();
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(stringBuffer7, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder2.appendFixedWidthPadRight((java.lang.Object) strBuilder14, (int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder2.appendSeparator("", "0");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.append("StrTokenizer[]", 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.insert(8, (long) 6);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test07615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07615");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("StrTokenizer[]");
        int int16 = strBuilder12.indexOf(" 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln((double) '#');
        boolean boolean32 = strBuilder22.equals(strBuilder31);
        java.util.stream.IntStream intStream33 = strBuilder22.codePoints();
        java.util.Iterator<java.lang.String> strItor34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder22.appendWithSeparators(strItor34, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "");
        char[] charArray47 = strBuilder43.toCharArray();
        char[] charArray48 = strBuilder40.getChars(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        boolean boolean50 = strTokenizer49.hasPrevious();
        java.util.List<java.lang.String> strList51 = strTokenizer49.getTokenList();
        boolean boolean52 = strTokenizer49.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer49.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder36.replaceAll(strMatcher53, "\n32.0java.io.IOException: hi!");
        boolean boolean56 = strBuilder12.equals(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendln(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder58.appendln("rg.apache.", (int) (short) 0, 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.insert(6, 'o');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test07616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07616");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst("", "");
        char[] charArray29 = strBuilder25.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendln(charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendln((double) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteAll('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        char[] charArray39 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "");
        char[] charArray54 = strBuilder50.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendln(charArray54);
        int int59 = strMatcher42.isMatch(charArray54, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher40, strMatcher42);
        java.lang.Object obj61 = properties1.put((java.lang.Object) strBuilder34, (java.lang.Object) strTokenizer60);
        java.util.Set<java.lang.Object> objSet62 = properties1.keySet();
        properties1.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet64 = properties1.entrySet();
        java.io.OutputStream outputStream65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.save(outputStream65, "\n0");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNotNull(objEntrySet64);
    }

    @Test
    public void test07617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07617");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray3 = strTokenizer2.getTokenArray();
        java.lang.String[] strArray4 = strTokenizer2.getTokenArray();
        boolean boolean5 = strTokenizer2.hasNext();
        int int6 = strTokenizer2.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer2.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher7);
        java.util.List<java.lang.String> strList9 = strTokenizer8.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer8.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
    }

    @Test
    public void test07618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07618");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        char[] charArray18 = strBuilder14.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "");
        boolean boolean21 = strTokenizer20.hasNext();
        boolean boolean22 = strTokenizer20.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append(' ');
        java.lang.String str27 = strBuilder25.leftString(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.insert(4, 0);
        java.lang.String str33 = strBuilder25.midString((int) (byte) 10, 26);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder25.appendFixedWidthPadLeft(53, 32, 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder25.insert(8, (double) 's');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.delete(101, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\n32.0" + "'", str27, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test07619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07619");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst('a', '4');
        java.io.Writer writer47 = strBuilder46.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "");
        char[] charArray59 = strBuilder55.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendln(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray59);
        writer47.write(charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder39.append(charArray59);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int67 = strBuilder39.indexOf(strMatcher65, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder14.deleteAll(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.insert(0, (long) 10);
        java.io.Writer writer72 = strBuilder68.asWriter();
        writer72.close();
        properties4.store(writer72, "\n32.0a\n");
        java.util.Properties properties76 = new java.util.Properties(properties4);
        java.util.Properties properties77 = new java.util.Properties(properties4);
        java.io.OutputStream outputStream78 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.save(outputStream78, "#36.0106\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(writer47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(writer72);
    }

    @Test
    public void test07620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07620");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.delete(0, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendSeparator("1", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder3.append((double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder3.appendln((long) 25);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.ensureCapacity(112);
        java.io.Writer writer24 = strBuilder23.asWriter();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
    }

    @Test
    public void test07621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07621");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.appendSeparator('#', 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.appendPadding(6, 't');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test07622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07622");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        java.io.Reader reader8 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(117);
        java.io.Writer writer16 = strBuilder10.asWriter();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(writer16);
    }

    @Test
    public void test07623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07623");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst('4', 'a');
        boolean boolean46 = properties0.remove((java.lang.Object) strBuilder33, (java.lang.Object) '4');
        java.lang.Object obj47 = properties0.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties0.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        int int50 = strBuilder49.capacity();
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(stringBuffer51, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder49.insert(1, (double) 32);
        boolean boolean58 = strBuilder49.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder49.appendSeparator('a', ' ');
        boolean boolean62 = strBuilder61.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray68 = strTokenizer67.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder63.appendAll((java.lang.Object[]) strArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln('#');
        java.lang.StringBuffer stringBuffer78 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.append(stringBuffer78, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder75.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder75.appendSeparator("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder75.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder69.append((java.lang.CharSequence) strBuilder88);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder61.append((java.lang.CharSequence) strBuilder69);
        boolean boolean91 = properties0.contains((java.lang.Object) strBuilder61);
        properties0.clear();
        properties0.clear();
        java.util.Set<java.lang.Object> objSet94 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = new org.apache.commons.lang3.text.StrBuilder(166);
        java.lang.Object obj97 = properties0.remove((java.lang.Object) strBuilder96);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder96.appendln((float) 6);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 32 + "'", int50 == 32);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objSet94);
        org.junit.Assert.assertNull(obj97);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test07624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07624");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("\n#32.0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteCharAt(24);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 24");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07625");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("\n\0002.0java.io.IOException: hi!", "\ntrue\n\000\000\000\000{}0\n");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test07626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07626");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("{", '$');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07627");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        int int18 = reader16.read();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.deleteAll('4');
        int int26 = strBuilder24.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        char[] charArray32 = strBuilder24.getChars(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        int int34 = reader16.read(charArray31);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test07628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07628");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 0);
    }

    @Test
    public void test07629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07629");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendAll((java.lang.Object[]) strArray7);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        char[] charArray17 = strBuilder9.getChars(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        char[] charArray19 = strBuilder1.getChars(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer21.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer21.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("10.0", strMatcher25);
        java.lang.String str28 = strTokenizer27.next();
        java.util.List<java.lang.String> strList29 = strTokenizer27.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln('#');
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.append(stringBuffer45, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder42.appendSeparator("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder42.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.append((java.lang.CharSequence) strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder36.replaceFirst("#", "[4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder59.minimizeCapacity();
        int int61 = strList29.indexOf((java.lang.Object) strBuilder60);
        int int62 = strList29.size();
        boolean boolean63 = strList29.isEmpty();
        strList29.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor66 = strList29.listIterator(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "10.0" + "'", str28, "10.0");
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test07630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07630");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        java.lang.String str34 = strBuilder24.rightString((int) ' ');
        boolean boolean36 = strBuilder24.startsWith("");
        char[] charArray37 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.insert((int) (short) 0, charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.minimizeCapacity();
        int int44 = strBuilder42.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder38.deleteAll('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder38.appendln((float) 100);
        int int54 = strBuilder51.indexOf("\n32.032", 103);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n32.0" + "'", str34, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test07631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07631");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray18 = strTokenizer17.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendAll((java.lang.Object[]) strArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer23 = strBuilder22.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder0.append(stringBuffer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll("a", "\n32.0a");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder29.appendNull();
        char[] charArray35 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        int int38 = strTokenizer37.size();
        boolean boolean39 = strTokenizer37.hasNext();
        java.util.List<java.lang.String> strList40 = strTokenizer37.getTokenList();
        java.lang.String[] strArray44 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = strList40.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray50 = strTokenizer49.getTokenArray();
        java.lang.String[] strArray51 = strTokenizer49.getTokenArray();
        boolean boolean52 = strTokenizer49.hasNext();
        int int53 = strTokenizer49.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer49.getQuoteMatcher();
        java.util.List<java.lang.String> strList55 = strTokenizer49.getTokenList();
        boolean boolean56 = strList40.retainAll((java.util.Collection<java.lang.String>) strList55);
        char[] charArray61 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        int int64 = strTokenizer63.size();
        boolean boolean65 = strTokenizer63.hasNext();
        java.util.List<java.lang.String> strList66 = strTokenizer63.getTokenList();
        java.lang.String[] strArray70 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        boolean boolean73 = strList66.addAll((java.util.Collection<java.lang.String>) strList71);
        java.util.Spliterator<java.lang.String> strSpliterator74 = strList71.spliterator();
        int int75 = strList71.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int79 = strList71.lastIndexOf((java.lang.Object) strTokenizer78);
        boolean boolean80 = strList40.removeAll((java.util.Collection<java.lang.String>) strList71);
        int int81 = strList40.size();
        boolean boolean83 = strList40.add("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder30.appendAll((java.lang.Iterable<java.lang.String>) strList40);
        int int85 = strList40.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(stringBuffer23);
        org.junit.Assert.assertEquals(stringBuffer23.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strSpliterator74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 3 + "'", int75 == 3);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
    }

    @Test
    public void test07632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07632");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        java.lang.String[] strArray30 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        boolean boolean33 = strList26.addAll((java.util.Collection<java.lang.String>) strList31);
        java.util.Spliterator<java.lang.String> strSpliterator34 = strList31.spliterator();
        int int35 = strList31.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int39 = strList31.lastIndexOf((java.lang.Object) strTokenizer38);
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        int int43 = strBuilder42.capacity();
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(stringBuffer44, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(true);
        boolean boolean54 = strSubstitutor41.replaceIn(strBuilder51, (int) '$', 0);
        boolean boolean55 = strList40.equals((java.lang.Object) '$');
        boolean boolean56 = strList9.retainAll((java.util.Collection<java.lang.String>) strList40);
        java.util.stream.Stream<java.lang.String> strStream57 = strList9.stream();
        java.util.Iterator<java.lang.String> strItor58 = strList9.iterator();
        java.io.IOException iOException61 = new java.io.IOException("hi!");
        java.io.IOException iOException63 = new java.io.IOException("hi!");
        iOException61.addSuppressed((java.lang.Throwable) iOException63);
        java.io.IOException iOException66 = new java.io.IOException("hi!");
        java.io.IOException iOException68 = new java.io.IOException("hi!");
        iOException66.addSuppressed((java.lang.Throwable) iOException68);
        iOException63.addSuppressed((java.lang.Throwable) iOException68);
        java.io.IOException iOException71 = new java.io.IOException("hi!", (java.lang.Throwable) iOException68);
        java.lang.Throwable throwable73 = null;
        java.io.IOException iOException74 = new java.io.IOException("\n32.0", throwable73);
        java.lang.Throwable[] throwableArray75 = new java.lang.Throwable[] { iOException71, iOException74 };
        java.io.IOException iOException78 = new java.io.IOException("hi!");
        java.io.IOException iOException80 = new java.io.IOException("hi!");
        iOException78.addSuppressed((java.lang.Throwable) iOException80);
        java.io.IOException iOException83 = new java.io.IOException("hi!");
        java.io.IOException iOException85 = new java.io.IOException("hi!");
        iOException83.addSuppressed((java.lang.Throwable) iOException85);
        iOException80.addSuppressed((java.lang.Throwable) iOException85);
        java.io.IOException iOException88 = new java.io.IOException("hi!", (java.lang.Throwable) iOException85);
        java.lang.Throwable throwable90 = null;
        java.io.IOException iOException91 = new java.io.IOException("\n32.0", throwable90);
        java.lang.Throwable[] throwableArray92 = new java.lang.Throwable[] { iOException88, iOException91 };
        java.lang.Throwable[][] throwableArray93 = new java.lang.Throwable[][] { throwableArray75, throwableArray92 };
        java.lang.Throwable[][] throwableArray94 = strList9.toArray(throwableArray93);
        strList9.clear();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strSpliterator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strStream57);
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray92);
        org.junit.Assert.assertNotNull(throwableArray93);
        org.junit.Assert.assertNotNull(throwableArray94);
    }

    @Test
    public void test07633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07633");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray11 = strTokenizer10.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendAll((java.lang.Object[]) strArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendAll((java.lang.Object[]) strArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder6.appendln(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', '4');
        java.io.Writer writer36 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        char[] charArray48 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendln(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        writer36.write(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.append(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int56 = strBuilder28.indexOf(strMatcher54, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder3.deleteAll(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.insert(0, (long) 10);
        int int63 = strBuilder57.indexOf("java.io.IOException: \n", (int) (short) 10);
        java.lang.String str64 = strBuilder57.getNullText();
        char[] charArray67 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, '#', 'e');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder57.append(charArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.append("StrTokenizer[35.0, 4]", 0, 16);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test07634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07634");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        java.lang.String[] strArray30 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        boolean boolean33 = strList26.addAll((java.util.Collection<java.lang.String>) strList31);
        java.util.Spliterator<java.lang.String> strSpliterator34 = strList31.spliterator();
        int int35 = strList31.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int39 = strList31.lastIndexOf((java.lang.Object) strTokenizer38);
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        int int43 = strBuilder42.capacity();
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(stringBuffer44, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(true);
        boolean boolean54 = strSubstitutor41.replaceIn(strBuilder51, (int) '$', 0);
        boolean boolean55 = strList40.equals((java.lang.Object) '$');
        boolean boolean56 = strList9.retainAll((java.util.Collection<java.lang.String>) strList40);
        java.lang.Object[] objArray57 = strList9.toArray();
        java.lang.Object[] objArray58 = strList9.toArray();
        char[] charArray63 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63, ' ');
        int int66 = strTokenizer65.size();
        boolean boolean67 = strTokenizer65.hasNext();
        java.util.List<java.lang.String> strList68 = strTokenizer65.getTokenList();
        java.lang.String[] strArray72 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        boolean boolean75 = strList68.addAll((java.util.Collection<java.lang.String>) strList73);
        java.util.Spliterator<java.lang.String> strSpliterator76 = strList73.spliterator();
        int int77 = strList73.size();
        java.lang.String str79 = strList73.remove((int) (byte) 0);
        java.util.stream.Stream<java.lang.String> strStream80 = strList73.parallelStream();
        java.util.Iterator<java.lang.String> strItor81 = strList73.iterator();
        boolean boolean82 = strList9.containsAll((java.util.Collection<java.lang.String>) strList73);
        boolean boolean84 = strList9.add("[\n32.0, , , StrTokenizer[]]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strSpliterator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strSpliterator76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 3 + "'", int77 == 3);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "\n32.0" + "'", str79, "\n32.0");
        org.junit.Assert.assertNotNull(strStream80);
        org.junit.Assert.assertNotNull(strItor81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test07635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07635");
        char[] charArray2 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString("hi!");
        java.lang.String str6 = strTokenizer3.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setDelimiterString("StrTokenizer[ 4#4]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer3.setQuoteChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer3.reset("java.io.IOException: StrTokenizer[]");
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "a4" + "'", str6, "a4");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
    }

    @Test
    public void test07636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07636");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        int int12 = properties4.size();
        java.util.Properties properties14 = new java.util.Properties();
        int int15 = properties14.size();
        boolean boolean17 = properties14.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "");
        boolean boolean23 = strBuilder21.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln('#');
        java.lang.StringBuffer stringBuffer32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.append(stringBuffer32, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.deleteFirst("hi!");
        char[] charArray38 = strBuilder29.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer25.reset(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        char[] charArray41 = strBuilder21.getChars(charArray38);
        java.lang.Object obj42 = properties14.remove((java.lang.Object) charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray41);
        java.lang.Object obj44 = properties4.put((java.lang.Object) 74, (java.lang.Object) charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, 'a', 'g');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, '7', '6');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, "35.0\n100.0");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer52.set("100.0\n 116.0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, \n]");
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNull(obj44);
    }

    @Test
    public void test07637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07637");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        java.lang.String str20 = strBuilder16.getNewLineText();
        java.util.stream.IntStream intStream21 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder0.replaceAll("\n", "[\n32.0, , , StrTokenizer[]]");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder0.append(8);
        boolean boolean30 = strBuilder0.contains("1\n");
        boolean boolean31 = strBuilder0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test07638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07638");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        char char10 = strBuilder8.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator(" 4#4", (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText("\ntrue\n97\nhi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.append(false);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + char10 + "' != '" + '#' + "'", char10 == '#');
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test07639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07639");
        java.io.IOException iOException1 = new java.io.IOException("StrTokenizer[]");
        java.lang.Throwable[] throwableArray2 = iOException1.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException("hi!");
        java.io.IOException iOException7 = new java.io.IOException("hi!");
        iOException5.addSuppressed((java.lang.Throwable) iOException7);
        java.io.IOException iOException10 = new java.io.IOException("hi!");
        java.io.IOException iOException12 = new java.io.IOException("hi!");
        iOException10.addSuppressed((java.lang.Throwable) iOException12);
        iOException7.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException16 = new java.io.IOException("hi!");
        iOException7.addSuppressed((java.lang.Throwable) iOException16);
        java.io.IOException iOException18 = new java.io.IOException("1\n\n10\n", (java.lang.Throwable) iOException16);
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException16);
        iOException1.addSuppressed((java.lang.Throwable) iOException19);
        org.junit.Assert.assertNotNull(throwableArray2);
    }

    @Test
    public void test07640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07640");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.setNullText("");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.replaceAll(strMatcher13, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.replaceFirst(strMatcher13, "########a4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder5.appendPadding((int) (short) 0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder5.appendSeparator("StrTokenizer[]", (int) (short) 10);
        int int24 = strBuilder23.capacity();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[32.0]", "#\nfalse\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 28 + "'", int24 == 28);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test07641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07641");
        java.io.IOException iOException2 = new java.io.IOException("StrTokenizer[]");
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException("false", (java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.lang.Throwable[] throwableArray6 = iOException4.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray6);
    }

    @Test
    public void test07642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07642");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteAll(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.replaceAll("{}", "0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer29.reset("");
        java.lang.String str33 = strTokenizer32.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder22.append((java.lang.Object) strTokenizer32);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.insert(0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceAll('#', 'e');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test07643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07643");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        char[] charArray18 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "###");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setQuoteChar('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append('a');
        int int33 = strBuilder26.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder26.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray42 = strTokenizer41.getTokenArray();
        java.lang.String[] strArray43 = strTokenizer41.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.appendWithSeparators((java.lang.Object[]) strArray43, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll(strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.deleteAll('4');
        int int58 = strBuilder56.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst("", "");
        char[] charArray63 = strBuilder59.toCharArray();
        char[] charArray64 = strBuilder56.getChars(charArray63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray63);
        char[] charArray66 = strBuilder50.getChars(charArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder26.insert((int) (byte) 0, charArray66);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer22.setIgnoredMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strTokenizer69.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strMatcher70);
    }

    @Test
    public void test07644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07644");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset("35.0\n100.0");
        boolean boolean9 = strTokenizer8.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMatcher10);
    }

    @Test
    public void test07645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07645");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.appendFixedWidthPadLeft(0, 32, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.append((long) 13);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder4.append(true);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test07646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07646");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendSeparator('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(16, true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 16");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test07647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07647");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        java.io.Reader reader4 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        char[] charArray15 = strBuilder7.getChars(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean17 = strTokenizer16.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendln(charArray31);
        int int36 = strMatcher19.isMatch(charArray31, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer16.reset(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setQuoteChar('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer38);
        java.util.List<java.lang.String> strList42 = strTokenizer38.getTokenList();
        java.lang.String str43 = strTokenizer38.previousToken();
        java.util.List<java.lang.String> strList44 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer38.setDelimiterChar('e');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln('#');
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.append(stringBuffer55, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.deleteFirst("hi!");
        char[] charArray61 = strBuilder52.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer48.reset(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer62.reset();
        int int64 = strTokenizer63.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer63.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer63.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer66.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer46.setQuoteMatcher(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer68);
    }

    @Test
    public void test07648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07648");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.appendln('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.deleteFirst("32.0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder0.append("java.io.IOException: true", (int) 'o', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test07649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07649");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        boolean boolean20 = strList14.add("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendAll((java.lang.Object[]) strArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.replaceFirst('a', 'a');
        char[] charArray35 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        int int38 = strTokenizer37.size();
        boolean boolean39 = strTokenizer37.hasNext();
        java.util.List<java.lang.String> strList40 = strTokenizer37.getTokenList();
        java.lang.String[] strArray44 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = strList40.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder21.appendAll((java.lang.Iterable<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor49 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        int int51 = strBuilder50.capacity();
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(stringBuffer52, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln(true);
        boolean boolean62 = strSubstitutor49.replaceIn(strBuilder59, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder21.append((java.lang.CharSequence) strBuilder59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strBuilder59.asTokenizer();
        char[] charArray69 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ');
        int int72 = strTokenizer71.size();
        boolean boolean73 = strTokenizer71.hasNext();
        java.util.List<java.lang.String> strList74 = strTokenizer71.getTokenList();
        java.lang.String[] strArray78 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        boolean boolean81 = strList74.addAll((java.util.Collection<java.lang.String>) strList79);
        java.util.Spliterator<java.lang.String> strSpliterator82 = strList79.spliterator();
        int int83 = strList79.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int87 = strList79.lastIndexOf((java.lang.Object) strTokenizer86);
        strList79.clear();
        java.util.Spliterator<java.lang.String> strSpliterator89 = strList79.spliterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder59.appendAll((java.lang.Iterable<java.lang.String>) strList79);
        java.util.Iterator<java.lang.String> strItor91 = strList79.iterator();
        boolean boolean92 = strList14.removeAll((java.util.Collection<java.lang.String>) strList79);
        java.lang.Object[] objArray93 = strList79.toArray();
        boolean boolean94 = strList79.isEmpty();
        java.lang.AutoCloseable[] autoCloseableArray95 = new java.lang.AutoCloseable[] {};
        java.lang.AutoCloseable[] autoCloseableArray96 = strList79.toArray(autoCloseableArray95);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 32 + "'", int51 == 32);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strSpliterator82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 3 + "'", int83 == 3);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(autoCloseableArray95);
        org.junit.Assert.assertNotNull(autoCloseableArray96);
    }

    @Test
    public void test07650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07650");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        properties0.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        int int6 = strBuilder5.capacity();
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(stringBuffer7, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.setLength(32);
        java.io.Writer writer16 = strBuilder15.asWriter();
        writer16.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        writer16.flush();
        writer16.flush();
        properties0.store(writer16, "t");
        writer16.write(39);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        int int28 = strBuilder27.capacity();
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(stringBuffer29, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.insert(1, (double) 32);
        boolean boolean36 = strBuilder27.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder27.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder27.append((long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendln("100.0\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.setNullText("");
        char[] charArray48 = strBuilder47.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder47.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.append(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "");
        char[] charArray68 = strBuilder64.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder63.appendln(charArray68);
        java.lang.String str70 = strBuilder69.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendln(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendln('#');
        java.lang.StringBuffer stringBuffer81 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder78.append(stringBuffer81, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder78.deleteFirst("hi!");
        char[] charArray87 = strBuilder78.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer74.reset(charArray87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer88.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer89.reset();
        java.lang.String[] strArray91 = strTokenizer90.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder69.appendAll((java.lang.Object[]) strArray91);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder56.appendWithSeparators((java.lang.Object[]) strArray91, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder41.appendWithSeparators((java.lang.Object[]) strArray91, "{\n36.0\n=StrTokenizer[not tokenized yet]}");
        java.io.Writer writer97 = writer16.append((java.lang.CharSequence) "{\n36.0\n=StrTokenizer[not tokenized yet]}");
        writer97.close();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(writer16);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 32 + "'", int28 == 32);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(writer97);
    }

    @Test
    public void test07651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07651");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strTokenizer3);
    }

    @Test
    public void test07652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07652");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        int int12 = properties4.size();
        java.util.Properties properties14 = new java.util.Properties();
        int int15 = properties14.size();
        boolean boolean17 = properties14.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "");
        boolean boolean23 = strBuilder21.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln('#');
        java.lang.StringBuffer stringBuffer32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.append(stringBuffer32, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.deleteFirst("hi!");
        char[] charArray38 = strBuilder29.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer25.reset(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        char[] charArray41 = strBuilder21.getChars(charArray38);
        java.lang.Object obj42 = properties14.remove((java.lang.Object) charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray41);
        java.lang.Object obj44 = properties4.put((java.lang.Object) 74, (java.lang.Object) charArray41);
        java.util.Properties properties45 = new java.util.Properties();
        int int46 = properties45.size();
        java.lang.Object obj47 = properties45.clone();
        java.util.Set<java.lang.String> strSet48 = properties45.stringPropertyNames();
        properties45.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        int int51 = strBuilder50.capacity();
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(stringBuffer52, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder50.setLength(32);
        java.io.Writer writer61 = strBuilder60.asWriter();
        writer61.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        writer61.flush();
        writer61.flush();
        properties45.store(writer61, "t");
        writer61.write(39);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer77.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder72.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer77, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder72.setLength((int) (byte) 100);
        java.lang.String str84 = strBuilder82.substring(35);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder82.append(false);
        java.io.Writer writer87 = writer61.append((java.lang.CharSequence) strBuilder82);
        boolean boolean88 = properties4.contains((java.lang.Object) strBuilder82);
        properties4.clear();
        java.lang.String str91 = properties4.getProperty("\000\000\000\000\000\000#\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[#, \n]");
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 32 + "'", int51 == 32);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(writer61);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000" + "'", str84, "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(writer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test07653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07653");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Enumeration<?> wildcardEnumeration2 = properties0.propertyNames();
        java.util.Set<java.lang.Object> objSet3 = properties0.keySet();
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        java.lang.Throwable throwable7 = null;
        java.io.IOException iOException8 = new java.io.IOException("\n32.0", throwable7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        char[] charArray12 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer13.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln('#');
        java.lang.StringBuffer stringBuffer24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.append(stringBuffer24, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.deleteFirst("hi!");
        char[] charArray30 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer17.reset(charArray30);
        boolean boolean32 = properties4.replace((java.lang.Object) iOException8, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer17);
        java.io.IOException iOException34 = new java.io.IOException("{");
        iOException8.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException34);
        java.lang.Throwable[] throwableArray37 = iOException34.getSuppressed();
        java.io.IOException iOException38 = new java.io.IOException((java.lang.Throwable) iOException34);
        java.lang.Object obj39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean40 = properties0.remove((java.lang.Object) iOException38, obj39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration2);
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(throwableArray37);
    }

    @Test
    public void test07654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07654");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('a', '4');
        java.io.Writer writer30 = strBuilder29.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        char[] charArray42 = strBuilder38.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendln(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        writer30.write(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder22.append(charArray42);
        java.util.Properties properties47 = new java.util.Properties();
        int int48 = properties47.size();
        java.lang.Object obj49 = properties47.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder56.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder50.appendFixedWidthPadRight((java.lang.Object) strBuilder59, (int) (byte) -1, '#');
        java.lang.Object obj63 = properties47.get((java.lang.Object) strBuilder50);
        java.util.Properties properties64 = new java.util.Properties();
        int int65 = properties64.size();
        boolean boolean67 = properties64.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties68 = new java.util.Properties();
        int int69 = properties68.size();
        boolean boolean71 = properties68.containsKey((java.lang.Object) (-1.0f));
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        char[] charArray77 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, ' ');
        int int80 = strTokenizer79.size();
        boolean boolean81 = strTokenizer79.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer79.setIgnoredMatcher(strMatcher82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.replaceFirst("", "");
        java.lang.Object obj88 = properties64.putIfAbsent((java.lang.Object) strMatcher82, (java.lang.Object) strBuilder84);
        boolean boolean89 = strBuilder50.equals(obj88);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder50.appendln((double) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder46.append((java.lang.CharSequence) strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder46.appendln(10L);
        int int97 = strBuilder94.lastIndexOf("", (int) '6');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(writer30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "{}");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 14 + "'", int97 == 14);
    }

    @Test
    public void test07655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07655");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Set<java.lang.Object> objSet10 = properties4.keySet();
        properties4.clear();
        int int12 = properties4.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties4.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader21 = strBuilder17.asReader();
        boolean boolean22 = reader21.markSupported();
        boolean boolean23 = reader21.markSupported();
        long long25 = reader21.skip(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "");
        char[] charArray30 = strBuilder26.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, 'a');
        java.lang.String[] strArray33 = strTokenizer32.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer32.setDelimiterChar(' ');
        java.lang.Object obj38 = strTokenizer32.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer32.reset("#\n");
        boolean boolean41 = properties4.remove((java.lang.Object) 1L, (java.lang.Object) strTokenizer40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray47 = strTokenizer46.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendAll((java.lang.Object[]) strArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.setLength((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln((double) '#');
        boolean boolean68 = strBuilder58.equals(strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder67.appendSeparator('4', '#');
        boolean boolean72 = strBuilder50.equals(strBuilder67);
        char[] charArray73 = strBuilder67.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, 't', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.setIgnoreEmptyTokens(false);
        java.io.IOException iOException80 = new java.io.IOException("\000\000\000\000\000\000\000\000\000\000\n");
        java.lang.Object obj81 = properties4.replace((java.lang.Object) strTokenizer78, (java.lang.Object) iOException80);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "35.0\n4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "35.0\n4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[3, 5, ., 0, \n, 4]");
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNull(obj81);
    }

    @Test
    public void test07656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07656");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Collection<java.lang.Object> objCollection16 = properties0.values();
        boolean boolean17 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.deleteAll('4');
        int int26 = strBuilder24.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.deleteAll('4');
        int int34 = strBuilder32.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        char[] charArray39 = strBuilder35.toCharArray();
        char[] charArray40 = strBuilder32.getChars(charArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder24.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder24.appendln("100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst('$');
        java.util.Properties properties46 = new java.util.Properties();
        int int47 = properties46.size();
        boolean boolean49 = properties46.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties50 = new java.util.Properties();
        int int51 = properties50.size();
        boolean boolean53 = properties50.containsKey((java.lang.Object) (-1.0f));
        properties46.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties50.entrySet();
        properties50.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst("", "");
        java.io.Reader reader61 = strBuilder57.asReader();
        properties50.load(reader61);
        java.lang.Object obj63 = properties50.clone();
        boolean boolean64 = properties0.remove((java.lang.Object) strBuilder45, (java.lang.Object) properties50);
        java.util.Properties properties65 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader74 = strBuilder70.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray80 = strTokenizer79.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.appendAll((java.lang.Object[]) strArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder75.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream85 = strBuilder75.codePoints();
        java.lang.Object obj86 = properties65.replace((java.lang.Object) reader74, (java.lang.Object) intStream85);
        long long88 = reader74.skip(0L);
        reader74.close();
        properties0.load(reader74);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "{}");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(reader74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(intStream85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
    }

    @Test
    public void test07657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07657");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet2 = properties0.entrySet();
        java.io.OutputStream outputStream3 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream3, "tre\ntrue\n", "\n #\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEntrySet2);
    }

    @Test
    public void test07658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07658");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (byte) 1, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.appendln(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test07659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07659");
        java.io.IOException iOException2 = new java.io.IOException("StrTokenizer[]");
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException("false", (java.lang.Throwable) iOException3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException7 = new java.io.IOException("\n");
        java.io.IOException iOException9 = new java.io.IOException("{\ntrue\n=1.0}");
        iOException7.addSuppressed((java.lang.Throwable) iOException9);
        iOException4.addSuppressed((java.lang.Throwable) iOException9);
        java.lang.String str12 = iOException9.toString();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "java.io.IOException: {\ntrue\n=1.0}" + "'", str12, "java.io.IOException: {\ntrue\n=1.0}");
    }

    @Test
    public void test07660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07660");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.appendSeparator("[4#4]", 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean15 = strTokenizer14.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer14.setDelimiterChar('a');
        int int18 = strTokenizer14.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer14.setIgnoredChar(' ');
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder3.appendAll((java.lang.Object[]) strArray21);
        java.lang.String str23 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.minimizeCapacity();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[4#4]" + "'", str23, "[4#4]");
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test07661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07661");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray11 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        int int14 = strTokenizer13.size();
        boolean boolean15 = strTokenizer13.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer13.setIgnoredMatcher(strMatcher16);
        int int19 = strBuilder3.indexOf(strMatcher16, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.deleteFirst("StrTokenizer[32.0]");
        char[] charArray26 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        int int29 = strTokenizer28.size();
        boolean boolean30 = strTokenizer28.hasNext();
        java.util.List<java.lang.String> strList31 = strTokenizer28.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        char[] charArray36 = strBuilder32.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        boolean boolean40 = strList31.equals((java.lang.Object) charArray36);
        boolean boolean42 = strList31.add("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder21.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList31, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.append(5);
        int int49 = strBuilder44.indexOf("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n", (int) (short) 0);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test07662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07662");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        java.io.Writer writer18 = strBuilder0.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.insert(0, (float) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.minimizeCapacity();
        int int24 = strBuilder22.indexOf('\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendln(true);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(writer18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test07663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07663");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        long long23 = reader9.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst('a', '4');
        java.io.Writer writer31 = strBuilder30.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("", "");
        char[] charArray43 = strBuilder39.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.appendln(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray43);
        writer31.write(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, '4', '$');
        int int50 = reader9.read(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst("", "");
        char[] charArray58 = strBuilder54.toCharArray();
        char[] charArray59 = strBuilder51.getChars(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58);
        boolean boolean61 = strTokenizer60.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst("", "");
        char[] charArray75 = strBuilder71.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendln(charArray75);
        int int80 = strMatcher63.isMatch(charArray75, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer60.reset(charArray75);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray75);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray75);
        int int85 = reader9.read(charArray75);
        reader9.reset();
        reader9.mark(169);
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(writer31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
    }

    @Test
    public void test07664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07664");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendln(charArray31);
        int int36 = strMatcher19.isMatch(charArray31, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher17, strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder9.appendln(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray16);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strTokenizer39);
    }

    @Test
    public void test07665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07665");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        java.lang.String str34 = strBuilder24.rightString((int) ' ');
        boolean boolean36 = strBuilder24.startsWith("");
        char[] charArray37 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.insert((int) (short) 0, charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.appendSeparator('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        char[] charArray48 = strBuilder44.toCharArray();
        char[] charArray49 = strBuilder41.getChars(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        boolean boolean51 = strTokenizer50.hasPrevious();
        java.util.List<java.lang.String> strList52 = strTokenizer50.getTokenList();
        strList52.clear();
        strList52.clear();
        java.util.List[] listArray56 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.lang.String>[] strListArray57 = (java.util.List<java.lang.String>[]) listArray56;
        java.util.List<java.lang.String>[] strListArray58 = strList52.toArray(strListArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder22.appendWithSeparators((java.lang.Object[]) strListArray57, "java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln((long) 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        char[] charArray67 = strBuilder63.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, 'a');
        java.lang.String[] strArray70 = strTokenizer69.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder60.appendWithSeparators((java.lang.Object[]) strArray70, "StrTokenizer[]");
        int int73 = strBuilder72.length();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n32.0" + "'", str34, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(listArray56);
        org.junit.Assert.assertNotNull(strListArray57);
        org.junit.Assert.assertNotNull(strListArray58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 9 + "'", int73 == 9);
    }

    @Test
    public void test07666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07666");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        java.io.Writer writer7 = strBuilder6.asWriter();
        writer7.write(" 4#4");
        writer7.write(44);
        char[] charArray12 = null;
        writer7.write(charArray12);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(writer7);
    }

    @Test
    public void test07667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07667");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder2.lastIndexOf("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        int int6 = strBuilder5.capacity();
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(stringBuffer7, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder2.appendFixedWidthPadRight((java.lang.Object) strBuilder14, (int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder2.appendSeparator("", "0");
        java.util.Properties properties23 = new java.util.Properties();
        int int24 = properties23.size();
        boolean boolean26 = properties23.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties27 = new java.util.Properties();
        int int28 = properties27.size();
        boolean boolean30 = properties27.containsKey((java.lang.Object) (-1.0f));
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.lang.String str33 = properties27.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration34 = properties27.propertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder22.appendFixedWidthPadRight((java.lang.Object) wildcardEnumeration34, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.replaceAll('t', 'e');
        // The following exception was thrown during execution in test generation
        try {
            char char44 = strBuilder37.charAt(79);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 79");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test07668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07668");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst("", "");
        char[] charArray29 = strBuilder25.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendln(charArray29);
        boolean boolean31 = strBuilder0.equals((java.lang.Object) strBuilder24);
        java.io.Reader reader32 = strBuilder0.asReader();
        boolean boolean34 = strBuilder0.startsWith("java.io.IOException: \n");
        java.lang.String str36 = strBuilder0.rightString(79);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\n" + "'", str36, "\n");
    }

    @Test
    public void test07669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07669");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setEmptyTokenAsNull(true);
        java.lang.String str7 = strTokenizer2.nextToken();
        java.lang.String str8 = strTokenizer2.previous();
        boolean boolean9 = strTokenizer2.hasNext();
        java.lang.String str10 = strTokenizer2.next();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "java.io.IOException" + "'", str7, "java.io.IOException");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.io.IOException" + "'", str8, "java.io.IOException");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "java.io.IOException" + "'", str10, "java.io.IOException");
    }

    @Test
    public void test07670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07670");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objEntrySet17);
    }

    @Test
    public void test07671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07671");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer6, (int) (byte) -1, (int) (byte) 100);
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder3.append(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.insert(5, "");
        char[] charArray21 = strBuilder17.toCharArray();
        int int24 = strBuilder17.lastIndexOf("", 132);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "#\n 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "#\n 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[#, \n,  , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
    }

    @Test
    public void test07672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07672");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader7 = strBuilder3.asReader();
        long long9 = reader7.skip((long) '#');
        int int10 = reader7.read();
        reader7.close();
        java.nio.CharBuffer charBuffer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int13 = reader7.read(charBuffer12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test07673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07673");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("1001\n");
        java.lang.String str2 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) "1001\n");
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "1001\n" + "'", str2, "1001\n");
    }

    @Test
    public void test07674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07674");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        boolean boolean9 = properties0.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties0.elements();
        java.util.Set<java.lang.Object> objSet11 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties0.entrySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEntrySet12);
    }

    @Test
    public void test07675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07675");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        int int18 = reader16.read();
        boolean boolean19 = reader16.markSupported();
        int int20 = reader16.read();
        boolean boolean21 = reader16.markSupported();
        reader16.mark((-1));
        boolean boolean24 = reader16.markSupported();
        reader16.close();
        java.nio.CharBuffer charBuffer26 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int27 = reader16.read(charBuffer26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test07676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07676");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("StrTokenizer[#]");
    }

    @Test
    public void test07677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07677");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst("java.io.IOException: hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replaceFirst("\n32.0java.io.IOException: hi!", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((long) (short) 0);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test07678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07678");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.append(charArray9, 10, (int) '$');
        int int13 = strBuilder12.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        int int18 = strBuilder14.indexOf("");
        int int21 = strBuilder14.lastIndexOf('#', (int) (byte) 0);
        boolean boolean23 = strBuilder14.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder14.appendAll((java.util.Iterator<java.lang.String>) strTokenizer24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder14.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder14.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder14.appendln((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.clear();
        java.util.Properties properties33 = new java.util.Properties();
        int int34 = properties33.size();
        boolean boolean36 = properties33.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties37 = new java.util.Properties();
        int int38 = properties37.size();
        boolean boolean40 = properties37.containsKey((java.lang.Object) (-1.0f));
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.lang.String str43 = properties37.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration44 = properties37.propertyNames();
        int int45 = properties37.size();
        java.util.Properties properties47 = new java.util.Properties();
        int int48 = properties47.size();
        boolean boolean50 = properties47.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "");
        boolean boolean56 = strBuilder54.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln('#');
        java.lang.StringBuffer stringBuffer65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.append(stringBuffer65, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder62.deleteFirst("hi!");
        char[] charArray71 = strBuilder62.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer58.reset(charArray71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray71);
        char[] charArray74 = strBuilder54.getChars(charArray71);
        java.lang.Object obj75 = properties47.remove((java.lang.Object) charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray74);
        java.lang.Object obj77 = properties37.put((java.lang.Object) 74, (java.lang.Object) charArray74);
        char[] charArray78 = strBuilder32.getChars(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder12.appendln(charArray78);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(wildcardEnumeration44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[#, \n]");
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[#, \n]");
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test07679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07679");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.insert((int) (short) 0, "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder3.append((double) 119);
        java.lang.String str23 = strBuilder22.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer29.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setEmptyTokenAsNull(true);
        java.util.List<java.lang.String> strList37 = strTokenizer34.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer34.setDelimiterString("false");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer34.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray47 = strTokenizer46.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendAll((java.lang.Object[]) strArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream52 = strBuilder42.codePoints();
        java.lang.String str53 = strBuilder42.getNullText();
        int int54 = strBuilder42.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray60 = strTokenizer59.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder55.appendAll((java.lang.Object[]) strArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder55.replaceFirst('a', 'a');
        char[] charArray69 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ');
        int int72 = strTokenizer71.size();
        boolean boolean73 = strTokenizer71.hasNext();
        java.util.List<java.lang.String> strList74 = strTokenizer71.getTokenList();
        java.lang.String[] strArray78 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        boolean boolean81 = strList74.addAll((java.util.Collection<java.lang.String>) strList79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder55.appendAll((java.lang.Iterable<java.lang.String>) strList79);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        boolean boolean84 = strBuilder55.contains(strMatcher83);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder42.deleteAll(strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer41.setQuoteMatcher(strMatcher83);
        boolean boolean87 = strBuilder22.contains(strMatcher83);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(intStream52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test07680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07680");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        int int3 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendln(stringBuffer4, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.insert(1, (double) 32);
        java.util.Properties properties11 = new java.util.Properties();
        int int12 = properties11.size();
        boolean boolean14 = properties11.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        boolean boolean20 = properties11.containsValue((java.lang.Object) charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder2.append(charArray19, (int) (byte) 0, 0);
        boolean boolean24 = properties0.equals((java.lang.Object) 0);
        java.lang.String str25 = properties0.toString();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.insert(1, (double) 32);
        java.util.Properties properties37 = new java.util.Properties();
        int int38 = properties37.size();
        boolean boolean40 = properties37.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "");
        char[] charArray45 = strBuilder41.toCharArray();
        boolean boolean46 = properties37.containsValue((java.lang.Object) charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder28.append(charArray45, (int) (byte) 0, 0);
        boolean boolean50 = properties26.equals((java.lang.Object) 0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties26.entrySet();
        java.util.Collection<java.lang.Object> objCollection52 = properties26.values();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        boolean boolean54 = properties0.isEmpty();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32 + "'", int3 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test07681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07681");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((int) (short) 1);
        java.util.stream.IntStream intStream14 = strBuilder10.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.deleteFirst('e');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.appendln((float) 122);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(intStream14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test07682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07682");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 't');
        java.lang.String str16 = strTokenizer15.nextToken();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test07683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07683");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        java.io.Writer writer18 = strBuilder0.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.appendln('g');
        int int24 = strBuilder21.lastIndexOf('e', 45);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray27 = strBuilder26.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, "false");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder21.append(charArray27);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(writer18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test07684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07684");
        char[] charArray2 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        java.lang.String str5 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, "true\n###################################a4\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        int int14 = strBuilder13.capacity();
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(stringBuffer15, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer24.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.replaceFirst(strMatcher26, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer12.setQuoteMatcher(strMatcher26);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray2, strMatcher30);
        java.lang.String str32 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strTokenizer31);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str32, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test07685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07685");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        boolean boolean5 = strBuilder3.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln('#');
        java.lang.StringBuffer stringBuffer14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append(stringBuffer14, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.deleteFirst("hi!");
        char[] charArray20 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer7.reset(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray20);
        char[] charArray23 = strBuilder3.getChars(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, "\n32");
        boolean boolean27 = strTokenizer26.hasNext();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test07686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07686");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("35.0\n4", 't', '7');
    }

    @Test
    public void test07687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07687");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendSeparator("StrTokenizer[]", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.append(false);
        java.lang.String str13 = strBuilder10.midString(0, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append((double) (byte) 100);
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setLength(0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.insert(236, 22);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 236");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test07688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07688");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.insert((int) (short) 0, "{}");
        int int16 = strBuilder13.indexOf("#", (int) (byte) 1);
        java.lang.String str19 = strBuilder13.substring((int) (short) 0, (int) (short) 10);
        int int20 = strBuilder13.length();
        char[] charArray26 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        int int29 = strTokenizer28.size();
        boolean boolean30 = strTokenizer28.hasNext();
        java.util.List<java.lang.String> strList31 = strTokenizer28.getTokenList();
        java.lang.String[] strArray35 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        boolean boolean38 = strList31.addAll((java.util.Collection<java.lang.String>) strList36);
        java.util.Spliterator<java.lang.String> strSpliterator39 = strList36.spliterator();
        int int40 = strList36.size();
        boolean boolean42 = strList36.add("StrTokenizer[]");
        int int43 = strList36.size();
        java.lang.String str45 = strList36.remove(3);
        boolean boolean47 = strList36.add(" #\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder13.insert((int) 't', (java.lang.Object) " #\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 116");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{}3.0" + "'", str19, "{}3.0");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strSpliterator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3 + "'", int40 == 3);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "StrTokenizer[]" + "'", str45, "StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test07689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07689");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        int int12 = properties4.size();
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader22 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendAll((java.lang.Object[]) strArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream33 = strBuilder23.codePoints();
        java.lang.Object obj34 = properties13.replace((java.lang.Object) reader22, (java.lang.Object) intStream33);
        long long36 = reader22.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('a', '4');
        java.io.Writer writer44 = strBuilder43.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst("", "");
        char[] charArray56 = strBuilder52.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.appendln(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray56);
        writer44.write(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '4', '$');
        int int63 = reader22.read(charArray56);
        reader22.close();
        int int65 = reader22.read();
        int int66 = reader22.read();
        boolean boolean67 = properties4.containsKey((java.lang.Object) reader22);
        java.util.Set<java.lang.Object> objSet68 = properties4.keySet();
        java.util.Properties properties69 = new java.util.Properties(properties4);
        int int70 = properties69.size();
        java.lang.String str72 = properties69.getProperty("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(writer44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[]");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 35 + "'", int65 == 35);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test07690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07690");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.trim();
        java.util.Properties properties11 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray18 = strTokenizer17.getTokenArray();
        java.lang.String[] strArray19 = strTokenizer17.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendWithSeparators((java.lang.Object[]) strArray19, "4#4");
        char[] charArray24 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray24);
        java.lang.Object obj26 = properties11.getOrDefault((java.lang.Object) strBuilder15, (java.lang.Object) strTokenizer25);
        java.util.Collection<java.lang.Object> objCollection27 = properties11.values();
        boolean boolean28 = properties11.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "");
        char[] charArray40 = strBuilder36.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.appendln((double) '$');
        java.lang.Object obj44 = properties11.get((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder10.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray51 = strTokenizer50.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendAll((java.lang.Object[]) strArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray61 = strTokenizer60.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendAll((java.lang.Object[]) strArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder46.appendln(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst("", "");
        char[] charArray75 = strBuilder71.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendln(charArray75);
        boolean boolean77 = strBuilder46.equals((java.lang.Object) strBuilder70);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder35.appendFixedWidthPadRight((java.lang.Object) strBuilder46, 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder46.append((float) 62);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test07691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07691");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append("\n");
        java.util.Iterator<java.lang.String> strItor15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendAll(strItor15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendSeparator("{}", "{}3.0");
        int int22 = strBuilder19.indexOf("#####3\n", (int) (short) 100);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test07692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07692");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) '4');
        java.io.Writer writer28 = writer11.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll("");
        java.io.Writer writer38 = writer11.append((java.lang.CharSequence) strBuilder35);
        boolean boolean40 = strBuilder35.contains('4');
        java.lang.String str41 = strBuilder35.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.ensureCapacity((int) (byte) 0);
        char[] charArray46 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray46);
        char[] charArray48 = strBuilder35.getChars(charArray46);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(writer38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[4, #, 4]");
    }

    @Test
    public void test07693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07693");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.replace((int) (short) 1, 32, "\na32");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNullText("33.02.01#\n");
        java.io.Reader reader19 = strBuilder18.asReader();
        reader19.mark(120);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader19);
    }

    @Test
    public void test07694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07694");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst('4', 'a');
        boolean boolean46 = properties0.remove((java.lang.Object) strBuilder33, (java.lang.Object) '4');
        java.lang.Object obj47 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("");
        int int52 = strBuilder48.indexOf("");
        int int55 = strBuilder48.lastIndexOf('#', (int) (byte) 0);
        java.io.Reader reader56 = strBuilder48.asReader();
        reader56.reset();
        boolean boolean58 = properties0.containsValue((java.lang.Object) reader56);
        long long60 = reader56.skip((long) 8);
        long long62 = reader56.skip((long) 131);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
    }

    @Test
    public void test07695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07695");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        long long23 = reader9.skip(0L);
        reader9.close();
        long long26 = reader9.skip((long) 120);
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
    }

    @Test
    public void test07696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07696");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: hi!", "\n#\n\n\000");
    }

    @Test
    public void test07697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07697");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        java.util.ListIterator<java.lang.String> strItor63 = strList45.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str65 = strList45.remove(113);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 113, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strItor63);
    }

    @Test
    public void test07698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07698");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceAll('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator("\n32.0-1.0", "\n32.0-1.0");
        java.lang.String str31 = strBuilder28.midString((int) 't', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.appendPadding(4, 'a');
        int int37 = strBuilder34.lastIndexOf("50\nttt", 144);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test07699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07699");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        java.lang.String str34 = strBuilder24.rightString((int) ' ');
        boolean boolean36 = strBuilder24.startsWith("");
        char[] charArray37 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.insert((int) (short) 0, charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.minimizeCapacity();
        int int44 = strBuilder42.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.append((java.lang.CharSequence) strBuilder42);
        char[] charArray48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder38.append(charArray48);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n32.0" + "'", str34, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test07700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07700");
        java.io.IOException iOException1 = new java.io.IOException("hi!");
        java.io.IOException iOException3 = new java.io.IOException("hi!");
        iOException1.addSuppressed((java.lang.Throwable) iOException3);
        java.io.IOException iOException6 = new java.io.IOException("StrTokenizer[]");
        iOException3.addSuppressed((java.lang.Throwable) iOException6);
        java.lang.String str8 = iOException3.toString();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.io.IOException: hi!" + "'", str8, "java.io.IOException: hi!");
    }

    @Test
    public void test07701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07701");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader26 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream37 = strBuilder27.codePoints();
        java.lang.Object obj38 = properties17.replace((java.lang.Object) reader26, (java.lang.Object) intStream37);
        reader26.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst("", "");
        char[] charArray51 = strBuilder47.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendln(charArray51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray51);
        int int54 = reader26.read(charArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder14.insert(0, (java.lang.Object) charArray51);
        boolean boolean56 = strBuilder14.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder14.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder14.appendPadding(85, '$');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test07702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07702");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst('4', 'a');
        boolean boolean46 = properties0.remove((java.lang.Object) strBuilder33, (java.lang.Object) '4');
        java.lang.Object obj47 = properties0.clone();
        java.util.Properties properties48 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader57 = strBuilder53.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray63 = strTokenizer62.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.appendAll((java.lang.Object[]) strArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder58.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream68 = strBuilder58.codePoints();
        java.lang.Object obj69 = properties48.replace((java.lang.Object) reader57, (java.lang.Object) intStream68);
        reader57.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceFirst("", "");
        char[] charArray82 = strBuilder78.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder77.appendln(charArray82);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray82);
        int int85 = reader57.read(charArray82);
        boolean boolean86 = reader57.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder87.replaceFirst("", "");
        char[] charArray91 = strBuilder87.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray91, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray91);
        int int95 = reader57.read(charArray91);
        properties0.load(reader57);
        boolean boolean97 = reader57.markSupported();
        boolean boolean98 = reader57.markSupported();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(intStream68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[]");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test07703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07703");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("\n32.0", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        char[] charArray8 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln('#');
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append(stringBuffer20, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.deleteFirst("hi!");
        char[] charArray26 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer13.reset(charArray26);
        boolean boolean28 = properties0.replace((java.lang.Object) iOException4, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer13);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        char[] charArray33 = strBuilder29.toCharArray();
        int int34 = strBuilder29.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.append((int) (short) 0);
        boolean boolean38 = strBuilder36.contains('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.deleteAll("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.append("\n32.0java.io.IOException: hi!116\n\n\n");
        boolean boolean43 = properties0.equals((java.lang.Object) "\n32.0java.io.IOException: hi!116\n\n\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 32 + "'", int34 == 32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test07704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07704");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator('a', ' ');
        boolean boolean13 = strBuilder12.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator(' ', (int) (byte) 1);
        java.lang.Iterable<java.lang.String> strIterable19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.appendAll(strIterable19);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test07705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07705");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "");
        boolean boolean9 = strBuilder7.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln('#');
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.append(stringBuffer18, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.deleteFirst("hi!");
        char[] charArray24 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer11.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        char[] charArray27 = strBuilder7.getChars(charArray24);
        java.lang.Object obj28 = properties0.remove((java.lang.Object) charArray27);
        java.lang.String str30 = properties0.getProperty("\n32.0");
        java.util.Properties properties31 = new java.util.Properties();
        int int32 = properties31.size();
        java.util.Set<java.lang.Object> objSet33 = properties31.keySet();
        java.util.Properties properties34 = new java.util.Properties(properties31);
        boolean boolean35 = properties0.containsKey((java.lang.Object) properties34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("");
        java.lang.Object obj38 = properties34.get((java.lang.Object) "");
        boolean boolean39 = properties34.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, \n]");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test07706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07706");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.deleteAll("StrTokenizer[]");
        int int28 = strBuilder26.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        int int33 = strBuilder29.indexOf("");
        int int36 = strBuilder29.lastIndexOf('#', (int) (byte) 0);
        boolean boolean38 = strBuilder29.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder29.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder26.append(strBuilder44, 1, 0);
        java.lang.StringBuffer stringBuffer48 = strBuilder26.toStringBuffer();
        java.lang.String str50 = strBuilder26.rightString(3);
        java.lang.String str52 = strBuilder26.leftString(3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(stringBuffer48);
        org.junit.Assert.assertEquals(stringBuffer48.toString(), "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
    }

    @Test
    public void test07707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07707");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        int int5 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.append((int) (short) 0);
        java.util.stream.IntStream intStream8 = strBuilder7.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendSeparator('1');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(intStream8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test07708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07708");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream10 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder0.appendln(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, "\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, '$');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer22.set(" #\naaaa");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test07709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07709");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        java.lang.String str14 = strTokenizer13.nextToken();
        java.lang.String str15 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer13.setDelimiterChar('a');
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        java.lang.Object[] objArray19 = strList18.toArray();
        strList18.clear();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[]" + "'", str15, "StrTokenizer[]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
    }

    @Test
    public void test07710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07710");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$1", "#\ntrue\n");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.set("ed yet]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07711");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.clear();
        int int12 = strBuilder11.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append("{}");
        java.lang.String str15 = strBuilder11.toString();
        int int18 = strBuilder11.lastIndexOf("\n100.0\n", 131);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test07712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07712");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        boolean boolean8 = strBuilder6.endsWith("100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.appendSeparator('a', 7);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test07713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07713");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendSeparator("java.io.IOException: hi!false", 116);
        java.lang.String str18 = strBuilder17.getNullText();
        java.lang.StringBuffer stringBuffer19 = strBuilder17.toStringBuffer();
        java.util.stream.IntStream intStream20 = stringBuffer19.chars();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(stringBuffer19);
        org.junit.Assert.assertEquals(stringBuffer19.toString(), "35truejava.io.IOException: hi!false");
        org.junit.Assert.assertNotNull(intStream20);
    }

    @Test
    public void test07714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07714");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray20 = strTokenizer19.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendAll((java.lang.Object[]) strArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.replaceFirst('a', 'a');
        char[] charArray29 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        int int32 = strTokenizer31.size();
        boolean boolean33 = strTokenizer31.hasNext();
        java.util.List<java.lang.String> strList34 = strTokenizer31.getTokenList();
        java.lang.String[] strArray38 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        boolean boolean41 = strList34.addAll((java.util.Collection<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder15.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder9.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append(10.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln(" \000\000\000\000\000\000\000\000\000aaaaaaaaaaaaStrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        int int49 = strBuilder48.capacity();
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendln(stringBuffer50, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.insert(1, (double) 32);
        java.util.Properties properties57 = new java.util.Properties();
        int int58 = properties57.size();
        boolean boolean60 = properties57.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst("", "");
        char[] charArray65 = strBuilder61.toCharArray();
        boolean boolean66 = properties57.containsValue((java.lang.Object) charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder48.append(charArray65, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder48.appendln('a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder43.append(strBuilder71, (int) (short) 1, (int) '9');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 32 + "'", int49 == 32);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test07715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07715");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        java.util.Collection<java.lang.Object> objCollection18 = properties1.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', '4');
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        java.io.Writer writer35 = strBuilder34.asWriter();
        properties27.store(writer35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        java.io.Reader reader42 = strBuilder38.asReader();
        properties27.load(reader42);
        boolean boolean44 = reader42.ready();
        int int45 = reader42.read();
        java.lang.Object obj46 = properties1.getOrDefault((java.lang.Object) 'a', (java.lang.Object) int45);
        java.lang.String str48 = properties1.getProperty("");
        boolean boolean49 = properties1.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray52 = strBuilder51.toCharArray();
        java.io.Writer writer53 = strBuilder51.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.appendln(strBuilder54, (int) 'a', 0);
        java.lang.Object obj58 = properties1.remove((java.lang.Object) 'a');
        java.util.Set<java.lang.String> strSet59 = properties1.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection60 = properties1.values();
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(writer35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (-1) + "'", obj46, (-1));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(writer53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNotNull(objCollection60);
    }

    @Test
    public void test07716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07716");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "");
        char[] charArray13 = strBuilder9.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln(charArray13);
        int int18 = strMatcher1.isMatch(charArray13, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        boolean boolean21 = strTokenizer20.hasPrevious();
        boolean boolean22 = strTokenizer20.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charMatcher('6');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer20.setDelimiterMatcher(strMatcher24);
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
    }

    @Test
    public void test07717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07717");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray29 = strTokenizer28.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.appendAll((java.lang.Object[]) strArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "");
        char[] charArray38 = strBuilder34.toCharArray();
        char[] charArray39 = strBuilder31.getChars(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        char[] charArray41 = strBuilder23.getChars(charArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder1.append((java.lang.Object) charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[]");
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test07718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07718");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean10 = strTokenizer9.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setDelimiterChar('a');
        int int13 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer9.setIgnoredChar(' ');
        java.lang.String[] strArray16 = strTokenizer15.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder0.appendWithSeparators((java.lang.Object[]) strArray16, "###");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.delete((int) (short) 0, 53);
        java.io.Reader reader22 = strBuilder18.asReader();
        long long24 = reader22.skip((long) 43);
        int int25 = reader22.read();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test07719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07719");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray2 = strBuilder1.toCharArray();
        java.io.Writer writer3 = strBuilder1.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendln(strBuilder4, (int) 'a', 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln('#');
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.append(stringBuffer16, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.deleteFirst("hi!");
        char[] charArray22 = strBuilder13.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer9.reset(charArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder1.appendln(charArray22);
        int int27 = strBuilder24.lastIndexOf("0\n", 108);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(writer3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test07720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07720");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray14 = strTokenizer13.getTokenArray();
        java.lang.String[] strArray15 = strTokenizer13.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendWithSeparators((java.lang.Object[]) strArray15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setNewLineText("#\nfalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.replaceAll("3", "true\n###################################");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test07721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07721");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.deleteAll("StrTokenizer[]");
        int int28 = strBuilder26.lastIndexOf('#');
        char[] charArray33 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        int int36 = strTokenizer35.size();
        boolean boolean37 = strTokenizer35.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer35.setIgnoredMatcher(strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder26.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder26.append(0);
        int int46 = strBuilder43.indexOf('a', 15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer48.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder43.appendFixedWidthPadRight((java.lang.Object) false, 100, 'a');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test07722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07722");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer5, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer5.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setEmptyTokenAsNull(true);
        boolean boolean13 = strTokenizer10.hasNext();
        int int14 = strTokenizer10.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = strTokenizer10.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder16.appendFixedWidthPadRight((java.lang.Object) strBuilder25, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.append("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.replaceFirst("StrTokenizer[not tokenized yet]", "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.insert((int) (short) 1, (float) (-1));
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.append(stringBuffer37, (-1), 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendSeparator("{}3.0", "1001\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        int int45 = strBuilder44.capacity();
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln(stringBuffer46, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder44.setCharAt(0, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder40.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int59 = strBuilder55.lastIndexOf(strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer10.setIgnoredMatcher(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 32 + "'", int45 == 32);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer60);
    }

    @Test
    public void test07723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07723");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.delete(0, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendSeparator("1", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder3.append((double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.insert(0, 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll('g');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln("a}3.0$", (int) (short) 1, 49);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test07724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07724");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (byte) 1, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.minimizeCapacity();
        java.io.Reader reader10 = strBuilder8.asReader();
        boolean boolean11 = reader10.markSupported();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test07725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07725");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset("");
        java.lang.String str5 = strTokenizer4.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer4.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        int int16 = strBuilder15.capacity();
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(stringBuffer17, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int22 = strBuilder20.lastIndexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.replaceFirst(strMatcher21, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer4.setIgnoredMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer25.setIgnoredChar('4');
        java.util.List<java.lang.String> strList28 = strTokenizer27.getTokenList();
        char[] charArray31 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer27.setQuoteMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.replaceFirst('a', ' ');
        int int50 = strBuilder41.lastIndexOf(' ', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray56 = strTokenizer55.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.appendAll((java.lang.Object[]) strArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder51.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray66 = strTokenizer65.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.appendAll((java.lang.Object[]) strArray66);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder51.appendln(strBuilder67);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        int int75 = strBuilder74.capacity();
        java.lang.StringBuffer stringBuffer76 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.appendln(stringBuffer76, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder74.insert(1, (double) 32);
        java.lang.String str84 = strBuilder74.rightString((int) ' ');
        boolean boolean86 = strBuilder74.startsWith("");
        char[] charArray87 = strBuilder74.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray87);
        boolean boolean89 = strBuilder73.contains(strMatcher88);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder41.replaceAll(strMatcher88, "\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer34.setQuoteMatcher(strMatcher88);
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 32 + "'", int75 == 32);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "\n32.0" + "'", str84, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strTokenizer92);
    }

    @Test
    public void test07726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07726");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader19 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray25 = strTokenizer24.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendAll((java.lang.Object[]) strArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream30 = strBuilder20.codePoints();
        java.lang.Object obj31 = properties10.replace((java.lang.Object) reader19, (java.lang.Object) intStream30);
        long long33 = reader19.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray39 = strTokenizer38.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendAll((java.lang.Object[]) strArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder34.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream44 = strBuilder34.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        char[] charArray49 = strBuilder45.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder34.appendln(charArray49);
        int int53 = reader19.read(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder3.append(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterChar('\n');
        boolean boolean59 = strTokenizer58.hasNext();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test07727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07727");
        java.io.IOException iOException2 = new java.io.IOException();
        java.lang.Throwable[] throwableArray3 = iOException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException("########", (java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException("1\n", (java.lang.Throwable) iOException5);
        java.util.Properties properties7 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray14 = strTokenizer13.getTokenArray();
        java.lang.String[] strArray15 = strTokenizer13.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendWithSeparators((java.lang.Object[]) strArray15, "4#4");
        char[] charArray20 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray20);
        java.lang.Object obj22 = properties7.getOrDefault((java.lang.Object) strBuilder11, (java.lang.Object) strTokenizer21);
        int int23 = properties7.size();
        int int24 = properties7.size();
        java.io.IOException iOException25 = new java.io.IOException();
        java.lang.Throwable[] throwableArray26 = iOException25.getSuppressed();
        boolean boolean27 = properties7.equals((java.lang.Object) iOException25);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException25);
        java.io.IOException iOException29 = new java.io.IOException((java.lang.Throwable) iOException25);
        java.io.IOException iOException32 = new java.io.IOException("hi!");
        java.io.IOException iOException34 = new java.io.IOException("hi!");
        iOException32.addSuppressed((java.lang.Throwable) iOException34);
        java.io.IOException iOException36 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException34);
        java.lang.Throwable throwable39 = null;
        java.io.IOException iOException40 = new java.io.IOException("{}", throwable39);
        java.lang.Throwable[] throwableArray41 = iOException40.getSuppressed();
        java.io.IOException iOException42 = new java.io.IOException("\n", (java.lang.Throwable) iOException40);
        iOException36.addSuppressed((java.lang.Throwable) iOException40);
        java.io.IOException iOException44 = new java.io.IOException((java.lang.Throwable) iOException40);
        java.lang.Throwable throwable46 = null;
        java.io.IOException iOException47 = new java.io.IOException("\n32.0", throwable46);
        java.io.IOException iOException48 = new java.io.IOException((java.lang.Throwable) iOException47);
        java.util.Properties properties49 = new java.util.Properties();
        int int50 = properties49.size();
        boolean boolean52 = properties49.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties53 = new java.util.Properties();
        int int54 = properties53.size();
        boolean boolean56 = properties53.containsKey((java.lang.Object) (-1.0f));
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        java.lang.String str59 = properties53.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration60 = properties53.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet61 = properties53.entrySet();
        java.io.IOException iOException62 = new java.io.IOException();
        java.lang.Throwable[] throwableArray63 = iOException62.getSuppressed();
        java.lang.Throwable[] throwableArray64 = iOException62.getSuppressed();
        java.io.IOException iOException65 = new java.io.IOException((java.lang.Throwable) iOException62);
        boolean boolean66 = properties53.containsValue((java.lang.Object) iOException65);
        iOException48.addSuppressed((java.lang.Throwable) iOException65);
        iOException44.addSuppressed((java.lang.Throwable) iOException48);
        iOException25.addSuppressed((java.lang.Throwable) iOException48);
        iOException6.addSuppressed((java.lang.Throwable) iOException48);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(wildcardEnumeration60);
        org.junit.Assert.assertNotNull(objEntrySet61);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test07728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07728");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((int) (byte) 0);
        java.io.Writer writer8 = strBuilder7.asWriter();
        java.io.IOException iOException9 = new java.io.IOException();
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.lang.Throwable[] throwableArray11 = iOException9.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendWithSeparators((java.lang.Object[]) throwableArray11, "1");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.setNullText("97\nhi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('\000', '1');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.insert((int) '7', (float) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 55");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer8);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test07729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07729");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        char[] charArray28 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, "");
        boolean boolean31 = strTokenizer30.hasNext();
        int int32 = strTokenizer30.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer30.getIgnoredMatcher();
        boolean boolean34 = strBuilder1.contains(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder1.appendSeparator("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendSeparator('a', 93);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test07730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07730");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        boolean boolean8 = strBuilder3.endsWith("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.deleteAll(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln(25);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test07731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07731");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer15.reset();
        int int17 = strTokenizer16.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getIgnoredMatcher();
        java.lang.String str19 = strTokenizer16.next();
        boolean boolean20 = strTokenizer16.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#" + "'", str19, "#");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test07732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07732");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        boolean boolean12 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer10.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer10.setIgnoredChar('\000');
        boolean boolean16 = strTokenizer15.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setDelimiterChar('a');
        int int20 = strTokenizer15.nextIndex();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test07733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07733");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties0.elements();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln('#');
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.append(stringBuffer16, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder13.appendSeparator("4#4", "\n32.0");
        java.io.Writer writer25 = strBuilder24.asWriter();
        properties0.store(writer25, "t\n #\n\n32.0");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(writer25);
    }

    @Test
    public void test07734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07734");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        char char10 = strBuilder8.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendAll((java.lang.Object[]) strArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        char[] charArray26 = strBuilder22.toCharArray();
        char[] charArray27 = strBuilder19.getChars(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        char[] charArray29 = strBuilder11.getChars(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer32.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder8.append((java.lang.Object) strTokenizer32);
        java.lang.String str36 = strBuilder8.getNewLineText();
        java.lang.String str38 = strBuilder8.leftString(112);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder8.append("2.0");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + char10 + "' != '" + '#' + "'", char10 == '#');
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "#36.0StrTokenizer[not tokenized yet]" + "'", str38, "#36.0StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test07735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07735");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        int int2 = strBuilder1.capacity();
        java.lang.StringBuffer stringBuffer3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln(stringBuffer3, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        boolean boolean13 = strSubstitutor0.replaceIn(strBuilder10, (int) '$', 0);
        int int16 = strBuilder10.indexOf(" #\n", (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.insert(5, (float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder10.appendSeparator("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0000.0\n");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 32 + "'", int2 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test07736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07736");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("\n-1.0\000\000\n", 'e');
    }

    @Test
    public void test07737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07737");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(" 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("-1", "100.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("not tokenized yet]", "java.io.IOException: false");
        java.util.Properties properties8 = new java.util.Properties();
        int int9 = properties8.size();
        java.lang.Object obj10 = properties8.clone();
        java.util.Set<java.lang.String> strSet11 = properties8.stringPropertyNames();
        properties8.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        int int14 = strBuilder13.capacity();
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(stringBuffer15, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.setLength(32);
        java.io.Writer writer24 = strBuilder23.asWriter();
        writer24.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        writer24.flush();
        writer24.flush();
        properties8.store(writer24, "t");
        writer24.write(39);
        writer24.write("java.io.IOException: java.io.IOException: StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "");
        char[] charArray44 = strBuilder40.toCharArray();
        char[] charArray45 = strBuilder37.getChars(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        boolean boolean47 = strTokenizer46.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst("", "");
        char[] charArray61 = strBuilder57.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendln(charArray61);
        int int66 = strMatcher49.isMatch(charArray61, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer46.reset(charArray61);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray61);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray61);
        writer24.write(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder1.appendln(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder86.deleteAll(strMatcher90);
        boolean boolean92 = strBuilder79.contains(strMatcher90);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder1.replaceFirst(strMatcher90, "\n10.035\n32.0a3");
        java.lang.String str96 = strBuilder94.rightString((int) (short) 0);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{}");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
    }

    @Test
    public void test07738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07738");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("1001\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset("1001\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer1.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher4);
    }

    @Test
    public void test07739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07739");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.deleteFirst('\n');
        int int20 = strBuilder17.indexOf('s', (int) '$');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test07740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07740");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        java.util.Spliterator<java.lang.String> strSpliterator19 = strList9.spliterator();
        java.util.Properties properties20 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray27 = strTokenizer26.getTokenArray();
        java.lang.String[] strArray28 = strTokenizer26.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendWithSeparators((java.lang.Object[]) strArray28, "4#4");
        char[] charArray33 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray33);
        java.lang.Object obj35 = properties20.getOrDefault((java.lang.Object) strBuilder24, (java.lang.Object) strTokenizer34);
        java.util.Collection<java.lang.Object> objCollection36 = properties20.values();
        char[] charArray41 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray50 = strTokenizer49.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.appendAll((java.lang.Object[]) strArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "");
        char[] charArray59 = strBuilder55.toCharArray();
        char[] charArray60 = strBuilder52.getChars(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59);
        char[] charArray62 = strBuilder44.getChars(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = strTokenizer64.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer64.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer64.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer43.setTrimmerMatcher(strMatcher68);
        java.lang.Object obj71 = properties20.remove((java.lang.Object) strTokenizer70);
        boolean boolean72 = strList9.remove((java.lang.Object) properties20);
        java.util.Properties properties73 = new java.util.Properties(properties20);
        java.lang.String str75 = properties73.getProperty("0true");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSpliterator19);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[ , 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[]");
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test07741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07741");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        int int7 = strBuilder6.capacity();
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.appendln(stringBuffer8, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.insert(1, (double) 32);
        java.lang.String str16 = strBuilder6.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder6.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        char[] charArray24 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, "");
        boolean boolean27 = strTokenizer26.hasNext();
        boolean boolean28 = strTokenizer26.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.appendAll((java.util.Iterator<java.lang.String>) strTokenizer26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append(' ');
        java.lang.StringBuffer stringBuffer32 = strBuilder29.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder3.appendln(stringBuffer32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.appendNewLine();
        java.util.stream.IntStream intStream35 = strBuilder33.chars();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 32 + "'", int7 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\n32.0" + "'", str16, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(stringBuffer32);
        org.junit.Assert.assertEquals(stringBuffer32.toString(), "\n32.0 ");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(intStream35);
    }

    @Test
    public void test07742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07742");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.deleteAll(strMatcher22);
        boolean boolean24 = strBuilder10.equalsIgnoreCase(strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.appendSeparator(" #\n", (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder18.insert((int) (short) 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        int int32 = strBuilder31.capacity();
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(stringBuffer33, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.insert(1, (double) 32);
        boolean boolean40 = strBuilder31.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder31.clear();
        int int43 = strBuilder42.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader51 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder42.appendln(strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder42.replaceFirst("\n32.0", "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder30.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.append((double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.appendNull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test07743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07743");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.append(charArray16, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        int int23 = strBuilder22.capacity();
        java.lang.StringBuffer stringBuffer24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(stringBuffer24, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder22.appendSeparator("java.io.IOException: hi!");
        boolean boolean33 = strBuilder9.equals((java.lang.Object) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder36.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        int int42 = strBuilder41.capacity();
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(stringBuffer43, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int48 = strBuilder46.lastIndexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder37.replaceFirst(strMatcher47, "hi!");
        int int51 = strBuilder32.lastIndexOf(strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder32.appendln("{StrTokenizer[not tokenized yet]=}");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        int int55 = strBuilder54.capacity();
        java.lang.StringBuffer stringBuffer56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(stringBuffer56, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.insert(1, (double) 32);
        java.util.Properties properties63 = new java.util.Properties();
        int int64 = properties63.size();
        boolean boolean66 = properties63.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst("", "");
        char[] charArray71 = strBuilder67.toCharArray();
        boolean boolean72 = properties63.containsValue((java.lang.Object) charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder54.append(charArray71, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, '4', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder53.append((java.lang.Object) charArray71);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 32 + "'", int42 == 32);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test07744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07744");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.setNullText("");
        java.lang.Object obj33 = properties0.get((java.lang.Object) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((long) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.ensureCapacity((int) ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = null;
        boolean boolean41 = strBuilder37.contains(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln('#');
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.append(stringBuffer50, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.deleteFirst("hi!");
        char[] charArray56 = strBuilder47.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer43.reset(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer58.reset();
        java.lang.String[] strArray60 = strTokenizer59.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray68 = strTokenizer67.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder62.appendAll((java.lang.Object[]) strArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst("", "");
        char[] charArray77 = strBuilder73.toCharArray();
        char[] charArray78 = strBuilder70.getChars(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray77);
        char[] charArray80 = strBuilder62.getChars(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer82.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = strTokenizer82.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer82.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray77, strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer("10.0", strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer59.setIgnoredMatcher(strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer59.reset();
        java.lang.String[] strArray91 = strTokenizer90.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder37.appendAll((java.lang.Object[]) strArray91);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder92.appendln('6');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[]");
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[]");
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[]");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer85);
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test07745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07745");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        java.lang.String str10 = strBuilder5.midString((int) (byte) 10, 32);
        int int12 = strBuilder5.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.ensureCapacity((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder5.appendln((int) '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder5.deleteFirst("eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee4\n");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test07746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07746");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        char[] charArray17 = strBuilder9.getChars(charArray16);
        java.io.Reader reader18 = strBuilder9.asReader();
        java.lang.Object obj19 = properties0.remove((java.lang.Object) strBuilder9);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader29 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream40 = strBuilder30.codePoints();
        java.lang.Object obj41 = properties20.replace((java.lang.Object) reader29, (java.lang.Object) intStream40);
        reader29.reset();
        properties0.load(reader29);
        properties0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNull(obj41);
    }

    @Test
    public void test07747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07747");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.appendFixedWidthPadLeft((int) (byte) 0, (int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendSeparator('\000', (int) '#');
        java.lang.Object obj8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendFixedWidthPadRight(obj8, 80, ' ');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test07748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07748");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Enumeration<?> wildcardEnumeration16 = properties0.propertyNames();
        int int17 = properties0.size();
        java.util.Enumeration<?> wildcardEnumeration18 = properties0.propertyNames();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(wildcardEnumeration16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration18);
    }

    @Test
    public void test07749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07749");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        strList14.clear();
        int int24 = strList14.size();
        java.lang.Object[] objArray25 = strList14.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList28 = strList14.subList(118, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(118) > toIndex(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
    }

    @Test
    public void test07750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07750");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer15.setIgnoreEmptyTokens(false);
        int int18 = strTokenizer17.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test07751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07751");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties4.keys();
        java.util.Set<java.lang.Object> objSet10 = properties4.keySet();
        java.lang.Object obj11 = properties4.clone();
        boolean boolean12 = properties4.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test07752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07752");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write((int) (byte) 10);
        writer11.write("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.deleteAll('4');
        java.io.Writer writer22 = writer11.append((java.lang.CharSequence) strBuilder16);
        writer22.write((int) '3');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(writer22);
    }

    @Test
    public void test07753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07753");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) '4');
        java.io.Writer writer28 = writer11.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll("");
        java.io.Writer writer38 = writer11.append((java.lang.CharSequence) strBuilder35);
        java.io.Writer writer40 = writer38.append(' ');
        writer40.write(1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(writer38);
        org.junit.Assert.assertNotNull(writer40);
    }

    @Test
    public void test07754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07754");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        java.lang.String str34 = strBuilder24.rightString((int) ' ');
        boolean boolean36 = strBuilder24.startsWith("");
        char[] charArray37 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.insert((int) (short) 0, charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.appendSeparator('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        char[] charArray48 = strBuilder44.toCharArray();
        char[] charArray49 = strBuilder41.getChars(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        boolean boolean51 = strTokenizer50.hasPrevious();
        java.util.List<java.lang.String> strList52 = strTokenizer50.getTokenList();
        strList52.clear();
        strList52.clear();
        java.util.List[] listArray56 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.lang.String>[] strListArray57 = (java.util.List<java.lang.String>[]) listArray56;
        java.util.List<java.lang.String>[] strListArray58 = strList52.toArray(strListArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder22.appendWithSeparators((java.lang.Object[]) strListArray57, "java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln((long) 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        char[] charArray67 = strBuilder63.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, 'a');
        java.lang.String[] strArray70 = strTokenizer69.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder60.appendWithSeparators((java.lang.Object[]) strArray70, "StrTokenizer[]");
        java.lang.Iterable<java.lang.String> strIterable73 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendWithSeparators(strIterable73, "java.io.IOException: {\ntrue\n=1.0}");
        int int77 = strBuilder72.indexOf("tttt4");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n32.0" + "'", str34, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(listArray56);
        org.junit.Assert.assertNotNull(strListArray57);
        org.junit.Assert.assertNotNull(strListArray58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[]");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test07755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07755");
        char[] charArray3 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setDelimiterString("hi!");
        java.lang.String str7 = strTokenizer4.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer4.setDelimiterString("StrTokenizer[ 4#4]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        java.lang.String str12 = strTokenizer11.next();
        boolean boolean13 = strTokenizer11.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("\n32.0", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer16.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer11.setIgnoredMatcher(strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer4.setQuoteMatcher(strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer4.setIgnoredChar('g');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("#\n4#4", strMatcher22);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "a4" + "'", str7, "a4");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "StrTokenizer[]" + "'", str12, "StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
    }

    @Test
    public void test07756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07756");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor28 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(true);
        boolean boolean41 = strSubstitutor28.replaceIn(strBuilder38, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder0.append((java.lang.CharSequence) strBuilder38);
        int int45 = strBuilder42.lastIndexOf('$', 0);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test07757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07757");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(158);
    }

    @Test
    public void test07758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07758");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer1.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer1.getDelimiterMatcher();
        java.util.List<java.lang.String> strList7 = strTokenizer1.getTokenList();
        java.lang.String[] strArray8 = strTokenizer1.getTokenArray();
        java.lang.String str9 = strTokenizer1.previousToken();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test07759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07759");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        java.lang.String str26 = strBuilder6.substring(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.replaceFirst('a', 'a');
        char[] charArray41 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, ' ');
        int int44 = strTokenizer43.size();
        boolean boolean45 = strTokenizer43.hasNext();
        java.util.List<java.lang.String> strList46 = strTokenizer43.getTokenList();
        java.lang.String[] strArray50 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        boolean boolean53 = strList46.addAll((java.util.Collection<java.lang.String>) strList51);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder27.appendAll((java.lang.Iterable<java.lang.String>) strList51);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        boolean boolean56 = strBuilder27.contains(strMatcher55);
        boolean boolean57 = strBuilder6.equals(strBuilder27);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.append('a');
        int int66 = strBuilder59.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        int int68 = strBuilder67.capacity();
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.appendln(stringBuffer69, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder67.insert(1, (double) 32);
        boolean boolean76 = strBuilder67.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder67.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder67.clear();
        int int79 = strBuilder78.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder59.append(strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder59.appendFixedWidthPadLeft(4, 43, 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder27.appendln(strBuilder59);
        boolean boolean87 = strBuilder85.startsWith("aaaa\n35.0");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "#\n" + "'", str26, "#\n");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 32 + "'", int68 == 32);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 32 + "'", int79 == 32);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test07760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07760");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "h");
        int int37 = strTokenizer33.nextIndex();
        boolean boolean38 = properties0.containsValue((java.lang.Object) strTokenizer33);
        char[] charArray43 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        int int46 = strTokenizer45.size();
        boolean boolean47 = strTokenizer45.hasNext();
        java.util.List<java.lang.String> strList48 = strTokenizer45.getTokenList();
        java.lang.String[] strArray52 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        boolean boolean55 = strList48.addAll((java.util.Collection<java.lang.String>) strList53);
        java.lang.String str57 = strList53.remove(0);
        char[] charArray62 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        int int65 = strTokenizer64.size();
        boolean boolean66 = strTokenizer64.hasNext();
        java.util.List<java.lang.String> strList67 = strTokenizer64.getTokenList();
        java.lang.String[] strArray71 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        boolean boolean74 = strList67.addAll((java.util.Collection<java.lang.String>) strList72);
        boolean boolean75 = strList53.addAll((java.util.Collection<java.lang.String>) strList72);
        java.lang.Object obj76 = properties0.remove((java.lang.Object) strList72);
        java.util.Spliterator<java.lang.String> strSpliterator77 = strList72.spliterator();
        java.util.stream.Stream<java.lang.String> strStream78 = strList72.parallelStream();
        boolean boolean79 = strList72.isEmpty();
        int int80 = strList72.size();
        java.lang.Object[] objArray81 = strList72.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str83 = strList72.get(45);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 45, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\n32.0" + "'", str57, "\n32.0");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(strSpliterator77);
        org.junit.Assert.assertNotNull(strStream78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 3 + "'", int80 == 3);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[\n32.0, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[\n32.0, , ]");
    }

    @Test
    public void test07761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07761");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        int int27 = strBuilder9.lastIndexOf("4#4", (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strBuilder9.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        char[] charArray36 = strBuilder32.toCharArray();
        char[] charArray37 = strBuilder29.getChars(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        boolean boolean39 = strTokenizer38.hasPrevious();
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        strList40.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder9.appendAll((java.lang.Iterable<java.lang.String>) strList40);
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator43 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList40.replaceAll(strUnaryOperator43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test07762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07762");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        java.lang.Object obj30 = properties0.setProperty("hi!", "hi!");
        java.lang.String str32 = properties0.getProperty("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.replaceFirst('4', 'a');
        boolean boolean42 = properties0.containsKey((java.lang.Object) 'a');
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection44 = properties0.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties0.entrySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNotNull(objEntrySet45);
    }

    @Test
    public void test07763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07763");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        java.lang.String str16 = strTokenizer1.next();
        java.util.List<java.lang.String> strList17 = strTokenizer1.getTokenList();
        java.lang.String str18 = strTokenizer1.toString();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#" + "'", str16, "#");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[#]" + "'", str18, "StrTokenizer[#]");
    }

    @Test
    public void test07764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07764");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("\n32.0", throwable2);
        java.lang.Throwable throwable6 = null;
        java.io.IOException iOException7 = new java.io.IOException("{}", throwable6);
        java.lang.Throwable[] throwableArray8 = iOException7.getSuppressed();
        java.io.IOException iOException9 = new java.io.IOException("\n", (java.lang.Throwable) iOException7);
        iOException3.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException("StrTokenizer[java.io.IOException]", (java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray12 = iOException11.getSuppressed();
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException11);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test07765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07765");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        boolean boolean10 = strTokenizer9.hasPrevious();
        java.util.List<java.lang.String> strList11 = strTokenizer9.getTokenList();
        boolean boolean12 = strTokenizer9.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer9.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer9.setDelimiterString("1001\n");
        int int16 = strTokenizer15.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strTokenizer15.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strMatcher17);
    }

    @Test
    public void test07766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07766");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties4.entrySet();
        properties4.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        java.io.Reader reader15 = strBuilder11.asReader();
        properties4.load(reader15);
        boolean boolean17 = reader15.ready();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test07767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07767");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendSeparator("StrTokenizer[]", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.append(false);
        java.lang.String str13 = strBuilder10.midString(0, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendSeparator('\000', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("StrTokenizer[]", 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.insert(80, ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 80");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test07768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07768");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        java.lang.String str4 = strBuilder0.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendln((float) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.setNullText(" ");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.appendSeparator('1', 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendNull();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test07769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07769");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendln(32);
        java.io.Reader reader11 = strBuilder6.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        char[] charArray26 = strBuilder22.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendln(charArray26);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder12.replaceFirst(strMatcher28, "StrTokenizer[]");
        int int31 = strBuilder6.lastIndexOf(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("", "");
        char[] charArray43 = strBuilder39.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.appendln(charArray43);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        int int49 = strMatcher28.isMatch(charArray43, (int) (byte) 0, (int) (byte) 100, (int) (byte) 100);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, "a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, '4', '#');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = strTokenizer55.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strMatcher50);
    }

    @Test
    public void test07770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07770");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader7 = strBuilder3.asReader();
        reader7.mark((int) (short) 100);
        boolean boolean10 = reader7.ready();
        boolean boolean11 = reader7.markSupported();
        reader7.close();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test07771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07771");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll('4');
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        char[] charArray11 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        int int14 = strTokenizer13.size();
        boolean boolean15 = strTokenizer13.hasNext();
        java.util.List<java.lang.String> strList16 = strTokenizer13.getTokenList();
        java.lang.String[] strArray20 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        boolean boolean23 = strList16.addAll((java.util.Collection<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        java.lang.String[] strArray27 = strTokenizer25.getTokenArray();
        boolean boolean28 = strTokenizer25.hasNext();
        int int29 = strTokenizer25.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer25.getQuoteMatcher();
        java.util.List<java.lang.String> strList31 = strTokenizer25.getTokenList();
        boolean boolean32 = strList16.retainAll((java.util.Collection<java.lang.String>) strList31);
        strList16.clear();
        java.lang.Object obj34 = properties5.remove((java.lang.Object) strList16);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList16);
        boolean boolean36 = strList16.isEmpty();
        boolean boolean38 = strList16.add("0\n");
        boolean boolean40 = strList16.add("51.0");
        java.util.Iterator<java.lang.String> strItor41 = strList16.iterator();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strItor41);
    }

    @Test
    public void test07772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07772");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer2.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        int int7 = strBuilder6.capacity();
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.appendln(stringBuffer8, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int13 = strBuilder11.lastIndexOf(strMatcher12);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.insert(1, " #\n");
        char[] charArray17 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer2.reset(charArray17);
        boolean boolean19 = strTokenizer2.isIgnoreEmptyTokens();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.set("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 32 + "'", int7 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "\n #\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "\n #\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[\n,  , #, \n]");
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test07773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07773");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer6, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder3.appendSeparator('$', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray25 = strTokenizer24.getTokenArray();
        java.lang.String[] strArray26 = strTokenizer24.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendWithSeparators((java.lang.Object[]) strArray26, "4#4");
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader38 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray44 = strTokenizer43.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.appendAll((java.lang.Object[]) strArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream49 = strBuilder39.codePoints();
        java.lang.Object obj50 = properties29.replace((java.lang.Object) reader38, (java.lang.Object) intStream49);
        long long52 = reader38.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray58 = strTokenizer57.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendAll((java.lang.Object[]) strArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder53.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream63 = strBuilder53.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "");
        char[] charArray68 = strBuilder64.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder53.appendln(charArray68);
        int int72 = reader38.read(charArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder22.append(charArray68);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("{\ntrue\n=1.0}", strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder3.deleteAll(strMatcher74);
        char[] charArray77 = strBuilder3.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray77);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(intStream49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(intStream63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[]");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#\n$");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#\n$");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, \n, $]");
        org.junit.Assert.assertNotNull(strTokenizer78);
    }

    @Test
    public void test07774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07774");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append((double) 10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("\naaaa100");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst('o', 's');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test07775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07775");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "");
        char[] charArray12 = strBuilder8.toCharArray();
        char[] charArray13 = strBuilder5.getChars(charArray12);
        java.lang.String str14 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, "java.io.IOException: hi!false");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        char[] charArray28 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendln(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray28);
        java.lang.String str31 = strTokenizer30.nextToken();
        java.lang.String str32 = strTokenizer30.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer30.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer16.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer36.reset("true\n###################################3\n");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer38.add("4#40.0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[]");
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "StrTokenizer[]" + "'", str32, "StrTokenizer[]");
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strTokenizer38);
    }

    @Test
    public void test07776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07776");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoredChar('4');
        boolean boolean5 = strTokenizer4.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test07777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07777");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        java.util.ListIterator<java.lang.String> strItor75 = strList9.listIterator((int) (short) 0);
        java.util.List<java.lang.String> strList78 = strList9.subList((int) (short) 1, 1);
        int int79 = strList78.size();
        java.util.Spliterator<java.lang.String> strSpliterator80 = strList78.spliterator();
        java.util.ListIterator<java.lang.String> strItor81 = strList78.listIterator();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strItor75);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(strSpliterator80);
        org.junit.Assert.assertNotNull(strItor81);
    }

    @Test
    public void test07778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07778");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.insert(1, (double) 32);
        java.util.Properties properties25 = new java.util.Properties();
        int int26 = properties25.size();
        boolean boolean28 = properties25.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        char[] charArray33 = strBuilder29.toCharArray();
        boolean boolean34 = properties25.containsValue((java.lang.Object) charArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder16.append(charArray33, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder16.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder0.append((java.lang.Object) true);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder0.trim();
        int int44 = strBuilder0.indexOf('4', 41);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder0.replaceFirst("35\n", "java.io.IOException: \n32.0");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test07779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07779");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        int int8 = strTokenizer6.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer6.setDelimiterChar('$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer12.getQuoteMatcher();
        int int14 = strTokenizer12.size();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test07780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07780");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "h");
        int int37 = strTokenizer33.nextIndex();
        boolean boolean38 = properties0.containsValue((java.lang.Object) strTokenizer33);
        char[] charArray43 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        int int46 = strTokenizer45.size();
        boolean boolean47 = strTokenizer45.hasNext();
        java.util.List<java.lang.String> strList48 = strTokenizer45.getTokenList();
        java.lang.String[] strArray52 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        boolean boolean55 = strList48.addAll((java.util.Collection<java.lang.String>) strList53);
        java.lang.String str57 = strList53.remove(0);
        char[] charArray62 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        int int65 = strTokenizer64.size();
        boolean boolean66 = strTokenizer64.hasNext();
        java.util.List<java.lang.String> strList67 = strTokenizer64.getTokenList();
        java.lang.String[] strArray71 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        boolean boolean74 = strList67.addAll((java.util.Collection<java.lang.String>) strList72);
        boolean boolean75 = strList53.addAll((java.util.Collection<java.lang.String>) strList72);
        java.lang.Object obj76 = properties0.remove((java.lang.Object) strList72);
        char[] charArray79 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray79);
        boolean boolean82 = properties0.equals((java.lang.Object) charArray79);
        java.lang.Object obj83 = properties0.clone();
        java.util.Collection<java.lang.Object> objCollection84 = properties0.values();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\n32.0" + "'", str57, "\n32.0");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(objCollection84);
    }

    @Test
    public void test07781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07781");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "h");
        int int37 = strTokenizer33.nextIndex();
        boolean boolean38 = properties0.containsValue((java.lang.Object) strTokenizer33);
        java.util.Set<java.lang.Object> objSet39 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "");
        char[] charArray44 = strBuilder40.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setEmptyTokenAsNull(false);
        java.lang.Object obj50 = properties0.get((java.lang.Object) false);
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader60 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray66 = strTokenizer65.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.appendAll((java.lang.Object[]) strArray66);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder61.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream71 = strBuilder61.codePoints();
        java.lang.Object obj72 = properties51.replace((java.lang.Object) reader60, (java.lang.Object) intStream71);
        int int73 = properties51.size();
        java.lang.String str75 = properties51.getProperty("true");
        boolean boolean76 = properties0.containsValue((java.lang.Object) "true");
        java.lang.String str78 = properties0.getProperty("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[]");
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(intStream71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test07782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07782");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        char[] charArray18 = strBuilder14.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "");
        boolean boolean21 = strTokenizer20.hasNext();
        boolean boolean22 = strTokenizer20.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append(' ');
        java.lang.StringBuffer stringBuffer26 = strBuilder23.toStringBuffer();
        java.util.Properties properties27 = new java.util.Properties();
        int int28 = properties27.size();
        boolean boolean30 = properties27.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties31 = new java.util.Properties();
        int int32 = properties31.size();
        boolean boolean34 = properties31.containsKey((java.lang.Object) (-1.0f));
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setIgnoredMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst("", "");
        java.lang.Object obj51 = properties27.putIfAbsent((java.lang.Object) strMatcher45, (java.lang.Object) strBuilder47);
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Properties properties53 = new java.util.Properties(properties52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst('a', '4');
        java.io.Writer writer61 = strBuilder60.asWriter();
        properties53.store(writer61, "");
        java.util.Properties properties64 = new java.util.Properties();
        int int65 = properties64.size();
        boolean boolean67 = properties64.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties68 = new java.util.Properties();
        int int69 = properties68.size();
        boolean boolean71 = properties68.containsKey((java.lang.Object) (-1.0f));
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties68.keys();
        boolean boolean74 = properties53.containsValue((java.lang.Object) objEnumeration73);
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        java.util.Properties properties76 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties27.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder23.appendln((java.lang.Object) objEnumeration77);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.insert(11, (float) 122);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.delete(0, 43);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(stringBuffer26);
        org.junit.Assert.assertEquals(stringBuffer26.toString(), "\n32.0 ");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(writer61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test07783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07783");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        boolean boolean9 = properties0.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        java.util.Spliterator<java.lang.String> strSpliterator27 = strList24.spliterator();
        int int28 = strList24.size();
        boolean boolean30 = strList24.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream31 = strList24.stream();
        boolean boolean32 = properties0.containsKey((java.lang.Object) strList24);
        int int33 = strList24.size();
        java.io.IOException iOException36 = new java.io.IOException("hi!");
        java.io.IOException iOException38 = new java.io.IOException("hi!");
        iOException36.addSuppressed((java.lang.Throwable) iOException38);
        java.io.IOException iOException40 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException38);
        java.lang.Throwable throwable42 = null;
        java.io.IOException iOException43 = new java.io.IOException("\n32.0", throwable42);
        iOException40.addSuppressed((java.lang.Throwable) iOException43);
        boolean boolean45 = strList24.contains((java.lang.Object) iOException40);
        java.util.ListIterator<java.lang.String> strItor47 = strList24.listIterator(2);
        java.util.stream.Stream<java.lang.String> strStream48 = strList24.stream();
        java.util.stream.Stream<java.lang.String> strStream49 = strList24.parallelStream();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSpliterator27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strItor47);
        org.junit.Assert.assertNotNull(strStream48);
        org.junit.Assert.assertNotNull(strStream49);
    }

    @Test
    public void test07784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07784");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("33.02.01#\n", "true52\n");
    }

    @Test
    public void test07785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07785");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        char[] charArray16 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.append(charArray16);
        boolean boolean20 = properties0.equals((java.lang.Object) strBuilder5);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln((double) '#');
        boolean boolean36 = strBuilder26.equals(strBuilder35);
        java.util.stream.IntStream intStream37 = strBuilder26.codePoints();
        java.util.Iterator<java.lang.String> strItor38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder26.appendWithSeparators(strItor38, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst(' ', ' ');
        int int45 = strBuilder43.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.insert((int) '$', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.insert((int) (short) 0, 53);
        boolean boolean52 = properties0.equals((java.lang.Object) (short) 0);
        int int53 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        int int55 = strBuilder54.capacity();
        java.lang.StringBuffer stringBuffer56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(stringBuffer56, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder54.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.deleteAll(strMatcher76);
        boolean boolean78 = strBuilder64.equalsIgnoreCase(strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder72.replaceFirst('#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder72.appendln(0.0d);
        java.lang.Object obj84 = properties0.remove((java.lang.Object) strBuilder72);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[ , 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test07786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07786");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        boolean boolean10 = strTokenizer9.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        char[] charArray24 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln(charArray24);
        int int29 = strMatcher12.isMatch(charArray24, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer9.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setQuoteChar('#');
        java.util.List<java.lang.String> strList34 = strTokenizer31.getTokenList();
        boolean boolean35 = strTokenizer31.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer31.setDelimiterChar('e');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strTokenizer37);
    }

    @Test
    public void test07787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07787");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        boolean boolean10 = strTokenizer9.hasPrevious();
        java.util.List<java.lang.String> strList11 = strTokenizer9.getTokenList();
        java.lang.Object[] objArray12 = strList11.toArray();
        java.util.ListIterator<java.lang.String> strItor13 = strList11.listIterator();
        boolean boolean15 = strList11.add("97\nhi!101.0\n");
        char[] charArray20 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        int int23 = strTokenizer22.size();
        boolean boolean24 = strTokenizer22.hasNext();
        java.util.List<java.lang.String> strList25 = strTokenizer22.getTokenList();
        java.lang.String[] strArray29 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        boolean boolean32 = strList25.addAll((java.util.Collection<java.lang.String>) strList30);
        char[] charArray37 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        int int40 = strTokenizer39.size();
        boolean boolean41 = strTokenizer39.hasNext();
        java.util.List<java.lang.String> strList42 = strTokenizer39.getTokenList();
        java.lang.String[] strArray46 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        boolean boolean49 = strList42.addAll((java.util.Collection<java.lang.String>) strList47);
        java.util.Spliterator<java.lang.String> strSpliterator50 = strList47.spliterator();
        int int51 = strList47.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int55 = strList47.lastIndexOf((java.lang.Object) strTokenizer54);
        java.util.List<java.lang.String> strList56 = strTokenizer54.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor57 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        int int59 = strBuilder58.capacity();
        java.lang.StringBuffer stringBuffer60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.appendln(stringBuffer60, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln(true);
        boolean boolean70 = strSubstitutor57.replaceIn(strBuilder67, (int) '$', 0);
        boolean boolean71 = strList56.equals((java.lang.Object) '$');
        boolean boolean72 = strList25.retainAll((java.util.Collection<java.lang.String>) strList56);
        java.lang.Object[] objArray73 = strList25.toArray();
        java.lang.Object[] objArray74 = strList25.toArray();
        boolean boolean75 = strList11.addAll((java.util.Collection<java.lang.String>) strList25);
        java.util.stream.Stream<java.lang.String> strStream76 = strList11.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream77 = strList11.parallelStream();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(strItor13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strSpliterator50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3 + "'", int51 == 3);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 32 + "'", int59 == 32);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strStream76);
        org.junit.Assert.assertNotNull(strStream77);
    }

    @Test
    public void test07788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07788");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst('a', '4');
        java.io.Writer writer47 = strBuilder46.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "");
        char[] charArray59 = strBuilder55.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendln(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray59);
        writer47.write(charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder39.append(charArray59);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int67 = strBuilder39.indexOf(strMatcher65, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder14.deleteAll(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.insert(0, (long) 10);
        java.io.Writer writer72 = strBuilder68.asWriter();
        writer72.close();
        properties4.store(writer72, "\n32.0a\n");
        java.util.Properties properties76 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties4.elements();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(writer47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(writer72);
        org.junit.Assert.assertNotNull(objEnumeration77);
    }

    @Test
    public void test07789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07789");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(53);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadLeft((java.lang.Object) "\naaaa100", 103, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.append((double) 0);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
    }

    @Test
    public void test07790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07790");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        boolean boolean7 = strBuilder0.contains(' ');
        java.lang.StringBuffer stringBuffer8 = strBuilder0.toStringBuffer();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        int int11 = strBuilder10.capacity();
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(stringBuffer12, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln(true);
        boolean boolean22 = strSubstitutor9.replaceIn(strBuilder19, (int) '$', 0);
        int int25 = strBuilder19.indexOf(" #\n", (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.appendPadding(0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.insert(1, (double) 32);
        boolean boolean38 = strBuilder29.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder29.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceAll("#", "true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendSeparator("StrTokenizer[not tokenized yet]", 0);
        int int48 = strBuilder45.lastIndexOf(" ", 43);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder19.appendln(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder0.append((java.lang.CharSequence) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder0.setNewLineText("\n32.0a#\n");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(stringBuffer8);
        org.junit.Assert.assertEquals(stringBuffer8.toString(), "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test07791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07791");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        int int10 = strBuilder7.lastIndexOf(" 4#4", (-1));
        java.lang.String str11 = strBuilder7.toString();
        java.lang.StringBuffer stringBuffer12 = strBuilder7.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.insert(49, (float) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 49");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(stringBuffer12);
        org.junit.Assert.assertEquals(stringBuffer12.toString(), "");
    }

    @Test
    public void test07792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07792");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln((float) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("{}");
        boolean boolean52 = strTokenizer51.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder44.appendAll((java.util.Iterator<java.lang.String>) strTokenizer51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder(" 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.appendSeparator('\000', (int) 'e');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder44.append(strBuilder55);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test07793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07793");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        java.util.Spliterator<java.lang.String> strSpliterator19 = strList9.spliterator();
        char[] charArray24 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        int int27 = strTokenizer26.size();
        boolean boolean28 = strTokenizer26.hasNext();
        java.util.List<java.lang.String> strList29 = strTokenizer26.getTokenList();
        java.lang.String[] strArray33 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = strList29.addAll((java.util.Collection<java.lang.String>) strList34);
        java.util.Spliterator<java.lang.String> strSpliterator37 = strList34.spliterator();
        int int38 = strList34.size();
        java.lang.String str40 = strList34.remove((int) (byte) 0);
        java.util.stream.Stream<java.lang.String> strStream41 = strList34.parallelStream();
        java.lang.Object[] objArray42 = strList34.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "");
        char[] charArray59 = strBuilder55.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder52.append(charArray59, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        int int66 = strBuilder65.capacity();
        java.lang.StringBuffer stringBuffer67 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.appendln(stringBuffer67, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder65.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder65.appendSeparator("java.io.IOException: hi!");
        boolean boolean76 = strBuilder52.equals((java.lang.Object) strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.setNewLineText("hi!");
        boolean boolean79 = strList34.contains((java.lang.Object) "hi!");
        boolean boolean80 = strList9.contains((java.lang.Object) strList34);
        java.util.Spliterator<java.lang.String> strSpliterator81 = strList9.spliterator();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSpliterator19);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strSpliterator37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3 + "'", int38 == 3);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\n32.0" + "'", str40, "\n32.0");
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[, ]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 32 + "'", int66 == 32);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strSpliterator81);
    }

    @Test
    public void test07794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07794");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("\n032.0");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test07795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07795");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        int int2 = strBuilder1.capacity();
        java.lang.StringBuffer stringBuffer3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln(stringBuffer3, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        boolean boolean13 = strSubstitutor0.replaceIn(strBuilder10, (int) '$', 0);
        int int16 = strBuilder10.indexOf(" #\n", (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.insert(5, (float) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append((double) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.appendAll((java.lang.Object[]) strArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "");
        char[] charArray37 = strBuilder33.toCharArray();
        char[] charArray38 = strBuilder30.getChars(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        char[] charArray40 = strBuilder22.getChars(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder19.appendln(charArray40, (int) '\000', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 32 + "'", int2 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]");
    }

    @Test
    public void test07796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07796");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean3 = strTokenizer2.hasNext();
        java.lang.String[] strArray4 = strTokenizer2.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer2.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        java.lang.String[] strArray10 = strTokenizer8.getTokenArray();
        boolean boolean11 = strTokenizer8.hasNext();
        int int12 = strTokenizer8.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer8.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher13);
        java.util.List<java.lang.String> strList15 = strTokenizer14.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher5, strMatcher16);
        boolean boolean18 = strTokenizer17.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test07797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07797");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.setCharAt(0, '4');
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        int int19 = strBuilder18.capacity();
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(stringBuffer20, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.insert(1, (double) 32);
        java.util.Properties properties27 = new java.util.Properties();
        int int28 = properties27.size();
        boolean boolean30 = properties27.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        char[] charArray35 = strBuilder31.toCharArray();
        boolean boolean36 = properties27.containsValue((java.lang.Object) charArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder18.append(charArray35, (int) (byte) 0, 0);
        boolean boolean40 = properties16.equals((java.lang.Object) 0);
        java.util.Collection<java.lang.Object> objCollection41 = properties16.values();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties16.keys();
        java.util.Properties properties43 = new java.util.Properties();
        int int44 = properties43.size();
        boolean boolean46 = properties43.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst("", "");
        boolean boolean52 = strBuilder50.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln('#');
        java.lang.StringBuffer stringBuffer61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.append(stringBuffer61, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder58.deleteFirst("hi!");
        char[] charArray67 = strBuilder58.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer54.reset(charArray67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray67);
        char[] charArray70 = strBuilder50.getChars(charArray67);
        java.lang.Object obj71 = properties43.remove((java.lang.Object) charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        char[] charArray79 = new char[] { ' ', '4', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray79);
        java.lang.Object obj81 = properties16.putIfAbsent((java.lang.Object) charArray70, (java.lang.Object) strMatcher80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder15.append(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer85.setIgnoreEmptyTokens(false);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, \n]");
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), " 4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), " 4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[ , 4, #, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strTokenizer87);
    }

    @Test
    public void test07798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07798");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        properties0.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        int int6 = strBuilder5.capacity();
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(stringBuffer7, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.setLength(32);
        java.io.Writer writer16 = strBuilder15.asWriter();
        writer16.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        writer16.flush();
        writer16.flush();
        properties0.store(writer16, "t");
        writer16.write(39);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer32, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder27.setLength((int) (byte) 100);
        java.lang.String str39 = strBuilder37.substring(35);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder37.append(false);
        java.io.Writer writer42 = writer16.append((java.lang.CharSequence) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "");
        char[] charArray47 = strBuilder43.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray47);
        writer16.write(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln((double) '#');
        boolean boolean71 = strBuilder61.equals(strBuilder70);
        java.util.stream.IntStream intStream72 = strBuilder61.codePoints();
        java.util.Iterator<java.lang.String> strItor73 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder61.appendWithSeparators(strItor73, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst(' ', ' ');
        int int80 = strBuilder78.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.appendln((long) 15);
        java.io.Writer writer83 = writer16.append((java.lang.CharSequence) strBuilder78);
        writer83.close();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(writer16);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000" + "'", str39, "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(writer42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(intStream72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(writer83);
    }

    @Test
    public void test07799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07799");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer2.getTrimmerMatcher();
        java.lang.String str6 = strTokenizer2.next();
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "java.io.IOException" + "'", str6, "java.io.IOException");
    }

    @Test
    public void test07800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07800");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        java.lang.String str12 = strBuilder11.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendFixedWidthPadRight((int) 'g', 3, '3');
        int int18 = strBuilder11.indexOf('9');
        int int21 = strBuilder11.indexOf("false", 200);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + " #\n" + "'", str12, " #\n");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test07801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07801");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'e');
    }

    @Test
    public void test07802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07802");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        long long23 = reader9.skip(0L);
        boolean boolean24 = reader9.ready();
        reader9.close();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        char[] charArray39 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendln(charArray39);
        int int44 = strMatcher27.isMatch(charArray39, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray39);
        int int47 = reader9.read(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray39);
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strTokenizer48);
    }

    @Test
    public void test07803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07803");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.lang.String str17 = strBuilder5.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendln((long) 100);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test07804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07804");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(" #\n", "100.0\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.reset("StrTokenizer[4#4]");
        java.lang.String str5 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str5, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test07805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07805");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder3.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder3.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst('2');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test07806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07806");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append((double) 10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceAll("4#4", "\n32.0");
        java.lang.String str11 = strBuilder8.midString((int) (short) 0, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.delete((int) (byte) 0, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray17 = strBuilder16.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder8.append(charArray17, 0, (int) '$');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 36");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "10.0" + "'", str11, "10.0");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(strMatcher18);
    }

    @Test
    public void test07807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07807");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceAll("StrTokenizer[]", "{}");
        java.util.stream.IntStream intStream14 = strBuilder0.chars();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(intStream14);
    }

    @Test
    public void test07808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07808");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        int int7 = strBuilder6.capacity();
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.appendln(stringBuffer8, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.insert(1, (double) 32);
        java.lang.String str16 = strBuilder6.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder6.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        char[] charArray24 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, "");
        boolean boolean27 = strTokenizer26.hasNext();
        boolean boolean28 = strTokenizer26.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.appendAll((java.util.Iterator<java.lang.String>) strTokenizer26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append(' ');
        java.lang.StringBuffer stringBuffer32 = strBuilder29.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder3.appendln(stringBuffer32);
        int int34 = strBuilder3.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder3.deleteFirst("35.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.append((int) (byte) 10);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 32 + "'", int7 == 32);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\n32.0" + "'", str16, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(stringBuffer32);
        org.junit.Assert.assertEquals(stringBuffer32.toString(), "\n32.0 ");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 12 + "'", int34 == 12);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test07809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07809");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("32.0");
        char[] charArray6 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        int int9 = strTokenizer8.size();
        boolean boolean10 = strTokenizer8.hasNext();
        java.util.List<java.lang.String> strList11 = strTokenizer8.getTokenList();
        java.lang.String[] strArray15 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        boolean boolean18 = strList11.addAll((java.util.Collection<java.lang.String>) strList16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        java.lang.String[] strArray22 = strTokenizer20.getTokenArray();
        boolean boolean23 = strTokenizer20.hasNext();
        int int24 = strTokenizer20.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer20.getQuoteMatcher();
        java.util.List<java.lang.String> strList26 = strTokenizer20.getTokenList();
        boolean boolean27 = strList11.retainAll((java.util.Collection<java.lang.String>) strList26);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader38 = strBuilder34.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray44 = strTokenizer43.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.appendAll((java.lang.Object[]) strArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream49 = strBuilder39.codePoints();
        java.lang.Object obj50 = properties29.replace((java.lang.Object) reader38, (java.lang.Object) intStream49);
        reader38.reset();
        properties28.load(reader38);
        int int53 = strList11.indexOf((java.lang.Object) properties28);
        strList11.add((int) (byte) 0, "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder1.appendAll((java.lang.Iterable<java.lang.String>) strList11);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln((float) 101);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst('7', '7');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(intStream49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test07810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07810");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder7.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder1.appendFixedWidthPadRight((java.lang.Object) strBuilder10, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int15 = strBuilder1.lastIndexOf(strMatcher14);
        char[] charArray20 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        int int23 = strTokenizer22.size();
        boolean boolean24 = strTokenizer22.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer22.setIgnoredMatcher(strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder1.deleteFirst(strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("aaaa\nfalse\n", strMatcher25);
        boolean boolean29 = strTokenizer28.hasPrevious();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test07811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07811");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        boolean boolean9 = properties0.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        java.util.Spliterator<java.lang.String> strSpliterator27 = strList24.spliterator();
        int int28 = strList24.size();
        boolean boolean30 = strList24.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream31 = strList24.stream();
        boolean boolean32 = properties0.containsKey((java.lang.Object) strList24);
        char[] charArray37 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, ' ');
        int int40 = strTokenizer39.size();
        boolean boolean41 = strTokenizer39.hasNext();
        java.util.List<java.lang.String> strList42 = strTokenizer39.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        int int44 = strBuilder43.capacity();
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(stringBuffer45, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder43.insert(1, (double) 32);
        java.lang.String str53 = strBuilder43.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder43.insert(1, '#');
        boolean boolean57 = strList42.equals((java.lang.Object) strBuilder43);
        boolean boolean58 = strList24.retainAll((java.util.Collection<java.lang.String>) strList42);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray64 = strTokenizer63.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.appendAll((java.lang.Object[]) strArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder59.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream69 = strBuilder59.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst("", "");
        char[] charArray74 = strBuilder70.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder59.appendln(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, "\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, '$');
        boolean boolean82 = strList24.remove((java.lang.Object) charArray74);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSpliterator27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 32 + "'", int44 == 32);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\n32.0" + "'", str53, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(intStream69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[]");
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test07812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07812");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.setLength(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.appendPadding(53, '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.append((float) 79);
        java.lang.String str23 = strBuilder22.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test07813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07813");
        char[] charArray3 = new char[] { 'a', '$', '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '$');
        java.util.List<java.lang.String> strList6 = strTokenizer5.getTokenList();
        char[] charArray11 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        int int14 = strTokenizer13.size();
        boolean boolean15 = strTokenizer13.hasNext();
        java.util.List<java.lang.String> strList16 = strTokenizer13.getTokenList();
        java.lang.String[] strArray20 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        boolean boolean23 = strList16.addAll((java.util.Collection<java.lang.String>) strList21);
        char[] charArray28 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        int int31 = strTokenizer30.size();
        boolean boolean32 = strTokenizer30.hasNext();
        java.util.List<java.lang.String> strList33 = strTokenizer30.getTokenList();
        java.lang.String[] strArray37 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        boolean boolean40 = strList33.addAll((java.util.Collection<java.lang.String>) strList38);
        java.util.Spliterator<java.lang.String> strSpliterator41 = strList38.spliterator();
        int int42 = strList38.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int46 = strList38.lastIndexOf((java.lang.Object) strTokenizer45);
        java.util.List<java.lang.String> strList47 = strTokenizer45.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor48 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        int int50 = strBuilder49.capacity();
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(stringBuffer51, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln(true);
        boolean boolean61 = strSubstitutor48.replaceIn(strBuilder58, (int) '$', 0);
        boolean boolean62 = strList47.equals((java.lang.Object) '$');
        boolean boolean63 = strList16.retainAll((java.util.Collection<java.lang.String>) strList47);
        char[] charArray68 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ');
        int int71 = strTokenizer70.size();
        boolean boolean72 = strTokenizer70.hasNext();
        java.util.List<java.lang.String> strList73 = strTokenizer70.getTokenList();
        java.lang.String[] strArray77 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        boolean boolean80 = strList73.addAll((java.util.Collection<java.lang.String>) strList78);
        java.lang.String str82 = strList78.remove(0);
        java.util.stream.Stream<java.lang.String> strStream83 = strList78.stream();
        boolean boolean84 = strList47.addAll((java.util.Collection<java.lang.String>) strList78);
        boolean boolean85 = strList6.removeAll((java.util.Collection<java.lang.String>) strList47);
        java.util.Spliterator<java.lang.String> strSpliterator86 = strList6.spliterator();
        strList6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str90 = strList6.set(100, "java.io.IOException: java.io.IOException:");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a$$");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a$$");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, $, $]");
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strSpliterator41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 32 + "'", int50 == 32);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "\n32.0" + "'", str82, "\n32.0");
        org.junit.Assert.assertNotNull(strStream83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strSpliterator86);
    }

    @Test
    public void test07814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07814");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder33.lastIndexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.insert((int) (short) 1, 32);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        boolean boolean42 = properties39.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties39.entrySet();
        java.lang.Object obj44 = properties0.putIfAbsent((java.lang.Object) strBuilder38, (java.lang.Object) objEntrySet43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        int int46 = strBuilder45.capacity();
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(stringBuffer47, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.insert(1, (double) 32);
        java.lang.String str55 = strBuilder45.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder45.replaceAll("", "hi!");
        boolean boolean59 = properties0.contains((java.lang.Object) "");
        java.util.Properties properties60 = new java.util.Properties(properties0);
        properties60.clear();
        java.util.Set<java.lang.Object> objSet62 = properties60.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        int int65 = strBuilder64.capacity();
        java.lang.StringBuffer stringBuffer66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendln(stringBuffer66, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder64.insert(1, (double) 32);
        boolean boolean73 = strBuilder64.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder64.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder64.clear();
        int int76 = strBuilder75.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader84 = strBuilder80.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder75.appendln(strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder75.replaceFirst("\n32.0", "StrTokenizer[not tokenized yet]");
        boolean boolean89 = properties60.containsValue((java.lang.Object) strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder75.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.append(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\n32.0" + "'", str55, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 32 + "'", int65 == 32);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 32 + "'", int76 == 32);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(reader84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test07815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07815");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("java.io.IOException: hi!");
        java.lang.Throwable throwable12 = null;
        java.io.IOException iOException13 = new java.io.IOException("{}", throwable12);
        java.lang.Throwable[] throwableArray14 = iOException13.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendAll((java.lang.Object[]) throwableArray14);
        java.util.Properties properties16 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder25.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        int int28 = strBuilder27.capacity();
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(stringBuffer29, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int34 = strBuilder32.lastIndexOf(strMatcher33);
        boolean boolean35 = strBuilder25.equalsIgnoreCase(strBuilder32);
        char[] charArray38 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray38);
        boolean boolean40 = properties16.replace((java.lang.Object) strBuilder22, (java.lang.Object) strBuilder25, (java.lang.Object) strTokenizer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder25.deleteAll("StrTokenizer[]");
        int int44 = strBuilder42.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteFirst("");
        int int49 = strBuilder45.indexOf("");
        int int52 = strBuilder45.lastIndexOf('#', (int) (byte) 0);
        boolean boolean54 = strBuilder45.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder45.appendAll((java.util.Iterator<java.lang.String>) strTokenizer55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder45.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder45.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder42.append(strBuilder60, 1, 0);
        java.lang.Iterable<java.lang.String> strIterable64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder42.appendAll(strIterable64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.setNullText("");
        char[] charArray72 = strBuilder71.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, "true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder42.append(charArray72);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder10.appendln(charArray72, 194, (int) 'e');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 101");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 32 + "'", int28 == 32);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[]");
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test07816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07816");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.lang.Object obj17 = new java.lang.Object();
        java.util.Properties properties18 = new java.util.Properties();
        int int19 = properties18.size();
        java.lang.Object obj20 = properties18.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) strBuilder30, (int) (byte) -1, '#');
        java.lang.Object obj34 = properties18.get((java.lang.Object) strBuilder21);
        java.util.Properties properties35 = new java.util.Properties();
        int int36 = properties35.size();
        boolean boolean38 = properties35.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        boolean boolean42 = properties39.containsKey((java.lang.Object) (-1.0f));
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        char[] charArray48 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        int int51 = strTokenizer50.size();
        boolean boolean52 = strTokenizer50.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer50.setIgnoredMatcher(strMatcher53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "");
        java.lang.Object obj59 = properties35.putIfAbsent((java.lang.Object) strMatcher53, (java.lang.Object) strBuilder55);
        boolean boolean60 = strBuilder21.equals(obj59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder21.appendln((double) 100L);
        java.util.stream.IntStream intStream63 = strBuilder21.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder21.appendFixedWidthPadLeft(0, (int) (byte) -1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst("", "");
        java.io.Reader reader72 = strBuilder68.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.appendSeparator('4');
        int int77 = strBuilder74.indexOf("10.0", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder21.appendln((java.lang.Object) strBuilder74);
        java.lang.Object obj79 = properties0.getOrDefault(obj17, (java.lang.Object) strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.deleteAll("");
        boolean boolean83 = strBuilder82.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(intStream63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(reader72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "100.0\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "100.0\n\n");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "100.0\n\n");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test07817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07817");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setIgnoredChar('$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setQuoteChar('$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer6.setIgnoredMatcher(strMatcher9);
        boolean boolean11 = strTokenizer6.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer6.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
    }

    @Test
    public void test07818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07818");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendSeparator("StrTokenizer[]", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.append(false);
        java.lang.String str13 = strBuilder10.midString(0, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append((double) (byte) 100);
        boolean boolean16 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.append((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.insert(15, "IOException: h");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence24 = strBuilder21.subSequence(12, 116);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 116");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test07819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07819");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("\n");
        java.io.Reader reader15 = strBuilder14.asReader();
        java.io.Writer writer16 = strBuilder14.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.deleteAll('#');
        int int19 = strBuilder18.size();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(writer16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test07820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07820");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("a10", "\n32.0a#\n");
    }

    @Test
    public void test07821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07821");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        java.util.Properties properties22 = new java.util.Properties();
        int int23 = properties22.size();
        boolean boolean25 = properties22.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties26 = new java.util.Properties();
        int int27 = properties26.size();
        boolean boolean29 = properties26.containsKey((java.lang.Object) (-1.0f));
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        char[] charArray35 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        int int38 = strTokenizer37.size();
        boolean boolean39 = strTokenizer37.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer37.setIgnoredMatcher(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst("", "");
        java.lang.Object obj46 = properties22.putIfAbsent((java.lang.Object) strMatcher40, (java.lang.Object) strBuilder42);
        java.lang.Object obj49 = properties22.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        int int51 = strBuilder50.capacity();
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(stringBuffer52, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int57 = strBuilder55.lastIndexOf(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.insert((int) (short) 1, 32);
        java.util.Properties properties61 = new java.util.Properties();
        int int62 = properties61.size();
        boolean boolean64 = properties61.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties61.entrySet();
        java.lang.Object obj66 = properties22.putIfAbsent((java.lang.Object) strBuilder60, (java.lang.Object) objEntrySet65);
        java.lang.String str67 = strBuilder60.getNewLineText();
        boolean boolean68 = properties0.equals((java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder60.appendFixedWidthPadRight(0, 43, 'e');
        boolean boolean74 = strBuilder60.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder60.setNullText("97\nhi!");
        int int78 = strBuilder60.indexOf("java.io.IOException: \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder60.append("2");
        java.lang.StringBuffer stringBuffer81 = strBuilder60.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder60.clear();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder60.setCharAt((int) 's', '7');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 115");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 32 + "'", int51 == 32);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(stringBuffer81);
        org.junit.Assert.assertEquals(stringBuffer81.toString(), "\n320eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee2");
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test07822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07822");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder0.appendln('a');
        boolean boolean24 = strBuilder0.isEmpty();
        boolean boolean26 = strBuilder0.startsWith("\n-1.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder0.ensureCapacity((int) 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder0.append('#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder0.appendln("10.0", 13, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test07823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07823");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        int int13 = strBuilder10.indexOf(' ', 2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray16 = strTokenizer15.getTokenArray();
        java.lang.String[] strArray17 = strTokenizer15.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer15.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer15, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder10.appendSeparator('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder10.deleteFirst("\n#####");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test07824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07824");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean10 = strTokenizer9.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setDelimiterChar('a');
        int int13 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer9.setIgnoredChar(' ');
        java.lang.String[] strArray16 = strTokenizer15.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder0.appendWithSeparators((java.lang.Object[]) strArray16, "###");
        int int19 = strBuilder18.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendln(53);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append(8);
        boolean boolean24 = strBuilder23.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test07825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07825");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.setLength((int) (byte) 1);
        java.io.Reader reader13 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendln(true);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test07826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07826");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendln(32);
        boolean boolean12 = strBuilder6.endsWith("a4");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.deleteAll("35\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((int) 's');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strBuilder16.asTokenizer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder16.insert(19, (double) 104);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 19");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strTokenizer17);
    }

    @Test
    public void test07827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07827");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer6.reset("########");
        java.lang.String str11 = strTokenizer10.toString();
        boolean boolean12 = strTokenizer10.hasPrevious();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str11, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test07828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07828");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.lang.Object obj18 = properties0.setProperty("[4#4]", "java.io.IOException: {}");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray24 = strTokenizer23.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendAll((java.lang.Object[]) strArray24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray34 = strTokenizer33.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.appendAll((java.lang.Object[]) strArray34);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder19.appendln(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst('a', '4');
        java.io.Writer writer49 = strBuilder48.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst("", "");
        char[] charArray61 = strBuilder57.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendln(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray61);
        writer49.write(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder41.append(charArray61);
        java.lang.Object obj66 = properties0.get((java.lang.Object) charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer67.setIgnoreEmptyTokens(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer67.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(writer49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(strTokenizer69);
    }

    @Test
    public void test07829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07829");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        boolean boolean12 = strBuilder0.startsWith("");
        char[] charArray13 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.ensureCapacity((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.replaceAll("java.io.IOException: {}", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.appendFixedWidthPadLeft(22, 52, '2');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.appendln((double) 10L);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test07830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07830");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder33.lastIndexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.insert((int) (short) 1, 32);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        boolean boolean42 = properties39.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties39.entrySet();
        java.lang.Object obj44 = properties0.putIfAbsent((java.lang.Object) strBuilder38, (java.lang.Object) objEntrySet43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        int int46 = strBuilder45.capacity();
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(stringBuffer47, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.insert(1, (double) 32);
        java.lang.String str55 = strBuilder45.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder45.replaceAll("", "hi!");
        boolean boolean59 = properties0.contains((java.lang.Object) "");
        java.util.Properties properties60 = new java.util.Properties(properties0);
        properties60.clear();
        java.util.Set<java.lang.Object> objSet62 = properties60.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        int int65 = strBuilder64.capacity();
        java.lang.StringBuffer stringBuffer66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendln(stringBuffer66, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder64.insert(1, (double) 32);
        boolean boolean73 = strBuilder64.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder64.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder64.clear();
        int int76 = strBuilder75.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader84 = strBuilder80.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder75.appendln(strBuilder80);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder75.replaceFirst("\n32.0", "StrTokenizer[not tokenized yet]");
        boolean boolean89 = properties60.containsValue((java.lang.Object) strBuilder75);
        int int90 = properties60.size();
        java.util.Collection<java.lang.Object> objCollection91 = properties60.values();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\n32.0" + "'", str55, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 32 + "'", int65 == 32);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 32 + "'", int76 == 32);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(reader84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(objCollection91);
    }

    @Test
    public void test07831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07831");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray11 = strTokenizer10.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendAll((java.lang.Object[]) strArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendAll((java.lang.Object[]) strArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder6.appendln(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', '4');
        java.io.Writer writer36 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        char[] charArray48 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendln(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        writer36.write(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.append(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int56 = strBuilder28.indexOf(strMatcher54, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder3.deleteAll(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.insert(0, (long) 10);
        java.io.Writer writer61 = strBuilder57.asWriter();
        java.io.Writer writer63 = writer61.append('$');
        writer63.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 0);
        java.io.Writer writer67 = writer63.append((java.lang.CharSequence) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder68.deleteAll('4');
        int int75 = strBuilder73.indexOf('a');
        java.lang.String str78 = strBuilder73.midString((int) (byte) 10, 32);
        int int80 = strBuilder73.lastIndexOf(' ');
        java.io.Writer writer81 = writer67.append((java.lang.CharSequence) strBuilder73);
        writer81.flush();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(writer61);
        org.junit.Assert.assertNotNull(writer63);
        org.junit.Assert.assertNotNull(writer67);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(writer81);
    }

    @Test
    public void test07832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07832");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.trim();
        int int14 = strBuilder9.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("100.0\n");
        int int17 = strBuilder9.indexOf(strMatcher16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.insert(14, (long) 144);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 14");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test07833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07833");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('a', '4');
        java.io.Writer writer34 = strBuilder33.asWriter();
        properties26.store(writer34, "");
        java.util.Properties properties37 = new java.util.Properties();
        int int38 = properties37.size();
        boolean boolean40 = properties37.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties41 = new java.util.Properties();
        int int42 = properties41.size();
        boolean boolean44 = properties41.containsKey((java.lang.Object) (-1.0f));
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.keys();
        boolean boolean47 = properties26.containsValue((java.lang.Object) objEnumeration46);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties49 = new java.util.Properties(properties0);
        int int50 = properties0.size();
        java.util.Collection<java.lang.Object> objCollection51 = properties0.values();
        java.util.Set<java.lang.Object> objSet52 = properties0.keySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNotNull(objSet52);
    }

    @Test
    public void test07834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07834");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        properties0.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.append('a');
        int int25 = strBuilder18.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        int int27 = strBuilder26.capacity();
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(stringBuffer28, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.insert(1, (double) 32);
        boolean boolean35 = strBuilder26.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder26.clear();
        int int38 = strBuilder37.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder18.append(strBuilder37);
        java.io.Writer writer40 = strBuilder37.asWriter();
        properties0.store(writer40, "[\n32.0, , , StrTokenizer[]]");
        writer40.write(8);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 32 + "'", int38 == 32);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(writer40);
    }

    @Test
    public void test07835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07835");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        boolean boolean3 = strTokenizer2.hasNext();
        boolean boolean4 = strTokenizer2.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setQuoteChar('2');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test07836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07836");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder3.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll('\000');
        java.io.Writer writer48 = strBuilder47.asWriter();
        // The following exception was thrown during execution in test generation
        try {
            writer48.write("true\njava.io.IOException: hi!false", 119, 47);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(writer48);
    }

    @Test
    public void test07837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07837");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        java.lang.String str14 = strTokenizer13.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setQuoteChar('4');
        boolean boolean17 = strTokenizer16.isEmptyTokenAsNull();
        char[] charArray20 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer16.reset(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer16.setIgnoreEmptyTokens(true);
        java.lang.String str26 = strTokenizer16.getContent();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "a4" + "'", str26, "a4");
    }

    @Test
    public void test07838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07838");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.replaceFirst('a', ' ');
        java.lang.String str13 = strBuilder6.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder6.insert((int) (short) 1, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder6.appendln((long) 3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer23.setDelimiterString("{}");
        java.lang.String[] strArray26 = strTokenizer23.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder6.appendAll((java.lang.Object[]) strArray26);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test07839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07839");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendSeparator("{}");
        java.io.Writer writer8 = strBuilder5.asWriter();
        writer8.close();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer17.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher15, strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst('a', '4');
        char[] charArray27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder23.appendln(charArray27, (int) (short) 1, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.insert(0, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strBuilder30.asTokenizer();
        char[] charArray35 = strBuilder30.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '4', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, '\000');
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray35);
        int int45 = strMatcher18.isMatch(charArray35, 169, (int) (short) 1, 35);
        // The following exception was thrown during execution in test generation
        try {
            writer8.write(charArray35, 6, 85);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 85");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer8);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "1\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "1\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[1, \n]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test07840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07840");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst('a', '4');
        java.io.Writer writer47 = strBuilder46.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "");
        char[] charArray59 = strBuilder55.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendln(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray59);
        writer47.write(charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder39.append(charArray59);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int67 = strBuilder39.indexOf(strMatcher65, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder14.deleteAll(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.insert(0, (long) 10);
        java.io.Writer writer72 = strBuilder68.asWriter();
        writer72.close();
        properties4.store(writer72, "\n32.0a\n");
        java.util.Properties properties76 = new java.util.Properties(properties4);
        java.lang.Object obj77 = null;
        boolean boolean78 = properties4.equals(obj77);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(writer47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(writer72);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test07841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07841");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.replaceAll("true\na4\n", "\n32.0java.io.IOException: hi!###");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.appendAll((java.lang.Object[]) strArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        char[] charArray35 = strBuilder31.toCharArray();
        char[] charArray36 = strBuilder28.getChars(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        char[] charArray38 = strBuilder20.getChars(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer19.reset(charArray35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setDelimiterString("\na32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer41.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder12.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer42, "{h={}}");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setIgnoredChar('#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[]");
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer46);
    }

    @Test
    public void test07842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07842");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        boolean boolean6 = strBuilder1.contains('a');
        java.lang.String str8 = strBuilder1.rightString(100);
        boolean boolean10 = strBuilder1.contains("a");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test07843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07843");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("java.io.IOException: java.io.IOException: StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString("java.io.IOException: \000\000\000\000\000\000\000\000\000\000\n");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test07844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07844");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("\n32.0", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        char[] charArray8 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln('#');
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append(stringBuffer20, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.deleteFirst("hi!");
        char[] charArray26 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer13.reset(charArray26);
        boolean boolean28 = properties0.replace((java.lang.Object) iOException4, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer13);
        java.lang.String str29 = iOException4.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "java.io.IOException: \n32.0" + "'", str29, "java.io.IOException: \n32.0");
    }

    @Test
    public void test07845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07845");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int7 = strBuilder5.lastIndexOf(strMatcher6);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.insert((int) (short) 1, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.replaceFirst('3', '9');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test07846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07846");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        boolean boolean10 = strTokenizer9.hasPrevious();
        java.util.List<java.lang.String> strList11 = strTokenizer9.getTokenList();
        boolean boolean12 = strTokenizer9.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer9.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer9.setQuoteChar('$');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer9.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
    }

    @Test
    public void test07847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07847");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadLeft((int) '4', (-1), ' ');
        java.lang.String str8 = strBuilder1.midString(116, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.append("StrTokenizer[not");
        java.util.stream.IntStream intStream11 = strBuilder10.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray14 = strBuilder13.toCharArray();
        boolean boolean15 = strBuilder10.equals((java.lang.Object) strBuilder13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = strBuilder10.substring(118);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(intStream11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test07848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07848");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean10 = strTokenizer9.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setDelimiterChar('a');
        int int13 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer9.setIgnoredChar(' ');
        java.lang.String[] strArray16 = strTokenizer15.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder0.appendWithSeparators((java.lang.Object[]) strArray16, "###");
        int int19 = strBuilder18.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray25 = strTokenizer24.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendAll((java.lang.Object[]) strArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder20.appendln(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("");
        int int42 = strBuilder38.indexOf("");
        int int45 = strBuilder38.lastIndexOf('#', (int) (byte) 0);
        boolean boolean47 = strBuilder38.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder38.appendAll((java.util.Iterator<java.lang.String>) strTokenizer48);
        boolean boolean50 = strTokenizer48.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer48.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setIgnoreEmptyTokens(false);
        boolean boolean55 = strBuilder20.equals((java.lang.Object) strTokenizer52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer52);
        // The following exception was thrown during execution in test generation
        try {
            char char58 = strBuilder18.charAt(158);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 158");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test07849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07849");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        char[] charArray18 = strBuilder14.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "");
        boolean boolean21 = strTokenizer20.hasNext();
        boolean boolean22 = strTokenizer20.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        char[] charArray28 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder23.appendAll((java.util.Iterator<java.lang.String>) strTokenizer32);
        boolean boolean34 = strTokenizer32.isIgnoreEmptyTokens();
        int int35 = strTokenizer32.nextIndex();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test07850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07850");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst(' ', '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.replace((int) '1', 93, "97true\n###################################a");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test07851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07851");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(" 4## ");
    }

    @Test
    public void test07852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07852");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("\n0", "java.io.IOException");
    }

    @Test
    public void test07853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07853");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        char char10 = strBuilder8.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendAll((java.lang.Object[]) strArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        char[] charArray26 = strBuilder22.toCharArray();
        char[] charArray27 = strBuilder19.getChars(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        char[] charArray29 = strBuilder11.getChars(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer32.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder8.append((java.lang.Object) strTokenizer32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.append('a');
        int int44 = strBuilder37.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strBuilder37.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray53 = strTokenizer52.getTokenArray();
        java.lang.String[] strArray54 = strTokenizer52.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.appendWithSeparators((java.lang.Object[]) strArray54, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteAll(strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.deleteAll('4');
        int int69 = strBuilder67.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst("", "");
        char[] charArray74 = strBuilder70.toCharArray();
        char[] charArray75 = strBuilder67.getChars(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74);
        char[] charArray77 = strBuilder61.getChars(charArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder37.insert((int) (byte) 0, charArray77);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray77);
        char[] charArray80 = strBuilder8.getChars(charArray77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, 'e', '4');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + char10 + "' != '" + '#' + "'", char10 == '#');
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[]");
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "#36.0StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "#36.0StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[#, 3, 6, ., 0, S, t, r, T, o, k, e, n, i, z, e, r, [, n, o, t,  , t, o, k, e, n, i, z, e, d,  , y, e, t, ]]");
    }

    @Test
    public void test07854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07854");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "");
        char[] charArray30 = strBuilder26.toCharArray();
        char[] charArray31 = strBuilder23.getChars(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        boolean boolean33 = strTokenizer32.hasPrevious();
        java.util.List<java.lang.String> strList34 = strTokenizer32.getTokenList();
        boolean boolean35 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer32.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.replaceAll(strMatcher36, "\n32.0java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder19.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder19.appendln((long) 81);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test07855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07855");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        char[] charArray18 = strBuilder14.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "");
        boolean boolean21 = strTokenizer20.hasNext();
        boolean boolean22 = strTokenizer20.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        char[] charArray28 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer30.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder23.appendAll((java.util.Iterator<java.lang.String>) strTokenizer32);
        java.io.Writer writer34 = strBuilder23.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder23.appendSeparator("java.io.IOException: java.io.IOException:", "io.IOException: hi!116\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("");
        int int42 = strBuilder38.indexOf("");
        int int45 = strBuilder38.lastIndexOf('#', (int) (byte) 0);
        boolean boolean47 = strBuilder38.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder38.appendAll((java.util.Iterator<java.lang.String>) strTokenizer48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder38.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder38.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        int int55 = strBuilder54.capacity();
        java.lang.StringBuffer stringBuffer56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder54.appendln(stringBuffer56, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder54.insert(1, (double) 32);
        java.util.Properties properties63 = new java.util.Properties();
        int int64 = properties63.size();
        boolean boolean66 = properties63.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst("", "");
        char[] charArray71 = strBuilder67.toCharArray();
        boolean boolean72 = properties63.containsValue((java.lang.Object) charArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder54.append(charArray71, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder54.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder38.append((java.lang.Object) true);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder38.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder38.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder37.appendln(strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder38.deleteAll('s');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder38.deleteAll("eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee4\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test07856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07856");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        java.lang.String str10 = strBuilder6.getNewLineText();
        java.util.stream.IntStream intStream11 = strBuilder6.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.append((java.lang.CharSequence) strBuilder6);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.setNewLineText("1");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendSeparator("\ntrue0.0\n", (int) (byte) 100);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(intStream11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test07857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07857");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("not tokenized yet]", "StrTokenizer[32.0]");
        int int3 = strTokenizer2.nextIndex();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream5 = strList4.stream();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray11 = strTokenizer10.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendAll((java.lang.Object[]) strArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendAll((java.lang.Object[]) strArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder6.appendln(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', '4');
        java.io.Writer writer36 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        char[] charArray48 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendln(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        writer36.write(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.append(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int56 = strBuilder28.indexOf(strMatcher54, 0);
        int int58 = strBuilder28.indexOf("1");
        boolean boolean59 = strList4.contains((java.lang.Object) strBuilder28);
        java.lang.String[] strArray61 = new java.lang.String[] { "#\n$" };
        java.lang.String[] strArray63 = new java.lang.String[] { "#\n$" };
        java.lang.String[] strArray65 = new java.lang.String[] { "#\n$" };
        java.lang.String[] strArray67 = new java.lang.String[] { "#\n$" };
        java.lang.String[] strArray69 = new java.lang.String[] { "#\n$" };
        java.lang.Comparable[][] comparableArray71 = new java.lang.Comparable[5][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][] strComparableArray72 = (java.lang.Comparable<java.lang.String>[][]) comparableArray71;
        strComparableArray72[0] = strArray61;
        strComparableArray72[1] = strArray63;
        strComparableArray72[2] = strArray65;
        strComparableArray72[3] = strArray67;
        strComparableArray72[4] = strArray69;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String>[][] strComparableArray83 = strList4.toArray(strComparableArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(comparableArray71);
        org.junit.Assert.assertNotNull(strComparableArray72);
    }

    @Test
    public void test07858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07858");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        java.io.Reader reader4 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        char[] charArray15 = strBuilder7.getChars(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean17 = strTokenizer16.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendln(charArray31);
        int int36 = strMatcher19.isMatch(charArray31, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer16.reset(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setQuoteChar('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder6.appendAll((java.util.Iterator<java.lang.String>) strTokenizer38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray48 = strTokenizer47.getTokenArray();
        java.lang.String[] strArray49 = strTokenizer47.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.appendWithSeparators((java.lang.Object[]) strArray49, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteAll(strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray62 = strTokenizer61.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendAll((java.lang.Object[]) strArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder57.replaceFirst('a', 'a');
        char[] charArray71 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray71, ' ');
        int int74 = strTokenizer73.size();
        boolean boolean75 = strTokenizer73.hasNext();
        java.util.List<java.lang.String> strList76 = strTokenizer73.getTokenList();
        java.lang.String[] strArray80 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        boolean boolean83 = strList76.addAll((java.util.Collection<java.lang.String>) strList81);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder57.appendAll((java.lang.Iterable<java.lang.String>) strList81);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder51.appendAll((java.lang.Iterable<java.lang.String>) strList81);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder41.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList81, "4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean90 = strTokenizer89.hasNext();
        java.lang.String[] strArray91 = strTokenizer89.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = strTokenizer89.getDelimiterMatcher();
        int int93 = strList81.indexOf((java.lang.Object) strMatcher92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList96 = strList81.subList(98, 16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 16");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
    }

    @Test
    public void test07859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07859");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        properties0.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.append('a');
        int int25 = strBuilder18.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        int int27 = strBuilder26.capacity();
        java.lang.StringBuffer stringBuffer28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.appendln(stringBuffer28, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder26.insert(1, (double) 32);
        boolean boolean35 = strBuilder26.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder26.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder26.clear();
        int int38 = strBuilder37.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder18.append(strBuilder37);
        java.io.Writer writer40 = strBuilder37.asWriter();
        properties0.store(writer40, "[\n32.0, , , StrTokenizer[]]");
        writer40.flush();
        java.io.Writer writer45 = writer40.append('g');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 32 + "'", int38 == 32);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(writer40);
        org.junit.Assert.assertNotNull(writer45);
    }

    @Test
    public void test07860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07860");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        java.io.Reader reader4 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst(' ', '4');
        java.io.Reader reader10 = strBuilder9.asReader();
        boolean boolean11 = reader10.ready();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test07861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07861");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        int int3 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendln(stringBuffer4, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.insert(1, (double) 32);
        java.util.Properties properties11 = new java.util.Properties();
        int int12 = properties11.size();
        boolean boolean14 = properties11.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        boolean boolean20 = properties11.containsValue((java.lang.Object) charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder2.append(charArray19, (int) (byte) 0, 0);
        boolean boolean24 = properties0.equals((java.lang.Object) 0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet26 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        int int28 = strBuilder27.capacity();
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(stringBuffer29, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder27.appendSeparator("java.io.IOException: hi!");
        java.lang.Throwable throwable39 = null;
        java.io.IOException iOException40 = new java.io.IOException("{}", throwable39);
        java.lang.Throwable[] throwableArray41 = iOException40.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder37.appendAll((java.lang.Object[]) throwableArray41);
        java.io.Reader reader43 = strBuilder37.asReader();
        properties0.load(reader43);
        reader43.close();
        java.nio.CharBuffer charBuffer46 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int47 = reader43.read(charBuffer46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32 + "'", int3 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 32 + "'", int28 == 32);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(reader43);
    }

    @Test
    public void test07862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07862");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.deleteAll(strMatcher22);
        boolean boolean24 = strBuilder10.equalsIgnoreCase(strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.appendSeparator(" #\n", (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder18.insert((int) (short) 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        int int32 = strBuilder31.capacity();
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(stringBuffer33, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.insert(1, (double) 32);
        boolean boolean40 = strBuilder31.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder31.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder31.clear();
        int int43 = strBuilder42.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader51 = strBuilder47.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder42.appendln(strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder42.replaceFirst("\n32.0", "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder30.appendln(strBuilder55);
        int int58 = strBuilder55.lastIndexOf('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.append("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000true\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.delete(53, (int) 'e');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test07863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07863");
        java.io.IOException iOException2 = new java.io.IOException();
        java.lang.Throwable[] throwableArray3 = iOException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = iOException2.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException("########", (java.lang.Throwable) iOException2);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException("#\ntrue\n", (java.lang.Throwable) iOException2);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test07864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07864");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        int int43 = strBuilder3.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder3.appendFixedWidthPadLeft(48, 9, 'a');
        int int48 = strBuilder3.capacity();
        java.util.Properties properties49 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray56 = strTokenizer55.getTokenArray();
        java.lang.String[] strArray57 = strTokenizer55.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendWithSeparators((java.lang.Object[]) strArray57, "4#4");
        char[] charArray62 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray62);
        java.lang.Object obj64 = properties49.getOrDefault((java.lang.Object) strBuilder53, (java.lang.Object) strTokenizer63);
        int int65 = properties49.size();
        int int66 = properties49.size();
        java.io.IOException iOException67 = new java.io.IOException();
        java.lang.Throwable[] throwableArray68 = iOException67.getSuppressed();
        boolean boolean69 = properties49.equals((java.lang.Object) iOException67);
        java.lang.Throwable[] throwableArray70 = iOException67.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder3.appendWithSeparators((java.lang.Object[]) throwableArray70, "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0000.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder3.replaceAll("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000", "\n#####");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder3.deleteFirst("36.0\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 32 + "'", int48 == 32);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test07865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07865");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        java.lang.String str4 = strBuilder0.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendln((float) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.setNullText(" ");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray14 = strTokenizer13.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.appendAll((java.lang.Object[]) strArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceAll("", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder8.append(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test07866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07866");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("####\000\000\000\000\000\000\000\000\000\000", "h");
        java.util.List<java.lang.String> strList3 = strTokenizer2.getTokenList();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList6 = strList3.subList(0, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList3);
    }

    @Test
    public void test07867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07867");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.setNullText("");
        java.lang.Object obj33 = properties0.get((java.lang.Object) strBuilder32);
        java.util.Properties properties34 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray41 = strTokenizer40.getTokenArray();
        java.lang.String[] strArray42 = strTokenizer40.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.appendWithSeparators((java.lang.Object[]) strArray42, "4#4");
        char[] charArray47 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray47);
        java.lang.Object obj49 = properties34.getOrDefault((java.lang.Object) strBuilder38, (java.lang.Object) strTokenizer48);
        int int50 = properties34.size();
        int int51 = properties34.size();
        java.util.Set<java.lang.String> strSet52 = properties34.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder32.appendAll((java.lang.Iterable<java.lang.String>) strSet52);
        int int54 = strBuilder53.length();
        java.util.stream.IntStream intStream55 = strBuilder53.chars();
        java.lang.String str57 = strBuilder53.rightString(44);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendNull();
        java.io.Writer writer59 = strBuilder58.asWriter();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(intStream55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\n" + "'", str57, "\n");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(writer59);
    }

    @Test
    public void test07868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07868");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: l", '2', 'o');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.add("StrTokenizer[java.io.IOException]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07869");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        java.util.Properties properties19 = new java.util.Properties();
        int int20 = properties19.size();
        boolean boolean22 = properties19.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties23 = new java.util.Properties();
        int int24 = properties23.size();
        boolean boolean26 = properties23.containsKey((java.lang.Object) (-1.0f));
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.lang.String str29 = properties23.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration30 = properties23.propertyNames();
        int int31 = properties23.size();
        java.util.Properties properties33 = new java.util.Properties();
        int int34 = properties33.size();
        boolean boolean36 = properties33.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        boolean boolean42 = strBuilder40.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln('#');
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.append(stringBuffer51, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.deleteFirst("hi!");
        char[] charArray57 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer44.reset(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        char[] charArray60 = strBuilder40.getChars(charArray57);
        java.lang.Object obj61 = properties33.remove((java.lang.Object) charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray60);
        java.lang.Object obj63 = properties23.put((java.lang.Object) 74, (java.lang.Object) charArray60);
        char[] charArray64 = strBuilder18.getChars(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray64);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, \n]");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer65);
    }

    @Test
    public void test07870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07870");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        java.io.Writer writer7 = strBuilder6.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendln(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray19);
        writer7.write(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4', '$');
        int int26 = strTokenizer25.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer25.reset("StrTokenizer[]");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer25.getIgnoredMatcher();
        int int31 = strTokenizer25.size();
        java.util.List<java.lang.String> strList32 = strTokenizer25.getTokenList();
        java.lang.String str33 = strTokenizer25.previousToken();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(writer7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test07871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07871");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        java.lang.String str34 = strBuilder24.rightString((int) ' ');
        boolean boolean36 = strBuilder24.startsWith("");
        char[] charArray37 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.insert((int) (short) 0, charArray37);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        java.util.Set<java.lang.Object> objSet41 = properties39.keySet();
        java.util.Properties properties42 = new java.util.Properties(properties39);
        java.lang.String str43 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strBuilder22, properties42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray50 = strTokenizer49.getTokenArray();
        java.lang.String[] strArray51 = strTokenizer49.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendWithSeparators((java.lang.Object[]) strArray51, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder47.delete(0, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder47.appendSeparator("1", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder47.append((double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder22.appendln(strBuilder47);
        boolean boolean64 = strBuilder47.startsWith("true\n");
        boolean boolean66 = strBuilder47.startsWith("true\n###################################3\n");
        int int67 = strBuilder47.length();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n32.0" + "'", str34, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n32.0a" + "'", str43, "\n32.0a");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 7 + "'", int67 == 7);
    }

    @Test
    public void test07872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07872");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("#\nfalse\n", 'e');
        java.lang.String str3 = strTokenizer2.getContent();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "#\nfalse\n" + "'", str3, "#\nfalse\n");
    }

    @Test
    public void test07873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07873");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Set<java.lang.String> strSet17 = properties0.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        properties0.clear();
        java.util.Properties properties20 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.append('a');
        int int30 = strBuilder23.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln((double) '#');
        boolean boolean46 = strBuilder36.equals(strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.ensureCapacity((int) (byte) 1);
        boolean boolean50 = strBuilder48.startsWith("10.0StrTokenizer[ 4#4]\n10.0\n");
        boolean boolean51 = properties20.remove((java.lang.Object) 'a', (java.lang.Object) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.setNullText("");
        char[] charArray58 = strBuilder57.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.insert(0, true);
        char[] charArray62 = strBuilder57.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("a4", strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray68 = strTokenizer67.getTokenArray();
        java.lang.String[] strArray69 = strTokenizer67.getTokenArray();
        boolean boolean70 = strTokenizer67.hasNext();
        int int71 = strTokenizer67.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer67.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer67.setQuoteChar('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer74.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher64, strMatcher75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, 'e', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder48.appendAll((java.util.Iterator<java.lang.String>) strTokenizer79);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "true");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "true");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[t, r, u, e]");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test07874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07874");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.insert(1, (double) 32);
        java.lang.String str39 = strBuilder29.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.insert(1, '#');
        boolean boolean43 = strList28.equals((java.lang.Object) strBuilder29);
        boolean boolean44 = strList9.containsAll((java.util.Collection<java.lang.String>) strList28);
        java.lang.String str46 = strList9.remove((int) (short) 0);
        java.util.Iterator<java.lang.String> strItor47 = strList9.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = strList9.remove((int) '9');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 57, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n32.0" + "'", str39, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4#4" + "'", str46, "4#4");
        org.junit.Assert.assertNotNull(strItor47);
    }

    @Test
    public void test07875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07875");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        int int5 = strBuilder1.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceFirst('$', 't');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("zed yet]\n", '#');
        java.lang.String str12 = strTokenizer11.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendAll((java.util.Iterator<java.lang.String>) strTokenizer11);
        int int14 = strBuilder13.capacity();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "zed yet]\n" + "'", str12, "zed yet]\n");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test07876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07876");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.insert((int) (short) 0, (long) (byte) -1);
        java.lang.StringBuffer stringBuffer15 = strBuilder11.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.insert(0, "\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("32.0", "#");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(stringBuffer15);
        org.junit.Assert.assertEquals(stringBuffer15.toString(), "-132.0");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test07877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07877");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendAll((java.lang.Object[]) strArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.replaceFirst('a', 'a');
        char[] charArray26 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        int int29 = strTokenizer28.size();
        boolean boolean30 = strTokenizer28.hasNext();
        java.util.List<java.lang.String> strList31 = strTokenizer28.getTokenList();
        java.lang.String[] strArray35 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        boolean boolean38 = strList31.addAll((java.util.Collection<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder12.appendAll((java.lang.Iterable<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor40 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        int int42 = strBuilder41.capacity();
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(stringBuffer43, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln(true);
        boolean boolean53 = strSubstitutor40.replaceIn(strBuilder50, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder12.append((java.lang.CharSequence) strBuilder50);
        boolean boolean55 = properties4.equals((java.lang.Object) strBuilder12);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties4.keys();
        java.util.Set<java.lang.Object> objSet57 = properties4.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties4.elements();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor59 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        int int61 = strBuilder60.capacity();
        java.lang.StringBuffer stringBuffer62 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder60.appendln(stringBuffer62, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder60.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.appendln(true);
        boolean boolean72 = strSubstitutor59.replaceIn(strBuilder69, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceFirst("", "");
        java.lang.String str83 = strBuilder79.getNewLineText();
        java.util.stream.IntStream intStream84 = strBuilder79.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder76.append((java.lang.CharSequence) strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder76.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder76.appendFixedWidthPadLeft((int) (byte) 1, 32, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder69.appendln(strBuilder76);
        char[] charArray93 = strBuilder69.toCharArray();
        boolean boolean94 = properties4.contains((java.lang.Object) strBuilder69);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 32 + "'", int42 == 32);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 32 + "'", int61 == 32);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(intStream84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "\ntrue\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$1\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "\ntrue\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$1\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[\n, t, r, u, e, \nn]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test07878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07878");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray19 = strTokenizer18.getTokenArray();
        java.lang.String[] strArray20 = strTokenizer18.getTokenArray();
        boolean boolean21 = strTokenizer18.hasNext();
        int int22 = strTokenizer18.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strTokenizer18.getQuoteMatcher();
        java.util.List<java.lang.String> strList24 = strTokenizer18.getTokenList();
        boolean boolean25 = strList9.retainAll((java.util.Collection<java.lang.String>) strList24);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader36 = strBuilder32.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray42 = strTokenizer41.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendAll((java.lang.Object[]) strArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder37.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream47 = strBuilder37.codePoints();
        java.lang.Object obj48 = properties27.replace((java.lang.Object) reader36, (java.lang.Object) intStream47);
        reader36.reset();
        properties26.load(reader36);
        int int51 = strList9.indexOf((java.lang.Object) properties26);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer57.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder52.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer57, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer57.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setEmptyTokenAsNull(true);
        java.util.List<java.lang.String> strList65 = strTokenizer62.getTokenList();
        boolean boolean66 = strList9.retainAll((java.util.Collection<java.lang.String>) strList65);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder69.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.setNullText("");
        char[] charArray73 = strBuilder72.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendNull();
        int int75 = strList65.lastIndexOf((java.lang.Object) strBuilder72);
        java.util.Spliterator<java.lang.String> strSpliterator76 = strList65.spliterator();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator76);
    }

    @Test
    public void test07879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07879");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Properties properties10 = new java.util.Properties();
        int int11 = properties10.size();
        java.lang.Throwable throwable13 = null;
        java.io.IOException iOException14 = new java.io.IOException("\n32.0", throwable13);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException14);
        char[] charArray18 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln('#');
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.append(stringBuffer30, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.deleteFirst("hi!");
        char[] charArray36 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer23.reset(charArray36);
        boolean boolean38 = properties10.replace((java.lang.Object) iOException14, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer23);
        int int39 = properties10.size();
        int int40 = properties10.size();
        java.util.Set<java.lang.Object> objSet41 = properties10.keySet();
        java.lang.String str42 = properties10.toString();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "{}" + "'", str42, "{}");
    }

    @Test
    public void test07880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07880");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        char[] charArray28 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        int int31 = strTokenizer30.size();
        boolean boolean32 = strTokenizer30.hasNext();
        java.util.List<java.lang.String> strList33 = strTokenizer30.getTokenList();
        java.lang.String[] strArray37 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        boolean boolean40 = strList33.addAll((java.util.Collection<java.lang.String>) strList38);
        char[] charArray45 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        int int48 = strTokenizer47.size();
        boolean boolean49 = strTokenizer47.hasNext();
        java.util.List<java.lang.String> strList50 = strTokenizer47.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "");
        char[] charArray55 = strBuilder51.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        boolean boolean59 = strList50.equals((java.lang.Object) charArray55);
        char[] charArray64 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, ' ');
        int int67 = strTokenizer66.size();
        boolean boolean68 = strTokenizer66.hasNext();
        java.util.List<java.lang.String> strList69 = strTokenizer66.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        int int71 = strBuilder70.capacity();
        java.lang.StringBuffer stringBuffer72 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.appendln(stringBuffer72, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder70.insert(1, (double) 32);
        java.lang.String str80 = strBuilder70.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder70.insert(1, '#');
        boolean boolean84 = strList69.equals((java.lang.Object) strBuilder70);
        boolean boolean85 = strList50.containsAll((java.util.Collection<java.lang.String>) strList69);
        boolean boolean86 = strList33.addAll((java.util.Collection<java.lang.String>) strList69);
        boolean boolean87 = strList23.removeAll((java.util.Collection<java.lang.String>) strList33);
        int int88 = strList23.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", '$', 'e');
        int int93 = strList23.indexOf((java.lang.Object) 'e');
        java.util.stream.Stream<java.lang.String> strStream94 = strList23.stream();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 32 + "'", int71 == 32);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "\n32.0" + "'", str80, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(strStream94);
    }

    @Test
    public void test07881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07881");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("\n32.0", throwable2);
        java.lang.Throwable throwable6 = null;
        java.io.IOException iOException7 = new java.io.IOException("{}", throwable6);
        java.lang.Throwable[] throwableArray8 = iOException7.getSuppressed();
        java.io.IOException iOException9 = new java.io.IOException("\n", (java.lang.Throwable) iOException7);
        iOException3.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException("StrTokenizer[java.io.IOException]", (java.lang.Throwable) iOException9);
        java.io.IOException iOException13 = new java.io.IOException("hi!");
        java.io.IOException iOException15 = new java.io.IOException("hi!");
        iOException13.addSuppressed((java.lang.Throwable) iOException15);
        java.io.IOException iOException18 = new java.io.IOException("hi!");
        java.io.IOException iOException20 = new java.io.IOException("hi!");
        iOException18.addSuppressed((java.lang.Throwable) iOException20);
        iOException15.addSuppressed((java.lang.Throwable) iOException20);
        java.io.IOException iOException24 = new java.io.IOException("hi!");
        iOException15.addSuppressed((java.lang.Throwable) iOException24);
        java.util.Properties properties26 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray33 = strTokenizer32.getTokenArray();
        java.lang.String[] strArray34 = strTokenizer32.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendWithSeparators((java.lang.Object[]) strArray34, "4#4");
        char[] charArray39 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray39);
        java.lang.Object obj41 = properties26.getOrDefault((java.lang.Object) strBuilder30, (java.lang.Object) strTokenizer40);
        int int42 = properties26.size();
        int int43 = properties26.size();
        java.io.IOException iOException44 = new java.io.IOException();
        java.lang.Throwable[] throwableArray45 = iOException44.getSuppressed();
        boolean boolean46 = properties26.equals((java.lang.Object) iOException44);
        java.io.IOException iOException47 = new java.io.IOException((java.lang.Throwable) iOException44);
        java.io.IOException iOException48 = new java.io.IOException((java.lang.Throwable) iOException44);
        java.io.IOException iOException51 = new java.io.IOException("hi!");
        java.io.IOException iOException53 = new java.io.IOException("hi!");
        iOException51.addSuppressed((java.lang.Throwable) iOException53);
        java.io.IOException iOException55 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException53);
        java.lang.Throwable throwable58 = null;
        java.io.IOException iOException59 = new java.io.IOException("{}", throwable58);
        java.lang.Throwable[] throwableArray60 = iOException59.getSuppressed();
        java.io.IOException iOException61 = new java.io.IOException("\n", (java.lang.Throwable) iOException59);
        iOException55.addSuppressed((java.lang.Throwable) iOException59);
        java.io.IOException iOException63 = new java.io.IOException((java.lang.Throwable) iOException59);
        java.lang.Throwable throwable65 = null;
        java.io.IOException iOException66 = new java.io.IOException("\n32.0", throwable65);
        java.io.IOException iOException67 = new java.io.IOException((java.lang.Throwable) iOException66);
        java.util.Properties properties68 = new java.util.Properties();
        int int69 = properties68.size();
        boolean boolean71 = properties68.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties72 = new java.util.Properties();
        int int73 = properties72.size();
        boolean boolean75 = properties72.containsKey((java.lang.Object) (-1.0f));
        properties68.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        java.lang.String str78 = properties72.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration79 = properties72.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet80 = properties72.entrySet();
        java.io.IOException iOException81 = new java.io.IOException();
        java.lang.Throwable[] throwableArray82 = iOException81.getSuppressed();
        java.lang.Throwable[] throwableArray83 = iOException81.getSuppressed();
        java.io.IOException iOException84 = new java.io.IOException((java.lang.Throwable) iOException81);
        boolean boolean85 = properties72.containsValue((java.lang.Object) iOException84);
        iOException67.addSuppressed((java.lang.Throwable) iOException84);
        iOException63.addSuppressed((java.lang.Throwable) iOException67);
        iOException44.addSuppressed((java.lang.Throwable) iOException67);
        iOException15.addSuppressed((java.lang.Throwable) iOException44);
        iOException11.addSuppressed((java.lang.Throwable) iOException15);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(wildcardEnumeration79);
        org.junit.Assert.assertNotNull(objEntrySet80);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test07882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07882");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray2 = strTokenizer1.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setIgnoredChar('$');
        java.lang.String str5 = strTokenizer1.previousToken();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test07883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07883");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader7 = strBuilder3.asReader();
        long long9 = reader7.skip((long) '#');
        reader7.mark((int) (short) 10);
        reader7.mark(3);
        boolean boolean14 = reader7.ready();
        int int15 = reader7.read();
        reader7.mark((int) (byte) -1);
        reader7.close();
        java.lang.String str19 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) reader7);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test07884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07884");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader7 = strBuilder3.asReader();
        long long9 = reader7.skip((long) '#');
        reader7.mark((int) (short) 10);
        reader7.mark(3);
        long long15 = reader7.skip((long) (byte) 1);
        reader7.reset();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    }

    @Test
    public void test07885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07885");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.String> strSet2 = properties0.stringPropertyNames();
        java.util.Properties properties3 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray10 = strTokenizer9.getTokenArray();
        java.lang.String[] strArray11 = strTokenizer9.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendWithSeparators((java.lang.Object[]) strArray11, "4#4");
        char[] charArray16 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray16);
        java.lang.Object obj18 = properties3.getOrDefault((java.lang.Object) strBuilder7, (java.lang.Object) strTokenizer17);
        java.util.Collection<java.lang.Object> objCollection19 = properties3.values();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder24.appendFixedWidthPadRight((java.lang.Object) strBuilder33, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int38 = strBuilder24.lastIndexOf(strMatcher37);
        char[] charArray43 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        int int46 = strTokenizer45.size();
        boolean boolean47 = strTokenizer45.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer45.setIgnoredMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder24.deleteFirst(strMatcher48);
        java.lang.Object obj51 = properties3.getOrDefault((java.lang.Object) strTokenizer23, (java.lang.Object) strBuilder50);
        java.util.Collection<java.lang.Object> objCollection52 = properties3.values();
        java.lang.String str53 = properties3.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln((double) '#');
        boolean boolean69 = strBuilder59.equals(strBuilder68);
        java.util.stream.IntStream intStream70 = strBuilder59.codePoints();
        java.util.Iterator<java.lang.String> strItor71 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder59.appendWithSeparators(strItor71, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst(' ', ' ');
        int int78 = strBuilder76.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.insert((int) '$', '$');
        java.lang.Class<?> wildcardClass82 = strBuilder81.getClass();
        boolean boolean83 = properties3.equals((java.lang.Object) strBuilder81);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties0.elements();
        java.io.OutputStream outputStream86 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream86, "a4");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "");
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "{}" + "'", str53, "{}");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(intStream70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objEnumeration85);
    }

    @Test
    public void test07886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07886");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("StrTokenizer[]");
        int int16 = strBuilder12.indexOf(" 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln((double) '#');
        boolean boolean32 = strBuilder22.equals(strBuilder31);
        java.util.stream.IntStream intStream33 = strBuilder22.codePoints();
        java.util.Iterator<java.lang.String> strItor34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder22.appendWithSeparators(strItor34, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "");
        char[] charArray47 = strBuilder43.toCharArray();
        char[] charArray48 = strBuilder40.getChars(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        boolean boolean50 = strTokenizer49.hasPrevious();
        java.util.List<java.lang.String> strList51 = strTokenizer49.getTokenList();
        boolean boolean52 = strTokenizer49.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer49.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder36.replaceAll(strMatcher53, "\n32.0java.io.IOException: hi!");
        boolean boolean56 = strBuilder12.equals(strBuilder55);
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder12.appendln(stringBuffer57, 62, (int) '2');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test07887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07887");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('a', '4');
        java.io.Writer writer34 = strBuilder33.asWriter();
        properties26.store(writer34, "");
        java.util.Properties properties37 = new java.util.Properties();
        int int38 = properties37.size();
        boolean boolean40 = properties37.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties41 = new java.util.Properties();
        int int42 = properties41.size();
        boolean boolean44 = properties41.containsKey((java.lang.Object) (-1.0f));
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.keys();
        boolean boolean47 = properties26.containsValue((java.lang.Object) objEnumeration46);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Collection<java.lang.Object> objCollection49 = properties26.values();
        java.util.Properties properties50 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray57 = strTokenizer56.getTokenArray();
        java.lang.String[] strArray58 = strTokenizer56.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendWithSeparators((java.lang.Object[]) strArray58, "4#4");
        char[] charArray63 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray63);
        java.lang.Object obj65 = properties50.getOrDefault((java.lang.Object) strBuilder54, (java.lang.Object) strTokenizer64);
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        boolean boolean70 = properties26.containsKey((java.lang.Object) strTokenizer68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder79.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.setNullText("");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder80.replaceAll(strMatcher84, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder76.replaceFirst(strMatcher84, "########a4\n");
        boolean boolean89 = properties26.equals((java.lang.Object) strMatcher84);
        java.util.Set<java.lang.Object> objSet90 = properties26.keySet();
        boolean boolean91 = properties26.isEmpty();
        java.io.OutputStream outputStream92 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.store(outputStream92, "[ 4#4]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objSet90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test07888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07888");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll('4');
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        char[] charArray11 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        int int14 = strTokenizer13.size();
        boolean boolean15 = strTokenizer13.hasNext();
        java.util.List<java.lang.String> strList16 = strTokenizer13.getTokenList();
        java.lang.String[] strArray20 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        boolean boolean23 = strList16.addAll((java.util.Collection<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        java.lang.String[] strArray27 = strTokenizer25.getTokenArray();
        boolean boolean28 = strTokenizer25.hasNext();
        int int29 = strTokenizer25.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer25.getQuoteMatcher();
        java.util.List<java.lang.String> strList31 = strTokenizer25.getTokenList();
        boolean boolean32 = strList16.retainAll((java.util.Collection<java.lang.String>) strList31);
        strList16.clear();
        java.lang.Object obj34 = properties5.remove((java.lang.Object) strList16);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList16);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder35.clear();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test07889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07889");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties0.entrySet();
        boolean boolean5 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(objEnumeration6);
    }

    @Test
    public void test07890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07890");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append((float) '$');
        char char27 = strBuilder25.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder25.setNewLineText("\n32.0java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "");
        char[] charArray37 = strBuilder33.toCharArray();
        char[] charArray38 = strBuilder30.getChars(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        char[] charArray40 = strBuilder29.getChars(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer15.reset(charArray37);
        boolean boolean42 = strTokenizer41.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer41.setDelimiterString("#\n$");
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + char27 + "' != '" + '#' + "'", char27 == '#');
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[]");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#36.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#36.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, 3, 6, ., 0]");
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strTokenizer44);
    }

    @Test
    public void test07891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07891");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        boolean boolean3 = strTokenizer2.hasNext();
        boolean boolean4 = strTokenizer2.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setQuoteChar('4');
        boolean boolean7 = strTokenizer6.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer6.set("StrTokenizer[#]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test07892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07892");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean10 = strTokenizer9.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.setDelimiterChar('a');
        int int13 = strTokenizer9.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer9.setIgnoredChar(' ');
        java.lang.String[] strArray16 = strTokenizer15.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder0.appendWithSeparators((java.lang.Object[]) strArray16, "###");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.delete((int) (short) 0, 53);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray27 = strTokenizer26.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendAll((java.lang.Object[]) strArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder22.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray37 = strTokenizer36.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.appendAll((java.lang.Object[]) strArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder22.appendln(strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst('a', '4');
        java.io.Writer writer52 = strBuilder51.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst("", "");
        char[] charArray64 = strBuilder60.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.appendln(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray64);
        writer52.write(charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder44.append(charArray64);
        int int70 = strBuilder68.lastIndexOf("1");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder21.append(strBuilder68);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.replaceAll("\n-1.0", "#36.0");
        java.lang.StringBuffer stringBuffer75 = strBuilder74.toStringBuffer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(writer52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(stringBuffer75);
        org.junit.Assert.assertEquals(stringBuffer75.toString(), "97\nhi!");
    }

    @Test
    public void test07893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07893");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setQuoteChar('3');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = strTokenizer4.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test07894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07894");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException:  ", '4');
    }

    @Test
    public void test07895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07895");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendSeparator("java.io.IOException: hi!false", 116);
        java.lang.String str18 = strBuilder17.getNullText();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.deleteCharAt((int) '3');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test07896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07896");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln((float) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.appendFixedWidthPadLeft((int) (short) -1, (int) ' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder12.appendln(1);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.insert((int) '\000', 25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder12.appendln("\n32.0 ");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln((double) '#');
        boolean boolean43 = strBuilder33.equals(strBuilder42);
        java.util.stream.IntStream intStream44 = strBuilder33.codePoints();
        java.util.Iterator<java.lang.String> strItor45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder33.appendWithSeparators(strItor45, " 4#4");
        boolean boolean49 = strBuilder47.contains('a');
        int int50 = strBuilder47.capacity();
        int int51 = strBuilder47.length();
        boolean boolean52 = strBuilder12.equalsIgnoreCase(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 80 + "'", int50 == 80);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 40 + "'", int51 == 40);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test07897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07897");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        int int2 = strBuilder1.capacity();
        java.lang.StringBuffer stringBuffer3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln(stringBuffer3, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        boolean boolean13 = strSubstitutor0.replaceIn(strBuilder10, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        int int15 = strBuilder14.capacity();
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(stringBuffer16, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int21 = strBuilder19.lastIndexOf(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (short) 1, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll("java.io.IOException: hi!");
        boolean boolean27 = strSubstitutor0.replaceIn(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.insert(1, (double) 32);
        boolean boolean37 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.clear();
        int int40 = strBuilder39.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder24.append(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteAll("true\n###################################");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln(true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 32 + "'", int2 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test07898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07898");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        int int5 = strBuilder3.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        java.lang.String[] strArray22 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendWithSeparators((java.lang.Object[]) strArray22, "4#4");
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader34 = strBuilder30.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray40 = strTokenizer39.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendAll((java.lang.Object[]) strArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder35.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream45 = strBuilder35.codePoints();
        java.lang.Object obj46 = properties25.replace((java.lang.Object) reader34, (java.lang.Object) intStream45);
        long long48 = reader34.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray54 = strTokenizer53.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendAll((java.lang.Object[]) strArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder49.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream59 = strBuilder49.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst("", "");
        char[] charArray64 = strBuilder60.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder49.appendln(charArray64);
        int int68 = reader34.read(charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder18.append(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder14.appendln(charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder3.append(charArray64);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(intStream45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(intStream59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test07899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07899");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("\ntrue\n52.0", 't');
        int int3 = strTokenizer2.previousIndex();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test07900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07900");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator('a', ' ');
        int int13 = strBuilder0.capacity();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.insert(101, (double) 57);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 101");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
    }

    @Test
    public void test07901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07901");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray20 = strTokenizer19.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendAll((java.lang.Object[]) strArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.replaceFirst('a', 'a');
        char[] charArray29 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        int int32 = strTokenizer31.size();
        boolean boolean33 = strTokenizer31.hasNext();
        java.util.List<java.lang.String> strList34 = strTokenizer31.getTokenList();
        java.lang.String[] strArray38 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        boolean boolean41 = strList34.addAll((java.util.Collection<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder15.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder9.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append(10.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln(" \000\000\000\000\000\000\000\000\000aaaaaaaaaaaaStrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder43.replaceFirst('1', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendln("50\nttt");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.replaceAll('a', 'a');
        java.util.stream.IntStream intStream56 = strBuilder50.chars();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(intStream56);
    }

    @Test
    public void test07902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07902");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write((int) (byte) 1);
        java.io.Writer writer15 = writer11.append('1');
        writer11.write(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertNotNull(writer15);
    }

    @Test
    public void test07903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07903");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer5, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer5.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setEmptyTokenAsNull(true);
        java.lang.String str13 = strTokenizer10.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("#\nfalse\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer10.setTrimmerMatcher(strMatcher16);
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader27 = strBuilder23.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray33 = strTokenizer32.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.appendAll((java.lang.Object[]) strArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder28.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream38 = strBuilder28.codePoints();
        java.lang.Object obj39 = properties18.replace((java.lang.Object) reader27, (java.lang.Object) intStream38);
        reader27.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        char[] charArray52 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendln(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray52);
        int int55 = reader27.read(charArray52);
        boolean boolean56 = reader27.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst("", "");
        char[] charArray61 = strBuilder57.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray61);
        int int65 = reader27.read(charArray61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int68 = strMatcher16.isMatch(charArray61, 116);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "32.0" + "'", str13, "32.0");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(intStream38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strTokenizer66);
    }

    @Test
    public void test07904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07904");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst('4', 'a');
        boolean boolean46 = properties0.remove((java.lang.Object) strBuilder33, (java.lang.Object) '4');
        java.lang.Object obj47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder33.appendFixedWidthPadRight(obj47, (int) 'a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator('a', 49);
        java.lang.Object[] objArray56 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendWithSeparators(objArray56, "35.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("");
        int int65 = strBuilder61.indexOf("");
        int int68 = strBuilder61.lastIndexOf('#', (int) (byte) 0);
        boolean boolean70 = strBuilder61.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder61.appendAll((java.util.Iterator<java.lang.String>) strTokenizer71);
        boolean boolean73 = strTokenizer71.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer71.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder60.deleteAll(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test07905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07905");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.deleteAll('4');
        int int15 = strBuilder13.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        char[] charArray20 = strBuilder16.toCharArray();
        char[] charArray21 = strBuilder13.getChars(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder5.appendln(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer28, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer28.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder5.deleteFirst(strMatcher36);
        boolean boolean39 = strBuilder5.contains('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "");
        boolean boolean45 = strBuilder43.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln('#');
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.append(stringBuffer54, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.deleteFirst("hi!");
        char[] charArray60 = strBuilder51.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer47.reset(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray60);
        char[] charArray63 = strBuilder43.getChars(charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder5.appendln(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, '9');
        boolean boolean67 = strTokenizer66.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, \n]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test07906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07906");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, '4');
    }

    @Test
    public void test07907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07907");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        boolean boolean10 = strTokenizer9.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        char[] charArray24 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln(charArray24);
        int int29 = strMatcher12.isMatch(charArray24, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer9.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        int int33 = strTokenizer32.nextIndex();
        boolean boolean34 = strTokenizer32.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test07908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07908");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln('#');
        java.lang.StringBuffer stringBuffer9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.append(stringBuffer9, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.deleteFirst("hi!");
        char[] charArray15 = strBuilder6.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer2.reset(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer16.reset();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("\n32.0", strMatcher18, strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendPadding(10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer34, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer34.reset("\n32.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer34.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder28.appendFixedWidthPadRight((java.lang.Object) strTokenizer34, 4, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        int int45 = strBuilder44.capacity();
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln(stringBuffer46, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder44.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.append((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray66 = strTokenizer65.getTokenArray();
        java.lang.String[] strArray67 = strTokenizer65.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder63.appendWithSeparators((java.lang.Object[]) strArray67, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteAll(strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder75.deleteAll('4');
        int int82 = strBuilder80.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.replaceFirst("", "");
        char[] charArray87 = strBuilder83.toCharArray();
        char[] charArray88 = strBuilder80.getChars(charArray87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer(charArray87);
        char[] charArray90 = strBuilder74.getChars(charArray87);
        char[] charArray91 = strBuilder57.getChars(charArray90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer34.reset(charArray90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer(charArray90, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = strTokenizer21.reset(charArray90);
        boolean boolean97 = strTokenizer96.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 32 + "'", int45 == 32);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[]");
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "false");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "false");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[f, a, l, s, e]");
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "32.01#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "32.01#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[3, 2, ., 0, 1, #]");
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strTokenizer96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test07909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07909");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendln(charArray19);
        int int24 = strMatcher7.isMatch(charArray19, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher5, strMatcher7);
        boolean boolean26 = strTokenizer25.isIgnoreEmptyTokens();
        int int27 = strTokenizer25.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer25.add("35.0\n100.0");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test07910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07910");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.util.Set<java.lang.Object> objSet25 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append('a');
        int int34 = strBuilder27.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        int int36 = strBuilder35.capacity();
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendln(stringBuffer37, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.insert(1, (double) 32);
        boolean boolean44 = strBuilder35.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder35.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.clear();
        int int47 = strBuilder46.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder27.append(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.setNullText("");
        java.lang.Object obj55 = properties0.getOrDefault((java.lang.Object) strBuilder46, (java.lang.Object) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.replaceFirst("", "");
        char[] charArray63 = strBuilder59.toCharArray();
        char[] charArray64 = strBuilder56.getChars(charArray63);
        java.io.Reader reader65 = strBuilder56.asReader();
        boolean boolean66 = strBuilder56.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst("");
        int int71 = strBuilder67.indexOf("");
        int int74 = strBuilder67.lastIndexOf('#', (int) (byte) 0);
        boolean boolean76 = strBuilder67.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder67.appendAll((java.util.Iterator<java.lang.String>) strTokenizer77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder67.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder67.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder67.appendln((int) (byte) 100);
        char[] charArray85 = strBuilder67.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, '#');
        char[] charArray88 = strBuilder56.getChars(charArray85);
        java.lang.Object obj89 = properties0.remove((java.lang.Object) charArray85);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, 'e');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray85, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer93.setEmptyTokenAsNull(false);
        int int96 = strTokenizer93.nextIndex();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 32 + "'", int36 == 32);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[]");
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test07911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07911");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        java.lang.String[] strArray30 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        boolean boolean33 = strList26.addAll((java.util.Collection<java.lang.String>) strList31);
        java.util.Spliterator<java.lang.String> strSpliterator34 = strList31.spliterator();
        int int35 = strList31.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int39 = strList31.lastIndexOf((java.lang.Object) strTokenizer38);
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        int int43 = strBuilder42.capacity();
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(stringBuffer44, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(true);
        boolean boolean54 = strSubstitutor41.replaceIn(strBuilder51, (int) '$', 0);
        boolean boolean55 = strList40.equals((java.lang.Object) '$');
        boolean boolean56 = strList9.retainAll((java.util.Collection<java.lang.String>) strList40);
        java.util.Iterator<java.lang.String> strItor57 = strList40.iterator();
        java.util.stream.Stream<java.lang.String> strStream58 = strList40.stream();
        java.util.stream.Stream<java.lang.String> strStream59 = strList40.parallelStream();
        java.lang.String str60 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strList40);
        boolean boolean61 = strList40.isEmpty();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strSpliterator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strItor57);
        org.junit.Assert.assertNotNull(strStream58);
        org.junit.Assert.assertNotNull(strStream59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[ 4#4]" + "'", str60, "[ 4#4]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test07912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07912");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        int int22 = properties0.size();
        java.util.Collection<java.lang.Object> objCollection23 = properties0.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray29 = strTokenizer28.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendAll((java.lang.Object[]) strArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray39 = strTokenizer38.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendAll((java.lang.Object[]) strArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder24.appendln(strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.appendSeparator("hi!", "");
        int int49 = strBuilder40.lastIndexOf("{", 50);
        java.lang.Object obj50 = properties0.remove((java.lang.Object) strBuilder40);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder40.setNewLineText("\ntrtrueue\n###################################");
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test07913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07913");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties4.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties4.keys();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader20 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendAll((java.lang.Object[]) strArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream31 = strBuilder21.codePoints();
        java.lang.Object obj32 = properties11.replace((java.lang.Object) reader20, (java.lang.Object) intStream31);
        boolean boolean33 = reader20.ready();
        boolean boolean34 = properties4.containsValue((java.lang.Object) reader20);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        char[] charArray39 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, 'a');
        boolean boolean42 = properties4.contains((java.lang.Object) strTokenizer41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("");
        int int47 = strBuilder43.indexOf("");
        int int50 = strBuilder43.lastIndexOf('#', (int) (byte) 0);
        java.io.Reader reader51 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder43.appendSeparator("{}");
        java.lang.StringBuffer stringBuffer54 = strBuilder53.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.appendSeparator("########");
        boolean boolean57 = properties4.containsKey((java.lang.Object) strBuilder56);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties4.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties4.entrySet();
        java.util.Properties properties60 = new java.util.Properties();
        int int61 = properties60.size();
        java.util.Set<java.lang.Object> objSet62 = properties60.keySet();
        java.util.Properties properties65 = new java.util.Properties();
        int int66 = properties65.size();
        boolean boolean68 = properties65.containsKey((java.lang.Object) (-1.0f));
        boolean boolean69 = properties60.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties60.elements();
        java.util.Set<java.lang.Object> objSet71 = properties60.keySet();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer("", "h");
        java.lang.Object obj75 = properties4.putIfAbsent((java.lang.Object) objSet71, (java.lang.Object) "h");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(stringBuffer54);
        org.junit.Assert.assertEquals(stringBuffer54.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNotNull(objSet71);
        org.junit.Assert.assertNull(obj75);
    }

    @Test
    public void test07914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07914");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        java.lang.String str10 = strBuilder5.midString((int) (byte) 10, 32);
        int int12 = strBuilder5.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.ensureCapacity((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.appendSeparator('a', 32);
        java.util.Properties properties19 = new java.util.Properties();
        int int20 = properties19.size();
        boolean boolean22 = properties19.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "");
        boolean boolean28 = strBuilder26.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln('#');
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.append(stringBuffer37, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder34.deleteFirst("hi!");
        char[] charArray43 = strBuilder34.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer30.reset(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray43);
        char[] charArray46 = strBuilder26.getChars(charArray43);
        java.lang.Object obj47 = properties19.remove((java.lang.Object) charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray46);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder14.insert(85, charArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 85");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, \n]");
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strTokenizer48);
    }

    @Test
    public void test07915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07915");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Enumeration<?> wildcardEnumeration16 = properties0.propertyNames();
        int int17 = properties0.size();
        java.util.Properties properties18 = new java.util.Properties(properties0);
        java.util.Enumeration<?> wildcardEnumeration19 = properties0.propertyNames();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(wildcardEnumeration16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration19);
    }

    @Test
    public void test07916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07916");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        char char10 = strBuilder8.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.minimizeCapacity();
        int int13 = strBuilder11.indexOf('e');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + char10 + "' != '" + '#' + "'", char10 == '#');
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test07917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07917");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        int int5 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst('a', '4');
        java.io.Writer writer13 = strBuilder12.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "");
        char[] charArray25 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendln(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray25);
        writer13.write(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        boolean boolean30 = strBuilder0.equals((java.lang.Object) strTokenizer29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer29.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(writer13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMatcher31);
    }

    @Test
    public void test07918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07918");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Collection<java.lang.Object> objCollection9 = properties0.values();
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        char[] charArray24 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        boolean boolean28 = strList19.equals((java.lang.Object) charArray24);
        boolean boolean30 = strList19.add("\n");
        java.util.Spliterator<java.lang.String> strSpliterator31 = strList19.spliterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder34.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        java.lang.String str42 = strBuilder38.getNewLineText();
        java.util.stream.IntStream intStream43 = strBuilder38.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder35.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("", "");
        java.lang.String str57 = strBuilder53.getNewLineText();
        java.util.stream.IntStream intStream58 = strBuilder53.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder50.append((java.lang.CharSequence) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder50.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder46.append(strBuilder50, 2, (int) 'a');
        java.lang.Object obj65 = properties0.getOrDefault((java.lang.Object) strSpliterator31, (java.lang.Object) strBuilder46);
        boolean boolean67 = strBuilder46.startsWith("97\nhi!101.0\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = null;
        int int69 = strBuilder46.indexOf(strMatcher68);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strSpliterator31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(intStream43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(intStream58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test07919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07919");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader19 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray25 = strTokenizer24.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendAll((java.lang.Object[]) strArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream30 = strBuilder20.codePoints();
        java.lang.Object obj31 = properties10.replace((java.lang.Object) reader19, (java.lang.Object) intStream30);
        long long33 = reader19.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray39 = strTokenizer38.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendAll((java.lang.Object[]) strArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder34.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream44 = strBuilder34.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        char[] charArray49 = strBuilder45.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder34.appendln(charArray49);
        int int53 = reader19.read(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder3.append(charArray49);
        java.util.Properties properties55 = new java.util.Properties();
        int int56 = properties55.size();
        boolean boolean58 = properties55.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties59 = new java.util.Properties();
        int int60 = properties59.size();
        boolean boolean62 = properties59.containsKey((java.lang.Object) (-1.0f));
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst("", "");
        char[] charArray71 = strBuilder67.toCharArray();
        char[] charArray72 = strBuilder64.getChars(charArray71);
        java.io.Reader reader73 = strBuilder64.asReader();
        java.lang.Object obj74 = properties55.remove((java.lang.Object) strBuilder64);
        java.io.Writer writer75 = strBuilder64.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder3.append((java.lang.Object) writer75);
        java.io.Writer writer78 = writer75.append(' ');
        writer75.write(39);
        writer75.write(286);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[]");
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(writer75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(writer78);
    }

    @Test
    public void test07920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07920");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        java.io.Reader reader10 = strBuilder6.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.append(strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append('1');
        int int18 = strBuilder15.indexOf("t\n #\n\n32.0", (int) '\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test07921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07921");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln((double) '#');
        char[] charArray6 = strBuilder3.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.ensureCapacity(53);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "35.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "35.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[3, 5, ., 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
    }

    @Test
    public void test07922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07922");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        java.lang.String str18 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder0.deleteAll('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder20.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.append((float) 57);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test07923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07923");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[ 4#4]");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strMatcher2);
    }

    @Test
    public void test07924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07924");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceAll("#", "true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append((long) (-1));
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader25 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray31 = strTokenizer30.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendAll((java.lang.Object[]) strArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream36 = strBuilder26.codePoints();
        java.lang.Object obj37 = properties16.replace((java.lang.Object) reader25, (java.lang.Object) intStream36);
        long long39 = reader25.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray45 = strTokenizer44.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.appendAll((java.lang.Object[]) strArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream50 = strBuilder40.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "");
        char[] charArray55 = strBuilder51.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.appendln(charArray55);
        int int59 = reader25.read(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean63 = strTokenizer62.hasNext();
        char[] charArray68 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ');
        int int71 = strTokenizer70.size();
        boolean boolean72 = strTokenizer70.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer70.setIgnoredMatcher(strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer62.setDelimiterMatcher(strMatcher73);
        boolean boolean76 = strTokenizer75.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer75.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strTokenizer75.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer60.setIgnoredMatcher(strMatcher79);
        int int81 = strBuilder13.indexOf(strMatcher79);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder13.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder13.appendln((long) 286);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(intStream36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(intStream50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test07925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07925");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        java.lang.String str18 = strTokenizer17.toString();
        int int19 = strTokenizer17.previousIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str18, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test07926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07926");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        java.lang.Object obj3 = strTokenizer1.clone();
        java.lang.Object obj4 = strTokenizer1.clone();
        java.lang.String[] strArray5 = strTokenizer1.getTokenArray();
        java.util.List<java.lang.String> strList6 = strTokenizer1.getTokenList();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strList6);
    }

    @Test
    public void test07927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07927");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln((float) 22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.deleteAll("true\njava.io.IOException: hi!false");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.append('$');
        java.lang.CharSequence charSequence28 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder21.append(charSequence28, 39, 44);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test07928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07928");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("h", '4', '$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setQuoteChar('$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer5.reset();
        boolean boolean7 = strTokenizer6.isIgnoreEmptyTokens();
        boolean boolean8 = strTokenizer6.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer6.setDelimiterString("32.01#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setDelimiterChar('\n');
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
    }

    @Test
    public void test07929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07929");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.appendSeparator("true\n###################################\n32.0", (int) 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceAll("h", " 4## ");
        int int21 = strBuilder17.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 51 + "'", int21 == 51);
    }

    @Test
    public void test07930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07930");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        boolean boolean10 = strTokenizer9.hasPrevious();
        java.util.List<java.lang.String> strList11 = strTokenizer9.getTokenList();
        strList11.clear();
        boolean boolean14 = strList11.add("");
        strList11.clear();
        java.lang.Class<?> wildcardClass16 = strList11.getClass();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test07931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07931");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        java.util.ListIterator<java.lang.String> strItor75 = strList9.listIterator((int) (short) 0);
        java.util.List<java.lang.String> strList78 = strList9.subList((int) (short) 1, 1);
        int int79 = strList78.size();
        java.util.Spliterator<java.lang.String> strSpliterator80 = strList78.spliterator();
        int int81 = strList78.size();
        java.util.Iterator<java.lang.String> strItor82 = strList78.iterator();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strItor75);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(strSpliterator80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(strItor82);
    }

    @Test
    public void test07932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07932");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln("-1");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.deleteFirst("[ 4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.replaceAll("\ntrue0.0\n", "l");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.insert(59, (float) 9);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 59");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test07933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07933");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("{\n36.0\n=StrTokenizer[not tokenized yet]}", strMatcher29);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer30.getTrimmerMatcher();
        java.util.Properties properties32 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        int int44 = strBuilder43.capacity();
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(stringBuffer45, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int50 = strBuilder48.lastIndexOf(strMatcher49);
        boolean boolean51 = strBuilder41.equalsIgnoreCase(strBuilder48);
        char[] charArray54 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray54);
        boolean boolean56 = properties32.replace((java.lang.Object) strBuilder38, (java.lang.Object) strBuilder41, (java.lang.Object) strTokenizer55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder41.deleteAll("StrTokenizer[]");
        int int60 = strBuilder58.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("");
        int int65 = strBuilder61.indexOf("");
        int int68 = strBuilder61.lastIndexOf('#', (int) (byte) 0);
        boolean boolean70 = strBuilder61.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder61.appendAll((java.util.Iterator<java.lang.String>) strTokenizer71);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder61.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder61.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder58.append(strBuilder76, 1, 0);
        java.lang.Iterable<java.lang.String> strIterable80 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder58.appendAll(strIterable80);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder84.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.setNullText("");
        char[] charArray88 = strBuilder87.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray88, "true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder58.append(charArray88);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray88, '$');
        int int95 = strMatcher31.isMatch(charArray88, 27);
        int int96 = strBuilder24.lastIndexOf(strMatcher31);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 32 + "'", int44 == 32);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray88), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray88), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray88), "[]");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
    }

    @Test
    public void test07934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07934");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString(" 4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setEmptyTokenAsNull(false);
        int int10 = strTokenizer9.nextIndex();
        boolean boolean11 = strTokenizer9.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test07935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07935");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray2 = strTokenizer1.getTokenArray();
        java.lang.String[] strArray3 = strTokenizer1.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer1.setIgnoreEmptyTokens(true);
        java.util.List<java.lang.String> strList6 = strTokenizer1.getTokenList();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strList6);
    }

    @Test
    public void test07936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07936");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        strList14.clear();
        java.util.ListIterator<java.lang.String> strItor24 = strList14.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        char[] charArray32 = strBuilder28.toCharArray();
        char[] charArray33 = strBuilder25.getChars(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32);
        boolean boolean35 = strTokenizer34.hasPrevious();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        strList36.clear();
        boolean boolean38 = strList14.retainAll((java.util.Collection<java.lang.String>) strList36);
        java.util.Spliterator<java.lang.String> strSpliterator39 = strList14.spliterator();
        boolean boolean41 = strList14.add("java.io.IOException: false");
        java.util.Properties properties42 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray49 = strTokenizer48.getTokenArray();
        java.lang.String[] strArray50 = strTokenizer48.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendWithSeparators((java.lang.Object[]) strArray50, "4#4");
        char[] charArray55 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray55);
        java.lang.Object obj57 = properties42.getOrDefault((java.lang.Object) strBuilder46, (java.lang.Object) strTokenizer56);
        int int58 = properties42.size();
        java.util.Set<java.lang.String> strSet59 = properties42.stringPropertyNames();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        java.lang.String str62 = strTokenizer61.next();
        boolean boolean63 = strTokenizer61.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strTokenizer61.getIgnoredMatcher();
        boolean boolean65 = properties42.containsKey((java.lang.Object) strMatcher64);
        boolean boolean66 = properties42.isEmpty();
        int int67 = strList14.lastIndexOf((java.lang.Object) boolean66);
        boolean boolean68 = strList14.isEmpty();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "StrTokenizer[]" + "'", str62, "StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test07937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07937");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln('#');
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.append(stringBuffer16, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder13.replaceFirst('a', '4');
        boolean boolean25 = strBuilder9.equals(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.deleteAll('\n');
        boolean boolean30 = strBuilder13.startsWith("");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test07938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07938");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int7 = strBuilder5.lastIndexOf(strMatcher6);
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strList10.contains(obj12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.appendAll((java.lang.Iterable<java.lang.String>) strList10);
        java.lang.String str16 = strList10.get((int) (byte) 0);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        java.lang.String[] strArray30 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        boolean boolean33 = strList26.addAll((java.util.Collection<java.lang.String>) strList31);
        char[] charArray38 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        int int41 = strTokenizer40.size();
        boolean boolean42 = strTokenizer40.hasNext();
        java.util.List<java.lang.String> strList43 = strTokenizer40.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        char[] charArray48 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray48);
        boolean boolean52 = strList43.equals((java.lang.Object) charArray48);
        char[] charArray57 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, ' ');
        int int60 = strTokenizer59.size();
        boolean boolean61 = strTokenizer59.hasNext();
        java.util.List<java.lang.String> strList62 = strTokenizer59.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        int int64 = strBuilder63.capacity();
        java.lang.StringBuffer stringBuffer65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder63.appendln(stringBuffer65, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder63.insert(1, (double) 32);
        java.lang.String str73 = strBuilder63.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder63.insert(1, '#');
        boolean boolean77 = strList62.equals((java.lang.Object) strBuilder63);
        boolean boolean78 = strList43.containsAll((java.util.Collection<java.lang.String>) strList62);
        boolean boolean79 = strList26.addAll((java.util.Collection<java.lang.String>) strList62);
        java.util.ListIterator<java.lang.String> strItor80 = strList62.listIterator();
        boolean boolean81 = strList10.removeAll((java.util.Collection<java.lang.String>) strList62);
        java.util.stream.Stream<java.lang.String> strStream82 = strList10.parallelStream();
        int int83 = strList10.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 32 + "'", int64 == 32);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "\n32.0" + "'", str73, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strItor80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strStream82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
    }

    @Test
    public void test07939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07939");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        int int27 = strBuilder9.lastIndexOf("4#4", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder9.appendSeparator("a4", 53);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append(true);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test07940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07940");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        int int5 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.append((int) (short) 0);
        boolean boolean9 = strBuilder7.contains('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.deleteAll("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.append(true);
        java.lang.String str15 = strBuilder13.leftString((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.insert((int) '\n', '\000');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "0true" + "'", str15, "0true");
    }

    @Test
    public void test07941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07941");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((double) '#');
        boolean boolean22 = strBuilder12.equals(strBuilder21);
        java.util.stream.IntStream intStream23 = strBuilder12.codePoints();
        java.util.Iterator<java.lang.String> strItor24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder12.appendWithSeparators(strItor24, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder6.appendln(strBuilder26, 0, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendAll((java.lang.Object[]) strArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder33.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray48 = strTokenizer47.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendAll((java.lang.Object[]) strArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder33.appendln(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder32.replaceAll(strMatcher56, "#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("");
        int int64 = strBuilder60.indexOf("");
        int int67 = strBuilder60.lastIndexOf('#', (int) (byte) 0);
        boolean boolean69 = strBuilder60.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder60.appendAll((java.util.Iterator<java.lang.String>) strTokenizer70);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder60.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder60.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder60.appendln((int) (byte) 100);
        java.io.IOException iOException80 = new java.io.IOException("hi!");
        java.io.IOException iOException82 = new java.io.IOException("hi!");
        iOException80.addSuppressed((java.lang.Throwable) iOException82);
        java.io.IOException iOException84 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException82);
        java.lang.Throwable[] throwableArray85 = iOException84.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder77.appendAll((java.lang.Object[]) throwableArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder59.appendAll((java.lang.Object[]) throwableArray85);
        int int89 = strBuilder87.lastIndexOf("#36.0106\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test07942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07942");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        java.lang.String str34 = strBuilder24.rightString((int) ' ');
        boolean boolean36 = strBuilder24.startsWith("");
        char[] charArray37 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.insert((int) (short) 0, charArray37);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        java.util.Set<java.lang.Object> objSet41 = properties39.keySet();
        java.util.Properties properties42 = new java.util.Properties(properties39);
        java.lang.String str43 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strBuilder22, properties42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder22.appendNewLine();
        java.lang.String str46 = strBuilder44.rightString((int) (byte) 100);
        char[] charArray51 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray51, ' ');
        int int54 = strTokenizer53.size();
        boolean boolean55 = strTokenizer53.hasNext();
        java.util.List<java.lang.String> strList56 = strTokenizer53.getTokenList();
        java.lang.String[] strArray60 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        boolean boolean63 = strList56.addAll((java.util.Collection<java.lang.String>) strList61);
        java.lang.String str65 = strList61.remove(0);
        java.util.stream.Stream<java.lang.String> strStream66 = strList61.stream();
        java.util.Iterator<java.lang.String> strItor67 = strList61.iterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder44.appendAll((java.lang.Iterable<java.lang.String>) strList61);
        boolean boolean70 = strBuilder44.contains("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n32.0" + "'", str34, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n32.0a" + "'", str43, "\n32.0a");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\n32.0a\n" + "'", str46, "\n32.0a\n");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\n32.0" + "'", str65, "\n32.0");
        org.junit.Assert.assertNotNull(strStream66);
        org.junit.Assert.assertNotNull(strItor67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test07943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07943");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        int int5 = strBuilder4.capacity();
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(stringBuffer6, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int11 = strBuilder9.lastIndexOf(strMatcher10);
        boolean boolean12 = strBuilder2.equalsIgnoreCase(strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray18 = strTokenizer17.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendAll((java.lang.Object[]) strArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer23 = strBuilder22.toStringBuffer();
        char[] charArray28 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        int int31 = strTokenizer30.size();
        boolean boolean32 = strTokenizer30.hasNext();
        java.util.List<java.lang.String> strList33 = strTokenizer30.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "");
        char[] charArray38 = strBuilder34.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        boolean boolean42 = strList33.equals((java.lang.Object) charArray38);
        char[] charArray47 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        int int50 = strTokenizer49.size();
        boolean boolean51 = strTokenizer49.hasNext();
        java.util.List<java.lang.String> strList52 = strTokenizer49.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        int int54 = strBuilder53.capacity();
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendln(stringBuffer55, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder53.insert(1, (double) 32);
        java.lang.String str63 = strBuilder53.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder53.insert(1, '#');
        boolean boolean67 = strList52.equals((java.lang.Object) strBuilder53);
        boolean boolean68 = strList33.containsAll((java.util.Collection<java.lang.String>) strList52);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder22.appendAll((java.lang.Iterable<java.lang.String>) strList52);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int72 = strList52.lastIndexOf((java.lang.Object) "hi!");
        java.util.Iterator<java.lang.String> strItor73 = strList52.iterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder2.appendAll((java.lang.Iterable<java.lang.String>) strList52);
        java.lang.Object obj75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.appendFixedWidthPadLeft(obj75, 0, ' ');
        char[] charArray81 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer82.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder78.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer84, "StrTokenizer[4#4]");
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer84.getIgnoredMatcher();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer84.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(stringBuffer23);
        org.junit.Assert.assertEquals(stringBuffer23.toString(), "");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 32 + "'", int54 == 32);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\n32.0" + "'", str63, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strItor73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMatcher87);
    }

    @Test
    public void test07944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07944");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceAll("#", "true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendPadding((int) 'a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceAll('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        int int24 = strBuilder23.capacity();
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(stringBuffer25, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder23.setLength(32);
        java.io.Writer writer34 = strBuilder33.asWriter();
        writer34.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        int int40 = strBuilder39.capacity();
        java.lang.StringBuffer stringBuffer41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(stringBuffer41, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.insert(1, (double) 32);
        java.lang.String str49 = strBuilder39.rightString((int) ' ');
        boolean boolean51 = strBuilder39.startsWith("");
        char[] charArray52 = strBuilder39.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray52);
        writer34.write(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer56.setDelimiterString("10.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer56.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln((double) '#');
        boolean boolean75 = strBuilder65.equals(strBuilder74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.appendSeparator('4', '#');
        char[] charArray84 = new char[] { ' ', '4', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder74.append(charArray84, (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer56.reset(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer92.reset("{\ntrue\n=1.0}");
        org.apache.commons.lang3.text.StrMatcher strMatcher95 = strTokenizer94.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, strMatcher95);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = new org.apache.commons.lang3.text.StrTokenizer(charArray84);
        org.apache.commons.lang3.text.StrMatcher strMatcher98 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder16.appendln(charArray84);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\n32.0" + "'", str49, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), " 4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), " 4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[ , 4, #, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertNotNull(strMatcher95);
        org.junit.Assert.assertNotNull(strMatcher98);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test07945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07945");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader7 = strBuilder3.asReader();
        long long9 = reader7.skip((long) '#');
        reader7.mark((int) (short) 10);
        reader7.mark(3);
        boolean boolean14 = reader7.ready();
        int int15 = reader7.read();
        boolean boolean16 = reader7.ready();
        reader7.reset();
        reader7.mark(22);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test07946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07946");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties0.entrySet();
        java.lang.Object obj5 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder(" 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendSeparator('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "");
        char[] charArray21 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.appendln((double) '$');
        char[] charArray29 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        int int32 = strTokenizer31.size();
        boolean boolean33 = strTokenizer31.hasNext();
        java.util.List<java.lang.String> strList34 = strTokenizer31.getTokenList();
        java.lang.String[] strArray38 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        boolean boolean41 = strList34.addAll((java.util.Collection<java.lang.String>) strList39);
        java.lang.String str43 = strList39.remove(0);
        char[] charArray48 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        int int51 = strTokenizer50.size();
        boolean boolean52 = strTokenizer50.hasNext();
        java.util.List<java.lang.String> strList53 = strTokenizer50.getTokenList();
        java.lang.String[] strArray57 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        boolean boolean60 = strList53.addAll((java.util.Collection<java.lang.String>) strList58);
        boolean boolean61 = strList39.addAll((java.util.Collection<java.lang.String>) strList58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder16.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("");
        int int67 = strBuilder63.indexOf("");
        int int70 = strBuilder63.lastIndexOf('#', (int) (byte) 0);
        boolean boolean72 = strBuilder63.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder63.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray77 = strTokenizer76.getTokenArray();
        java.lang.String[] strArray78 = strTokenizer76.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder63.appendWithSeparators((java.lang.Object[]) strArray78, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder62.appendln((java.lang.Object) "");
        java.lang.Object obj82 = properties0.getOrDefault((java.lang.Object) strBuilder9, (java.lang.Object) "");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet83 = properties0.entrySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n32.0" + "'", str43, "\n32.0");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "" + "'", obj82, "");
        org.junit.Assert.assertNotNull(objEntrySet83);
    }

    @Test
    public void test07947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07947");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendSeparator("StrTokenizer[]", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.append(false);
        java.lang.String str11 = strBuilder10.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append("java.io.IOException: hi!false");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray29 = strTokenizer28.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendAll((java.lang.Object[]) strArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.replaceFirst('a', 'a');
        char[] charArray38 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        int int41 = strTokenizer40.size();
        boolean boolean42 = strTokenizer40.hasNext();
        java.util.List<java.lang.String> strList43 = strTokenizer40.getTokenList();
        java.lang.String[] strArray47 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        boolean boolean50 = strList43.addAll((java.util.Collection<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder24.appendAll((java.lang.Iterable<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        boolean boolean53 = strBuilder24.contains(strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder18.append((java.lang.Object) strMatcher52);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        int int56 = strBuilder55.capacity();
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(stringBuffer57, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.insert(1, (double) 32);
        java.util.Properties properties64 = new java.util.Properties();
        int int65 = properties64.size();
        boolean boolean67 = properties64.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst("", "");
        char[] charArray72 = strBuilder68.toCharArray();
        boolean boolean73 = properties64.containsValue((java.lang.Object) charArray72);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder55.append(charArray72, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, '4', 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        int int82 = strMatcher52.isMatch(charArray72, 3);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray72);
        char[] charArray84 = strBuilder14.getChars(charArray72);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder14.replaceAll("{}3.0", "ang3.t");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "java.io.IOException: hi!false" + "'", str11, "java.io.IOException: hi!false");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 32 + "'", int56 == 32);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "eslaf!ih :noitpecxEOI.oi.avajeslaf!ih :noitpecxEOI.oi.avaj");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "eslaf!ih :noitpecxEOI.oi.avajeslaf!ih :noitpecxEOI.oi.avaj");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[e, s, l, a, f, !, i, h,  , :, n, o, i, t, p, e, c, x, E, O, I, ., o, i, ., a, v, a, j, e, s, l, a, f, !, i, h,  , :, n, o, i, t, p, e, c, x, E, O, I, ., o, i, ., a, v, a, j]");
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test07948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07948");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.append((float) 10L);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test07949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07949");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.appendSeparator("StrTokenizer[]", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder16.append(false);
        java.lang.String str29 = strBuilder26.midString(0, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append((double) (byte) 100);
        boolean boolean32 = strBuilder31.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.append((float) '#');
        java.lang.StringBuffer stringBuffer35 = strBuilder31.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder5.appendln(stringBuffer35, (int) '\000', (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceAll("h", "[4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst(' ');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(stringBuffer35);
        org.junit.Assert.assertEquals(stringBuffer35.toString(), "java.io.IOException: hi!false100.035.0");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test07950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07950");
        char[] charArray3 = new char[] { 'a', '$', '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '$');
        java.util.List<java.lang.String> strList6 = strTokenizer5.getTokenList();
        char[] charArray11 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        int int14 = strTokenizer13.size();
        boolean boolean15 = strTokenizer13.hasNext();
        java.util.List<java.lang.String> strList16 = strTokenizer13.getTokenList();
        java.lang.String[] strArray20 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        boolean boolean23 = strList16.addAll((java.util.Collection<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        java.lang.String[] strArray27 = strTokenizer25.getTokenArray();
        boolean boolean28 = strTokenizer25.hasNext();
        int int29 = strTokenizer25.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer25.getQuoteMatcher();
        java.util.List<java.lang.String> strList31 = strTokenizer25.getTokenList();
        boolean boolean32 = strList16.retainAll((java.util.Collection<java.lang.String>) strList31);
        boolean boolean33 = strList6.addAll((java.util.Collection<java.lang.String>) strList31);
        boolean boolean35 = strList6.add(" ");
        strList6.add(1, "");
        java.util.Iterator<java.lang.String> strItor39 = strList6.iterator();
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a$$");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a$$");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, $, $]");
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strItor39);
    }

    @Test
    public void test07951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07951");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        boolean boolean10 = strTokenizer9.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        char[] charArray24 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln(charArray24);
        int int29 = strMatcher12.isMatch(charArray24, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer9.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setQuoteChar('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setIgnoreEmptyTokens(false);
        java.lang.String str36 = strTokenizer33.previousToken();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test07952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07952");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: true");
    }

    @Test
    public void test07953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07953");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln((float) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("{}");
        boolean boolean52 = strTokenizer51.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder44.appendAll((java.util.Iterator<java.lang.String>) strTokenizer51);
        java.lang.String str54 = strTokenizer51.previous();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "{}" + "'", str54, "{}");
    }

    @Test
    public void test07954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07954");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        char[] charArray78 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        int int81 = strTokenizer80.size();
        int int82 = strTokenizer80.previousIndex();
        boolean boolean83 = strList9.equals((java.lang.Object) strTokenizer80);
        java.lang.String str84 = strTokenizer80.next();
        java.lang.String str85 = strTokenizer80.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer80.setEmptyTokenAsNull(true);
        boolean boolean88 = strTokenizer80.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer80.setDelimiterString(" ");
        java.lang.String[] strArray91 = strTokenizer80.getTokenArray();
        int int92 = strTokenizer80.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer80.reset("-1");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4#4" + "'", str84, "4#4");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "4#4" + "'", str85, "4#4");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertNotNull(strTokenizer94);
    }

    @Test
    public void test07955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07955");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer6, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.deleteFirst("hi!");
        char[] charArray12 = strBuilder3.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.setNewLineText("java.io.IOException: hi!");
        int int16 = strBuilder3.lastIndexOf("#\nfalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.append(0.0f);
        java.lang.String str19 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[#, \n]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#\n0.0" + "'", str19, "#\n0.0");
    }

    @Test
    public void test07956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07956");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa#36.0");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test07957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07957");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        boolean boolean3 = properties0.isEmpty();
        java.util.Properties properties4 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray10 = strTokenizer9.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.appendAll((java.lang.Object[]) strArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.replaceFirst('a', 'a');
        char[] charArray19 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        int int22 = strTokenizer21.size();
        boolean boolean23 = strTokenizer21.hasNext();
        java.util.List<java.lang.String> strList24 = strTokenizer21.getTokenList();
        java.lang.String[] strArray28 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        boolean boolean31 = strList24.addAll((java.util.Collection<java.lang.String>) strList29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder5.appendAll((java.lang.Iterable<java.lang.String>) strList29);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor33 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        int int35 = strBuilder34.capacity();
        java.lang.StringBuffer stringBuffer36 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder34.appendln(stringBuffer36, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln(true);
        boolean boolean46 = strSubstitutor33.replaceIn(strBuilder43, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder5.append((java.lang.CharSequence) strBuilder43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strBuilder47.asTokenizer();
        java.util.List<java.lang.String> strList49 = strTokenizer48.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer48.setDelimiterString("#\n4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "");
        char[] charArray68 = strBuilder64.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder61.append(charArray68, 0, (int) (byte) 0);
        java.lang.Object obj74 = properties4.put((java.lang.Object) strTokenizer51, (java.lang.Object) (byte) 0);
        int int75 = strTokenizer51.previousIndex();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 32 + "'", int35 == 32);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    }

    @Test
    public void test07958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07958");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.append(charArray16, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        int int23 = strBuilder22.capacity();
        java.lang.StringBuffer stringBuffer24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(stringBuffer24, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder22.appendSeparator("java.io.IOException: hi!");
        boolean boolean33 = strBuilder9.equals((java.lang.Object) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendln((int) 'e');
        java.lang.StringBuffer stringBuffer36 = strBuilder32.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder32.appendSeparator("StrTokenizer[35.0]", (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder32.append((long) 26);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendSeparator("35.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst('6');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(stringBuffer36);
        org.junit.Assert.assertEquals(stringBuffer36.toString(), "\n32.0java.io.IOException: hi!101\n");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test07959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07959");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(' ', ' ');
        int int24 = strBuilder22.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.insert((int) '$', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.insert((int) (short) 0, 53);
        int int31 = strBuilder30.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendSeparator('$', 79);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 43 + "'", int31 == 43);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test07960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07960");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties4.entrySet();
        java.io.IOException iOException13 = new java.io.IOException();
        java.lang.Throwable[] throwableArray14 = iOException13.getSuppressed();
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException13);
        boolean boolean17 = properties4.containsValue((java.lang.Object) iOException16);
        char[] charArray23 = new char[] { ' ', '4', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray27 = strBuilder26.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst('a', 'a');
        java.lang.String str41 = strBuilder39.rightString((int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.deleteFirst('$');
        java.lang.Object obj46 = properties4.put((java.lang.Object) strTokenizer29, (java.lang.Object) strBuilder45);
        properties4.clear();
        java.lang.String str50 = properties4.getProperty("true\na4\n", "\n\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\n\n" + "'", str50, "\n\n");
    }

    @Test
    public void test07961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07961");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader7 = strBuilder3.asReader();
        boolean boolean8 = reader7.markSupported();
        boolean boolean9 = reader7.markSupported();
        long long11 = reader7.skip((long) 2);
        int int12 = reader7.read();
        java.nio.CharBuffer charBuffer13 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int14 = reader7.read(charBuffer13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test07962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07962");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.appendln(charArray7, (int) (short) 1, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(0, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strBuilder10.asTokenizer();
        char[] charArray15 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray15);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "1\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "1\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[1, \n]");
        org.junit.Assert.assertNotNull(strTokenizer16);
    }

    @Test
    public void test07963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07963");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("\n");
        java.io.Reader reader15 = strBuilder14.asReader();
        java.io.Writer writer16 = strBuilder14.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendln(' ');
        char[] charArray25 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        int int28 = strTokenizer27.size();
        boolean boolean29 = strTokenizer27.hasNext();
        java.util.List<java.lang.String> strList30 = strTokenizer27.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        int int32 = strBuilder31.capacity();
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(stringBuffer33, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.insert(1, (double) 32);
        java.lang.String str41 = strBuilder31.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.insert(1, '#');
        boolean boolean45 = strList30.equals((java.lang.Object) strBuilder31);
        java.util.Properties properties46 = new java.util.Properties();
        int int47 = properties46.size();
        boolean boolean49 = properties46.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "");
        boolean boolean55 = strBuilder53.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln('#');
        java.lang.StringBuffer stringBuffer64 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.append(stringBuffer64, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder61.deleteFirst("hi!");
        char[] charArray70 = strBuilder61.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer57.reset(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        char[] charArray73 = strBuilder53.getChars(charArray70);
        java.lang.Object obj74 = properties46.remove((java.lang.Object) charArray73);
        int int75 = strList30.lastIndexOf(obj74);
        java.util.stream.Stream<java.lang.String> strStream76 = strList30.parallelStream();
        java.util.Spliterator<java.lang.String> strSpliterator77 = strList30.spliterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder20.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList30, "OException");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList82 = strList30.subList(16, 37);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 37");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(writer16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\n32.0" + "'", str41, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[#, \n]");
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strStream76);
        org.junit.Assert.assertNotNull(strSpliterator77);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test07964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07964");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        java.io.Writer writer7 = strBuilder6.asWriter();
        writer7.write(" 4#4");
        writer7.write(44);
        // The following exception was thrown during execution in test generation
        try {
            writer7.write("\n#\n\n", 81, (int) '\000');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(writer7);
    }

    @Test
    public void test07965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07965");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        java.util.Properties properties19 = new java.util.Properties();
        int int20 = properties19.size();
        boolean boolean22 = properties19.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties23 = new java.util.Properties();
        int int24 = properties23.size();
        boolean boolean26 = properties23.containsKey((java.lang.Object) (-1.0f));
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.lang.String str29 = properties23.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration30 = properties23.propertyNames();
        int int31 = properties23.size();
        java.util.Properties properties33 = new java.util.Properties();
        int int34 = properties33.size();
        boolean boolean36 = properties33.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        boolean boolean42 = strBuilder40.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln('#');
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.append(stringBuffer51, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.deleteFirst("hi!");
        char[] charArray57 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer44.reset(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        char[] charArray60 = strBuilder40.getChars(charArray57);
        java.lang.Object obj61 = properties33.remove((java.lang.Object) charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray60);
        java.lang.Object obj63 = properties23.put((java.lang.Object) 74, (java.lang.Object) charArray60);
        char[] charArray64 = strBuilder18.getChars(charArray60);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder18.insert(7, true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 7");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, \n]");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, \n]");
    }

    @Test
    public void test07966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07966");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceAll("StrTokenizer[]", "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.deleteFirst("h");
        java.util.stream.IntStream intStream16 = strBuilder15.chars();
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties21.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer37 = strBuilder36.toStringBuffer();
        char[] charArray42 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        int int45 = strTokenizer44.size();
        boolean boolean46 = strTokenizer44.hasNext();
        java.util.List<java.lang.String> strList47 = strTokenizer44.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        char[] charArray52 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray52);
        boolean boolean56 = strList47.equals((java.lang.Object) charArray52);
        char[] charArray61 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        int int64 = strTokenizer63.size();
        boolean boolean65 = strTokenizer63.hasNext();
        java.util.List<java.lang.String> strList66 = strTokenizer63.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        int int68 = strBuilder67.capacity();
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.appendln(stringBuffer69, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder67.insert(1, (double) 32);
        java.lang.String str77 = strBuilder67.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder67.insert(1, '#');
        boolean boolean81 = strList66.equals((java.lang.Object) strBuilder67);
        boolean boolean82 = strList47.containsAll((java.util.Collection<java.lang.String>) strList66);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder36.appendAll((java.lang.Iterable<java.lang.String>) strList66);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder84.deleteAll('4');
        int int91 = strBuilder89.indexOf('a');
        java.lang.String str94 = strBuilder89.midString((int) (byte) 10, 32);
        java.lang.Object obj95 = properties21.getOrDefault((java.lang.Object) strBuilder36, (java.lang.Object) str94);
        properties21.clear();
        java.util.Set<java.lang.String> strSet97 = properties21.stringPropertyNames();
        java.lang.String str98 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strBuilder15, properties21);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(stringBuffer37);
        org.junit.Assert.assertEquals(stringBuffer37.toString(), "");
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 32 + "'", int68 == 32);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "\n32.0" + "'", str77, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + "" + "'", obj95, "");
        org.junit.Assert.assertNotNull(strSet97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "\n32.0java.io.IOException: i!" + "'", str98, "\n32.0java.io.IOException: i!");
    }

    @Test
    public void test07967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07967");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendNull();
        int int12 = strBuilder10.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.appendln((int) '9');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test07968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07968");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('a', '4');
        java.io.Writer writer34 = strBuilder33.asWriter();
        properties26.store(writer34, "");
        java.util.Properties properties37 = new java.util.Properties();
        int int38 = properties37.size();
        boolean boolean40 = properties37.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties41 = new java.util.Properties();
        int int42 = properties41.size();
        boolean boolean44 = properties41.containsKey((java.lang.Object) (-1.0f));
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.keys();
        boolean boolean47 = properties26.containsValue((java.lang.Object) objEnumeration46);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Collection<java.lang.Object> objCollection49 = properties26.values();
        java.util.Properties properties50 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray57 = strTokenizer56.getTokenArray();
        java.lang.String[] strArray58 = strTokenizer56.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendWithSeparators((java.lang.Object[]) strArray58, "4#4");
        char[] charArray63 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray63);
        java.lang.Object obj65 = properties50.getOrDefault((java.lang.Object) strBuilder54, (java.lang.Object) strTokenizer64);
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        boolean boolean70 = properties26.containsKey((java.lang.Object) strTokenizer68);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder73.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder79.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder80.setNullText("");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder80.replaceAll(strMatcher84, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder76.replaceFirst(strMatcher84, "########a4\n");
        boolean boolean89 = properties26.equals((java.lang.Object) strMatcher84);
        java.util.Set<java.lang.Object> objSet90 = properties26.keySet();
        boolean boolean91 = properties26.isEmpty();
        java.util.Collection<java.lang.Object> objCollection92 = properties26.values();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objSet90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(objCollection92);
    }

    @Test
    public void test07969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07969");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.deleteAll(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer9.setIgnoredMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer22.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.reset();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
    }

    @Test
    public void test07970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07970");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray2 = strTokenizer1.getTokenArray();
        java.lang.String[] strArray3 = strTokenizer1.getTokenArray();
        boolean boolean4 = strTokenizer1.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer1.getTrimmerMatcher();
        java.lang.String str6 = strTokenizer1.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer1.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMatcher7);
    }

    @Test
    public void test07971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07971");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        int int2 = strBuilder1.capacity();
        java.lang.StringBuffer stringBuffer3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln(stringBuffer3, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        boolean boolean13 = strSubstitutor0.replaceIn(strBuilder10, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        int int15 = strBuilder14.capacity();
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(stringBuffer16, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int21 = strBuilder19.lastIndexOf(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (short) 1, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll("java.io.IOException: hi!");
        boolean boolean27 = strSubstitutor0.replaceIn(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.insert(1, (double) 32);
        boolean boolean37 = strBuilder28.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.clear();
        int int40 = strBuilder39.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder24.append(strBuilder39);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder24.replace(144, 12, "\n\000\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 32 + "'", int2 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test07972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07972");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append((double) 10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceAll("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        char[] charArray20 = strBuilder16.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendln(charArray20);
        char[] charArray22 = strBuilder3.getChars(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder3.appendSeparator("i!");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "10.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "10.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[1, 0, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test07973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07973");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        java.io.Reader reader10 = strBuilder6.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.append(strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.replaceFirst("\n\n", "1");
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("\n32.0", throwable23);
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) iOException24);
        java.util.Properties properties26 = new java.util.Properties();
        int int27 = properties26.size();
        boolean boolean29 = properties26.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties30 = new java.util.Properties();
        int int31 = properties30.size();
        boolean boolean33 = properties30.containsKey((java.lang.Object) (-1.0f));
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.lang.String str36 = properties30.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration37 = properties30.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties30.entrySet();
        java.io.IOException iOException39 = new java.io.IOException();
        java.lang.Throwable[] throwableArray40 = iOException39.getSuppressed();
        java.lang.Throwable[] throwableArray41 = iOException39.getSuppressed();
        java.io.IOException iOException42 = new java.io.IOException((java.lang.Throwable) iOException39);
        boolean boolean43 = properties30.containsValue((java.lang.Object) iOException42);
        iOException25.addSuppressed((java.lang.Throwable) iOException42);
        java.io.IOException iOException45 = new java.io.IOException((java.lang.Throwable) iOException25);
        java.io.IOException iOException46 = new java.io.IOException("true\n", (java.lang.Throwable) iOException45);
        java.io.IOException iOException47 = new java.io.IOException("\ntrue0.0\n", (java.lang.Throwable) iOException45);
        java.lang.Throwable[] throwableArray48 = iOException47.getSuppressed();
        java.io.IOException iOException49 = new java.io.IOException(" \000\000\000\000\000\000\000\000\000aaaaaaaaaaaaStrTokenizer[not tokenized yet]", (java.lang.Throwable) iOException47);
        java.io.IOException iOException50 = new java.io.IOException((java.lang.Throwable) iOException49);
        java.lang.Throwable[] throwableArray51 = iOException50.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder12.appendWithSeparators((java.lang.Object[]) throwableArray51, "\naaaa100");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(wildcardEnumeration37);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test07974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07974");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        java.lang.String str34 = strBuilder24.rightString((int) ' ');
        boolean boolean36 = strBuilder24.startsWith("");
        char[] charArray37 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.insert((int) (short) 0, charArray37);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        java.util.Set<java.lang.Object> objSet41 = properties39.keySet();
        java.util.Properties properties42 = new java.util.Properties(properties39);
        java.lang.String str43 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strBuilder22, properties42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray50 = strTokenizer49.getTokenArray();
        java.lang.String[] strArray51 = strTokenizer49.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendWithSeparators((java.lang.Object[]) strArray51, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder47.delete(0, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder47.appendSeparator("1", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder47.append((double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder22.appendln(strBuilder47);
        char[] charArray67 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray67, ' ');
        int int70 = strTokenizer69.size();
        boolean boolean71 = strTokenizer69.hasNext();
        java.util.List<java.lang.String> strList72 = strTokenizer69.getTokenList();
        java.lang.String[] strArray76 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        boolean boolean79 = strList72.addAll((java.util.Collection<java.lang.String>) strList77);
        java.util.Spliterator<java.lang.String> strSpliterator80 = strList77.spliterator();
        int int81 = strList77.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int85 = strList77.lastIndexOf((java.lang.Object) strTokenizer84);
        strList77.clear();
        int int87 = strList77.size();
        int int88 = strList77.size();
        java.util.Iterator<java.lang.String> strItor89 = strList77.iterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder62.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList77, "-132.0");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n32.0" + "'", str34, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n32.0a" + "'", str43, "\n32.0a");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strSpliterator80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 3 + "'", int81 == 3);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(strItor89);
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test07975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07975");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        boolean boolean5 = strBuilder3.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln('#');
        java.lang.StringBuffer stringBuffer14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.append(stringBuffer14, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.deleteFirst("hi!");
        char[] charArray20 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer7.reset(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray20);
        char[] charArray23 = strBuilder3.getChars(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer24.reset();
        boolean boolean26 = strTokenizer24.hasNext();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test07976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07976");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        int int5 = strBuilder1.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.replaceFirst('$', 't');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("zed yet]\n", '#');
        java.lang.String str12 = strTokenizer11.next();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendAll((java.util.Iterator<java.lang.String>) strTokenizer11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.deleteFirst('4');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "zed yet]\n" + "'", str12, "zed yet]\n");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test07977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07977");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        boolean boolean9 = properties0.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties0.elements();
        java.util.Set<java.lang.Object> objSet11 = properties0.keySet();
        java.util.Properties properties12 = new java.util.Properties();
        int int13 = properties12.size();
        boolean boolean15 = properties12.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties16 = new java.util.Properties();
        int int17 = properties16.size();
        boolean boolean19 = properties16.containsKey((java.lang.Object) (-1.0f));
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        char[] charArray25 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        int int28 = strTokenizer27.size();
        boolean boolean29 = strTokenizer27.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer27.setIgnoredMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        java.lang.Object obj36 = properties12.putIfAbsent((java.lang.Object) strMatcher30, (java.lang.Object) strBuilder32);
        java.util.Set<java.lang.Object> objSet37 = properties12.keySet();
        boolean boolean38 = properties0.equals((java.lang.Object) properties12);
        java.util.Set<java.lang.String> strSet39 = properties12.stringPropertyNames();
        int int40 = properties12.size();
        java.util.Properties properties41 = new java.util.Properties();
        int int42 = properties41.size();
        java.util.Set<java.lang.Object> objSet43 = properties41.keySet();
        boolean boolean44 = properties41.isEmpty();
        char[] charArray49 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        int int52 = strTokenizer51.size();
        boolean boolean53 = strTokenizer51.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer51.setIgnoredMatcher(strMatcher54);
        java.lang.Class<?> wildcardClass56 = strTokenizer55.getClass();
        java.lang.Object obj57 = properties41.remove((java.lang.Object) strTokenizer55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder69.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.appendln((double) '#');
        boolean boolean73 = strBuilder63.equals(strBuilder72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("########a4\n");
        boolean boolean76 = strTokenizer75.isIgnoreEmptyTokens();
        boolean boolean77 = properties41.remove((java.lang.Object) strBuilder63, (java.lang.Object) strTokenizer75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        int int79 = strBuilder78.capacity();
        java.lang.StringBuffer stringBuffer80 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder78.appendln(stringBuffer80, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder78.insert(1, (double) 32);
        boolean boolean87 = strBuilder78.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder78.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder78.append((long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder90.clear();
        boolean boolean92 = properties12.remove((java.lang.Object) properties41, (java.lang.Object) strBuilder90);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 32 + "'", int79 == 32);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test07978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07978");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, "");
        boolean boolean7 = strTokenizer6.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.reset("true");
        java.lang.String str10 = strTokenizer9.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.reset("true");
        java.lang.String str13 = strTokenizer12.next();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str10, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "true" + "'", str13, "true");
    }

    @Test
    public void test07979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07979");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.insert(1, (double) 32);
        java.lang.String str39 = strBuilder29.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.insert(1, '#');
        boolean boolean43 = strList28.equals((java.lang.Object) strBuilder29);
        boolean boolean44 = strList9.containsAll((java.util.Collection<java.lang.String>) strList28);
        char[] charArray49 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        int int52 = strTokenizer51.size();
        boolean boolean53 = strTokenizer51.hasNext();
        java.util.List<java.lang.String> strList54 = strTokenizer51.getTokenList();
        java.lang.String[] strArray58 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        boolean boolean61 = strList54.addAll((java.util.Collection<java.lang.String>) strList59);
        boolean boolean62 = strList28.containsAll((java.util.Collection<java.lang.String>) strList59);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.String> strItor64 = strList28.listIterator(106);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 106");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n32.0" + "'", str39, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test07980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07980");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.insert((int) (short) 0, "{}");
        int int15 = strBuilder13.indexOf("#");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.insert(1, (double) 32);
        java.lang.String str26 = strBuilder16.rightString((int) ' ');
        boolean boolean28 = strBuilder16.startsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder16.clear();
        java.io.IOException iOException31 = new java.io.IOException("hi!");
        java.io.IOException iOException33 = new java.io.IOException("hi!");
        iOException31.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException36 = new java.io.IOException("hi!");
        java.io.IOException iOException38 = new java.io.IOException("hi!");
        iOException36.addSuppressed((java.lang.Throwable) iOException38);
        iOException33.addSuppressed((java.lang.Throwable) iOException38);
        java.io.IOException iOException42 = new java.io.IOException("hi!");
        iOException33.addSuppressed((java.lang.Throwable) iOException42);
        java.lang.Throwable[] throwableArray44 = iOException42.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder29.appendWithSeparators((java.lang.Object[]) throwableArray44, "java.io.IOException: java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder13.appendWithSeparators((java.lang.Object[]) throwableArray44, "#\nStrTokenizer[not tokenized yet]ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean51 = strTokenizer50.hasNext();
        char[] charArray56 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, ' ');
        int int59 = strTokenizer58.size();
        boolean boolean60 = strTokenizer58.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer58.setIgnoredMatcher(strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer50.setDelimiterMatcher(strMatcher61);
        boolean boolean64 = strTokenizer63.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer63.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strTokenizer63.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer63.setQuoteChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder13.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer63, "java.io.IOException: StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n32.0" + "'", str26, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test07981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07981");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceAll(strMatcher13, "100.0");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.insert(4, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 4");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test07982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07982");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setDelimiterChar('$');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        strList4.clear();
        strList4.clear();
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strList4);
    }

    @Test
    public void test07983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07983");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        int int9 = strBuilder0.indexOf("java.io.IOException");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendln((float) 100L);
        java.lang.String str12 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append((float) 5);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test07984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07984");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(79);
    }

    @Test
    public void test07985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07985");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) '4');
        java.io.Writer writer28 = writer11.append((java.lang.CharSequence) strBuilder25);
        java.io.Writer writer30 = writer28.append('4');
        writer30.close();
        writer30.write("[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder34.appendFixedWidthPadRight((java.lang.Object) strBuilder43, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.append("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.setLength(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray57 = strTokenizer56.getTokenArray();
        java.lang.String[] strArray58 = strTokenizer56.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendWithSeparators((java.lang.Object[]) strArray58, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder54.delete(0, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder54.appendSeparator("1", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strBuilder67.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer68.setDelimiterString("100.0\000\000\000\000\000");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strTokenizer70.getQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder46.deleteFirst(strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("");
        int int77 = strBuilder73.indexOf("");
        int int80 = strBuilder73.lastIndexOf('#', (int) (byte) 0);
        boolean boolean82 = strBuilder73.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder73.appendAll((java.util.Iterator<java.lang.String>) strTokenizer83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder73.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder73.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder73.appendln((int) (byte) 100);
        char[] charArray91 = strBuilder73.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = new org.apache.commons.lang3.text.StrTokenizer(charArray91, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray91);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder72.append(charArray91);
        writer30.write(charArray91);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray91);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(writer30);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(charArray91);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray91), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray91), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray91), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strTokenizer97);
    }

    @Test
    public void test07986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07986");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: StrTokenizer[not tokenized yet]");
        java.lang.String str2 = strTokenizer1.next();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "java.io.IOException:" + "'", str2, "java.io.IOException:");
    }

    @Test
    public void test07987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07987");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray11 = strTokenizer10.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendAll((java.lang.Object[]) strArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendAll((java.lang.Object[]) strArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder6.appendln(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', '4');
        java.io.Writer writer36 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        char[] charArray48 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendln(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        writer36.write(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.append(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int56 = strBuilder28.indexOf(strMatcher54, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder3.deleteAll(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.insert(0, (long) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln((int) (short) 100);
        int int67 = strBuilder64.lastIndexOf(" ", 116);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.appendSeparator("java.io.IOException: {\ntrue\n=1.0}", "97\nhi!StrTokenizer[]");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.insert((int) 'g', false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 103");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test07988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07988");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream10 = strBuilder0.codePoints();
        java.lang.String str11 = strBuilder0.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.appendFixedWidthPadRight((int) (short) 10, 5, ' ');
        java.lang.String str17 = strBuilder0.leftString((int) '\000');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.replace(20, 101, "");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test07989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07989");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("\n100.0\n");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test07990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07990");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.appendln((double) '$');
        char[] charArray19 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        int int22 = strTokenizer21.size();
        boolean boolean23 = strTokenizer21.hasNext();
        java.util.List<java.lang.String> strList24 = strTokenizer21.getTokenList();
        java.lang.String[] strArray28 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        boolean boolean31 = strList24.addAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.String str33 = strList29.remove(0);
        char[] charArray38 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        int int41 = strTokenizer40.size();
        boolean boolean42 = strTokenizer40.hasNext();
        java.util.List<java.lang.String> strList43 = strTokenizer40.getTokenList();
        java.lang.String[] strArray47 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        boolean boolean50 = strList43.addAll((java.util.Collection<java.lang.String>) strList48);
        boolean boolean51 = strList29.addAll((java.util.Collection<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder6.appendAll((java.lang.Iterable<java.lang.String>) strList29);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("");
        int int57 = strBuilder53.indexOf("");
        int int60 = strBuilder53.lastIndexOf('#', (int) (byte) 0);
        boolean boolean62 = strBuilder53.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder53.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray67 = strTokenizer66.getTokenArray();
        java.lang.String[] strArray68 = strTokenizer66.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder53.appendWithSeparators((java.lang.Object[]) strArray68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder52.appendln((java.lang.Object) "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.appendSeparator('t', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.append((float) 26);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\n32.0" + "'", str33, "\n32.0");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test07991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07991");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "");
        char[] charArray30 = strBuilder26.toCharArray();
        char[] charArray31 = strBuilder23.getChars(charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        boolean boolean33 = strTokenizer32.hasPrevious();
        java.util.List<java.lang.String> strList34 = strTokenizer32.getTokenList();
        boolean boolean35 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer32.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder19.replaceAll(strMatcher36, "\n32.0java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray44 = strTokenizer43.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.appendAll((java.lang.Object[]) strArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray54 = strTokenizer53.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendAll((java.lang.Object[]) strArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder39.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "");
        char[] charArray68 = strBuilder64.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder63.appendln(charArray68);
        boolean boolean70 = strBuilder39.equals((java.lang.Object) strBuilder63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getDelimiterMatcher();
        int int75 = strBuilder39.indexOf(strMatcher74);
        int int77 = strBuilder38.lastIndexOf(strMatcher74, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        int int80 = strBuilder79.capacity();
        java.lang.StringBuffer stringBuffer81 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder79.appendln(stringBuffer81, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int86 = strBuilder84.lastIndexOf(strMatcher85);
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        boolean boolean88 = strBuilder84.contains(strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer89.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder38.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer91, "########");
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder93.append((double) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder93.append('g');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[]");
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 32 + "'", int80 == 32);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test07992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07992");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.insert((int) (short) 0, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder50.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        int int56 = strBuilder55.capacity();
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(stringBuffer57, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int62 = strBuilder60.lastIndexOf(strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder51.replaceFirst(strMatcher61, "hi!");
        char[] charArray67 = strBuilder64.toCharArray(0, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder44.appendln(charArray67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray74 = strTokenizer73.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.appendAll((java.lang.Object[]) strArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder69.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray84 = strTokenizer83.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.appendAll((java.lang.Object[]) strArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder69.appendln(strBuilder85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder69.setNullText("########a4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.deleteAll('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder44.append((java.lang.CharSequence) strBuilder90);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder44.appendln((long) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 32 + "'", int56 == 32);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test07993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07993");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("\n\000\0000.0100\n");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test07994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07994");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        char[] charArray18 = strBuilder14.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "");
        boolean boolean21 = strTokenizer20.hasNext();
        boolean boolean22 = strTokenizer20.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        java.util.List<java.lang.String> strList24 = strTokenizer20.getTokenList();
        java.lang.String str25 = strTokenizer20.getContent();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test07995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07995");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 10);
        java.lang.String str12 = strBuilder10.rightString((int) 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        java.lang.String[] strArray18 = strTokenizer16.getTokenArray();
        boolean boolean19 = strTokenizer16.hasNext();
        int int20 = strTokenizer16.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer16.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher21);
        java.util.List<java.lang.String> strList23 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer22.getIgnoredMatcher();
        int int25 = strBuilder13.lastIndexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        java.lang.String str36 = strBuilder32.getNewLineText();
        java.util.stream.IntStream intStream37 = strBuilder32.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder29.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder29.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder29.appendFixedWidthPadLeft((int) (byte) 1, 32, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendSeparator("100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendFixedWidthPadRight(14, (int) 't', '#');
        boolean boolean51 = strBuilder13.equalsIgnoreCase(strBuilder50);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder13.delete(9, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "100.0\000\000\000\000\000" + "'", str12, "100.0\000\000\000\000\000");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test07996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07996");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.deleteAll("StrTokenizer[]");
        int int28 = strBuilder26.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        int int33 = strBuilder29.indexOf("");
        int int36 = strBuilder29.lastIndexOf('#', (int) (byte) 0);
        boolean boolean38 = strBuilder29.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder29.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder26.append(strBuilder44, 1, 0);
        java.lang.StringBuffer stringBuffer48 = strBuilder26.toStringBuffer();
        java.io.Reader reader49 = strBuilder26.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder26.appendSeparator("");
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray54 = strBuilder26.toCharArray((int) 's', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(stringBuffer48);
        org.junit.Assert.assertEquals(stringBuffer48.toString(), "");
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test07997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07997");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.ensureCapacity(53);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder5.ensureCapacity((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln((long) 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append(false);
        boolean boolean26 = strBuilder25.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test07998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07998");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(" #\n", "100.0\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset("StrTokenizer[4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendln((java.lang.Object) "StrTokenizer[4#4]");
        int int8 = strBuilder7.size();
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 36 + "'", int8 == 36);
    }

    @Test
    public void test07999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07999");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "");
        boolean boolean9 = strBuilder7.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln('#');
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.append(stringBuffer18, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.deleteFirst("hi!");
        char[] charArray24 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer11.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        char[] charArray27 = strBuilder7.getChars(charArray24);
        java.lang.Object obj28 = properties0.remove((java.lang.Object) charArray27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties0.elements();
        java.util.Set<java.lang.Object> objSet30 = properties0.keySet();
        int int31 = properties0.size();
        java.io.OutputStream outputStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream32, "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, \n]");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test08000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test08000");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        java.io.Reader reader4 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendln(charArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder11.appendln((double) '$');
        char[] charArray24 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        int int27 = strTokenizer26.size();
        boolean boolean28 = strTokenizer26.hasNext();
        java.util.List<java.lang.String> strList29 = strTokenizer26.getTokenList();
        java.lang.String[] strArray33 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = strList29.addAll((java.util.Collection<java.lang.String>) strList34);
        java.lang.String str38 = strList34.remove(0);
        char[] charArray43 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        int int46 = strTokenizer45.size();
        boolean boolean47 = strTokenizer45.hasNext();
        java.util.List<java.lang.String> strList48 = strTokenizer45.getTokenList();
        java.lang.String[] strArray52 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        boolean boolean55 = strList48.addAll((java.util.Collection<java.lang.String>) strList53);
        boolean boolean56 = strList34.addAll((java.util.Collection<java.lang.String>) strList53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder11.appendAll((java.lang.Iterable<java.lang.String>) strList34);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder0.append((java.lang.CharSequence) strBuilder57);
        java.io.Reader reader59 = strBuilder57.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.replaceAll('#', 'a');
        char[] charArray63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder57.appendln(charArray63, (int) (short) 10, 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder57.appendSeparator("java.io.IOException: {\ntrue\n=1.0}", 4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str72 = strBuilder57.substring(236, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader4);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\n32.0" + "'", str38, "\n32.0");
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(reader59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
    }
}

