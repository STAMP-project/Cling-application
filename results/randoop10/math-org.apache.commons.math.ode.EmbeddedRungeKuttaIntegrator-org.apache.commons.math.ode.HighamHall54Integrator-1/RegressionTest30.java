import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest30 {

    public static boolean debug = false;

    @Test
    public void test15001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15001");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, 31.622776601683793d, (double) 'a', 24.322992790977874d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test15002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15002");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, (double) 10, 0.0d);
        int int5 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) 10L);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction10, (double) (short) -1, (double) (short) 100, 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction15, (double) 10L, (double) 100L, 0);
        highamHall54Integrator4.setSafety(0.0d);
        highamHall54Integrator4.setInitialStepSize(56.23413251903491d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
    }

    @Test
    public void test15003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15003");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator4.setMinReduction(0.9d);
        highamHall54Integrator4.setInitialStepSize((double) 10L);
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        int int10 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
    }

    @Test
    public void test15004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15004");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray19, doubleArray32);
        double double37 = highamHall54Integrator36.getMaxStep();
        int int38 = highamHall54Integrator36.getOrder();
        java.lang.String str39 = highamHall54Integrator36.getName();
        double double40 = highamHall54Integrator36.getSafety();
        double double41 = highamHall54Integrator36.getMinStep();
        double double42 = highamHall54Integrator36.getSafety();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 35.0d + "'", double37 == 35.0d);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Higham-Hall 5(4)" + "'", str39, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.9d + "'", double40 == 0.9d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 35.0d + "'", double41 == 35.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.9d + "'", double42 == 0.9d);
    }

    @Test
    public void test15005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15005");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException1 = new org.apache.commons.math.ode.DerivativeException(throwable0);
        org.apache.commons.math.ode.DerivativeException derivativeException2 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException1);
        java.lang.Throwable[] throwableArray3 = derivativeException2.getSuppressed();
        java.lang.String str4 = derivativeException2.getPattern();
        java.lang.String str5 = derivativeException2.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException2);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException6);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test15006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15006");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.Object[] objArray11 = derivativeException8.getArguments();
        java.lang.String str12 = derivativeException8.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException13);
        java.lang.Object[] objArray15 = integratorException14.getArguments();
        java.lang.Throwable[] throwableArray16 = integratorException14.getSuppressed();
        java.lang.String str17 = integratorException14.getPattern();
        java.lang.Throwable[] throwableArray18 = integratorException14.getSuppressed();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test15007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15007");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        java.lang.Throwable[] throwableArray19 = derivativeException18.getSuppressed();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test15008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15008");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        java.lang.String str27 = derivativeException26.toString();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str27, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test15009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15009");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        java.lang.String str21 = integratorException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        java.lang.Object[] objArray24 = integratorException19.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException46);
        derivativeException37.addSuppressed((java.lang.Throwable) derivativeException47);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray63);
        derivativeException47.addSuppressed((java.lang.Throwable) derivativeException71);
        integratorException19.addSuppressed((java.lang.Throwable) derivativeException47);
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException47);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException47);
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException47);
        java.lang.Object[] objArray77 = derivativeException76.getArguments();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
    }

    @Test
    public void test15010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15010");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        java.lang.Object[] objArray9 = derivativeException8.getArguments();
        java.lang.Throwable[] throwableArray10 = derivativeException8.getSuppressed();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        java.lang.Object[] objArray20 = derivativeException19.getArguments();
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException19);
        double[] doubleArray36 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray38 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray36, doubleArray38);
        java.lang.Object[] objArray40 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray40);
        java.lang.Object[] objArray42 = integratorException41.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException41);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray54);
        java.lang.Object[] objArray56 = derivativeException55.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray56);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray56);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray56);
        integratorException41.addSuppressed((java.lang.Throwable) integratorException59);
        java.lang.Throwable[] throwableArray61 = integratorException59.getSuppressed();
        derivativeException8.addSuppressed((java.lang.Throwable) integratorException59);
        java.lang.String str63 = integratorException59.toString();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)" + "'", str63, "org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)");
    }

    @Test
    public void test15011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15011");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator4.setMinReduction(0.9d);
        double double7 = highamHall54Integrator4.getMinStep();
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety((double) 5);
        highamHall54Integrator4.setInitialStepSize((double) (-1.0f));
        double double14 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str15 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
    }

    @Test
    public void test15012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15012");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getMaxStep();
        double double17 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setInitialStepSize((double) 'a');
        highamHall54Integrator11.setSafety((double) (byte) 10);
        java.lang.String str22 = highamHall54Integrator11.getName();
        java.lang.String str23 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction(10.0d);
        double double26 = highamHall54Integrator11.getMaxStep();
        java.lang.String str27 = highamHall54Integrator11.getName();
        double double28 = highamHall54Integrator11.getMaxGrowth();
        double double29 = highamHall54Integrator11.getMaxStep();
        double double30 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setMinReduction(33.46640106136302d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
    }

    @Test
    public void test15013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15013");
        java.lang.String[] strArray6 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        java.lang.String str13 = integratorException11.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        java.lang.Object[] objArray15 = integratorException14.getArguments();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
    }

    @Test
    public void test15014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15014");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        java.lang.Object[] objArray34 = derivativeException33.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray34);
        integratorException19.addSuppressed((java.lang.Throwable) integratorException37);
        java.lang.Throwable[] throwableArray39 = integratorException37.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException37);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException40);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException41);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray39);
    }

    @Test
    public void test15015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15015");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        double[] doubleArray13 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray15 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray13, doubleArray15);
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler29);
        highamHall54Integrator4.setStepHandler(stepHandler29);
        int int32 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety(22.80350850198276d);
        double double35 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.9d + "'", double35 == 0.9d);
    }

    @Test
    public void test15016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15016");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test15017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15017");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray20);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException23);
        double[] doubleArray40 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray42 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray40, doubleArray42);
        java.lang.Object[] objArray44 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray44);
        java.lang.Object[] objArray46 = integratorException45.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException47);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException48);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException49);
        derivativeException9.addSuppressed((java.lang.Throwable) integratorException50);
        java.lang.Object[] objArray52 = derivativeException9.getArguments();
        java.lang.Throwable[] throwableArray53 = derivativeException9.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray53);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray53);
    }

    @Test
    public void test15018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15018");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getMaxStep();
        int int16 = highamHall54Integrator11.getOrder();
        double double17 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setInitialStepSize(1.5798067522067591d);
        highamHall54Integrator11.setInitialStepSize((double) 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
    }

    @Test
    public void test15019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15019");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMinReduction();
        double double15 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction16, (double) 100.0f, (double) (short) -1, (int) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator11.getStepHandler();
        int int22 = highamHall54Integrator11.getOrder();
        double double23 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator11.getStepHandler();
        double double25 = highamHall54Integrator11.getMinStep();
        double double26 = highamHall54Integrator11.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator11.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 31.144823004794873d + "'", double23 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 97.0d + "'", double25 == 97.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 97.0d + "'", double26 == 97.0d);
        org.junit.Assert.assertNotNull(stepHandler27);
    }

    @Test
    public void test15020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15020");
        double[] doubleArray2 = null;
        double[] doubleArray7 = null;
        double[] doubleArray18 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray20 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray18, doubleArray20);
        double[] doubleArray30 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray32 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray30, doubleArray32);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray18, doubleArray32);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator(32.0d, (double) (short) 100, doubleArray7, doubleArray18);
        double[] doubleArray46 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray48 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray46, doubleArray48);
        double[] doubleArray52 = new double[] { (-1L), 97.0d };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, doubleArray48, doubleArray52);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, 31.622776601683793d, doubleArray7, doubleArray52);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator(17.88854381999832d, (double) 100L, doubleArray2, doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 97.0]");
    }

    @Test
    public void test15021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15021");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(97.0d, 0.0d, (double) (byte) 100, 0.0d);
        double double5 = highamHall54Integrator4.getMaxStep();
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator17.setStepHandler(stepHandler30);
        int int32 = highamHall54Integrator17.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler33);
        highamHall54Integrator4.setSafety(100.0d);
        double double37 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator4.getStepHandler();
        double double39 = highamHall54Integrator4.getSafety();
        double double40 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 100.0d + "'", double39 == 100.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 100.0d + "'", double40 == 100.0d);
    }

    @Test
    public void test15022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15022");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(97.0d, 0.0d, (double) (byte) 100, 0.0d);
        double double5 = highamHall54Integrator4.getMaxStep();
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator17.setStepHandler(stepHandler30);
        int int32 = highamHall54Integrator17.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler33);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction35, 31.144823004794873d, (double) (short) 10, (int) (byte) 100);
        double double40 = highamHall54Integrator4.getMaxStep();
        double double41 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str42 = highamHall54Integrator4.getName();
        double double43 = highamHall54Integrator4.getSafety();
        java.lang.String str44 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Higham-Hall 5(4)" + "'", str42, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.9d + "'", double43 == 0.9d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Higham-Hall 5(4)" + "'", str44, "Higham-Hall 5(4)");
    }

    @Test
    public void test15023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15023");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.Object[] objArray11 = derivativeException8.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray27);
    }

    @Test
    public void test15024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15024");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        java.lang.Class<?> wildcardClass25 = derivativeException24.getClass();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test15025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15025");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException20);
        java.lang.Throwable[] throwableArray23 = integratorException20.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException24);
        java.lang.Object[] objArray26 = integratorException25.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException25);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException27);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray41);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray41);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray41);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", (java.lang.Object[]) strArray41);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException47);
        integratorException28.addSuppressed((java.lang.Throwable) integratorException47);
        java.lang.String str50 = integratorException28.getPattern();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test15026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15026");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray11);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test15027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15027");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (-0.0d), 31.622776601683793d, (double) (byte) -1);
        double double5 = highamHall54Integrator4.getMinReduction();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        double[] doubleArray27 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray29 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray27, doubleArray29);
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator30.getStepHandler();
        highamHall54Integrator18.setStepHandler(stepHandler31);
        java.lang.String str33 = highamHall54Integrator18.getName();
        highamHall54Integrator18.setMaxGrowth((double) (short) -1);
        java.lang.String str36 = highamHall54Integrator18.getName();
        highamHall54Integrator18.setMaxGrowth((double) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator18.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator44.setMinReduction(0.9d);
        double double47 = highamHall54Integrator44.getMinStep();
        int int48 = highamHall54Integrator44.getOrder();
        double double49 = highamHall54Integrator44.getCurrentSignedStepsize();
        double double50 = highamHall54Integrator44.getMaxGrowth();
        int int51 = highamHall54Integrator44.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator44.getStepHandler();
        highamHall54Integrator18.setStepHandler(stepHandler52);
        highamHall54Integrator4.setStepHandler(stepHandler52);
        int int55 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(17.78279410038923d);
        double double58 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Higham-Hall 5(4)" + "'", str33, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Higham-Hall 5(4)" + "'", str36, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 5 + "'", int51 == 5);
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 5 + "'", int55 == 5);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2d + "'", double58 == 0.2d);
    }

    @Test
    public void test15028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15028");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        java.lang.Throwable[] throwableArray17 = derivativeException16.getSuppressed();
        java.lang.String str18 = derivativeException16.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException16);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str18, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test15029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15029");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMaxGrowth();
        double double28 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMinReduction(97.0d);
        highamHall54Integrator11.setMinReduction(97.0d);
        int int33 = highamHall54Integrator11.getOrder();
        double double34 = highamHall54Integrator11.getCurrentStepStart();
        highamHall54Integrator11.setInitialStepSize(10.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.9d + "'", double28 == 0.9d);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
    }

    @Test
    public void test15030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15030");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        java.lang.String str21 = derivativeException20.getPattern();
        java.lang.Object[] objArray22 = derivativeException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str21, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!, , , , , ]");
    }

    @Test
    public void test15031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15031");
        double[] doubleArray12 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray14 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray12, doubleArray14);
        double[] doubleArray24 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray26 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray24, doubleArray26);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray12, doubleArray26);
        double[] doubleArray37 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray46 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray48 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray46, doubleArray48);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray37, doubleArray46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (byte) 1, doubleArray26, doubleArray46);
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator51.getStepHandler();
        double double53 = highamHall54Integrator51.getMinReduction();
        double double54 = highamHall54Integrator51.getCurrentSignedStepsize();
        double double55 = highamHall54Integrator51.getMaxGrowth();
        double double56 = highamHall54Integrator51.getMaxStep();
        highamHall54Integrator51.setInitialStepSize((double) 100.0f);
        double double59 = highamHall54Integrator51.getMinReduction();
        highamHall54Integrator51.setInitialStepSize(0.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2d + "'", double53 == 0.2d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.2d + "'", double59 == 0.2d);
    }

    @Test
    public void test15032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15032");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        java.lang.String str5 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) (short) 10);
        double double8 = highamHall54Integrator4.getMinReduction();
        double double9 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setInitialStepSize((-0.0d));
        java.lang.String str12 = highamHall54Integrator4.getName();
        int int13 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth((double) (byte) 0);
        int int16 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
    }

    @Test
    public void test15033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15033");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', 48.57293794619442d, 59.16079783099616d, (double) (byte) 1);
    }

    @Test
    public void test15034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15034");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.Object[] objArray11 = derivativeException8.getArguments();
        java.lang.String str12 = derivativeException8.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String str14 = derivativeException13.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException15);
        java.lang.Throwable[] throwableArray17 = integratorException15.getSuppressed();
        java.lang.String str18 = integratorException15.getPattern();
        java.lang.String str19 = integratorException15.toString();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str19, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test15035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15035");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setInitialStepSize((double) 0);
        java.lang.String str17 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction18, (double) (short) 1, 1.0d, (int) (byte) 10);
        double double23 = highamHall54Integrator11.getMinStep();
        double double24 = highamHall54Integrator11.getMaxGrowth();
        java.lang.String str25 = highamHall54Integrator11.getName();
        java.lang.String str26 = highamHall54Integrator11.getName();
        double double27 = highamHall54Integrator11.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator11.getStepHandler();
        double double29 = highamHall54Integrator11.getMinReduction();
        java.lang.String str30 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction(Double.NaN);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 97.0d + "'", double23 == 97.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 97.0d + "'", double27 == 97.0d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
    }

    @Test
    public void test15036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15036");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(52.0d, 97.0d, (double) 5, (double) (short) 100);
        highamHall54Integrator4.setInitialStepSize((double) 5);
    }

    @Test
    public void test15037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15037");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        double double7 = highamHall54Integrator4.getSafety();
        double[] doubleArray16 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray18 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray16, doubleArray18);
        double[] doubleArray28 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray30 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray28, doubleArray30);
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator31.getStepHandler();
        highamHall54Integrator19.setStepHandler(stepHandler32);
        double double34 = highamHall54Integrator19.getMaxStep();
        double double35 = highamHall54Integrator19.getMaxGrowth();
        highamHall54Integrator19.setInitialStepSize((double) (byte) 1);
        double double38 = highamHall54Integrator19.getCurrentStepStart();
        double double39 = highamHall54Integrator19.getCurrentSignedStepsize();
        double[] doubleArray48 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray50 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray48, doubleArray50);
        double double52 = highamHall54Integrator51.getCurrentSignedStepsize();
        highamHall54Integrator51.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator51.getStepHandler();
        highamHall54Integrator51.setSafety((double) 100L);
        org.apache.commons.math.ode.StepHandler stepHandler58 = highamHall54Integrator51.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler59 = highamHall54Integrator51.getStepHandler();
        highamHall54Integrator19.setStepHandler(stepHandler59);
        highamHall54Integrator4.setStepHandler(stepHandler59);
        double double62 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((double) (short) 100);
        double double65 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler66 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 31.144823004794873d + "'", double39 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 31.144823004794873d + "'", double52 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.9d + "'", double65 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler66);
    }

    @Test
    public void test15038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15038");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 0, (double) 'a', (double) (-1));
        double double5 = highamHall54Integrator4.getMinReduction();
        double double6 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setInitialStepSize((double) (short) 1);
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 35.0d + "'", double6 == 35.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test15039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15039");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException20);
        java.lang.Throwable[] throwableArray23 = derivativeException22.getSuppressed();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
    }

    @Test
    public void test15040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15040");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, 17.88854381999832d, Double.NaN, 0.0d);
    }

    @Test
    public void test15041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15041");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 0, (double) 'a', (double) (-1));
        int int5 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize(35.0d);
        double[] doubleArray12 = null;
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) 100, doubleArray12, doubleArray21);
        double[] doubleArray36 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray38 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray36, doubleArray38);
        double[] doubleArray52 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray54 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray52, doubleArray54);
        double[] doubleArray64 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray66 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray64, doubleArray66);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray52, doubleArray66);
        double[] doubleArray77 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray86 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray88 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator89 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray86, doubleArray88);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator90 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray77, doubleArray86);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator91 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (byte) 1, doubleArray66, doubleArray86);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator92 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (-1L), doubleArray38, doubleArray86);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator93 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) 0L, doubleArray21, doubleArray38);
        org.apache.commons.math.ode.StepHandler stepHandler94 = highamHall54Integrator93.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler94);
        java.lang.String str96 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler94);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Higham-Hall 5(4)" + "'", str96, "Higham-Hall 5(4)");
    }

    @Test
    public void test15042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15042");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) 100);
        double double29 = highamHall54Integrator11.getMinStep();
        java.lang.String str30 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator11.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 97.0d + "'", double29 == 97.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler31);
    }

    @Test
    public void test15043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15043");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(22.80350850198276d, 17.88854381999832d, 22.80350850198276d, (double) 'a');
    }

    @Test
    public void test15044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15044");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        java.lang.String str22 = integratorException20.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException20);
        java.lang.Throwable[] throwableArray24 = integratorException20.getSuppressed();
        java.lang.Throwable[] throwableArray25 = integratorException20.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray25);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray37);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray51);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException54);
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray67);
        java.lang.Object[] objArray69 = derivativeException68.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray69);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray69);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray69);
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray69);
        derivativeException54.addSuppressed((java.lang.Throwable) integratorException73);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException54);
        derivativeException41.addSuppressed((java.lang.Throwable) derivativeException54);
        integratorException26.addSuppressed((java.lang.Throwable) derivativeException54);
        org.apache.commons.math.ode.IntegratorException integratorException78 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException54);
        org.apache.commons.math.ode.IntegratorException integratorException79 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException54);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, , , , , ]");
    }

    @Test
    public void test15045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15045");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        java.lang.String str23 = derivativeException22.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        java.lang.String str25 = derivativeException22.getPattern();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str23, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str25, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test15046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15046");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) 100L, Double.NaN, 0.0d);
        double double5 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
    }

    @Test
    public void test15047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15047");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        java.lang.Class<?> wildcardClass19 = strArray12.getClass();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test15048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15048");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray20);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray20);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", (java.lang.Object[]) strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("", strArray20);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray20);
        java.lang.Throwable[] throwableArray34 = integratorException33.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray34);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test15049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15049");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        java.lang.String str17 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction(100.0d);
        double double20 = highamHall54Integrator11.getMinStep();
        double double21 = highamHall54Integrator11.getMinReduction();
        double double22 = highamHall54Integrator11.getMaxStep();
        double double23 = highamHall54Integrator11.getMinStep();
        highamHall54Integrator11.setMaxGrowth(7.521206186172788d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 97.0d + "'", double20 == 97.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 97.0d + "'", double23 == 97.0d);
    }

    @Test
    public void test15050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15050");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test15051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15051");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test15052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15052");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        int int26 = highamHall54Integrator11.getOrder();
        int int27 = highamHall54Integrator11.getOrder();
        double double28 = highamHall54Integrator11.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
    }

    @Test
    public void test15053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15053");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction13, (double) '4', 1.0d, 0);
        highamHall54Integrator11.setMaxGrowth(35.0d);
        double[] doubleArray28 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray30 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray28, doubleArray30);
        double double32 = highamHall54Integrator31.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        highamHall54Integrator31.addSwitchingFunction(switchingFunction33, (double) '4', 1.0d, 0);
        double double38 = highamHall54Integrator31.getSafety();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator43.setMinReduction(0.9d);
        double double46 = highamHall54Integrator43.getSafety();
        double[] doubleArray55 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray57 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray55, doubleArray57);
        highamHall54Integrator58.setMaxGrowth((double) (-1));
        double double61 = highamHall54Integrator58.getMaxStep();
        java.lang.String str62 = highamHall54Integrator58.getName();
        double double63 = highamHall54Integrator58.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler64 = highamHall54Integrator58.getStepHandler();
        highamHall54Integrator43.setStepHandler(stepHandler64);
        highamHall54Integrator31.setStepHandler(stepHandler64);
        highamHall54Integrator11.setStepHandler(stepHandler64);
        org.apache.commons.math.ode.StepHandler stepHandler68 = highamHall54Integrator11.getStepHandler();
        java.lang.String str69 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 31.144823004794873d + "'", double32 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.9d + "'", double38 == 0.9d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.9d + "'", double46 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Higham-Hall 5(4)" + "'", str62, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.2d + "'", double63 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertNotNull(stepHandler68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Higham-Hall 5(4)" + "'", str69, "Higham-Hall 5(4)");
    }

    @Test
    public void test15054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15054");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray12);
        java.lang.String str19 = integratorException18.toString();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str19, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test15055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15055");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (short) 0, (double) 100.0f, (double) 1.0f);
        double double5 = highamHall54Integrator4.getSafety();
        int int6 = highamHall54Integrator4.getOrder();
        java.lang.String str7 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9d + "'", double5 == 0.9d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
    }

    @Test
    public void test15056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15056");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.Throwable[] throwableArray10 = derivativeException9.getSuppressed();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray22);
        java.lang.String str28 = derivativeException27.getPattern();
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException27);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        java.lang.Object[] objArray42 = derivativeException41.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray42);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray42);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray42);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException45);
        java.lang.String str47 = integratorException45.getPattern();
        derivativeException27.addSuppressed((java.lang.Throwable) integratorException45);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray61);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray61);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray61);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("", strArray61);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray61);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray61);
        integratorException45.addSuppressed((java.lang.Throwable) derivativeException67);
        java.lang.Throwable[] throwableArray69 = derivativeException67.getSuppressed();
        java.lang.Object[] objArray70 = derivativeException67.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException67);
        java.lang.Throwable[] throwableArray72 = derivativeException67.getSuppressed();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str28, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str47, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray72);
    }

    @Test
    public void test15057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15057");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray12);
        java.lang.Object[] objArray17 = derivativeException16.getArguments();
        java.lang.Throwable[] throwableArray18 = derivativeException16.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray18);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test15058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15058");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100L, 17.78279410038923d, 9.848857801796104d, 5.282402246372794d);
    }

    @Test
    public void test15059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15059");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setInitialStepSize((double) (byte) 1);
        double double30 = highamHall54Integrator11.getCurrentStepStart();
        double double31 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double32 = highamHall54Integrator11.getSafety();
        java.lang.String str33 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction34, (double) (-1.0f), (double) 1.0f, (int) (byte) 1);
        double double39 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler40 = highamHall54Integrator11.getStepHandler();
        double double41 = highamHall54Integrator11.getCurrentStepStart();
        double double42 = highamHall54Integrator11.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction43 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction43, 7.211102550927978d, 32.0d, 0);
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        double[] doubleArray70 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray72 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray70, doubleArray72);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray58, doubleArray72);
        double double75 = highamHall54Integrator74.getMinStep();
        java.lang.String str76 = highamHall54Integrator74.getName();
        org.apache.commons.math.ode.StepHandler stepHandler77 = highamHall54Integrator74.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler77);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 31.144823004794873d + "'", double31 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Higham-Hall 5(4)" + "'", str33, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.9d + "'", double39 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler40);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.2d + "'", double42 == 0.2d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2d + "'", double75 == 0.2d);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Higham-Hall 5(4)" + "'", str76, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler77);
    }

    @Test
    public void test15060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15060");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        highamHall54Integrator4.setMinReduction(32.0d);
        double double7 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double[] doubleArray17 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray19 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray17, doubleArray19);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        highamHall54Integrator20.addSwitchingFunction(switchingFunction21, (double) 'a', 0.0d, 5);
        double double26 = highamHall54Integrator20.getMaxGrowth();
        highamHall54Integrator20.setMaxGrowth((double) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator20.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler29);
        double double31 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
    }

    @Test
    public void test15061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15061");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException15);
        java.lang.String str17 = integratorException16.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException16);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray33);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray33);
        integratorException16.addSuppressed((java.lang.Throwable) integratorException41);
        java.lang.Throwable[] throwableArray43 = integratorException16.getSuppressed();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str17, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(throwableArray43);
    }

    @Test
    public void test15062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15062");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException14);
        java.lang.String str17 = derivativeException14.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException14);
        java.lang.String str19 = derivativeException18.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str19, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test15063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15063");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 5, 1.5798067522067591d, (double) (short) -1);
    }

    @Test
    public void test15064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15064");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray11);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test15065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15065");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(31.144823004794873d, 32.0d, (double) (byte) 0, (double) 100.0f);
        java.lang.String str5 = highamHall54Integrator4.getName();
        double double6 = highamHall54Integrator4.getMaxStep();
        int int7 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 32.0d + "'", double6 == 32.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
    }

    @Test
    public void test15066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15066");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        java.lang.Throwable[] throwableArray24 = integratorException23.getSuppressed();
        java.lang.Throwable[] throwableArray25 = integratorException23.getSuppressed();
        java.lang.String[] strArray32 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray32);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray32);
        java.lang.Object[] objArray37 = derivativeException36.getArguments();
        java.lang.String str38 = derivativeException36.getPattern();
        integratorException23.addSuppressed((java.lang.Throwable) derivativeException36);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[org.apache.commons.math.ode.IntegratorException: hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[org.apache.commons.math.ode.IntegratorException: hi!, ]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str38, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test15067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15067");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        double[] doubleArray13 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray15 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray13, doubleArray15);
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler29);
        highamHall54Integrator4.setStepHandler(stepHandler29);
        highamHall54Integrator4.setInitialStepSize((double) 100.0f);
        double double34 = highamHall54Integrator4.getMinStep();
        java.lang.String str35 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1.0d) + "'", double34 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Higham-Hall 5(4)" + "'", str35, "Higham-Hall 5(4)");
    }

    @Test
    public void test15068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15068");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        java.lang.String str5 = highamHall54Integrator4.getName();
        double double6 = highamHall54Integrator4.getMaxStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMinReduction((double) 10L);
        double double10 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, 31.622776601683793d, 9.848857801796104d, (int) (byte) 100);
        double double16 = highamHall54Integrator4.getCurrentStepStart();
        int int17 = highamHall54Integrator4.getOrder();
        double double18 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str19 = highamHall54Integrator4.getName();
        int int20 = highamHall54Integrator4.getOrder();
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        double double22 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.9d + "'", double10 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
    }

    @Test
    public void test15069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15069");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        double double18 = highamHall54Integrator11.getMinReduction();
        double double19 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setMinReduction(0.9d);
        double double22 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setSafety((-1.0d));
        double double25 = highamHall54Integrator11.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2d + "'", double19 == 0.2d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 31.144823004794873d + "'", double22 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 97.0d + "'", double25 == 97.0d);
    }

    @Test
    public void test15070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15070");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setInitialStepSize((double) (short) 0);
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        highamHall54Integrator29.setMaxGrowth((double) (-1));
        double double32 = highamHall54Integrator29.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler33);
        highamHall54Integrator11.setMinReduction((double) 10.0f);
        highamHall54Integrator11.setMaxGrowth((double) 0L);
        double double39 = highamHall54Integrator11.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction40, 56.23413251903491d, (double) (short) 0, 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 97.0d + "'", double39 == 97.0d);
    }

    @Test
    public void test15071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15071");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        double double27 = highamHall54Integrator11.getMinReduction();
        double double28 = highamHall54Integrator11.getSafety();
        double double29 = highamHall54Integrator11.getCurrentStepStart();
        int int30 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2d + "'", double27 == 0.2d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.9d + "'", double28 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
    }

    @Test
    public void test15072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15072");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setSafety(97.0d);
        double double17 = highamHall54Integrator11.getMinReduction();
        int int18 = highamHall54Integrator11.getOrder();
        java.lang.String str19 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setSafety((double) (short) 1);
        double double22 = highamHall54Integrator11.getMaxStep();
        double double23 = highamHall54Integrator11.getSafety();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
    }

    @Test
    public void test15073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15073");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray47 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray49 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray47, doubleArray49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) (short) -1, doubleArray21, doubleArray49);
        int int52 = highamHall54Integrator51.getOrder();
        double double53 = highamHall54Integrator51.getMinStep();
        highamHall54Integrator51.setMinReduction((double) (short) 0);
        highamHall54Integrator51.setMaxGrowth((double) (byte) 100);
        double double58 = highamHall54Integrator51.getCurrentStepStart();
        double double59 = highamHall54Integrator51.getMaxGrowth();
        java.lang.String str60 = highamHall54Integrator51.getName();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1.0d) + "'", double53 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 100.0d + "'", double59 == 100.0d);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Higham-Hall 5(4)" + "'", str60, "Higham-Hall 5(4)");
    }

    @Test
    public void test15074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15074");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test15075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15075");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        double double7 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        int int9 = highamHall54Integrator4.getOrder();
        int int10 = highamHall54Integrator4.getOrder();
        java.lang.Class<?> wildcardClass11 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test15076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15076");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        double[] doubleArray13 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray15 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray13, doubleArray15);
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler29);
        highamHall54Integrator4.setStepHandler(stepHandler29);
        highamHall54Integrator4.setInitialStepSize((double) 100.0f);
        java.lang.String str34 = highamHall54Integrator4.getName();
        double double35 = highamHall54Integrator4.getMaxStep();
        int int36 = highamHall54Integrator4.getOrder();
        java.lang.String str37 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.9d + "'", double35 == 0.9d);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 5 + "'", int36 == 5);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Higham-Hall 5(4)" + "'", str37, "Higham-Hall 5(4)");
    }

    @Test
    public void test15077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15077");
        java.lang.String[] strArray7 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray7);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test15078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15078");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException20);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", strArray34);
        integratorException21.addSuppressed((java.lang.Throwable) derivativeException40);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray34);
    }

    @Test
    public void test15079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15079");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, 0.0d, 33.46640106136302d, 1.5798067522067591d);
    }

    @Test
    public void test15080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15080");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        java.lang.Object[] objArray11 = derivativeException10.getArguments();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        java.lang.Object[] objArray24 = derivativeException23.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray24);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray24);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException37);
        integratorException27.addSuppressed((java.lang.Throwable) derivativeException37);
        java.lang.Throwable[] throwableArray40 = derivativeException37.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException37);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException37);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException37);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException37);
        java.lang.Throwable[] throwableArray45 = derivativeException44.getSuppressed();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray45);
    }

    @Test
    public void test15081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15081");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray10);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        java.lang.Object[] objArray26 = derivativeException25.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray26);
        derivativeException14.addSuppressed((java.lang.Throwable) integratorException28);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException14);
        java.lang.Throwable throwable32 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException(throwable32);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        java.lang.Throwable[] throwableArray35 = derivativeException34.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray35);
        integratorException30.addSuppressed((java.lang.Throwable) integratorException36);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test15082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15082");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        java.lang.Object[] objArray9 = derivativeException8.getArguments();
        java.lang.Throwable[] throwableArray10 = derivativeException8.getSuppressed();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        java.lang.Object[] objArray20 = derivativeException19.getArguments();
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.Throwable[] throwableArray23 = derivativeException8.getSuppressed();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray23);
    }

    @Test
    public void test15083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15083");
        java.lang.String[] strArray5 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray5);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray5);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException8);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException8);
        java.lang.Object[] objArray12 = integratorException11.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException11);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
    }

    @Test
    public void test15084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15084");
        double[] doubleArray12 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray14 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray12, doubleArray14);
        double[] doubleArray24 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray26 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray24, doubleArray26);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray12, doubleArray26);
        double[] doubleArray39 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray41 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray39, doubleArray41);
        double[] doubleArray45 = new double[] { (-1L), 97.0d };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, doubleArray41, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) (byte) 100, doubleArray12, doubleArray45);
        highamHall54Integrator47.setMaxGrowth((-1.0d));
        double double50 = highamHall54Integrator47.getCurrentSignedStepsize();
        double double51 = highamHall54Integrator47.getMinStep();
        java.lang.String str52 = highamHall54Integrator47.getName();
        highamHall54Integrator47.setMinReduction(10.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Higham-Hall 5(4)" + "'", str52, "Higham-Hall 5(4)");
    }

    @Test
    public void test15085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15085");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, (double) 10L, (double) (short) 100, (double) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (-1), (double) 100L, (int) (byte) 1);
        double double10 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
    }

    @Test
    public void test15086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15086");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        double double16 = highamHall54Integrator11.getMaxStep();
        java.lang.String str17 = highamHall54Integrator11.getName();
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        double[] doubleArray38 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray40 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray38, doubleArray40);
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator41.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler42);
        highamHall54Integrator11.setStepHandler(stepHandler42);
        double double45 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setInitialStepSize((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator11.getStepHandler();
        double double49 = highamHall54Integrator11.getCurrentStepStart();
        int int50 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.9d + "'", double45 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
    }

    @Test
    public void test15087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15087");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        double double16 = highamHall54Integrator11.getMaxStep();
        java.lang.String str17 = highamHall54Integrator11.getName();
        java.lang.String str18 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction((double) (-1));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
    }

    @Test
    public void test15088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15088");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test15089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15089");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMaxGrowth();
        double double28 = highamHall54Integrator11.getMinReduction();
        int int29 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMaxGrowth(35.0d);
        double double32 = highamHall54Integrator11.getMaxStep();
        double double33 = highamHall54Integrator11.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2d + "'", double28 == 0.2d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
    }

    @Test
    public void test15090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15090");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray10);
        java.lang.String str15 = derivativeException14.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException14);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)" + "'", str15, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)");
    }

    @Test
    public void test15091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15091");
        java.lang.String[] strArray10 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray10);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        java.lang.Object[] objArray28 = derivativeException27.getArguments();
        java.lang.Throwable[] throwableArray29 = derivativeException27.getSuppressed();
        java.lang.Throwable[] throwableArray30 = derivativeException27.getSuppressed();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        java.lang.Object[] objArray42 = derivativeException41.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray42);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray42);
        derivativeException27.addSuppressed((java.lang.Throwable) integratorException44);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException54);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException54);
        java.lang.Object[] objArray57 = derivativeException54.getArguments();
        java.lang.String str58 = derivativeException54.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException54);
        java.lang.String str60 = derivativeException59.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException59);
        integratorException44.addSuppressed((java.lang.Throwable) integratorException61);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException71);
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException71);
        java.lang.Object[] objArray74 = derivativeException71.getArguments();
        java.lang.String str75 = derivativeException71.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException71);
        org.apache.commons.math.ode.IntegratorException integratorException77 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException76);
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException77);
        java.lang.Object[] objArray79 = derivativeException78.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException80 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException78);
        java.lang.Throwable[] throwableArray81 = integratorException80.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException80);
        integratorException44.addSuppressed((java.lang.Throwable) derivativeException82);
        integratorException18.addSuppressed((java.lang.Throwable) integratorException44);
        java.lang.Throwable[] throwableArray85 = integratorException44.getSuppressed();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(throwableArray85);
    }

    @Test
    public void test15092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15092");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        highamHall54Integrator4.setMinReduction(32.0d);
        highamHall54Integrator4.setInitialStepSize(0.9d);
        highamHall54Integrator4.setMaxGrowth(97.0d);
        int int11 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize(31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertNotNull(stepHandler12);
    }

    @Test
    public void test15093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15093");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100L, (double) (byte) -1, (double) ' ', 9.924141172814958d);
        highamHall54Integrator4.setSafety(59.16079783099616d);
    }

    @Test
    public void test15094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15094");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException20);
        java.lang.Throwable[] throwableArray23 = integratorException20.getSuppressed();
        java.lang.Object[] objArray24 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", objArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException26);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[-1, 1, 1.0, -1.0, 1, a]");
    }

    @Test
    public void test15095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15095");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMinReduction((double) 100.0f);
        java.lang.String str29 = highamHall54Integrator11.getName();
        java.lang.String str30 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.9d + "'", double26 == 0.9d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
    }

    @Test
    public void test15096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15096");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setMinReduction((double) (byte) 100);
        highamHall54Integrator11.setInitialStepSize(Double.NaN);
        highamHall54Integrator11.setInitialStepSize((double) (byte) 1);
        int int22 = highamHall54Integrator11.getOrder();
        java.lang.String str23 = highamHall54Integrator11.getName();
        double double24 = highamHall54Integrator11.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 97.0d + "'", double24 == 97.0d);
    }

    @Test
    public void test15097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15097");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth(0.9d);
        java.lang.String str18 = highamHall54Integrator11.getName();
        double double19 = highamHall54Integrator11.getMaxGrowth();
        java.lang.String str20 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.9d + "'", double19 == 0.9d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
    }

    @Test
    public void test15098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15098");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double double17 = highamHall54Integrator11.getCurrentSignedStepsize();
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        highamHall54Integrator29.setMaxGrowth((double) (-1));
        double double32 = highamHall54Integrator29.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator29.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler34);
        int int36 = highamHall54Integrator11.getOrder();
        double double37 = highamHall54Integrator11.getMaxGrowth();
        double double38 = highamHall54Integrator11.getCurrentSignedStepsize();
        int int39 = highamHall54Integrator11.getOrder();
        int int40 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 31.144823004794873d + "'", double17 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 5 + "'", int36 == 5);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 31.144823004794873d + "'", double38 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
    }

    @Test
    public void test15099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15099");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException21);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test15100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15100");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 0, (double) 'a', (double) (-1));
        double double5 = highamHall54Integrator4.getMinReduction();
        double double6 = highamHall54Integrator4.getMaxGrowth();
        double double7 = highamHall54Integrator4.getMinStep();
        double double8 = highamHall54Integrator4.getMaxStep();
        int int9 = highamHall54Integrator4.getOrder();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler11 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 35.0d + "'", double7 == 35.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler11);
    }

    @Test
    public void test15101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15101");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test15102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15102");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, (double) 1L, 35.0d, (-1.0d));
        highamHall54Integrator4.setMaxGrowth((double) (short) 100);
        double double7 = highamHall54Integrator4.getMinReduction();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety((double) 0L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.2d + "'", double7 == 0.2d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
    }

    @Test
    public void test15103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15103");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray12);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        integratorException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.Throwable[] throwableArray28 = derivativeException25.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray43);
        java.lang.Object[] objArray45 = derivativeException44.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray45);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray45);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray45);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("", objArray45);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException50);
        derivativeException25.addSuppressed((java.lang.Throwable) integratorException50);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        java.lang.Throwable[] throwableArray55 = derivativeException25.getSuppressed();
        java.lang.String str56 = derivativeException25.getPattern();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
    }

    @Test
    public void test15104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15104");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        java.lang.String str22 = integratorException20.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException20);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray31);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException32);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException32);
        integratorException23.addSuppressed((java.lang.Throwable) derivativeException34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException23);
        java.lang.Object[] objArray37 = integratorException23.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", objArray37);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
    }

    @Test
    public void test15105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15105");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(31.622776601683793d, 52.0d, 31.144823004794873d, 17.88854381999832d);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 40.55100964572346d + "'", double5 == 40.55100964572346d);
    }

    @Test
    public void test15106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15106");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (double) '4', (double) 0, 1.0d);
    }

    @Test
    public void test15107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15107");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        java.lang.String str27 = highamHall54Integrator11.getName();
        int int28 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator11.getStepHandler();
        double double30 = highamHall54Integrator11.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 97.0d + "'", double30 == 97.0d);
    }

    @Test
    public void test15108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15108");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getMaxStep();
        int int17 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setSafety((double) 5);
        java.lang.String str20 = highamHall54Integrator11.getName();
        java.lang.String str21 = highamHall54Integrator11.getName();
        int int22 = highamHall54Integrator11.getOrder();
        int int23 = highamHall54Integrator11.getOrder();
        double double24 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 31.144823004794873d + "'", double24 == 31.144823004794873d);
    }

    @Test
    public void test15109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15109");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        int int13 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMaxGrowth((double) 10);
        java.lang.String str16 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        double[] doubleArray30 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray32 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray30, doubleArray32);
        double[] doubleArray42 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray44 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray42, doubleArray44);
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator45.getStepHandler();
        highamHall54Integrator33.setStepHandler(stepHandler46);
        highamHall54Integrator21.setStepHandler(stepHandler46);
        int int49 = highamHall54Integrator21.getOrder();
        java.lang.String str50 = highamHall54Integrator21.getName();
        highamHall54Integrator21.setSafety((double) 100.0f);
        int int53 = highamHall54Integrator21.getOrder();
        double double54 = highamHall54Integrator21.getMaxGrowth();
        double double55 = highamHall54Integrator21.getCurrentSignedStepsize();
        java.lang.String str56 = highamHall54Integrator21.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) ' ', 0.0d, (-1.0d), 0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler62 = highamHall54Integrator61.getStepHandler();
        highamHall54Integrator21.setStepHandler(stepHandler62);
        highamHall54Integrator11.setStepHandler(stepHandler62);
        java.lang.String str65 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Higham-Hall 5(4)" + "'", str50, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Higham-Hall 5(4)" + "'", str56, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Higham-Hall 5(4)" + "'", str65, "Higham-Hall 5(4)");
    }

    @Test
    public void test15110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15110");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        java.lang.String str17 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setSafety((double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
    }

    @Test
    public void test15111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15111");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, (double) 1, 5);
        double double10 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setInitialStepSize((double) (-1.0f));
        int int13 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
    }

    @Test
    public void test15112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15112");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(3.1622776601683795d, (double) (byte) 1, (double) 0.0f, 32.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, 100.0d, (double) 0, 0);
        double double10 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
    }

    @Test
    public void test15113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15113");
        double[] doubleArray12 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray14 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray12, doubleArray14);
        double[] doubleArray24 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray26 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray24, doubleArray26);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray12, doubleArray26);
        double[] doubleArray39 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray41 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray39, doubleArray41);
        double[] doubleArray45 = new double[] { (-1L), 97.0d };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, doubleArray41, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) (byte) 100, doubleArray12, doubleArray45);
        highamHall54Integrator47.setMaxGrowth((-1.0d));
        double double50 = highamHall54Integrator47.getCurrentSignedStepsize();
        double double51 = highamHall54Integrator47.getMinReduction();
        double double52 = highamHall54Integrator47.getSafety();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.2d + "'", double51 == 0.2d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9d + "'", double52 == 0.9d);
    }

    @Test
    public void test15114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15114");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.Object[] objArray10 = derivativeException9.getArguments();
        java.lang.Object[] objArray11 = derivativeException9.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("", objArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException12);
        java.lang.Object[] objArray14 = derivativeException13.getArguments();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
    }

    @Test
    public void test15115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15115");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray10);
        java.lang.Object[] objArray15 = derivativeException14.getArguments();
        java.lang.Throwable[] throwableArray16 = derivativeException14.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException14);
        java.lang.String str18 = derivativeException14.getPattern();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
    }

    @Test
    public void test15116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15116");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test15117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15117");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.Object[] objArray10 = derivativeException9.getArguments();
        java.lang.Object[] objArray11 = derivativeException9.getArguments();
        java.lang.Object[] objArray12 = derivativeException9.getArguments();
        java.lang.Throwable[] throwableArray13 = derivativeException9.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException14);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test15118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15118");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray12);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray24);
        java.lang.Throwable[] throwableArray29 = derivativeException28.getSuppressed();
        integratorException13.addSuppressed((java.lang.Throwable) derivativeException28);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException28);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("", strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray44);
        java.lang.Throwable[] throwableArray50 = derivativeException49.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray50);
        derivativeException31.addSuppressed((java.lang.Throwable) integratorException51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException31);
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray67);
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray67);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray67);
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray67);
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray67);
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray67);
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray67);
        java.lang.String str75 = integratorException74.getPattern();
        derivativeException31.addSuppressed((java.lang.Throwable) integratorException74);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str75, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test15119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15119");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        java.lang.String str21 = integratorException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.String str23 = integratorException19.getPattern();
        double[] doubleArray38 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray40 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray38, doubleArray40);
        java.lang.Object[] objArray42 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray42);
        java.lang.Object[] objArray44 = integratorException43.getArguments();
        java.lang.String str45 = integratorException43.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException43);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException43);
        java.lang.Object[] objArray48 = integratorException43.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException43);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("", strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("", strArray62);
        double[] doubleArray84 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray86 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator87 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray84, doubleArray86);
        java.lang.Object[] objArray88 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException89 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray88);
        java.lang.Object[] objArray90 = integratorException89.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException91 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray90);
        derivativeException68.addSuppressed((java.lang.Throwable) integratorException91);
        integratorException49.addSuppressed((java.lang.Throwable) integratorException91);
        integratorException19.addSuppressed((java.lang.Throwable) integratorException91);
        java.lang.String str95 = integratorException91.getPattern();
        java.lang.Object[] objArray96 = integratorException91.getArguments();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0]");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str95, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[-1, 1, 1.0, -1.0, 1, a]");
    }

    @Test
    public void test15120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15120");
        double[] doubleArray12 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray14 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray12, doubleArray14);
        double[] doubleArray24 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray26 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray24, doubleArray26);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray12, doubleArray26);
        double[] doubleArray39 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray48 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray50 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray48, doubleArray50);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray39, doubleArray48);
        double[] doubleArray61 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray63 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray61, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray48, doubleArray61);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, 10.0d, doubleArray26, doubleArray48);
        double double67 = highamHall54Integrator66.getCurrentSignedStepsize();
        double double68 = highamHall54Integrator66.getCurrentStepStart();
        java.lang.String str69 = highamHall54Integrator66.getName();
        org.apache.commons.math.ode.StepHandler stepHandler70 = highamHall54Integrator66.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Higham-Hall 5(4)" + "'", str69, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler70);
    }

    @Test
    public void test15121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15121");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException13);
        java.lang.Object[] objArray15 = derivativeException13.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException16);
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray28);
        java.lang.Object[] objArray30 = derivativeException29.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException33);
        java.lang.Throwable[] throwableArray35 = integratorException33.getSuppressed();
        derivativeException17.addSuppressed((java.lang.Throwable) integratorException33);
        double[] doubleArray53 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray55 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray53, doubleArray55);
        java.lang.Object[] objArray57 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray57);
        java.lang.Object[] objArray59 = integratorException58.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException58);
        java.lang.Throwable[] throwableArray61 = integratorException58.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray61);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray61);
        java.lang.Object[] objArray64 = integratorException63.getArguments();
        integratorException33.addSuppressed((java.lang.Throwable) integratorException63);
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException63);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
    }

    @Test
    public void test15122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15122");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        java.lang.String str15 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction16, (double) (byte) 100, 1.0d, 0);
        int int21 = highamHall54Integrator11.getOrder();
        java.lang.String str22 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (byte) 0);
        double double25 = highamHall54Integrator11.getMaxStep();
        double double26 = highamHall54Integrator11.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test15123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15123");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        java.lang.Object[] objArray19 = derivativeException18.getArguments();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException28);
        derivativeException18.addSuppressed((java.lang.Throwable) derivativeException29);
        java.lang.Throwable[] throwableArray31 = derivativeException29.getSuppressed();
        java.lang.Throwable[] throwableArray32 = derivativeException29.getSuppressed();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray32);
    }

    @Test
    public void test15124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15124");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        java.lang.String str21 = integratorException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        java.lang.Object[] objArray24 = integratorException19.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException37);
        integratorException19.addSuppressed((java.lang.Throwable) derivativeException37);
        java.lang.String str40 = integratorException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException41);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test15125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15125");
        java.lang.String[] strArray5 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray5);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException10);
        java.lang.Object[] objArray12 = integratorException10.getArguments();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
    }

    @Test
    public void test15126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15126");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getMaxStep();
        int int16 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMinReduction((double) (-1.0f));
        double double19 = highamHall54Integrator11.getMaxStep();
        double double20 = highamHall54Integrator11.getSafety();
        java.lang.String str21 = highamHall54Integrator11.getName();
        int int22 = highamHall54Integrator11.getOrder();
        java.lang.String str23 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) 1.0f);
        highamHall54Integrator11.setMaxGrowth((double) 'a');
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.9d + "'", double20 == 0.9d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
    }

    @Test
    public void test15127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15127");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        java.lang.Object[] objArray14 = derivativeException12.getArguments();
        java.lang.Throwable[] throwableArray15 = derivativeException12.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException12);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test15128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15128");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        double double25 = highamHall54Integrator24.getCurrentSignedStepsize();
        highamHall54Integrator24.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator24.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler29);
        double double31 = highamHall54Integrator11.getMinStep();
        highamHall54Integrator11.setMaxGrowth((double) (short) -1);
        double[] doubleArray42 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray44 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray42, doubleArray44);
        double double46 = highamHall54Integrator45.getSafety();
        double[] doubleArray55 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray57 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray55, doubleArray57);
        double double59 = highamHall54Integrator58.getCurrentSignedStepsize();
        double double60 = highamHall54Integrator58.getCurrentStepStart();
        double double61 = highamHall54Integrator58.getMaxGrowth();
        double[] doubleArray70 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray72 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray70, doubleArray72);
        highamHall54Integrator73.setMaxGrowth((double) (-1));
        double double76 = highamHall54Integrator73.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler77 = highamHall54Integrator73.getStepHandler();
        highamHall54Integrator58.setStepHandler(stepHandler77);
        highamHall54Integrator45.setStepHandler(stepHandler77);
        highamHall54Integrator11.setStepHandler(stepHandler77);
        double double81 = highamHall54Integrator11.getCurrentStepStart();
        java.lang.String str82 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 31.144823004794873d + "'", double25 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 97.0d + "'", double31 == 97.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.9d + "'", double46 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 31.144823004794873d + "'", double59 == 31.144823004794873d);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9d + "'", double76 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler77);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Higham-Hall 5(4)" + "'", str82, "Higham-Hall 5(4)");
    }

    @Test
    public void test15129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15129");
        double[] doubleArray16 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray18 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray16, doubleArray18);
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray20);
        java.lang.Object[] objArray22 = integratorException21.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        double[] doubleArray40 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray42 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray40, doubleArray42);
        java.lang.Object[] objArray44 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray44);
        java.lang.Object[] objArray46 = integratorException45.getArguments();
        java.lang.String str47 = integratorException45.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException45);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException45);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException45);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException50);
        derivativeException24.addSuppressed((java.lang.Throwable) derivativeException51);
        java.lang.Throwable[] throwableArray53 = derivativeException51.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException51);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException63);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException63);
        java.lang.Object[] objArray66 = derivativeException63.getArguments();
        java.lang.String str67 = derivativeException63.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException63);
        java.lang.String str69 = derivativeException68.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException68);
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException70);
        derivativeException51.addSuppressed((java.lang.Throwable) derivativeException71);
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException51);
        java.lang.Object[] objArray74 = derivativeException73.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", objArray74);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
    }

    @Test
    public void test15130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15130");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setSafety((double) (byte) 0);
        int int17 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setInitialStepSize((-0.0d));
        java.lang.String str20 = highamHall54Integrator11.getName();
        double double21 = highamHall54Integrator11.getMinReduction();
        double double22 = highamHall54Integrator11.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2d + "'", double21 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
    }

    @Test
    public void test15131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15131");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getMaxStep();
        int int16 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction18, 32.0d, (double) (byte) 100, (int) (short) -1);
        double double23 = highamHall54Integrator11.getMinStep();
        highamHall54Integrator11.setSafety(0.0d);
        double double26 = highamHall54Integrator11.getCurrentSignedStepsize();
        double[] doubleArray35 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray37 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray35, doubleArray37);
        highamHall54Integrator38.setMaxGrowth((double) (-1));
        double double41 = highamHall54Integrator38.getSafety();
        double double42 = highamHall54Integrator38.getSafety();
        highamHall54Integrator38.setMaxGrowth((-1.0d));
        double double45 = highamHall54Integrator38.getMinReduction();
        highamHall54Integrator38.setMinReduction((double) (short) 100);
        double double48 = highamHall54Integrator38.getMinStep();
        int int49 = highamHall54Integrator38.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler50 = highamHall54Integrator38.getStepHandler();
        double double51 = highamHall54Integrator38.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator38.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler52);
        java.lang.String str54 = highamHall54Integrator11.getName();
        java.lang.String str55 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 97.0d + "'", double23 == 97.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 31.144823004794873d + "'", double26 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.9d + "'", double41 == 0.9d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.9d + "'", double42 == 0.9d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.2d + "'", double45 == 0.2d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 97.0d + "'", double48 == 97.0d);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5);
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.9d + "'", double51 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Higham-Hall 5(4)" + "'", str54, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Higham-Hall 5(4)" + "'", str55, "Higham-Hall 5(4)");
    }

    @Test
    public void test15132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15132");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setInitialStepSize((double) (-1));
        highamHall54Integrator11.setInitialStepSize((double) 100.0f);
        double double17 = highamHall54Integrator11.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
    }

    @Test
    public void test15133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15133");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (short) -1, 100.0d, (double) ' ');
        int int5 = highamHall54Integrator4.getOrder();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth(11.501633168956031d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test15134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15134");
        java.lang.String[] strArray8 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray8);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test15135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15135");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler6 = null;
        highamHall54Integrator4.setStepHandler(stepHandler6);
        highamHall54Integrator4.setMaxGrowth(97.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
    }

    @Test
    public void test15136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15136");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        double double7 = highamHall54Integrator4.getSafety();
        double[] doubleArray16 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray18 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator19.getStepHandler();
        highamHall54Integrator19.setInitialStepSize((double) (-1));
        highamHall54Integrator19.setInitialStepSize((double) 100.0f);
        double double25 = highamHall54Integrator19.getCurrentSignedStepsize();
        java.lang.String str26 = highamHall54Integrator19.getName();
        double[] doubleArray35 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray37 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray35, doubleArray37);
        double[] doubleArray47 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray49 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray47, doubleArray49);
        org.apache.commons.math.ode.StepHandler stepHandler51 = highamHall54Integrator50.getStepHandler();
        highamHall54Integrator38.setStepHandler(stepHandler51);
        highamHall54Integrator19.setStepHandler(stepHandler51);
        highamHall54Integrator4.setStepHandler(stepHandler51);
        double double55 = highamHall54Integrator4.getMinReduction();
        int int56 = highamHall54Integrator4.getOrder();
        double double57 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 31.144823004794873d + "'", double25 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.2d + "'", double55 == 0.2d);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 5 + "'", int56 == 5);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
    }

    @Test
    public void test15137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15137");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException20);
        java.lang.Throwable[] throwableArray23 = integratorException20.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException20);
        java.lang.Object[] objArray25 = derivativeException24.getArguments();
        java.lang.Object[] objArray26 = derivativeException24.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray26);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
    }

    @Test
    public void test15138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15138");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(52.0d, (double) (-1), 9.848857801796104d, (double) 100.0f);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        int int6 = highamHall54Integrator4.getOrder();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(stepHandler10);
    }

    @Test
    public void test15139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15139");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(7.470444898730508d, (double) 100, 10.0d, (double) '#');
    }

    @Test
    public void test15140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15140");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setInitialStepSize((double) (byte) 1);
        highamHall54Integrator11.setMaxGrowth(100.0d);
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setSafety((double) (short) 10);
        double double35 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setInitialStepSize(22.80350850198276d);
        highamHall54Integrator11.setInitialStepSize(9.848857801796104d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 100.0d + "'", double35 == 100.0d);
    }

    @Test
    public void test15141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15141");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth((double) ' ');
        double double15 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        highamHall54Integrator20.setSafety(1.0d);
        double[] doubleArray31 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray33 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray31, doubleArray33);
        highamHall54Integrator34.setMaxGrowth((double) (-1));
        double double37 = highamHall54Integrator34.getSafety();
        double double38 = highamHall54Integrator34.getMinReduction();
        double double39 = highamHall54Integrator34.getMaxStep();
        java.lang.String str40 = highamHall54Integrator34.getName();
        double[] doubleArray49 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray51 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray49, doubleArray51);
        double[] doubleArray61 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray63 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray61, doubleArray63);
        org.apache.commons.math.ode.StepHandler stepHandler65 = highamHall54Integrator64.getStepHandler();
        highamHall54Integrator52.setStepHandler(stepHandler65);
        highamHall54Integrator34.setStepHandler(stepHandler65);
        double double68 = highamHall54Integrator34.getSafety();
        highamHall54Integrator34.setInitialStepSize((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler71 = highamHall54Integrator34.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler71);
        highamHall54Integrator11.setStepHandler(stepHandler71);
        double double74 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setMaxGrowth(31.622776601683793d);
        double double77 = highamHall54Integrator11.getMaxStep();
        int int78 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMinReduction(2.23606797749979d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 31.144823004794873d + "'", double15 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.9d + "'", double37 == 0.9d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2d + "'", double38 == 0.2d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Higham-Hall 5(4)" + "'", str40, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler65);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.9d + "'", double68 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler71);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 32.0d + "'", double74 == 32.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 5 + "'", int78 == 5);
    }

    @Test
    public void test15142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15142");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        double double16 = highamHall54Integrator11.getMaxStep();
        double double17 = highamHall54Integrator11.getMaxGrowth();
        double double18 = highamHall54Integrator11.getCurrentSignedStepsize();
        int int19 = highamHall54Integrator11.getOrder();
        int int20 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setSafety(5.916079783099616d);
        highamHall54Integrator11.setSafety(5.916079783099616d);
        double double25 = highamHall54Integrator11.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 31.144823004794873d + "'", double18 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-1.0d) + "'", double25 == (-1.0d));
    }

    @Test
    public void test15143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15143");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        double double16 = highamHall54Integrator11.getMaxStep();
        java.lang.String str17 = highamHall54Integrator11.getName();
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        double[] doubleArray38 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray40 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray38, doubleArray40);
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator41.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler42);
        highamHall54Integrator11.setStepHandler(stepHandler42);
        double double45 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setInitialStepSize((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator11.getStepHandler();
        double double49 = highamHall54Integrator11.getMaxStep();
        java.lang.String str50 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.StepHandler stepHandler51 = highamHall54Integrator11.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.9d + "'", double45 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Higham-Hall 5(4)" + "'", str50, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler51);
    }

    @Test
    public void test15144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15144");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray21);
        java.lang.String str23 = integratorException22.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException22);
        java.lang.String str25 = integratorException24.getPattern();
        java.lang.Object[] objArray26 = integratorException24.getArguments();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str23, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str25, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
    }

    @Test
    public void test15145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15145");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(Double.NaN, (double) 100L, 52.0d, 7.211102550927978d);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize(52.0d);
        double double8 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.9d + "'", double8 == 0.9d);
    }

    @Test
    public void test15146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15146");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double double17 = highamHall54Integrator11.getCurrentSignedStepsize();
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        highamHall54Integrator29.setMaxGrowth((double) (-1));
        double double32 = highamHall54Integrator29.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator29.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler34);
        java.lang.String str36 = highamHall54Integrator11.getName();
        java.lang.String str37 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction38, (double) 1.0f, 0.2d, (int) (short) 1);
        double double43 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double44 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction45, 9.924141172814958d, 5.282402246372794d, 1);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 31.144823004794873d + "'", double17 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Higham-Hall 5(4)" + "'", str36, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Higham-Hall 5(4)" + "'", str37, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 31.144823004794873d + "'", double43 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.9d + "'", double44 == 0.9d);
    }

    @Test
    public void test15147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15147");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        java.lang.Object[] objArray9 = derivativeException8.getArguments();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        java.lang.Object[] objArray19 = derivativeException18.getArguments();
        java.lang.Throwable[] throwableArray20 = derivativeException18.getSuppressed();
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray28 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray28);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray28);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray28);
        derivativeException22.addSuppressed((java.lang.Throwable) derivativeException31);
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray47);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray47);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("", strArray47);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray47);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray47);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray47);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray47);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray47);
        derivativeException31.addSuppressed((java.lang.Throwable) integratorException55);
        java.lang.String str57 = integratorException55.toString();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str57, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test15148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15148");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        double double16 = highamHall54Integrator11.getMaxStep();
        java.lang.String str17 = highamHall54Integrator11.getName();
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        double[] doubleArray38 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray40 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray38, doubleArray40);
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator41.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler42);
        highamHall54Integrator11.setStepHandler(stepHandler42);
        double double45 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setInitialStepSize((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator11.getStepHandler();
        double double49 = highamHall54Integrator11.getCurrentStepStart();
        java.lang.String str50 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.9d + "'", double45 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Higham-Hall 5(4)" + "'", str50, "Higham-Hall 5(4)");
    }

    @Test
    public void test15149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15149");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) 0.0f, (double) 10.0f);
        highamHall54Integrator4.setSafety(56.23413251903491d);
        int int7 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
    }

    @Test
    public void test15150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15150");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setInitialStepSize((double) '4');
        double double30 = highamHall54Integrator11.getSafety();
        java.lang.String str31 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction32, 31.144823004794873d, 0.0d, (int) '#');
        double double37 = highamHall54Integrator11.getCurrentStepStart();
        double double38 = highamHall54Integrator11.getMaxStep();
        double double39 = highamHall54Integrator11.getSafety();
        double double40 = highamHall54Integrator11.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction41, 52.0d, 0.0d, (int) (byte) -1);
        java.lang.String str46 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2d + "'", double27 == 0.2d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.9d + "'", double30 == 0.9d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.9d + "'", double39 == 0.9d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.2d + "'", double40 == 0.2d);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Higham-Hall 5(4)" + "'", str46, "Higham-Hall 5(4)");
    }

    @Test
    public void test15151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15151");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (-1.0f), 0.2d, (double) (byte) -1);
        highamHall54Integrator4.setInitialStepSize((double) 1);
        double double7 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) (byte) -1);
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test15152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15152");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException24);
        java.lang.Throwable[] throwableArray27 = integratorException26.getSuppressed();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(throwableArray27);
    }

    @Test
    public void test15153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15153");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setInitialStepSize((double) (-1));
        highamHall54Integrator11.setInitialStepSize((double) 100.0f);
        double double17 = highamHall54Integrator11.getCurrentSignedStepsize();
        java.lang.String str18 = highamHall54Integrator11.getName();
        java.lang.String str19 = highamHall54Integrator11.getName();
        double double20 = highamHall54Integrator11.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 31.144823004794873d + "'", double17 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }

    @Test
    public void test15154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15154");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth((double) ' ');
        double double15 = highamHall54Integrator11.getCurrentSignedStepsize();
        int int16 = highamHall54Integrator11.getOrder();
        double double17 = highamHall54Integrator11.getMinStep();
        int int18 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMinReduction((double) (byte) 100);
        double double21 = highamHall54Integrator11.getMaxGrowth();
        double double22 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setSafety(7.211102550927978d);
        highamHall54Integrator11.setInitialStepSize((double) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 31.144823004794873d + "'", double15 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 32.0d + "'", double21 == 32.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 31.144823004794873d + "'", double22 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler23);
    }

    @Test
    public void test15155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15155");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, (double) 1, 5);
        double double10 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setInitialStepSize((double) (-1.0f));
        int int13 = highamHall54Integrator4.getOrder();
        int int14 = highamHall54Integrator4.getOrder();
        double double15 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        double double17 = highamHall54Integrator4.getSafety();
        int int18 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.9d + "'", double17 == 0.9d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
    }

    @Test
    public void test15156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15156");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        double double77 = highamHall54Integrator76.getSafety();
        highamHall54Integrator76.setInitialStepSize((double) (-1));
        double double80 = highamHall54Integrator76.getMinReduction();
        java.lang.String str81 = highamHall54Integrator76.getName();
        highamHall54Integrator76.setInitialStepSize(31.144823004794873d);
        double double84 = highamHall54Integrator76.getCurrentSignedStepsize();
        highamHall54Integrator76.setMinReduction(0.2d);
        highamHall54Integrator76.setSafety((double) 100);
        int int89 = highamHall54Integrator76.getOrder();
        java.lang.Class<?> wildcardClass90 = highamHall54Integrator76.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9d + "'", double77 == 0.9d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.2d + "'", double80 == 0.2d);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Higham-Hall 5(4)" + "'", str81, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 10.0d + "'", double84 == 10.0d);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 5 + "'", int89 == 5);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test15157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15157");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        double double16 = highamHall54Integrator11.getCurrentStepStart();
        java.lang.String str17 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setInitialStepSize(31.622776601683793d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
    }

    @Test
    public void test15158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15158");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        highamHall54Integrator11.setSafety((double) 0);
        java.lang.String str28 = highamHall54Integrator11.getName();
        double double29 = highamHall54Integrator11.getCurrentStepStart();
        java.lang.String str30 = highamHall54Integrator11.getName();
        java.lang.String str31 = highamHall54Integrator11.getName();
        java.lang.String str32 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator11.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler33);
    }

    @Test
    public void test15159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15159");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        double double17 = highamHall54Integrator11.getMaxGrowth();
        java.lang.String str18 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth(0.2d);
        java.lang.String str21 = highamHall54Integrator11.getName();
        double double22 = highamHall54Integrator11.getMaxStep();
        double double23 = highamHall54Integrator11.getCurrentStepStart();
        int int24 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction25, 100.0d, (double) '#', 1);
        double double30 = highamHall54Integrator11.getCurrentStepStart();
        java.lang.String str31 = highamHall54Integrator11.getName();
        double double32 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 31.144823004794873d + "'", double32 == 31.144823004794873d);
    }

    @Test
    public void test15160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15160");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setInitialStepSize((double) (short) 0);
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        highamHall54Integrator29.setMaxGrowth((double) (-1));
        double double32 = highamHall54Integrator29.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler33);
        int int35 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setMaxGrowth((double) 0);
        double double39 = highamHall54Integrator11.getMinReduction();
        java.lang.String str40 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator11.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.2d + "'", double39 == 0.2d);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Higham-Hall 5(4)" + "'", str40, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler41);
    }

    @Test
    public void test15161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15161");
        double[] doubleArray4 = null;
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        double[] doubleArray21 = new double[] { (-1L), 97.0d };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, doubleArray17, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 1.0f, doubleArray4, doubleArray21);
        double[] doubleArray26 = new double[] {};
        double[] doubleArray37 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray39 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray37, doubleArray39);
        double[] doubleArray49 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray51 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray49, doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray37, doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 22.80350850198276d, doubleArray26, doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, 11.501633168956031d, doubleArray21, doubleArray26);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 97.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0]");
    }

    @Test
    public void test15162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15162");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double13 = highamHall54Integrator11.getCurrentStepStart();
        double double14 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double15 = highamHall54Integrator11.getSafety();
        double double16 = highamHall54Integrator11.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 31.144823004794873d + "'", double14 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 97.0d + "'", double16 == 97.0d);
    }

    @Test
    public void test15163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15163");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        java.lang.String str77 = highamHall54Integrator76.getName();
        highamHall54Integrator76.setMaxGrowth((double) '4');
        org.apache.commons.math.ode.StepHandler stepHandler80 = highamHall54Integrator76.getStepHandler();
        int int81 = highamHall54Integrator76.getOrder();
        highamHall54Integrator76.setMaxGrowth(2.4957893743180684d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Higham-Hall 5(4)" + "'", str77, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 5 + "'", int81 == 5);
    }

    @Test
    public void test15164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15164");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray17);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test15165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15165");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        double double5 = highamHall54Integrator4.getMinStep();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getMaxStep();
        double double8 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMinReduction(32.0d);
        double double11 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
    }

    @Test
    public void test15166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15166");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        java.lang.String str15 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction16, (double) (byte) 100, 1.0d, 0);
        java.lang.String str21 = highamHall54Integrator11.getName();
        java.lang.String str22 = highamHall54Integrator11.getName();
        int int23 = highamHall54Integrator11.getOrder();
        java.lang.String str24 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) 1L);
        double double27 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double28 = highamHall54Integrator11.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 31.144823004794873d + "'", double27 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
    }

    @Test
    public void test15167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15167");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        int int5 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double8 = highamHall54Integrator4.getMinReduction();
        int int9 = highamHall54Integrator4.getOrder();
        double double10 = highamHall54Integrator4.getCurrentStepStart();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        highamHall54Integrator16.addSwitchingFunction(switchingFunction17, (double) (byte) -1, (double) 1, 5);
        double double22 = highamHall54Integrator16.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator16.addSwitchingFunction(switchingFunction23, (double) 1, 0.0d, (int) (byte) 100);
        java.lang.String str28 = highamHall54Integrator16.getName();
        java.lang.String str29 = highamHall54Integrator16.getName();
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler30);
        java.lang.String str32 = highamHall54Integrator4.getName();
        double double33 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(stepHandler34);
    }

    @Test
    public void test15168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15168");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1L), 0.0d, 0.2d, (double) (-1L));
        highamHall54Integrator4.setInitialStepSize((double) ' ');
        java.lang.String str7 = highamHall54Integrator4.getName();
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
    }

    @Test
    public void test15169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15169");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 5, 5.916079783099616d, 5.0d, 97.0d);
        java.lang.String str5 = highamHall54Integrator4.getName();
        double double6 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
    }

    @Test
    public void test15170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15170");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double6 = highamHall54Integrator4.getMaxGrowth();
        double double7 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMinReduction((double) (short) 10);
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test15171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15171");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        java.lang.String str22 = integratorException20.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException20);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException20);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException20);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException20);
        java.lang.Throwable[] throwableArray27 = integratorException20.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) throwableArray27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException28);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException28);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException28);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException28);
        java.lang.Object[] objArray33 = integratorException28.getArguments();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
    }

    @Test
    public void test15172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15172");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        java.lang.String str15 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction16, (double) (byte) 100, 1.0d, 0);
        int int21 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction22, 0.0d, 0.0d, (int) (byte) 1);
        int int27 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
    }

    @Test
    public void test15173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15173");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        integratorException15.addSuppressed((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException15);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException29);
        java.lang.Object[] objArray32 = derivativeException31.getArguments();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
    }

    @Test
    public void test15174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15174");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getCurrentStepStart();
        highamHall54Integrator11.setInitialStepSize((double) (-1L));
        double double30 = highamHall54Integrator11.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction31, (double) '#', (double) (-1.0f), (int) (short) -1);
        double double36 = highamHall54Integrator11.getMinReduction();
        java.lang.String str37 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2d + "'", double36 == 0.2d);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Higham-Hall 5(4)" + "'", str37, "Higham-Hall 5(4)");
    }

    @Test
    public void test15175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15175");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMinReduction();
        java.lang.String str15 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 0, (double) 'a', (double) (-1));
        int int21 = highamHall54Integrator20.getOrder();
        double[] doubleArray30 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray32 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray30, doubleArray32);
        double[] doubleArray42 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray44 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray42, doubleArray44);
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator45.getStepHandler();
        highamHall54Integrator33.setStepHandler(stepHandler46);
        int int48 = highamHall54Integrator33.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler49);
        highamHall54Integrator11.setStepHandler(stepHandler49);
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setSafety(7.211102550927978d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertNotNull(stepHandler52);
    }

    @Test
    public void test15176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15176");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getCurrentStepStart();
        double double17 = highamHall54Integrator11.getMaxStep();
        double double18 = highamHall54Integrator11.getMaxStep();
        double double19 = highamHall54Integrator11.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        highamHall54Integrator24.setSafety(1.0d);
        double double27 = highamHall54Integrator24.getMinReduction();
        double double28 = highamHall54Integrator24.getCurrentStepStart();
        double double29 = highamHall54Integrator24.getMinStep();
        double[] doubleArray38 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray40 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray38, doubleArray40);
        highamHall54Integrator41.setMaxGrowth((double) (-1));
        double double44 = highamHall54Integrator41.getSafety();
        double double45 = highamHall54Integrator41.getMinReduction();
        double double46 = highamHall54Integrator41.getMaxStep();
        java.lang.String str47 = highamHall54Integrator41.getName();
        double[] doubleArray56 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray58 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray56, doubleArray58);
        double[] doubleArray68 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray70 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator71 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray68, doubleArray70);
        org.apache.commons.math.ode.StepHandler stepHandler72 = highamHall54Integrator71.getStepHandler();
        highamHall54Integrator59.setStepHandler(stepHandler72);
        highamHall54Integrator41.setStepHandler(stepHandler72);
        double double75 = highamHall54Integrator41.getSafety();
        highamHall54Integrator41.setInitialStepSize((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler78 = highamHall54Integrator41.getStepHandler();
        highamHall54Integrator24.setStepHandler(stepHandler78);
        highamHall54Integrator11.setStepHandler(stepHandler78);
        int int81 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMinReduction((double) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2d + "'", double27 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 100.0d + "'", double29 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.9d + "'", double44 == 0.9d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.2d + "'", double45 == 0.2d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Higham-Hall 5(4)" + "'", str47, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler72);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9d + "'", double75 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 5 + "'", int81 == 5);
    }

    @Test
    public void test15177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15177");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        int int17 = highamHall54Integrator11.getOrder();
        double double18 = highamHall54Integrator11.getMaxGrowth();
        double double19 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction20, (double) 1.0f, 0.2d, 5);
        highamHall54Integrator11.setInitialStepSize((double) 10.0f);
        double[] doubleArray35 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray37 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray35, doubleArray37);
        highamHall54Integrator38.setMaxGrowth((double) (-1));
        double double41 = highamHall54Integrator38.getSafety();
        int int42 = highamHall54Integrator38.getOrder();
        java.lang.String str43 = highamHall54Integrator38.getName();
        double double44 = highamHall54Integrator38.getCurrentSignedStepsize();
        double[] doubleArray53 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray55 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray53, doubleArray55);
        highamHall54Integrator56.setMaxGrowth((double) (-1));
        double double59 = highamHall54Integrator56.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler60 = highamHall54Integrator56.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator56.getStepHandler();
        highamHall54Integrator38.setStepHandler(stepHandler61);
        highamHall54Integrator11.setStepHandler(stepHandler61);
        java.lang.String str64 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setInitialStepSize(10.0d);
        double double67 = highamHall54Integrator11.getMaxStep();
        double double68 = highamHall54Integrator11.getMinStep();
        java.lang.String str69 = highamHall54Integrator11.getName();
        java.lang.String str70 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setSafety((double) (-1.0f));
        double double73 = highamHall54Integrator11.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.9d + "'", double41 == 0.9d);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 5 + "'", int42 == 5);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Higham-Hall 5(4)" + "'", str43, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 31.144823004794873d + "'", double44 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.9d + "'", double59 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Higham-Hall 5(4)" + "'", str64, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 10.0d + "'", double67 == 10.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 97.0d + "'", double68 == 97.0d);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Higham-Hall 5(4)" + "'", str69, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Higham-Hall 5(4)" + "'", str70, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 97.0d + "'", double73 == 97.0d);
    }

    @Test
    public void test15178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15178");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException18);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        java.lang.Object[] objArray38 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray38);
        java.lang.Object[] objArray40 = integratorException39.getArguments();
        java.lang.String str41 = integratorException39.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException39);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException39);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException44);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException44);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException44);
        integratorException18.addSuppressed((java.lang.Throwable) integratorException47);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
    }

    @Test
    public void test15179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15179");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator4.setMinReduction(0.9d);
        double double7 = highamHall54Integrator4.getSafety();
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxGrowth();
        int int10 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 0, (double) 'a', (double) (-1));
        java.lang.String str16 = highamHall54Integrator15.getName();
        double double17 = highamHall54Integrator15.getMaxGrowth();
        double double18 = highamHall54Integrator15.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator15.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler19);
        highamHall54Integrator4.setInitialStepSize((double) (byte) 1);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler19);
    }

    @Test
    public void test15180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15180");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        java.lang.String str21 = derivativeException20.toString();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str21, "org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test15181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15181");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setInitialStepSize((double) (-1));
        highamHall54Integrator11.setInitialStepSize((double) 10.0f);
        java.lang.String str17 = highamHall54Integrator11.getName();
        double double18 = highamHall54Integrator11.getMaxGrowth();
        java.lang.String str19 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
    }

    @Test
    public void test15182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15182");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        double double18 = highamHall54Integrator11.getMinStep();
        highamHall54Integrator11.setMaxGrowth((double) ' ');
        java.lang.Class<?> wildcardClass21 = highamHall54Integrator11.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 97.0d + "'", double18 == 97.0d);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test15183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15183");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getSafety();
        double[] doubleArray24 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray26 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray24, doubleArray26);
        highamHall54Integrator27.setMaxGrowth((double) (-1));
        double double30 = highamHall54Integrator27.getMaxStep();
        highamHall54Integrator27.setInitialStepSize((double) 0);
        java.lang.String str33 = highamHall54Integrator27.getName();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator27.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler34);
        double double36 = highamHall54Integrator11.getSafety();
        double double37 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double38 = highamHall54Integrator11.getMaxGrowth();
        java.lang.String str39 = highamHall54Integrator11.getName();
        double double40 = highamHall54Integrator11.getMinReduction();
        int int41 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Higham-Hall 5(4)" + "'", str33, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.9d + "'", double36 == 0.9d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 31.144823004794873d + "'", double37 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Higham-Hall 5(4)" + "'", str39, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 5 + "'", int41 == 5);
    }

    @Test
    public void test15184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15184");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        double double5 = highamHall54Integrator4.getMinStep();
        int int6 = highamHall54Integrator4.getOrder();
        java.lang.String str7 = highamHall54Integrator4.getName();
        double double8 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
    }

    @Test
    public void test15185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15185");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(7.470444898730508d, 22.80350850198276d, 32.0d, (double) 10L);
    }

    @Test
    public void test15186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15186");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double double17 = highamHall54Integrator11.getCurrentSignedStepsize();
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        highamHall54Integrator29.setMaxGrowth((double) (-1));
        double double32 = highamHall54Integrator29.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator29.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler34);
        java.lang.String str36 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth(5.580754698496868d);
        highamHall54Integrator11.setMaxGrowth(9.848857801796104d);
        double double41 = highamHall54Integrator11.getSafety();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 31.144823004794873d + "'", double17 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Higham-Hall 5(4)" + "'", str36, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.9d + "'", double41 == 0.9d);
    }

    @Test
    public void test15187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15187");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test15188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15188");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setInitialStepSize((double) 0);
        java.lang.String str17 = highamHall54Integrator11.getName();
        double double18 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction19, (double) 1L, 0.2d, 1);
        double double24 = highamHall54Integrator11.getSafety();
        double double25 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 31.144823004794873d + "'", double25 == 31.144823004794873d);
    }

    @Test
    public void test15189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15189");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        java.lang.String str15 = highamHall54Integrator11.getName();
        double[] doubleArray24 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray26 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray24, doubleArray26);
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator27.getStepHandler();
        double[] doubleArray37 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray39 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray37, doubleArray39);
        double double41 = highamHall54Integrator40.getCurrentSignedStepsize();
        highamHall54Integrator40.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator40.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler45 = highamHall54Integrator40.getStepHandler();
        highamHall54Integrator27.setStepHandler(stepHandler45);
        highamHall54Integrator11.setStepHandler(stepHandler45);
        double double48 = highamHall54Integrator11.getMinStep();
        double double49 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setSafety(31.622776601683793d);
        int int52 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.144823004794873d + "'", double41 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 97.0d + "'", double48 == 97.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
    }

    @Test
    public void test15190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15190");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray14, doubleArray28);
        double[] doubleArray41 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray43 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray41, doubleArray43);
        double[] doubleArray47 = new double[] { (-1L), 97.0d };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, doubleArray43, doubleArray47);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) (byte) 100, doubleArray14, doubleArray47);
        double[] doubleArray52 = null;
        double[] doubleArray63 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray65 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray63, doubleArray65);
        double[] doubleArray75 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray77 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator78 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray75, doubleArray77);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator79 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray63, doubleArray77);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator(32.0d, (double) (short) 100, doubleArray52, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator81 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 0.0d, doubleArray47, doubleArray63);
        org.apache.commons.math.ode.StepHandler stepHandler82 = highamHall54Integrator81.getStepHandler();
        highamHall54Integrator81.setMinReduction((double) (-1));
        java.lang.String str85 = highamHall54Integrator81.getName();
        highamHall54Integrator81.setSafety(0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction88 = null;
        highamHall54Integrator81.addSwitchingFunction(switchingFunction88, (double) 10.0f, 52.0d, (int) (byte) 100);
        double double93 = highamHall54Integrator81.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Higham-Hall 5(4)" + "'", str85, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
    }

    @Test
    public void test15191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15191");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        highamHall54Integrator4.setSafety(1.0d);
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        highamHall54Integrator18.setMaxGrowth((double) (-1));
        double double21 = highamHall54Integrator18.getSafety();
        double double22 = highamHall54Integrator18.getMinReduction();
        double double23 = highamHall54Integrator18.getMaxStep();
        java.lang.String str24 = highamHall54Integrator18.getName();
        double[] doubleArray33 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray35 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray33, doubleArray35);
        double[] doubleArray45 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray47 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray45, doubleArray47);
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator48.getStepHandler();
        highamHall54Integrator36.setStepHandler(stepHandler49);
        highamHall54Integrator18.setStepHandler(stepHandler49);
        double double52 = highamHall54Integrator18.getSafety();
        highamHall54Integrator18.setInitialStepSize((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler55);
        org.apache.commons.math.ode.StepHandler stepHandler57 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth(31.622776601683793d);
        double double60 = highamHall54Integrator4.getMinReduction();
        double double61 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.9d + "'", double21 == 0.9d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9d + "'", double52 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.2d + "'", double60 == 0.2d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
    }

    @Test
    public void test15192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15192");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 0, (double) 'a', (double) (-1));
        double double5 = highamHall54Integrator4.getMinReduction();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        double double9 = highamHall54Integrator4.getSafety();
        int int10 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(33.46640106136302d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 35.0d + "'", double6 == 35.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 35.0d + "'", double7 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
    }

    @Test
    public void test15193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15193");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        int int26 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator11.getStepHandler();
        double double28 = highamHall54Integrator11.getMinStep();
        int int29 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMaxGrowth((double) 100.0f);
        double double32 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double33 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 97.0d + "'", double28 == 97.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 31.144823004794873d + "'", double32 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 31.144823004794873d + "'", double33 == 31.144823004794873d);
    }

    @Test
    public void test15194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15194");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        java.lang.String str17 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction(100.0d);
        double double20 = highamHall54Integrator11.getMinStep();
        double double21 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction22, 48.57293794619442d, (double) (byte) -1, (-1));
        java.lang.String str27 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 97.0d + "'", double20 == 97.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
    }

    @Test
    public void test15195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15195");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double13 = highamHall54Integrator11.getCurrentStepStart();
        double double14 = highamHall54Integrator11.getMaxGrowth();
        double[] doubleArray23 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray25 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray23, doubleArray25);
        highamHall54Integrator26.setMaxGrowth((double) (-1));
        double double29 = highamHall54Integrator26.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator26.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler30);
        java.lang.String str32 = highamHall54Integrator11.getName();
        int int33 = highamHall54Integrator11.getOrder();
        int int34 = highamHall54Integrator11.getOrder();
        java.lang.String str35 = highamHall54Integrator11.getName();
        double double36 = highamHall54Integrator11.getMaxStep();
        int int37 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.9d + "'", double29 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Higham-Hall 5(4)" + "'", str35, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 5 + "'", int37 == 5);
    }

    @Test
    public void test15196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15196");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test15197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15197");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray12);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        integratorException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray32 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray32);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray32);
        integratorException15.addSuppressed((java.lang.Throwable) integratorException34);
        double[] doubleArray50 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray52 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray50, doubleArray52);
        java.lang.Object[] objArray54 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray54);
        java.lang.Object[] objArray56 = integratorException55.getArguments();
        integratorException34.addSuppressed((java.lang.Throwable) integratorException55);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException34);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[-1, 1, 1.0, -1.0, 1, a]");
    }

    @Test
    public void test15198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15198");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) (byte) 100, (double) 10.0f, (double) 100L);
        highamHall54Integrator4.setInitialStepSize((double) 10L);
        double double7 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 100.0d + "'", double7 == 100.0d);
    }

    @Test
    public void test15199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15199");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        java.lang.String str17 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction(100.0d);
        double double20 = highamHall54Integrator11.getMinStep();
        double double21 = highamHall54Integrator11.getMinReduction();
        double double22 = highamHall54Integrator11.getMaxStep();
        double double23 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double24 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double25 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setInitialStepSize((double) (short) 100);
        java.lang.String str28 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 97.0d + "'", double20 == 97.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 31.144823004794873d + "'", double23 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 31.144823004794873d + "'", double24 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 31.144823004794873d + "'", double25 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
    }

    @Test
    public void test15200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15200");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (-1.0f), 0.2d, (double) (byte) -1);
        highamHall54Integrator4.setInitialStepSize((double) 1);
        double double7 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) (byte) -1);
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double11 = highamHall54Integrator4.getMaxStep();
        double double12 = highamHall54Integrator4.getMinReduction();
        int int13 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.0d) + "'", double11 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
    }

    @Test
    public void test15201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15201");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        java.lang.String str22 = integratorException20.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException20);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException20);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException20);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException25);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray38);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        java.lang.Object[] objArray53 = derivativeException52.getArguments();
        java.lang.Object[] objArray54 = derivativeException52.getArguments();
        java.lang.Object[] objArray55 = derivativeException52.getArguments();
        derivativeException43.addSuppressed((java.lang.Throwable) derivativeException52);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException43);
        integratorException25.addSuppressed((java.lang.Throwable) derivativeException43);
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray69);
        java.lang.Object[] objArray71 = derivativeException70.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray71);
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray71);
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray71);
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray83);
        java.lang.Object[] objArray85 = derivativeException84.getArguments();
        java.lang.Throwable[] throwableArray86 = derivativeException84.getSuppressed();
        java.lang.Throwable[] throwableArray87 = derivativeException84.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException88 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray87);
        integratorException74.addSuppressed((java.lang.Throwable) integratorException88);
        org.apache.commons.math.ode.IntegratorException integratorException90 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException88);
        derivativeException43.addSuppressed((java.lang.Throwable) integratorException90);
        java.lang.Throwable[] throwableArray92 = integratorException90.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException93 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray92);
        java.lang.String str94 = integratorException93.toString();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(throwableArray92);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str94, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test15202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15202");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        java.lang.String str13 = derivativeException12.getPattern();
        java.lang.String str14 = derivativeException12.getPattern();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str13, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str14, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test15203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15203");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        int int5 = highamHall54Integrator4.getOrder();
        int int6 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize(35.0d);
        int int9 = highamHall54Integrator4.getOrder();
        int int10 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
    }

    @Test
    public void test15204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15204");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        highamHall54Integrator11.setMaxGrowth((double) (-1L));
        int int20 = highamHall54Integrator11.getOrder();
        java.lang.String str21 = highamHall54Integrator11.getName();
        double double22 = highamHall54Integrator11.getMinStep();
        highamHall54Integrator11.setMaxGrowth((double) 10);
        int int25 = highamHall54Integrator11.getOrder();
        java.lang.String str26 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 97.0d + "'", double22 == 97.0d);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
    }

    @Test
    public void test15205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15205");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize(0.9d);
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, 10.0d, 35.0d, (int) (short) 1);
        double double14 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
    }

    @Test
    public void test15206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15206");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setInitialStepSize((double) (short) 0);
        double double18 = highamHall54Integrator11.getCurrentStepStart();
        java.lang.String str19 = highamHall54Integrator11.getName();
        double double20 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setSafety(0.0d);
        java.lang.Class<?> wildcardClass23 = highamHall54Integrator11.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test15207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15207");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getMaxStep();
        int int17 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setSafety((double) 5);
        int int20 = highamHall54Integrator11.getOrder();
        double double21 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 31.144823004794873d + "'", double21 == 31.144823004794873d);
    }

    @Test
    public void test15208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15208");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) -1, (double) (byte) 1, (double) (short) 10, (double) (byte) -1);
        java.lang.String str5 = highamHall54Integrator4.getName();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((double) (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test15209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15209");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        java.lang.Throwable[] throwableArray18 = derivativeException17.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray18);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test15210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15210");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, (double) 1, 5);
        double double10 = highamHall54Integrator4.getMinStep();
        int int11 = highamHall54Integrator4.getOrder();
        double double12 = highamHall54Integrator4.getMinReduction();
        java.lang.String str13 = highamHall54Integrator4.getName();
        double double14 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.2d + "'", double12 == 0.2d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler15);
    }

    @Test
    public void test15211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15211");
        double[] doubleArray10 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray12 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray10, doubleArray12);
        double[] doubleArray22 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray24 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray22, doubleArray24);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray10, doubleArray24);
        int int27 = highamHall54Integrator26.getOrder();
        double double28 = highamHall54Integrator26.getMaxGrowth();
        highamHall54Integrator26.setMaxGrowth((double) (-1));
        double double31 = highamHall54Integrator26.getCurrentSignedStepsize();
        double double32 = highamHall54Integrator26.getMinStep();
        double double33 = highamHall54Integrator26.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2.4957893743180684d + "'", double31 == 2.4957893743180684d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.2d + "'", double32 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
    }

    @Test
    public void test15212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15212");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray15);
        java.lang.String str25 = derivativeException24.getPattern();
        java.lang.Throwable[] throwableArray26 = derivativeException24.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException24);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)" + "'", str25, "org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test15213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15213");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) -1);
        java.lang.String str29 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) 0);
        java.lang.String str32 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
    }

    @Test
    public void test15214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15214");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 1, 0.9d, 31.622776601683793d);
    }

    @Test
    public void test15215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15215");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 0, (double) 'a', (double) (-1));
        double double5 = highamHall54Integrator4.getMinReduction();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        int int9 = highamHall54Integrator4.getOrder();
        int int10 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize(52.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 35.0d + "'", double6 == 35.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 35.0d + "'", double7 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
    }

    @Test
    public void test15216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15216");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test15217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15217");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(98.48857801796105d, (double) (-1.0f), (double) 1.0f, (double) 5);
        highamHall54Integrator4.setInitialStepSize((double) 0L);
        java.lang.Class<?> wildcardClass7 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test15218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15218");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 1.0f, (double) 10, (double) (byte) 1);
        java.lang.String str5 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize((double) '4');
        double double8 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 35.0d + "'", double8 == 35.0d);
    }

    @Test
    public void test15219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15219");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator4.setMinReduction(0.9d);
        highamHall54Integrator4.setInitialStepSize((double) 10L);
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double12 = highamHall54Integrator4.getMinStep();
        java.lang.String str13 = highamHall54Integrator4.getName();
        java.lang.String str14 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
    }

    @Test
    public void test15220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15220");
        double[] doubleArray16 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray18 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray16, doubleArray18);
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray20);
        java.lang.Object[] objArray22 = integratorException21.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException21);
        java.lang.Throwable[] throwableArray24 = integratorException21.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray24);
        java.lang.Object[] objArray27 = integratorException26.getArguments();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
    }

    @Test
    public void test15221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15221");
        double[] doubleArray2 = null;
        double[] doubleArray17 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray19 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray17, doubleArray19);
        double[] doubleArray29 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray31 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray29, doubleArray31);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray17, doubleArray31);
        double[] doubleArray42 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray51 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray53 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray51, doubleArray53);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray42, doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (byte) 1, doubleArray31, doubleArray51);
        double[] doubleArray67 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray76 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray78 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator79 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray76, doubleArray78);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray67, doubleArray76);
        double[] doubleArray89 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray91 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator92 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray89, doubleArray91);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator93 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray76, doubleArray89);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator94 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (short) 0, doubleArray31, doubleArray89);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator95 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 7.470444898730508d, doubleArray2, doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[1.0]");
    }

    @Test
    public void test15222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15222");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((-0.0d), (double) (-1L), (double) (short) 100, (double) 1.0f);
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
    }

    @Test
    public void test15223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15223");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        double double27 = highamHall54Integrator11.getMinReduction();
        double double28 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction(97.0d);
        highamHall54Integrator11.setSafety(0.9d);
        double double33 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction34, 24.322992790977874d, (double) (-1L), (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction39, 100.0d, 4.995787599886596d, (int) ' ');
        double double44 = highamHall54Integrator11.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2d + "'", double27 == 0.2d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 31.144823004794873d + "'", double28 == 31.144823004794873d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
    }

    @Test
    public void test15224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15224");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 0, (double) 'a', (double) (-1));
        java.lang.String str5 = highamHall54Integrator4.getName();
        double double6 = highamHall54Integrator4.getMaxGrowth();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray20, doubleArray34);
        double[] doubleArray45 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray54 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray56 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray54, doubleArray56);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray45, doubleArray54);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (byte) 1, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.StepHandler stepHandler60 = highamHall54Integrator59.getStepHandler();
        double double61 = highamHall54Integrator59.getMinReduction();
        double double62 = highamHall54Integrator59.getCurrentSignedStepsize();
        java.lang.String str63 = highamHall54Integrator59.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 'a', 0.9d, 31.622776601683793d);
        org.apache.commons.math.ode.StepHandler stepHandler69 = highamHall54Integrator68.getStepHandler();
        highamHall54Integrator59.setStepHandler(stepHandler69);
        highamHall54Integrator4.setStepHandler(stepHandler69);
        double double72 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction73 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction73, (double) '#', 10.0d, (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2d + "'", double61 == 0.2d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Higham-Hall 5(4)" + "'", str63, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler69);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test15225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15225");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (-1.0f), (double) (-1L), (double) (short) 1);
        double double5 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
    }

    @Test
    public void test15226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15226");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        java.lang.Throwable[] throwableArray25 = derivativeException24.getSuppressed();
        java.lang.Class<?> wildcardClass26 = derivativeException24.getClass();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test15227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15227");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray3);
        java.lang.String str5 = derivativeException4.getPattern();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str5, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test15228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15228");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        double double17 = highamHall54Integrator11.getMinStep();
        double double18 = highamHall54Integrator11.getSafety();
        double double19 = highamHall54Integrator11.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.9d + "'", double18 == 0.9d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2d + "'", double19 == 0.2d);
    }

    @Test
    public void test15229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15229");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        java.lang.String str21 = integratorException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.Object[] objArray27 = integratorException26.getArguments();
        java.lang.Throwable[] throwableArray28 = integratorException26.getSuppressed();
        java.lang.String str29 = integratorException26.toString();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str29, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test15230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15230");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (-1.0f), 0.2d, (double) (byte) -1);
        highamHall54Integrator4.setInitialStepSize((double) 1);
        double double7 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) (byte) -1);
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety((double) 100.0f);
        double[] doubleArray28 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray30 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray28, doubleArray30);
        double[] doubleArray40 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray42 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray40, doubleArray42);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray28, doubleArray42);
        double[] doubleArray55 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray64 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray66 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray64, doubleArray66);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray55, doubleArray64);
        double[] doubleArray77 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray79 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray77, doubleArray79);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator81 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray64, doubleArray77);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator82 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, 10.0d, doubleArray42, doubleArray64);
        double[] doubleArray91 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray93 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator94 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray91, doubleArray93);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator95 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 0.2d, doubleArray64, doubleArray91);
        org.apache.commons.math.ode.StepHandler stepHandler96 = highamHall54Integrator95.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler96);
        java.lang.String str98 = highamHall54Integrator4.getName();
        java.lang.String str99 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.0d) + "'", double11 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler96);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "Higham-Hall 5(4)" + "'", str98, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "Higham-Hall 5(4)" + "'", str99, "Higham-Hall 5(4)");
    }

    @Test
    public void test15231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15231");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        java.lang.Throwable[] throwableArray21 = derivativeException20.getSuppressed();
        java.lang.Object[] objArray22 = derivativeException20.getArguments();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!, , , , , ]");
    }

    @Test
    public void test15232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15232");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray15);
        java.lang.Object[] objArray24 = derivativeException23.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", objArray24);
        java.lang.Object[] objArray26 = integratorException25.getArguments();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!, , , , , ]");
    }

    @Test
    public void test15233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15233");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray13);
        java.lang.Throwable[] throwableArray21 = derivativeException20.getSuppressed();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test15234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15234");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth((double) ' ');
        double double15 = highamHall54Integrator11.getCurrentSignedStepsize();
        int int16 = highamHall54Integrator11.getOrder();
        double double17 = highamHall54Integrator11.getMinStep();
        int int18 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMinReduction((double) (byte) 100);
        double double21 = highamHall54Integrator11.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction22, (double) 100, (double) ' ', 0);
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setInitialStepSize(0.0d);
        highamHall54Integrator11.setMinReduction(5.612486080160912d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 31.144823004794873d + "'", double15 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 97.0d + "'", double21 == 97.0d);
        org.junit.Assert.assertNotNull(stepHandler27);
    }

    @Test
    public void test15235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15235");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException26);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test15236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15236");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, 55.80754698496868d, (double) 100, (double) 10L);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 55.80754698496868d + "'", double5 == 55.80754698496868d);
    }

    @Test
    public void test15237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15237");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        java.lang.Object[] objArray9 = derivativeException8.getArguments();
        java.lang.Throwable[] throwableArray10 = derivativeException8.getSuppressed();
        java.lang.Throwable[] throwableArray11 = derivativeException8.getSuppressed();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        java.lang.Object[] objArray24 = derivativeException21.getArguments();
        java.lang.Throwable[] throwableArray25 = derivativeException21.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray25);
        derivativeException8.addSuppressed((java.lang.Throwable) integratorException26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException8);
        java.lang.Object[] objArray29 = derivativeException8.getArguments();
        java.lang.Object[] objArray30 = derivativeException8.getArguments();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, , , , , ]");
    }

    @Test
    public void test15238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15238");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 1L, (double) 100L, (double) (short) 1);
        highamHall54Integrator4.setSafety(100.0d);
        double double7 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize(32.0d);
        double double10 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 100.0d + "'", double7 == 100.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
    }

    @Test
    public void test15239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15239");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double13 = highamHall54Integrator11.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction14, (double) (byte) 100, (double) 'a', (int) '4');
        double double19 = highamHall54Integrator11.getMaxStep();
        double double20 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setInitialStepSize(1.0d);
        double double23 = highamHall54Integrator11.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.9d + "'", double20 == 0.9d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 97.0d + "'", double23 == 97.0d);
    }

    @Test
    public void test15240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15240");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(5.0d, (double) 1, 56.23413251903491d, (double) (short) -1);
        int int5 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
    }

    @Test
    public void test15241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15241");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray19, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction37, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        double double42 = highamHall54Integrator36.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction43 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction43, (double) (-1), (double) 1L, 100);
        highamHall54Integrator36.setMinReduction((double) 1L);
        int int50 = highamHall54Integrator36.getOrder();
        java.lang.String str51 = highamHall54Integrator36.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction52, (double) (byte) 0, 48.57293794619442d, (int) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 35.0d + "'", double42 == 35.0d);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Higham-Hall 5(4)" + "'", str51, "Higham-Hall 5(4)");
    }

    @Test
    public void test15242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15242");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(Double.NaN, (double) 5, 7.211102550927978d, 9.848857801796104d);
        int int5 = highamHall54Integrator4.getOrder();
        double double6 = highamHall54Integrator4.getMinReduction();
        java.lang.String str7 = highamHall54Integrator4.getName();
        double double8 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test15243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15243");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        int int17 = highamHall54Integrator11.getOrder();
        double double18 = highamHall54Integrator11.getMaxGrowth();
        double double19 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction20, (double) 1.0f, 0.2d, 5);
        highamHall54Integrator11.setInitialStepSize((double) 10.0f);
        double[] doubleArray35 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray37 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray35, doubleArray37);
        highamHall54Integrator38.setMaxGrowth((double) (-1));
        double double41 = highamHall54Integrator38.getSafety();
        int int42 = highamHall54Integrator38.getOrder();
        java.lang.String str43 = highamHall54Integrator38.getName();
        double double44 = highamHall54Integrator38.getCurrentSignedStepsize();
        double[] doubleArray53 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray55 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray53, doubleArray55);
        highamHall54Integrator56.setMaxGrowth((double) (-1));
        double double59 = highamHall54Integrator56.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler60 = highamHall54Integrator56.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator56.getStepHandler();
        highamHall54Integrator38.setStepHandler(stepHandler61);
        highamHall54Integrator11.setStepHandler(stepHandler61);
        java.lang.String str64 = highamHall54Integrator11.getName();
        double double65 = highamHall54Integrator11.getSafety();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.9d + "'", double41 == 0.9d);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 5 + "'", int42 == 5);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Higham-Hall 5(4)" + "'", str43, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 31.144823004794873d + "'", double44 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.9d + "'", double59 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Higham-Hall 5(4)" + "'", str64, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.9d + "'", double65 == 0.9d);
    }

    @Test
    public void test15244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15244");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setInitialStepSize((double) '4');
        double double30 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setSafety((double) '#');
        double double33 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setSafety(23.62362101477432d);
        double double36 = highamHall54Integrator11.getMinReduction();
        java.lang.String str37 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2d + "'", double27 == 0.2d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.9d + "'", double30 == 0.9d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2d + "'", double36 == 0.2d);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Higham-Hall 5(4)" + "'", str37, "Higham-Hall 5(4)");
    }

    @Test
    public void test15245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15245");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException24);
        java.lang.Class<?> wildcardClass26 = derivativeException24.getClass();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test15246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15246");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        double double16 = highamHall54Integrator11.getMaxStep();
        java.lang.String str17 = highamHall54Integrator11.getName();
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        double[] doubleArray38 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray40 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray38, doubleArray40);
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator41.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler42);
        highamHall54Integrator11.setStepHandler(stepHandler42);
        double double45 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setInitialStepSize((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator11.getStepHandler();
        double double49 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth((double) 0.0f);
        highamHall54Integrator11.setMinReduction((double) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler54 = highamHall54Integrator11.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.9d + "'", double45 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 31.144823004794873d + "'", double49 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler54);
    }

    @Test
    public void test15247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15247");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, 100.0d, (double) 10L, (double) 0.0f);
        double[] doubleArray13 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray15 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray13, doubleArray15);
        highamHall54Integrator16.setMaxGrowth((double) (-1));
        double double19 = highamHall54Integrator16.getSafety();
        double double20 = highamHall54Integrator16.getSafety();
        double double21 = highamHall54Integrator16.getCurrentStepStart();
        double[] doubleArray30 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray32 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray30, doubleArray32);
        highamHall54Integrator33.setMaxGrowth((double) (-1));
        double double36 = highamHall54Integrator33.getSafety();
        double double37 = highamHall54Integrator33.getSafety();
        double double38 = highamHall54Integrator33.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        highamHall54Integrator43.addSwitchingFunction(switchingFunction44, (double) (byte) -1, (double) 1, 5);
        double double49 = highamHall54Integrator43.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler50 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator33.setStepHandler(stepHandler50);
        highamHall54Integrator16.setStepHandler(stepHandler50);
        highamHall54Integrator4.setStepHandler(stepHandler50);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction54, 100.0d, (double) 0L, 10);
        double double59 = highamHall54Integrator4.getCurrentStepStart();
        double double60 = highamHall54Integrator4.getCurrentStepStart();
        double double61 = highamHall54Integrator4.getMinReduction();
        double double62 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.9d + "'", double19 == 0.9d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.9d + "'", double20 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.9d + "'", double36 == 0.9d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.9d + "'", double37 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2d + "'", double61 == 0.2d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.2d + "'", double62 == 0.2d);
    }

    @Test
    public void test15248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15248");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), (double) (-1L), (double) 'a', 98.48857801796105d);
    }

    @Test
    public void test15249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15249");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test15250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15250");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double double17 = highamHall54Integrator11.getMinReduction();
        java.lang.String str18 = highamHall54Integrator11.getName();
        java.lang.String str19 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setInitialStepSize((double) (-1));
        highamHall54Integrator11.setInitialStepSize(97.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
    }

    @Test
    public void test15251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15251");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) -1);
        double double29 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMinReduction(3.1622776601683795d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction32, 52.0d, (double) (-1.0f), (int) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.9d + "'", double29 == 0.9d);
    }

    @Test
    public void test15252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15252");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        java.lang.String str21 = integratorException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.Throwable[] throwableArray23 = integratorException19.getSuppressed();
        java.lang.Throwable[] throwableArray24 = integratorException19.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray40);
        integratorException25.addSuppressed((java.lang.Throwable) derivativeException48);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException25);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException25);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(strArray40);
    }

    @Test
    public void test15253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15253");
        java.lang.String[] strArray7 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray7);
        java.lang.Throwable[] throwableArray12 = derivativeException11.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray12);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test15254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15254");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        double double18 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setMinReduction((double) (short) 100);
        highamHall54Integrator11.setMaxGrowth((double) ' ');
        int int23 = highamHall54Integrator11.getOrder();
        double double24 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setInitialStepSize(3.1622776601683795d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
    }

    @Test
    public void test15255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15255");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(5.916079783099616d, 17.88854381999832d, (double) 1.0f, (double) (byte) 1);
        highamHall54Integrator4.setMinReduction(97.0d);
    }

    @Test
    public void test15256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15256");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.Object[] objArray14 = derivativeException13.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray14);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", objArray14);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray14);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, , , , , ]");
    }

    @Test
    public void test15257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15257");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator11.getStepHandler();
        double double18 = highamHall54Integrator11.getSafety();
        java.lang.String str19 = highamHall54Integrator11.getName();
        double double20 = highamHall54Integrator11.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.9d + "'", double18 == 0.9d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.2d + "'", double20 == 0.2d);
    }

    @Test
    public void test15258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15258");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        double double77 = highamHall54Integrator76.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction78 = null;
        highamHall54Integrator76.addSwitchingFunction(switchingFunction78, (double) '4', 97.0d, (int) (byte) -1);
        java.lang.String str83 = highamHall54Integrator76.getName();
        java.lang.String str84 = highamHall54Integrator76.getName();
        double double85 = highamHall54Integrator76.getCurrentStepStart();
        double double86 = highamHall54Integrator76.getSafety();
        java.lang.String str87 = highamHall54Integrator76.getName();
        org.apache.commons.math.ode.StepHandler stepHandler88 = highamHall54Integrator76.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Higham-Hall 5(4)" + "'", str83, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Higham-Hall 5(4)" + "'", str84, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.9d + "'", double86 == 0.9d);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Higham-Hall 5(4)" + "'", str87, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler88);
    }

    @Test
    public void test15259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15259");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        int int17 = highamHall54Integrator11.getOrder();
        double double18 = highamHall54Integrator11.getMaxGrowth();
        double double19 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction20, (double) 1.0f, 0.2d, 5);
        highamHall54Integrator11.setInitialStepSize((double) 10.0f);
        double double27 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth(7.470444898730508d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 31.144823004794873d + "'", double27 == 31.144823004794873d);
    }

    @Test
    public void test15260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15260");
        java.lang.String[] strArray9 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray9);
        java.lang.String str17 = integratorException16.getPattern();
        java.lang.Object[] objArray18 = integratorException16.getArguments();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)" + "'", str17, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[org.apache.commons.math.ode.IntegratorException: hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[org.apache.commons.math.ode.IntegratorException: hi!, ]");
    }

    @Test
    public void test15261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15261");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        java.lang.String str21 = integratorException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.Throwable[] throwableArray23 = integratorException19.getSuppressed();
        java.lang.Throwable[] throwableArray24 = integratorException19.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.Throwable[] throwableArray27 = integratorException19.getSuppressed();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray27);
    }

    @Test
    public void test15262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15262");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        int int17 = highamHall54Integrator11.getOrder();
        double double18 = highamHall54Integrator11.getMaxGrowth();
        double double19 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction20, (double) 1.0f, 0.2d, 5);
        highamHall54Integrator11.setMinReduction((double) (-1L));
        int int27 = highamHall54Integrator11.getOrder();
        int int28 = highamHall54Integrator11.getOrder();
        int int29 = highamHall54Integrator11.getOrder();
        int int30 = highamHall54Integrator11.getOrder();
        double[] doubleArray39 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray41 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray39, doubleArray41);
        highamHall54Integrator42.setMaxGrowth((double) (-1));
        double double45 = highamHall54Integrator42.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator42.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator42.getStepHandler();
        highamHall54Integrator42.setInitialStepSize((double) ' ');
        double double50 = highamHall54Integrator42.getMinStep();
        java.lang.String str51 = highamHall54Integrator42.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1L), 0.0d, 0.2d, (double) (-1L));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        highamHall54Integrator61.addSwitchingFunction(switchingFunction62, (double) (byte) -1, (double) 1, 5);
        double double67 = highamHall54Integrator61.getMinStep();
        highamHall54Integrator61.setInitialStepSize((double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler70 = highamHall54Integrator61.getStepHandler();
        highamHall54Integrator56.setStepHandler(stepHandler70);
        highamHall54Integrator42.setStepHandler(stepHandler70);
        highamHall54Integrator11.setStepHandler(stepHandler70);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.9d + "'", double45 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 97.0d + "'", double50 == 97.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Higham-Hall 5(4)" + "'", str51, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler70);
    }

    @Test
    public void test15263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15263");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        java.lang.Object[] objArray25 = derivativeException24.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray25);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray25);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        java.lang.Object[] objArray38 = derivativeException37.getArguments();
        java.lang.Object[] objArray39 = derivativeException37.getArguments();
        integratorException28.addSuppressed((java.lang.Throwable) derivativeException37);
        derivativeException12.addSuppressed((java.lang.Throwable) integratorException28);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException28);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException42);
        double[] doubleArray60 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray62 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray60, doubleArray62);
        java.lang.Object[] objArray64 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray64);
        java.lang.Object[] objArray66 = integratorException65.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray66);
        java.lang.String str68 = integratorException67.getPattern();
        java.lang.Object[] objArray69 = integratorException67.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray69);
        derivativeException43.addSuppressed((java.lang.Throwable) integratorException70);
        java.lang.Throwable[] throwableArray72 = integratorException70.getSuppressed();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str68, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray72);
    }

    @Test
    public void test15264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15264");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        int int5 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        double double9 = highamHall54Integrator4.getMinStep();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str11 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize(1.5798067522067591d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 100.0d + "'", double9 == 100.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
    }

    @Test
    public void test15265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15265");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 0, (double) 'a', (double) (-1));
        highamHall54Integrator4.setMinReduction((double) 100.0f);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, 7.211102550927978d, Double.NaN, (int) ' ');
        java.lang.String str12 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
    }

    @Test
    public void test15266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15266");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(Double.NaN, 5.580754698496868d, 31.622776601683793d, (double) (-1));
        highamHall54Integrator4.setMinReduction(11.501633168956031d);
        double double7 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 5.580754698496868d + "'", double7 == 5.580754698496868d);
    }

    @Test
    public void test15267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15267");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        double[] doubleArray30 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray32 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray30, doubleArray32);
        double[] doubleArray42 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray44 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray42, doubleArray44);
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator45.getStepHandler();
        highamHall54Integrator33.setStepHandler(stepHandler46);
        highamHall54Integrator21.setStepHandler(stepHandler46);
        highamHall54Integrator11.setStepHandler(stepHandler46);
        double double50 = highamHall54Integrator11.getMaxGrowth();
        double double51 = highamHall54Integrator11.getCurrentSignedStepsize();
        int int52 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator11.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-1.0d) + "'", double50 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 31.144823004794873d + "'", double51 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
        org.junit.Assert.assertNotNull(stepHandler53);
    }

    @Test
    public void test15268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15268");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        java.lang.String str21 = integratorException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException24);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray36);
        java.lang.String str41 = derivativeException40.getPattern();
        integratorException25.addSuppressed((java.lang.Throwable) derivativeException40);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException52);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException53);
        java.lang.Throwable[] throwableArray55 = integratorException54.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray55);
        java.lang.Throwable[] throwableArray57 = integratorException56.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException56);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException58);
        derivativeException40.addSuppressed((java.lang.Throwable) derivativeException58);
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray72);
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray72);
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray72);
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray72);
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray72);
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException77);
        java.lang.String str79 = derivativeException77.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException80 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException77);
        derivativeException58.addSuppressed((java.lang.Throwable) derivativeException77);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str41, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str79, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test15269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15269");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator11.getStepHandler();
        int int17 = highamHall54Integrator11.getOrder();
        double double18 = highamHall54Integrator11.getMaxStep();
        double double19 = highamHall54Integrator11.getCurrentStepStart();
        java.lang.String str20 = highamHall54Integrator11.getName();
        double double21 = highamHall54Integrator11.getMaxGrowth();
        int int22 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setSafety(Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator11.getStepHandler();
        double double27 = highamHall54Integrator11.getCurrentSignedStepsize();
        java.lang.String str28 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 32.0d + "'", double21 == 32.0d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 31.144823004794873d + "'", double27 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
    }

    @Test
    public void test15270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15270");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction13, (double) '4', 1.0d, 0);
        double double18 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator11.getStepHandler();
        double double20 = highamHall54Integrator11.getMaxStep();
        java.lang.String str21 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction((double) (byte) 100);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.9d + "'", double18 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
    }

    @Test
    public void test15271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15271");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth((double) ' ');
        double double15 = highamHall54Integrator11.getCurrentSignedStepsize();
        int int16 = highamHall54Integrator11.getOrder();
        double double17 = highamHall54Integrator11.getMinStep();
        int int18 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMinReduction((double) (byte) 100);
        double double21 = highamHall54Integrator11.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator11.getStepHandler();
        double double23 = highamHall54Integrator11.getSafety();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 31.144823004794873d + "'", double15 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 32.0d + "'", double21 == 32.0d);
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.9d + "'", double23 == 0.9d);
    }

    @Test
    public void test15272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15272");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(35.0d, 0.9d, 0.0d, (double) 'a');
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator10 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), (double) (short) 100, (double) 0.0f, (double) (short) -1);
        highamHall54Integrator10.setSafety((double) (short) -1);
        int int13 = highamHall54Integrator10.getOrder();
        double[] doubleArray22 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray24 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray22, doubleArray24);
        highamHall54Integrator25.setMaxGrowth((double) (-1));
        double double28 = highamHall54Integrator25.getSafety();
        int int29 = highamHall54Integrator25.getOrder();
        java.lang.String str30 = highamHall54Integrator25.getName();
        double double31 = highamHall54Integrator25.getCurrentSignedStepsize();
        double[] doubleArray40 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray42 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray40, doubleArray42);
        double double44 = highamHall54Integrator43.getCurrentSignedStepsize();
        highamHall54Integrator43.setMinReduction((double) (byte) 10);
        double double47 = highamHall54Integrator43.getSafety();
        double double48 = highamHall54Integrator43.getMinStep();
        double[] doubleArray57 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray59 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray57, doubleArray59);
        highamHall54Integrator60.setMaxGrowth((double) (-1));
        double double63 = highamHall54Integrator60.getMaxStep();
        int int64 = highamHall54Integrator60.getOrder();
        double double65 = highamHall54Integrator60.getMaxStep();
        java.lang.String str66 = highamHall54Integrator60.getName();
        org.apache.commons.math.ode.StepHandler stepHandler67 = highamHall54Integrator60.getStepHandler();
        highamHall54Integrator43.setStepHandler(stepHandler67);
        highamHall54Integrator25.setStepHandler(stepHandler67);
        highamHall54Integrator10.setStepHandler(stepHandler67);
        highamHall54Integrator4.setStepHandler(stepHandler67);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.9d + "'", double28 == 0.9d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 31.144823004794873d + "'", double31 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 31.144823004794873d + "'", double44 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.9d + "'", double47 == 0.9d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 97.0d + "'", double48 == 97.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 10.0d + "'", double63 == 10.0d);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 5 + "'", int64 == 5);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 10.0d + "'", double65 == 10.0d);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Higham-Hall 5(4)" + "'", str66, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler67);
    }

    @Test
    public void test15273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15273");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, (double) 1, (double) ' ', (int) (short) 10);
        double double12 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction13, 11.501633168956031d, (double) 'a', 10);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test15274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15274");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator4.setMinReduction(0.9d);
        highamHall54Integrator4.setInitialStepSize((double) 10L);
        double double9 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction10, (double) 0.0f, (-0.0d), 10);
        highamHall54Integrator4.setMaxGrowth(7.211102550927978d);
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator4.getStepHandler();
        double double18 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str19 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth(9.961998380252306d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 7.211102550927978d + "'", double18 == 7.211102550927978d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler20);
    }

    @Test
    public void test15275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15275");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.Object[] objArray10 = derivativeException9.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray10);
        java.lang.String str12 = integratorException11.getPattern();
        java.lang.Object[] objArray13 = integratorException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        java.lang.String str15 = integratorException14.getPattern();
        double[] doubleArray31 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray33 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray31, doubleArray33);
        java.lang.Object[] objArray35 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray35);
        java.lang.Object[] objArray37 = integratorException36.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException40);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray49);
        java.lang.Object[] objArray51 = derivativeException50.getArguments();
        java.lang.Throwable[] throwableArray52 = derivativeException50.getSuppressed();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray60);
        java.lang.Object[] objArray62 = derivativeException61.getArguments();
        derivativeException50.addSuppressed((java.lang.Throwable) derivativeException61);
        java.lang.String str64 = derivativeException50.getPattern();
        derivativeException40.addSuppressed((java.lang.Throwable) derivativeException50);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException50);
        java.lang.Throwable[] throwableArray67 = derivativeException50.getSuppressed();
        java.lang.String str68 = derivativeException50.getPattern();
        integratorException14.addSuppressed((java.lang.Throwable) derivativeException50);
        java.lang.String str70 = integratorException14.getPattern();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str12, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str15, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str70, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test15276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15276");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray20);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException23);
        java.lang.Object[] objArray25 = derivativeException9.getArguments();
        java.lang.String str26 = derivativeException9.getPattern();
        java.lang.Object[] objArray27 = derivativeException9.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray27);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!, , , , , ]");
    }

    @Test
    public void test15277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15277");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        int int5 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        double double10 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
    }

    @Test
    public void test15278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15278");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setSafety((double) 1.0f);
        highamHall54Integrator11.setInitialStepSize(0.0d);
        double double19 = highamHall54Integrator11.getCurrentStepStart();
        highamHall54Integrator11.setMinReduction((double) ' ');
        highamHall54Integrator11.setInitialStepSize((double) 0L);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test15279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15279");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        java.lang.String str7 = highamHall54Integrator4.getName();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        double double9 = highamHall54Integrator4.getMaxStep();
        double double10 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str11 = highamHall54Integrator4.getName();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety((double) 'a');
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test15280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15280");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setSafety((double) 1.0f);
        double double17 = highamHall54Integrator11.getMaxStep();
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        highamHall54Integrator29.setMaxGrowth((double) (-1));
        double double32 = highamHall54Integrator29.getSafety();
        int int33 = highamHall54Integrator29.getOrder();
        java.lang.String str34 = highamHall54Integrator29.getName();
        double double35 = highamHall54Integrator29.getCurrentSignedStepsize();
        double[] doubleArray44 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray46 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray44, doubleArray46);
        highamHall54Integrator47.setMaxGrowth((double) (-1));
        double double50 = highamHall54Integrator47.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler51 = highamHall54Integrator47.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator47.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler52);
        highamHall54Integrator11.setStepHandler(stepHandler52);
        double double55 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth(1.0d);
        highamHall54Integrator11.setSafety((double) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler60 = null;
        highamHall54Integrator11.setStepHandler(stepHandler60);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 31.144823004794873d + "'", double35 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.9d + "'", double50 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 31.144823004794873d + "'", double55 == 31.144823004794873d);
    }

    @Test
    public void test15281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15281");
        java.lang.String[] strArray4 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException6);
        java.lang.String str8 = integratorException7.getPattern();
        java.lang.Throwable[] throwableArray9 = integratorException7.getSuppressed();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test15282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15282");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        double double77 = highamHall54Integrator76.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction78 = null;
        highamHall54Integrator76.addSwitchingFunction(switchingFunction78, (double) '4', 97.0d, (int) (byte) -1);
        double double83 = highamHall54Integrator76.getCurrentStepStart();
        java.lang.String str84 = highamHall54Integrator76.getName();
        int int85 = highamHall54Integrator76.getOrder();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Higham-Hall 5(4)" + "'", str84, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 5 + "'", int85 == 5);
    }

    @Test
    public void test15283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15283");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        double double77 = highamHall54Integrator76.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler78 = highamHall54Integrator76.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler79 = highamHall54Integrator76.getStepHandler();
        double double80 = highamHall54Integrator76.getMinStep();
        highamHall54Integrator76.setMinReduction(Double.NaN);
        highamHall54Integrator76.setInitialStepSize(33.46640106136302d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9d + "'", double77 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler78);
        org.junit.Assert.assertNotNull(stepHandler79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
    }

    @Test
    public void test15284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15284");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        java.lang.String str21 = integratorException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException31);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException31);
        integratorException22.addSuppressed((java.lang.Throwable) derivativeException33);
        double[] doubleArray49 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray51 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray49, doubleArray51);
        java.lang.Object[] objArray53 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray53);
        java.lang.Object[] objArray55 = integratorException54.getArguments();
        java.lang.String str56 = integratorException54.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException54);
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray65);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException66);
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException66);
        integratorException57.addSuppressed((java.lang.Throwable) derivativeException68);
        derivativeException33.addSuppressed((java.lang.Throwable) integratorException57);
        java.lang.String str71 = integratorException57.toString();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str71, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test15285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15285");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        java.lang.String str15 = highamHall54Integrator11.getName();
        double double16 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setSafety((double) (-1L));
        highamHall54Integrator11.setInitialStepSize(0.2d);
        highamHall54Integrator11.setSafety((double) 10.0f);
        double double23 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setSafety((double) (byte) 100);
        java.lang.String str26 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.2d + "'", double16 == 0.2d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
    }

    @Test
    public void test15286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15286");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (short) 10, (double) 100, (double) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) '4', 35.0d, (int) (byte) 10);
        double double10 = highamHall54Integrator4.getMinStep();
        int int11 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        int int17 = highamHall54Integrator16.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator16.setMaxGrowth((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double23 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setSafety(7.470444898730508d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test15287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15287");
        double[] doubleArray4 = null;
        double[] doubleArray13 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray15 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray13, doubleArray15);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) 100, doubleArray4, doubleArray13);
        double[] doubleArray30 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray32 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray30, doubleArray32);
        double[] doubleArray42 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray44 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray42, doubleArray44);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray30, doubleArray44);
        double[] doubleArray57 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray59 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray57, doubleArray59);
        double[] doubleArray63 = new double[] { (-1L), 97.0d };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, doubleArray59, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) (byte) 100, doubleArray30, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator(17.78279410038923d, (double) 1L, doubleArray4, doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 97.0]");
    }

    @Test
    public void test15288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15288");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        double double16 = highamHall54Integrator11.getMaxStep();
        double double17 = highamHall54Integrator11.getMinReduction();
        java.lang.String str18 = highamHall54Integrator11.getName();
        double double19 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double20 = highamHall54Integrator11.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 31.144823004794873d + "'", double19 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1.0d) + "'", double20 == (-1.0d));
    }

    @Test
    public void test15289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15289");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        integratorException15.addSuppressed((java.lang.Throwable) derivativeException27);
        java.lang.Object[] objArray29 = derivativeException27.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException30);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray46);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray46);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray46);
        java.lang.Throwable[] throwableArray54 = derivativeException53.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException53);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException55);
        integratorException32.addSuppressed((java.lang.Throwable) derivativeException56);
        java.lang.String str58 = derivativeException56.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException56);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException56);
        java.lang.Throwable[] throwableArray61 = derivativeException56.getSuppressed();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str58, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(throwableArray61);
    }

    @Test
    public void test15290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15290");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator11.getStepHandler();
        double double17 = highamHall54Integrator11.getMinStep();
        double double18 = highamHall54Integrator11.getMinStep();
        double double19 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setSafety(5.612486080160912d);
        highamHall54Integrator11.setMinReduction((double) 5);
        double double24 = highamHall54Integrator11.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 97.0d + "'", double18 == 97.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.0d) + "'", double19 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
    }

    @Test
    public void test15291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15291");
        double[] doubleArray16 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray18 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray16, doubleArray18);
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray20);
        java.lang.Object[] objArray22 = integratorException21.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException23);
        java.lang.Object[] objArray25 = derivativeException24.getArguments();
        java.lang.String str26 = derivativeException24.getPattern();
        java.lang.Object[] objArray27 = derivativeException24.getArguments();
        java.lang.Object[] objArray28 = derivativeException24.getArguments();
        java.lang.Throwable[] throwableArray29 = derivativeException24.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray29);
        java.lang.Object[] objArray31 = integratorException30.getArguments();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str26, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
    }

    @Test
    public void test15292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15292");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException18);
        java.lang.Object[] objArray21 = derivativeException18.getArguments();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
    }

    @Test
    public void test15293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15293");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        double double16 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMinReduction((double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator11.getStepHandler();
        double double20 = highamHall54Integrator11.getCurrentSignedStepsize();
        java.lang.String str21 = highamHall54Integrator11.getName();
        double double22 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth(5.282402246372794d);
        java.lang.String str25 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator11.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9d + "'", double16 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 31.144823004794873d + "'", double20 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 31.144823004794873d + "'", double22 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler26);
    }

    @Test
    public void test15294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15294");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray10);
        java.lang.Throwable[] throwableArray14 = derivativeException13.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException15);
        java.lang.String str17 = integratorException15.getPattern();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray33);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray33);
        integratorException15.addSuppressed((java.lang.Throwable) integratorException42);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str17, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray33);
    }

    @Test
    public void test15295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15295");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        double double17 = highamHall54Integrator11.getMaxStep();
        double double18 = highamHall54Integrator11.getMaxGrowth();
        double double19 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setSafety((-0.0d));
        double double22 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2d + "'", double19 == 0.2d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 31.144823004794873d + "'", double22 == 31.144823004794873d);
    }

    @Test
    public void test15296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15296");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException20);
        java.lang.Throwable[] throwableArray23 = integratorException20.getSuppressed();
        java.lang.Object[] objArray24 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", objArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[-1, 1, 1.0, -1.0, 1, a]");
    }

    @Test
    public void test15297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15297");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        double double7 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        double double10 = highamHall54Integrator4.getMinReduction();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double12 = highamHall54Integrator4.getMinReduction();
        double double13 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.2d + "'", double12 == 0.2d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
    }

    @Test
    public void test15298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15298");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(32.0d, 59.16079783099616d, 0.0d, (double) (-1L));
    }

    @Test
    public void test15299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15299");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray19, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction37, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        double double42 = highamHall54Integrator36.getMaxStep();
        double double43 = highamHall54Integrator36.getMaxGrowth();
        double double44 = highamHall54Integrator36.getMinStep();
        double double45 = highamHall54Integrator36.getMaxGrowth();
        double double46 = highamHall54Integrator36.getMinReduction();
        java.lang.String str47 = highamHall54Integrator36.getName();
        double double48 = highamHall54Integrator36.getMaxStep();
        java.lang.String str49 = highamHall54Integrator36.getName();
        java.lang.Class<?> wildcardClass50 = highamHall54Integrator36.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 35.0d + "'", double42 == 35.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 35.0d + "'", double44 == 35.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.2d + "'", double46 == 0.2d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Higham-Hall 5(4)" + "'", str47, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 35.0d + "'", double48 == 35.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Higham-Hall 5(4)" + "'", str49, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test15300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15300");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setInitialStepSize((double) 0);
        java.lang.String str17 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction18, (double) (short) 1, 1.0d, (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction23, (double) (byte) 0, 100.0d, 0);
        int int28 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setSafety((double) 0.0f);
        double double31 = highamHall54Integrator11.getMaxStep();
        java.lang.String str32 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
    }

    @Test
    public void test15301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15301");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        double double17 = highamHall54Integrator11.getMaxGrowth();
        java.lang.String str18 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth(0.2d);
        java.lang.String str21 = highamHall54Integrator11.getName();
        java.lang.String str22 = highamHall54Integrator11.getName();
        double double23 = highamHall54Integrator11.getMinReduction();
        java.lang.String str24 = highamHall54Integrator11.getName();
        double double25 = highamHall54Integrator11.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction26, 20.654650327566205d, 11.683854606559324d, (int) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.2d + "'", double23 == 0.2d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 97.0d + "'", double25 == 97.0d);
    }

    @Test
    public void test15302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15302");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setInitialStepSize((double) 0);
        java.lang.String str17 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction18, (double) (short) 1, 1.0d, (int) (byte) 10);
        double double23 = highamHall54Integrator11.getMinStep();
        double double24 = highamHall54Integrator11.getMinStep();
        double double25 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMinReduction(0.9d);
        java.lang.String str28 = highamHall54Integrator11.getName();
        double double29 = highamHall54Integrator11.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 97.0d + "'", double23 == 97.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 97.0d + "'", double24 == 97.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
    }

    @Test
    public void test15303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15303");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (-1.0f), 0.2d, (double) (byte) -1);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str6 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        double double12 = highamHall54Integrator11.getMinStep();
        java.lang.String str13 = highamHall54Integrator11.getName();
        double[] doubleArray22 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray24 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray22, doubleArray24);
        highamHall54Integrator25.setMaxGrowth((double) (-1));
        double double28 = highamHall54Integrator25.getSafety();
        double double29 = highamHall54Integrator25.getMinReduction();
        double double30 = highamHall54Integrator25.getMaxStep();
        java.lang.String str31 = highamHall54Integrator25.getName();
        double[] doubleArray40 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray42 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray40, doubleArray42);
        double[] doubleArray52 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray54 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray52, doubleArray54);
        org.apache.commons.math.ode.StepHandler stepHandler56 = highamHall54Integrator55.getStepHandler();
        highamHall54Integrator43.setStepHandler(stepHandler56);
        highamHall54Integrator25.setStepHandler(stepHandler56);
        highamHall54Integrator11.setStepHandler(stepHandler56);
        org.apache.commons.math.ode.StepHandler stepHandler60 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler60);
        int int62 = highamHall54Integrator4.getOrder();
        java.lang.String str63 = highamHall54Integrator4.getName();
        double double64 = highamHall54Integrator4.getMinReduction();
        double double65 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.9d + "'", double28 == 0.9d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 5 + "'", int62 == 5);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Higham-Hall 5(4)" + "'", str63, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.2d + "'", double64 == 0.2d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 10.0d + "'", double65 == 10.0d);
    }

    @Test
    public void test15304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15304");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        java.lang.String str5 = highamHall54Integrator4.getName();
        double double6 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
    }

    @Test
    public void test15305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15305");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getMinReduction();
        java.lang.String str17 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction18, (double) 5, 56.23413251903491d, 100);
        highamHall54Integrator11.setMaxGrowth((double) 100.0f);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (-0.0d), 31.622776601683793d, (double) (byte) -1);
        double double30 = highamHall54Integrator29.getMinReduction();
        double[] doubleArray39 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray41 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray39, doubleArray41);
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator42.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler43);
        double double45 = highamHall54Integrator29.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler46);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.2d + "'", double16 == 0.2d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.2d + "'", double30 == 0.2d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.2d + "'", double45 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler46);
    }

    @Test
    public void test15306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15306");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 1.0d, (double) (short) 10, (double) (-1));
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test15307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15307");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException21);
        java.lang.Throwable[] throwableArray24 = derivativeException9.getSuppressed();
        java.lang.String str25 = derivativeException9.getPattern();
        java.lang.Object[] objArray26 = derivativeException9.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray26);
        java.lang.Throwable[] throwableArray28 = integratorException27.getSuppressed();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray28);
    }

    @Test
    public void test15308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15308");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setInitialStepSize((double) 0);
        java.lang.String str17 = highamHall54Integrator11.getName();
        double double18 = highamHall54Integrator11.getCurrentStepStart();
        java.lang.String str19 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setSafety(Double.NaN);
        double double22 = highamHall54Integrator11.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
    }

    @Test
    public void test15309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15309");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.Throwable[] throwableArray10 = derivativeException9.getSuppressed();
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        java.lang.Object[] objArray29 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray29);
        java.lang.Object[] objArray31 = integratorException30.getArguments();
        java.lang.String str32 = integratorException30.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException30);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException30);
        java.lang.Object[] objArray35 = integratorException30.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException30);
        derivativeException9.addSuppressed((java.lang.Throwable) integratorException30);
        java.lang.String str38 = derivativeException9.getPattern();
        java.lang.Object[] objArray39 = derivativeException9.getArguments();
        java.lang.Throwable[] throwableArray40 = derivativeException9.getSuppressed();
        java.lang.String str41 = derivativeException9.getPattern();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
    }

    @Test
    public void test15310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15310");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        highamHall54Integrator4.setInitialStepSize((double) (short) 10);
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        highamHall54Integrator18.setMaxGrowth((double) (-1));
        double double21 = highamHall54Integrator18.getSafety();
        double double22 = highamHall54Integrator18.getSafety();
        highamHall54Integrator18.setMaxGrowth((-1.0d));
        double double25 = highamHall54Integrator18.getMinReduction();
        highamHall54Integrator18.setMinReduction((double) (short) 100);
        double double28 = highamHall54Integrator18.getMinStep();
        int int29 = highamHall54Integrator18.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler30);
        double double32 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setMinReduction((-0.0d));
        double double35 = highamHall54Integrator4.getMinReduction();
        java.lang.String str36 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.9d + "'", double21 == 0.9d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.2d + "'", double25 == 0.2d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 97.0d + "'", double28 == 97.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.2d + "'", double32 == 0.2d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.0d) + "'", double35 == (-0.0d));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Higham-Hall 5(4)" + "'", str36, "Higham-Hall 5(4)");
    }

    @Test
    public void test15311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15311");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setInitialStepSize((double) 0);
        double double17 = highamHall54Integrator11.getCurrentStepStart();
        highamHall54Integrator11.setSafety((double) (-1L));
        double double20 = highamHall54Integrator11.getMinReduction();
        double double21 = highamHall54Integrator11.getCurrentStepStart();
        double[] doubleArray30 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray32 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray30, doubleArray32);
        double double34 = highamHall54Integrator33.getCurrentSignedStepsize();
        highamHall54Integrator33.setMinReduction((double) (byte) 10);
        double double37 = highamHall54Integrator33.getCurrentSignedStepsize();
        java.lang.String str38 = highamHall54Integrator33.getName();
        double[] doubleArray47 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray49 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray47, doubleArray49);
        highamHall54Integrator50.setMaxGrowth((double) (-1));
        double double53 = highamHall54Integrator50.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        highamHall54Integrator58.setSafety(1.0d);
        double double61 = highamHall54Integrator58.getMinReduction();
        double[] doubleArray70 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray72 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray70, doubleArray72);
        double double74 = highamHall54Integrator73.getCurrentSignedStepsize();
        highamHall54Integrator73.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler77 = highamHall54Integrator73.getStepHandler();
        highamHall54Integrator58.setStepHandler(stepHandler77);
        highamHall54Integrator50.setStepHandler(stepHandler77);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator84 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        int int85 = highamHall54Integrator84.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler86 = highamHall54Integrator84.getStepHandler();
        highamHall54Integrator84.setMaxGrowth((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler89 = highamHall54Integrator84.getStepHandler();
        highamHall54Integrator50.setStepHandler(stepHandler89);
        highamHall54Integrator33.setStepHandler(stepHandler89);
        highamHall54Integrator11.setStepHandler(stepHandler89);
        org.apache.commons.math.ode.StepHandler stepHandler93 = highamHall54Integrator11.getStepHandler();
        java.lang.String str94 = highamHall54Integrator11.getName();
        double double95 = highamHall54Integrator11.getMaxGrowth();
        java.lang.String str96 = highamHall54Integrator11.getName();
        double double97 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double98 = highamHall54Integrator11.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.2d + "'", double20 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 31.144823004794873d + "'", double34 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 31.144823004794873d + "'", double37 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Higham-Hall 5(4)" + "'", str38, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2d + "'", double61 == 0.2d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 31.144823004794873d + "'", double74 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler77);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 5 + "'", int85 == 5);
        org.junit.Assert.assertNotNull(stepHandler86);
        org.junit.Assert.assertNotNull(stepHandler89);
        org.junit.Assert.assertNotNull(stepHandler93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Higham-Hall 5(4)" + "'", str94, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-1.0d) + "'", double95 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Higham-Hall 5(4)" + "'", str96, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 31.144823004794873d + "'", double97 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + (-1.0d) + "'", double98 == (-1.0d));
    }

    @Test
    public void test15312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15312");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        int int26 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction27, 0.0d, 35.0d, (int) '4');
        java.lang.String str32 = highamHall54Integrator11.getName();
        int int33 = highamHall54Integrator11.getOrder();
        java.lang.String str34 = highamHall54Integrator11.getName();
        double double35 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 31.144823004794873d + "'", double35 == 31.144823004794873d);
    }

    @Test
    public void test15313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15313");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setSafety((double) 1.0f);
        highamHall54Integrator11.setInitialStepSize(0.0d);
        double double19 = highamHall54Integrator11.getCurrentStepStart();
        highamHall54Integrator11.setMinReduction((double) ' ');
        double double22 = highamHall54Integrator11.getMaxStep();
        double double23 = highamHall54Integrator11.getCurrentStepStart();
        double double24 = highamHall54Integrator11.getMaxStep();
        java.lang.Class<?> wildcardClass25 = highamHall54Integrator11.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test15314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15314");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        highamHall54Integrator11.setMaxGrowth((double) (-1L));
        int int20 = highamHall54Integrator11.getOrder();
        double double21 = highamHall54Integrator11.getSafety();
        java.lang.String str22 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setSafety((double) (short) -1);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), 0.0d, (double) '#', (double) (short) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        highamHall54Integrator29.addSwitchingFunction(switchingFunction30, (double) (byte) -1, (double) 1.0f, (int) (byte) 0);
        double[] doubleArray43 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray45 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray43, doubleArray45);
        highamHall54Integrator46.setMaxGrowth((double) (-1));
        double double49 = highamHall54Integrator46.getMaxStep();
        int int50 = highamHall54Integrator46.getOrder();
        double double51 = highamHall54Integrator46.getMaxStep();
        java.lang.String str52 = highamHall54Integrator46.getName();
        java.lang.String str53 = highamHall54Integrator46.getName();
        double double54 = highamHall54Integrator46.getCurrentSignedStepsize();
        int int55 = highamHall54Integrator46.getOrder();
        double double56 = highamHall54Integrator46.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler57 = highamHall54Integrator46.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler57);
        highamHall54Integrator11.setStepHandler(stepHandler57);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.9d + "'", double21 == 0.9d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Higham-Hall 5(4)" + "'", str52, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Higham-Hall 5(4)" + "'", str53, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 31.144823004794873d + "'", double54 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 5 + "'", int55 == 5);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 97.0d + "'", double56 == 97.0d);
        org.junit.Assert.assertNotNull(stepHandler57);
    }

    @Test
    public void test15315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15315");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        double double77 = highamHall54Integrator76.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction78 = null;
        highamHall54Integrator76.addSwitchingFunction(switchingFunction78, (double) '4', 97.0d, (int) (byte) -1);
        java.lang.String str83 = highamHall54Integrator76.getName();
        java.lang.String str84 = highamHall54Integrator76.getName();
        highamHall54Integrator76.setMaxGrowth((double) (-1));
        double double87 = highamHall54Integrator76.getMaxStep();
        highamHall54Integrator76.setMaxGrowth((double) (byte) 100);
        java.lang.String str90 = highamHall54Integrator76.getName();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Higham-Hall 5(4)" + "'", str83, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Higham-Hall 5(4)" + "'", str84, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 100.0d + "'", double87 == 100.0d);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Higham-Hall 5(4)" + "'", str90, "Higham-Hall 5(4)");
    }

    @Test
    public void test15316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15316");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        java.lang.String str21 = integratorException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException24);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray36);
        java.lang.String str41 = derivativeException40.getPattern();
        integratorException25.addSuppressed((java.lang.Throwable) derivativeException40);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException40);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException43);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException43);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException54);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException64);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException64);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException66);
        derivativeException54.addSuppressed((java.lang.Throwable) derivativeException66);
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray76);
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException77);
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException77);
        java.lang.Object[] objArray80 = derivativeException77.getArguments();
        java.lang.String str81 = derivativeException77.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException77);
        java.lang.String str83 = derivativeException82.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException84 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException82);
        org.apache.commons.math.ode.DerivativeException derivativeException85 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException84);
        derivativeException54.addSuppressed((java.lang.Throwable) integratorException84);
        java.lang.Throwable[] throwableArray87 = integratorException84.getSuppressed();
        java.lang.String str88 = integratorException84.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException89 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException84);
        integratorException43.addSuppressed((java.lang.Throwable) derivativeException89);
        org.apache.commons.math.ode.DerivativeException derivativeException91 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException89);
        java.lang.Object[] objArray92 = derivativeException89.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException93 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException89);
        java.lang.Object[] objArray94 = derivativeException89.getArguments();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str41, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[]");
    }

    @Test
    public void test15317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15317");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setInitialStepSize((double) '4');
        double double30 = highamHall54Integrator11.getSafety();
        java.lang.String str31 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction(7.211102550927978d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2d + "'", double27 == 0.2d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.9d + "'", double30 == 0.9d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
    }

    @Test
    public void test15318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15318");
        double[] doubleArray17 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray19 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray17, doubleArray19);
        java.lang.Object[] objArray21 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray21);
        java.lang.Object[] objArray23 = integratorException22.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException22);
        java.lang.Object[] objArray25 = integratorException22.getArguments();
        java.lang.Throwable[] throwableArray26 = integratorException22.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray26);
        java.lang.String str30 = integratorException29.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException29);
        java.lang.String str32 = integratorException29.toString();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str32, "org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test15319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15319");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, 100.0d, (double) 10L, (double) 0.0f);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int6 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, 100.0d, (double) '4', (int) '#');
        java.lang.String str12 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 31.622776601683793d + "'", double5 == 31.622776601683793d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
    }

    @Test
    public void test15320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15320");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        java.lang.Object[] objArray38 = derivativeException37.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray38);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray38);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray38);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray49);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException50);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException51);
        integratorException41.addSuppressed((java.lang.Throwable) derivativeException51);
        java.lang.Throwable[] throwableArray54 = derivativeException51.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException51);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException51);
        java.lang.Object[] objArray57 = derivativeException56.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("", objArray57);
        derivativeException24.addSuppressed((java.lang.Throwable) integratorException58);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
    }

    @Test
    public void test15321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15321");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double13 = highamHall54Integrator11.getMaxStep();
        double double14 = highamHall54Integrator11.getMinReduction();
        double double15 = highamHall54Integrator11.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction16, 0.9d, 71.02112361825881d, (int) (byte) 100);
        double double21 = highamHall54Integrator11.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2d + "'", double21 == 0.2d);
    }

    @Test
    public void test15322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15322");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray19);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test15323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15323");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, (double) 1, 5);
        double double10 = highamHall54Integrator4.getMinStep();
        java.lang.String str11 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) (byte) 100);
        double[] doubleArray22 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray24 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray22, doubleArray24);
        highamHall54Integrator25.setMaxGrowth((double) (-1));
        double double28 = highamHall54Integrator25.getMaxStep();
        java.lang.String str29 = highamHall54Integrator25.getName();
        double double30 = highamHall54Integrator25.getMinReduction();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (-1.0f), 0.2d, (double) (byte) -1);
        double double36 = highamHall54Integrator35.getCurrentSignedStepsize();
        double[] doubleArray45 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray47 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray45, doubleArray47);
        double[] doubleArray57 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray59 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray57, doubleArray59);
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator60.getStepHandler();
        highamHall54Integrator48.setStepHandler(stepHandler61);
        int int63 = highamHall54Integrator48.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler64 = highamHall54Integrator48.getStepHandler();
        highamHall54Integrator35.setStepHandler(stepHandler64);
        highamHall54Integrator25.setStepHandler(stepHandler64);
        highamHall54Integrator4.setStepHandler(stepHandler64);
        double double68 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler69 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 10.0f);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.2d + "'", double30 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 5 + "'", int63 == 5);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 10.0d + "'", double68 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler69);
    }

    @Test
    public void test15324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15324");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray10);
        java.lang.String str15 = integratorException14.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException14);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str15, "org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test15325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15325");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (short) 10, 24.322992790977874d, (double) (byte) 0);
        double double5 = highamHall54Integrator4.getMinReduction();
        int int6 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
    }

    @Test
    public void test15326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15326");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        double double5 = highamHall54Integrator4.getMinStep();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        highamHall54Integrator18.setMaxGrowth((double) (-1));
        double double21 = highamHall54Integrator18.getSafety();
        double double22 = highamHall54Integrator18.getMinReduction();
        double double23 = highamHall54Integrator18.getMaxStep();
        java.lang.String str24 = highamHall54Integrator18.getName();
        double[] doubleArray33 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray35 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray33, doubleArray35);
        double[] doubleArray45 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray47 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray45, doubleArray47);
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator48.getStepHandler();
        highamHall54Integrator36.setStepHandler(stepHandler49);
        highamHall54Integrator18.setStepHandler(stepHandler49);
        highamHall54Integrator4.setStepHandler(stepHandler49);
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth((double) 0L);
        double double56 = highamHall54Integrator4.getMaxStep();
        double double57 = highamHall54Integrator4.getCurrentStepStart();
        double double58 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety(2.4957893743180684d);
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) (short) 100);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.9d + "'", double21 == 0.9d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2d + "'", double58 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler61);
    }

    @Test
    public void test15327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15327");
        java.lang.String[] strArray9 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        java.lang.String str17 = derivativeException16.toString();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str17, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test15328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15328");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double double17 = highamHall54Integrator11.getCurrentSignedStepsize();
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        double double30 = highamHall54Integrator29.getCurrentSignedStepsize();
        highamHall54Integrator29.setMinReduction((double) (byte) 10);
        double double33 = highamHall54Integrator29.getSafety();
        double double34 = highamHall54Integrator29.getMinStep();
        double[] doubleArray43 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray45 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray43, doubleArray45);
        highamHall54Integrator46.setMaxGrowth((double) (-1));
        double double49 = highamHall54Integrator46.getMaxStep();
        int int50 = highamHall54Integrator46.getOrder();
        double double51 = highamHall54Integrator46.getMaxStep();
        java.lang.String str52 = highamHall54Integrator46.getName();
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator46.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler53);
        highamHall54Integrator11.setStepHandler(stepHandler53);
        highamHall54Integrator11.setSafety(31.622776601683793d);
        double double58 = highamHall54Integrator11.getMaxStep();
        double double59 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setInitialStepSize((double) ' ');
        java.lang.String str62 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 31.144823004794873d + "'", double17 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 31.144823004794873d + "'", double30 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.9d + "'", double33 == 0.9d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 97.0d + "'", double34 == 97.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Higham-Hall 5(4)" + "'", str52, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.0d) + "'", double59 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Higham-Hall 5(4)" + "'", str62, "Higham-Hall 5(4)");
    }

    @Test
    public void test15329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15329");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        double double25 = highamHall54Integrator24.getCurrentSignedStepsize();
        highamHall54Integrator24.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator24.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler29);
        double double31 = highamHall54Integrator11.getMinStep();
        highamHall54Integrator11.setMaxGrowth((double) (short) -1);
        double double34 = highamHall54Integrator11.getMaxStep();
        java.lang.String str35 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 31.144823004794873d + "'", double25 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 97.0d + "'", double31 == 97.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Higham-Hall 5(4)" + "'", str35, "Higham-Hall 5(4)");
    }

    @Test
    public void test15330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15330");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        double double17 = highamHall54Integrator11.getMinStep();
        java.lang.String str18 = highamHall54Integrator11.getName();
        java.lang.String str19 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) 10);
        highamHall54Integrator11.setInitialStepSize((-1.0d));
        highamHall54Integrator11.setMaxGrowth(48.57293794619442d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
    }

    @Test
    public void test15331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15331");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.Throwable[] throwableArray10 = derivativeException9.getSuppressed();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray22);
        java.lang.String str28 = derivativeException27.getPattern();
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException27);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        java.lang.Object[] objArray42 = derivativeException41.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray42);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray42);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray42);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException45);
        java.lang.String str47 = integratorException45.getPattern();
        derivativeException27.addSuppressed((java.lang.Throwable) integratorException45);
        java.lang.String str49 = integratorException45.getPattern();
        java.lang.String str50 = integratorException45.getPattern();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str28, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str47, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str49, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str50, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test15332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15332");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 0.0f, (double) 100L, 71.02112361825881d);
        double[] doubleArray13 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray15 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray13, doubleArray15);
        highamHall54Integrator16.setMaxGrowth((double) (-1));
        double double19 = highamHall54Integrator16.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator16.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator16.getStepHandler();
        java.lang.String str22 = highamHall54Integrator16.getName();
        java.lang.String str23 = highamHall54Integrator16.getName();
        int int24 = highamHall54Integrator16.getOrder();
        double double25 = highamHall54Integrator16.getMaxStep();
        highamHall54Integrator16.setSafety(71.02112361825881d);
        highamHall54Integrator16.setMaxGrowth(48.57293794619442d);
        highamHall54Integrator16.setMaxGrowth(4.995787599886596d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (short) -1, (double) 'a', (double) 1L);
        double double37 = highamHall54Integrator36.getMaxStep();
        double double38 = highamHall54Integrator36.getMinReduction();
        highamHall54Integrator36.setMaxGrowth((double) (-1.0f));
        double double41 = highamHall54Integrator36.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator36.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler42);
        highamHall54Integrator4.setStepHandler(stepHandler42);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.9d + "'", double19 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.2d + "'", double38 == 0.2d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.2d + "'", double41 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler42);
    }

    @Test
    public void test15333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15333");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setSafety((double) 5);
        int int18 = highamHall54Integrator11.getOrder();
        double double19 = highamHall54Integrator11.getMinStep();
        int int20 = highamHall54Integrator11.getOrder();
        double double21 = highamHall54Integrator11.getMinStep();
        highamHall54Integrator11.setMinReduction((double) 'a');
        double double24 = highamHall54Integrator11.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 97.0d + "'", double19 == 97.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 97.0d + "'", double21 == 97.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 97.0d + "'", double24 == 97.0d);
    }

    @Test
    public void test15334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15334");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        double double16 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double17 = highamHall54Integrator11.getSafety();
        java.lang.String str18 = highamHall54Integrator11.getName();
        java.lang.String str19 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setSafety((double) (-1L));
        double double22 = highamHall54Integrator11.getSafety();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 31.144823004794873d + "'", double16 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.9d + "'", double17 == 0.9d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
    }

    @Test
    public void test15335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15335");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        java.lang.Object[] objArray13 = derivativeException12.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        java.lang.Throwable[] throwableArray17 = integratorException16.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", (java.lang.Object[]) throwableArray17);
        java.lang.String str19 = integratorException18.getPattern();
        java.lang.Object[] objArray20 = integratorException18.getArguments();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
    }

    @Test
    public void test15336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15336");
        java.lang.String[] strArray10 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        java.lang.Object[] objArray21 = derivativeException20.getArguments();
        java.lang.String str22 = derivativeException20.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)" + "'", str22, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)");
    }

    @Test
    public void test15337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15337");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(31.622776601683793d, (double) (short) 10, (double) 0, (double) (byte) 10);
        int int5 = highamHall54Integrator4.getOrder();
        double double6 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
    }

    @Test
    public void test15338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15338");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double double17 = highamHall54Integrator11.getCurrentSignedStepsize();
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        highamHall54Integrator29.setMaxGrowth((double) (-1));
        double double32 = highamHall54Integrator29.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator29.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler34);
        highamHall54Integrator11.setSafety((double) 1);
        double double38 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth(3.1622776601683795d);
        java.lang.String str41 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 31.144823004794873d + "'", double17 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Higham-Hall 5(4)" + "'", str41, "Higham-Hall 5(4)");
    }

    @Test
    public void test15339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15339");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMaxGrowth();
        double double28 = highamHall54Integrator11.getMaxStep();
        int int29 = highamHall54Integrator11.getOrder();
        double double30 = highamHall54Integrator11.getSafety();
        int int31 = highamHall54Integrator11.getOrder();
        java.lang.String str32 = highamHall54Integrator11.getName();
        java.lang.Class<?> wildcardClass33 = highamHall54Integrator11.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.9d + "'", double30 == 0.9d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test15340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15340");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray19, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction37, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        double double42 = highamHall54Integrator36.getMaxStep();
        double double43 = highamHall54Integrator36.getMaxGrowth();
        double double44 = highamHall54Integrator36.getMinStep();
        double double45 = highamHall54Integrator36.getMaxGrowth();
        double double46 = highamHall54Integrator36.getMinReduction();
        java.lang.String str47 = highamHall54Integrator36.getName();
        double double48 = highamHall54Integrator36.getMaxStep();
        highamHall54Integrator36.setMaxGrowth(9.924141172814958d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 35.0d + "'", double42 == 35.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 35.0d + "'", double44 == 35.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.2d + "'", double46 == 0.2d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Higham-Hall 5(4)" + "'", str47, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 35.0d + "'", double48 == 35.0d);
    }

    @Test
    public void test15341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15341");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray19, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction37, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        double double42 = highamHall54Integrator36.getMaxStep();
        java.lang.String str43 = highamHall54Integrator36.getName();
        double[] doubleArray52 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray54 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray52, doubleArray54);
        double double56 = highamHall54Integrator55.getSafety();
        double[] doubleArray65 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray67 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray65, doubleArray67);
        double double69 = highamHall54Integrator68.getCurrentSignedStepsize();
        double double70 = highamHall54Integrator68.getCurrentStepStart();
        double double71 = highamHall54Integrator68.getMaxGrowth();
        double[] doubleArray80 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray82 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator83 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray80, doubleArray82);
        highamHall54Integrator83.setMaxGrowth((double) (-1));
        double double86 = highamHall54Integrator83.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler87 = highamHall54Integrator83.getStepHandler();
        highamHall54Integrator68.setStepHandler(stepHandler87);
        highamHall54Integrator55.setStepHandler(stepHandler87);
        highamHall54Integrator36.setStepHandler(stepHandler87);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction91 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction91, (double) (short) 0, (double) 10.0f, 10);
        double double96 = highamHall54Integrator36.getMaxGrowth();
        java.lang.String str97 = highamHall54Integrator36.getName();
        org.apache.commons.math.ode.StepHandler stepHandler98 = highamHall54Integrator36.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 35.0d + "'", double42 == 35.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Higham-Hall 5(4)" + "'", str43, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.9d + "'", double56 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 31.144823004794873d + "'", double69 == 31.144823004794873d);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 10.0d + "'", double71 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.9d + "'", double86 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler87);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 10.0d + "'", double96 == 10.0d);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Higham-Hall 5(4)" + "'", str97, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler98);
    }

    @Test
    public void test15342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15342");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setInitialStepSize((double) 0);
        java.lang.String str17 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) 100L);
        double double20 = highamHall54Integrator11.getSafety();
        double double21 = highamHall54Integrator11.getMinReduction();
        int int22 = highamHall54Integrator11.getOrder();
        int int23 = highamHall54Integrator11.getOrder();
        java.lang.String str24 = highamHall54Integrator11.getName();
        double double25 = highamHall54Integrator11.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.9d + "'", double20 == 0.9d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2d + "'", double21 == 0.2d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.2d + "'", double25 == 0.2d);
    }

    @Test
    public void test15343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15343");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray13);
        java.lang.String str21 = derivativeException20.getPattern();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray41);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("", strArray41);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray41);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray41);
        derivativeException20.addSuppressed((java.lang.Throwable) derivativeException54);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str21, "org.apache.commons.math.ode.IntegratorException: ");
        org.junit.Assert.assertNotNull(strArray41);
    }

    @Test
    public void test15344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15344");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        java.lang.Object[] objArray9 = derivativeException8.getArguments();
        java.lang.Throwable[] throwableArray10 = derivativeException8.getSuppressed();
        java.lang.Throwable[] throwableArray11 = derivativeException8.getSuppressed();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        java.lang.Object[] objArray23 = derivativeException22.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray23);
        derivativeException8.addSuppressed((java.lang.Throwable) integratorException25);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        java.lang.Object[] objArray38 = derivativeException35.getArguments();
        java.lang.String str39 = derivativeException35.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        java.lang.String str41 = derivativeException40.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException40);
        integratorException25.addSuppressed((java.lang.Throwable) integratorException42);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException25);
        java.lang.Object[] objArray45 = integratorException25.getArguments();
        java.lang.String str46 = integratorException25.getPattern();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray61);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("", strArray61);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray61);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray61);
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray61);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray61);
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray61);
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray61);
        integratorException25.addSuppressed((java.lang.Throwable) derivativeException69);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException25);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException25);
        java.lang.Throwable[] throwableArray73 = integratorException72.getSuppressed();
        java.lang.String str74 = integratorException72.getPattern();
        java.lang.String str75 = integratorException72.getPattern();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str46, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str74, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str75, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test15345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15345");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, (double) 1, 5);
        double double10 = highamHall54Integrator4.getMinStep();
        java.lang.String str11 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) (byte) 100);
        java.lang.String str14 = highamHall54Integrator4.getName();
        double double15 = highamHall54Integrator4.getMinStep();
        double double16 = highamHall54Integrator4.getSafety();
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator28.setInitialStepSize((double) (-1));
        highamHall54Integrator28.setInitialStepSize((double) 100.0f);
        double double34 = highamHall54Integrator28.getMaxStep();
        double double35 = highamHall54Integrator28.getCurrentStepStart();
        double double36 = highamHall54Integrator28.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler37 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler37);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 100.0d + "'", double16 == 100.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 31.144823004794873d + "'", double36 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler37);
    }

    @Test
    public void test15346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15346");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        double double5 = highamHall54Integrator4.getMinStep();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        highamHall54Integrator18.setMaxGrowth((double) (-1));
        double double21 = highamHall54Integrator18.getSafety();
        double double22 = highamHall54Integrator18.getMinReduction();
        double double23 = highamHall54Integrator18.getMaxStep();
        java.lang.String str24 = highamHall54Integrator18.getName();
        double[] doubleArray33 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray35 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray33, doubleArray35);
        double[] doubleArray45 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray47 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray45, doubleArray47);
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator48.getStepHandler();
        highamHall54Integrator36.setStepHandler(stepHandler49);
        highamHall54Integrator18.setStepHandler(stepHandler49);
        highamHall54Integrator4.setStepHandler(stepHandler49);
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler56 = highamHall54Integrator4.getStepHandler();
        double double57 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety(10.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.9d + "'", double21 == 0.9d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test15347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15347");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        java.lang.Throwable[] throwableArray24 = integratorException23.getSuppressed();
        java.lang.String str25 = integratorException23.getPattern();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("", strArray34);
        java.lang.Object[] objArray37 = derivativeException36.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException36);
        integratorException23.addSuppressed((java.lang.Throwable) derivativeException36);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray51);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException56);
        derivativeException36.addSuppressed((java.lang.Throwable) integratorException57);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException57);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException59);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException59);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray51);
    }

    @Test
    public void test15348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15348");
        java.lang.String[] strArray9 = new java.lang.String[] { "org.apache.commons.math.ode.DerivativeException: hi!", "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray9);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test15349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15349");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray12);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        integratorException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray32 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray32);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray32);
        integratorException15.addSuppressed((java.lang.Throwable) integratorException34);
        double[] doubleArray50 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray52 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray50, doubleArray52);
        java.lang.Object[] objArray54 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray54);
        java.lang.Object[] objArray56 = integratorException55.getArguments();
        integratorException34.addSuppressed((java.lang.Throwable) integratorException55);
        java.lang.String str58 = integratorException34.getPattern();
        java.lang.String str59 = integratorException34.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str59, "org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test15350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15350");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray14, doubleArray28);
        double[] doubleArray41 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray43 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray41, doubleArray43);
        double[] doubleArray47 = new double[] { (-1L), 97.0d };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, doubleArray43, doubleArray47);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) (byte) 100, doubleArray14, doubleArray47);
        double[] doubleArray52 = null;
        double[] doubleArray63 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray65 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray63, doubleArray65);
        double[] doubleArray75 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray77 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator78 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray75, doubleArray77);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator79 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray63, doubleArray77);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator(32.0d, (double) (short) 100, doubleArray52, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator81 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 0.0d, doubleArray47, doubleArray63);
        org.apache.commons.math.ode.StepHandler stepHandler82 = highamHall54Integrator81.getStepHandler();
        highamHall54Integrator81.setMinReduction((double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction85 = null;
        highamHall54Integrator81.addSwitchingFunction(switchingFunction85, 23.62362101477432d, (double) 0.0f, (-1));
        org.apache.commons.math.ode.StepHandler stepHandler90 = highamHall54Integrator81.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler82);
        org.junit.Assert.assertNotNull(stepHandler90);
    }

    @Test
    public void test15351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15351");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        double[] doubleArray13 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray15 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray13, doubleArray15);
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler29);
        highamHall54Integrator4.setStepHandler(stepHandler29);
        highamHall54Integrator4.setInitialStepSize((double) 100.0f);
        java.lang.String str34 = highamHall54Integrator4.getName();
        double double35 = highamHall54Integrator4.getMaxGrowth();
        double[] doubleArray44 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray46 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray44, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        highamHall54Integrator47.addSwitchingFunction(switchingFunction48, (double) 'a', 0.0d, 5);
        double double53 = highamHall54Integrator47.getMaxGrowth();
        java.lang.String str54 = highamHall54Integrator47.getName();
        double double55 = highamHall54Integrator47.getMinStep();
        double[] doubleArray64 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray66 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray64, doubleArray66);
        double[] doubleArray76 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray78 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator79 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray76, doubleArray78);
        org.apache.commons.math.ode.StepHandler stepHandler80 = highamHall54Integrator79.getStepHandler();
        highamHall54Integrator67.setStepHandler(stepHandler80);
        highamHall54Integrator47.setStepHandler(stepHandler80);
        highamHall54Integrator4.setStepHandler(stepHandler80);
        highamHall54Integrator4.setSafety((double) 100L);
        double double86 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Higham-Hall 5(4)" + "'", str54, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 97.0d + "'", double55 == 97.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler80);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 100.0d + "'", double86 == 100.0d);
    }

    @Test
    public void test15352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15352");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, 35.0d, (double) (-1.0f), (double) (byte) 0);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth(52.0d);
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
    }

    @Test
    public void test15353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15353");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException14);
        java.lang.String str17 = derivativeException14.getPattern();
        java.lang.String str18 = derivativeException14.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str18, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test15354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15354");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        java.lang.Throwable[] throwableArray11 = derivativeException10.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray32);
        derivativeException21.addSuppressed((java.lang.Throwable) derivativeException35);
        double[] doubleArray52 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray54 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray52, doubleArray54);
        java.lang.Object[] objArray56 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray56);
        java.lang.Object[] objArray58 = integratorException57.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray58);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException59);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException60);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException61);
        derivativeException21.addSuppressed((java.lang.Throwable) integratorException62);
        derivativeException10.addSuppressed((java.lang.Throwable) integratorException62);
        java.lang.Object[] objArray65 = integratorException62.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", objArray65);
        java.lang.String str67 = integratorException66.toString();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str67, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test15355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15355");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test15356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15356");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        java.lang.String str27 = highamHall54Integrator11.getName();
        java.lang.String str28 = highamHall54Integrator11.getName();
        int int29 = highamHall54Integrator11.getOrder();
        double double30 = highamHall54Integrator11.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator11.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.2d + "'", double30 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler31);
    }

    @Test
    public void test15357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15357");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, 31.144823004794873d, 100.0d, (double) 100.0f);
        highamHall54Integrator4.setMaxGrowth(4.995787599886596d);
        java.lang.String str7 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
    }

    @Test
    public void test15358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15358");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (-1.0f), (double) (-1L), (double) (short) 1);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, (double) 100, 0.0d, 0);
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety(24.322992790977874d);
        highamHall54Integrator4.setMinReduction(3.1622776601683795d);
        highamHall54Integrator4.setSafety((double) (-1.0f));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test15359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15359");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        double double16 = highamHall54Integrator11.getMaxStep();
        java.lang.String str17 = highamHall54Integrator11.getName();
        java.lang.String str18 = highamHall54Integrator11.getName();
        java.lang.String str19 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setInitialStepSize((double) (-1L));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
    }

    @Test
    public void test15360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15360");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test15361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15361");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setInitialStepSize((double) (-1));
        highamHall54Integrator11.setInitialStepSize((double) 100.0f);
        double double17 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        highamHall54Integrator22.setSafety(1.0d);
        double[] doubleArray33 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray35 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray33, doubleArray35);
        highamHall54Integrator36.setMaxGrowth((double) (-1));
        double double39 = highamHall54Integrator36.getSafety();
        double double40 = highamHall54Integrator36.getMinReduction();
        double double41 = highamHall54Integrator36.getMaxStep();
        java.lang.String str42 = highamHall54Integrator36.getName();
        double[] doubleArray51 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray53 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray51, doubleArray53);
        double[] doubleArray63 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray65 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray63, doubleArray65);
        org.apache.commons.math.ode.StepHandler stepHandler67 = highamHall54Integrator66.getStepHandler();
        highamHall54Integrator54.setStepHandler(stepHandler67);
        highamHall54Integrator36.setStepHandler(stepHandler67);
        double double70 = highamHall54Integrator36.getSafety();
        highamHall54Integrator36.setInitialStepSize((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler73 = highamHall54Integrator36.getStepHandler();
        highamHall54Integrator22.setStepHandler(stepHandler73);
        highamHall54Integrator11.setStepHandler(stepHandler73);
        int int76 = highamHall54Integrator11.getOrder();
        double double77 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setInitialStepSize((double) 1.0f);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 31.144823004794873d + "'", double17 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.9d + "'", double39 == 0.9d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.2d + "'", double40 == 0.2d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Higham-Hall 5(4)" + "'", str42, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.9d + "'", double70 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 5 + "'", int76 == 5);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.2d + "'", double77 == 0.2d);
    }

    @Test
    public void test15362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15362");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        double double5 = highamHall54Integrator4.getMinStep();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getMaxStep();
        double double8 = highamHall54Integrator4.getMinReduction();
        java.lang.String str9 = highamHall54Integrator4.getName();
        java.lang.String str10 = highamHall54Integrator4.getName();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test15363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15363");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getMaxStep();
        int int16 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction18, 32.0d, (double) (byte) 100, (int) (short) -1);
        double double23 = highamHall54Integrator11.getMinStep();
        highamHall54Integrator11.setSafety(0.0d);
        double double26 = highamHall54Integrator11.getCurrentSignedStepsize();
        int int27 = highamHall54Integrator11.getOrder();
        java.lang.String str28 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 97.0d + "'", double23 == 97.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 31.144823004794873d + "'", double26 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
    }

    @Test
    public void test15364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15364");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray18);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test15365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15365");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setMaxGrowth((double) (byte) 0);
        double double9 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction10, (double) 100.0f, 71.02112361825881d, (int) '#');
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        int int16 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
    }

    @Test
    public void test15366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15366");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        java.lang.String str21 = integratorException19.getPattern();
        java.lang.Object[] objArray22 = integratorException19.getArguments();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        integratorException19.addSuppressed((java.lang.Throwable) derivativeException36);
        double[] doubleArray53 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray55 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray53, doubleArray55);
        java.lang.Object[] objArray57 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray57);
        java.lang.Object[] objArray59 = integratorException58.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException60);
        java.lang.Object[] objArray62 = derivativeException61.getArguments();
        java.lang.String str63 = derivativeException61.getPattern();
        java.lang.Throwable[] throwableArray64 = derivativeException61.getSuppressed();
        derivativeException36.addSuppressed((java.lang.Throwable) derivativeException61);
        java.lang.Class<?> wildcardClass66 = derivativeException36.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str63, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test15367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15367");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setInitialStepSize((double) 0);
        java.lang.String str17 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction18, (double) (short) 1, 1.0d, (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction23, (double) (byte) 0, 100.0d, 0);
        double double28 = highamHall54Integrator11.getMinStep();
        double double29 = highamHall54Integrator11.getCurrentStepStart();
        highamHall54Integrator11.setMaxGrowth((double) 10L);
        int int32 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 97.0d + "'", double28 == 97.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
    }

    @Test
    public void test15368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15368");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(35.0d, 5.916079783099616d, (double) '#', 0.0d);
        double double5 = highamHall54Integrator4.getMaxStep();
        java.lang.String str6 = highamHall54Integrator4.getName();
        java.lang.String str7 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.916079783099616d + "'", double5 == 5.916079783099616d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
    }

    @Test
    public void test15369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15369");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1, (-0.0d), 0.9d, (double) (short) 1);
        java.lang.String str5 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
    }

    @Test
    public void test15370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15370");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), (double) (byte) 100, (double) 100.0f, (double) 1L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) '4', 0.0d, (int) (byte) 10);
        highamHall54Integrator4.setMinReduction(0.9d);
        highamHall54Integrator4.setInitialStepSize(33.46640106136302d);
        highamHall54Integrator4.setMinReduction((double) (byte) 0);
    }

    @Test
    public void test15371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15371");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray14, doubleArray28);
        double[] doubleArray41 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray43 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray41, doubleArray43);
        double[] doubleArray47 = new double[] { (-1L), 97.0d };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, doubleArray43, doubleArray47);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) (byte) 100, doubleArray14, doubleArray47);
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1, (double) 'a', doubleArray14, doubleArray58);
        highamHall54Integrator62.setMinReduction(55.80754698496868d);
        double double65 = highamHall54Integrator62.getCurrentSignedStepsize();
        highamHall54Integrator62.setMinReduction(31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 9.848857801796104d + "'", double65 == 9.848857801796104d);
    }

    @Test
    public void test15372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15372");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMinReduction();
        java.lang.String str15 = highamHall54Integrator11.getName();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        double[] doubleArray37 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray39 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray37, doubleArray39);
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator40.getStepHandler();
        highamHall54Integrator28.setStepHandler(stepHandler41);
        int int43 = highamHall54Integrator28.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler44);
        java.lang.String str46 = highamHall54Integrator11.getName();
        double double47 = highamHall54Integrator11.getMinStep();
        highamHall54Integrator11.setSafety(Double.NaN);
        highamHall54Integrator11.setMinReduction((double) 0.0f);
        int int52 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Higham-Hall 5(4)" + "'", str46, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 97.0d + "'", double47 == 97.0d);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
    }

    @Test
    public void test15373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15373");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, 97.0d, (double) 100L, 10.0d);
        highamHall54Integrator4.setMinReduction((double) 1.0f);
        highamHall54Integrator4.setInitialStepSize((double) 0);
        double[] doubleArray17 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray19 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray17, doubleArray19);
        highamHall54Integrator20.setMaxGrowth((double) (-1));
        double double23 = highamHall54Integrator20.getSafety();
        int int24 = highamHall54Integrator20.getOrder();
        java.lang.String str25 = highamHall54Integrator20.getName();
        double double26 = highamHall54Integrator20.getCurrentSignedStepsize();
        double[] doubleArray35 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray37 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray35, doubleArray37);
        highamHall54Integrator38.setMaxGrowth((double) (-1));
        double double41 = highamHall54Integrator38.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator38.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler43);
        highamHall54Integrator4.setStepHandler(stepHandler43);
        highamHall54Integrator4.setMaxGrowth(17.88854381999832d);
        double double48 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.9d + "'", double23 == 0.9d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 31.144823004794873d + "'", double26 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.9d + "'", double41 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
    }

    @Test
    public void test15374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15374");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 10.0d, 3.1622776601683795d, (double) (byte) 10);
        highamHall54Integrator4.setInitialStepSize(35.0d);
    }

    @Test
    public void test15375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15375");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", (java.lang.Object[]) strArray14);
        java.lang.Throwable[] throwableArray23 = integratorException22.getSuppressed();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray33);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray33);
        java.lang.String str37 = integratorException36.getPattern();
        integratorException22.addSuppressed((java.lang.Throwable) integratorException36);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException22);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException22);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException22);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)" + "'", str37, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)");
    }

    @Test
    public void test15376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15376");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getMaxStep();
        java.lang.String str17 = highamHall54Integrator11.getName();
        int int18 = highamHall54Integrator11.getOrder();
        java.lang.String str19 = highamHall54Integrator11.getName();
        double double20 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setSafety(1.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction23, 0.0d, 9.961998380252306d, (int) (short) 10);
        double double28 = highamHall54Integrator11.getMaxStep();
        double double29 = highamHall54Integrator11.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
    }

    @Test
    public void test15377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15377");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        java.lang.String str77 = highamHall54Integrator76.getName();
        highamHall54Integrator76.setMaxGrowth((double) '4');
        double double80 = highamHall54Integrator76.getCurrentSignedStepsize();
        double double81 = highamHall54Integrator76.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Higham-Hall 5(4)" + "'", str77, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 10.0d + "'", double80 == 10.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 100.0d + "'", double81 == 100.0d);
    }

    @Test
    public void test15378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15378");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        double[] doubleArray13 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray15 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray13, doubleArray15);
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler29);
        highamHall54Integrator4.setStepHandler(stepHandler29);
        int int32 = highamHall54Integrator4.getOrder();
        java.lang.String str33 = highamHall54Integrator4.getName();
        java.lang.String str34 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction(2.4957893743180684d);
        double double37 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Higham-Hall 5(4)" + "'", str33, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.9d + "'", double37 == 0.9d);
    }

    @Test
    public void test15379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15379");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) (-1.0f), 5.916079783099616d, 7.211102550927978d);
        highamHall54Integrator4.setInitialStepSize(33.46640106136302d);
    }

    @Test
    public void test15380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15380");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(31.622776601683793d, 35.0d, (double) (byte) 0, 97.0d);
    }

    @Test
    public void test15381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15381");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator4.setMinReduction((double) (byte) -1);
        java.lang.String str7 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        int int9 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMinReduction(9.924141172814958d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
    }

    @Test
    public void test15382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15382");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double13 = highamHall54Integrator11.getCurrentStepStart();
        double double14 = highamHall54Integrator11.getMaxGrowth();
        double[] doubleArray23 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray25 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray23, doubleArray25);
        highamHall54Integrator26.setMaxGrowth((double) (-1));
        double double29 = highamHall54Integrator26.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator26.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler30);
        java.lang.String str32 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setInitialStepSize((double) '4');
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setMinReduction((double) ' ');
        double double38 = highamHall54Integrator11.getSafety();
        java.lang.String str39 = highamHall54Integrator11.getName();
        double double40 = highamHall54Integrator11.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.9d + "'", double29 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.9d + "'", double38 == 0.9d);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Higham-Hall 5(4)" + "'", str39, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 32.0d + "'", double40 == 32.0d);
    }

    @Test
    public void test15383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15383");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setSafety((double) 1.0f);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction17, (double) (short) -1, (double) (short) 10, 5);
        double double22 = highamHall54Integrator11.getMinReduction();
        int int23 = highamHall54Integrator11.getOrder();
        double double24 = highamHall54Integrator11.getSafety();
        double double25 = highamHall54Integrator11.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.2d + "'", double25 == 0.2d);
    }

    @Test
    public void test15384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15384");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (short) 10, (double) 100, (double) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) '4', 35.0d, (int) (byte) 10);
        highamHall54Integrator4.setInitialStepSize((double) 1);
        int int12 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (-1.0f), 0.2d, (double) (byte) -1);
        highamHall54Integrator17.setInitialStepSize((double) 1);
        double double20 = highamHall54Integrator17.getMinStep();
        highamHall54Integrator17.setMinReduction((double) (byte) -1);
        double double23 = highamHall54Integrator17.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler24);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler24);
    }

    @Test
    public void test15385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15385");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 0, (double) 'a', (double) (-1));
        int int5 = highamHall54Integrator4.getOrder();
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator17.setStepHandler(stepHandler30);
        int int32 = highamHall54Integrator17.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler33);
        double double35 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
    }

    @Test
    public void test15386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15386");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator4.setMinReduction(0.9d);
        double double7 = highamHall54Integrator4.getMinStep();
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth((double) 10L);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        highamHall54Integrator23.setMaxGrowth((double) (-1));
        double double26 = highamHall54Integrator23.getSafety();
        int int27 = highamHall54Integrator23.getOrder();
        java.lang.String str28 = highamHall54Integrator23.getName();
        double double29 = highamHall54Integrator23.getMinReduction();
        java.lang.String str30 = highamHall54Integrator23.getName();
        int int31 = highamHall54Integrator23.getOrder();
        double double32 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler33);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.9d + "'", double26 == 0.9d);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 97.0d + "'", double32 == 97.0d);
        org.junit.Assert.assertNotNull(stepHandler33);
    }

    @Test
    public void test15387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15387");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, 0.0d, (double) 0L, 5.916079783099616d);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        int int6 = highamHall54Integrator4.getOrder();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        double double8 = highamHall54Integrator4.getMinStep();
        double double9 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
    }

    @Test
    public void test15388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15388");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1L), 100.0d, 48.57293794619442d, 71.02112361825881d);
    }

    @Test
    public void test15389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15389");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getCurrentSignedStepsize();
        java.lang.String str16 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction(0.0d);
        double double19 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double20 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setSafety((double) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 31.144823004794873d + "'", double15 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 31.144823004794873d + "'", double19 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test15390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15390");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test15391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15391");
        double[] doubleArray8 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray17 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray19 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray17, doubleArray19);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray8, doubleArray17);
        double double22 = highamHall54Integrator21.getCurrentSignedStepsize();
        int int23 = highamHall54Integrator21.getOrder();
        highamHall54Integrator21.setMinReduction(10.0d);
        int int26 = highamHall54Integrator21.getOrder();
        highamHall54Integrator21.setSafety(5.580754698496868d);
        double double29 = highamHall54Integrator21.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
    }

    @Test
    public void test15392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15392");
        double[] doubleArray4 = new double[] {};
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        double[] doubleArray27 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray29 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray27, doubleArray29);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray15, doubleArray29);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 22.80350850198276d, doubleArray4, doubleArray29);
        double[] doubleArray45 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray47 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray45, doubleArray47);
        double[] doubleArray57 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray59 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray57, doubleArray59);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray45, doubleArray59);
        double[] doubleArray70 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray79 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray81 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator82 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray79, doubleArray81);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator83 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray70, doubleArray79);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator84 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (byte) 1, doubleArray59, doubleArray79);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator85 = new org.apache.commons.math.ode.HighamHall54Integrator(Double.NaN, 0.0d, doubleArray4, doubleArray59);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction86 = null;
        highamHall54Integrator85.addSwitchingFunction(switchingFunction86, (double) (byte) 0, 9.961998380252306d, (-1));
        int int91 = highamHall54Integrator85.getOrder();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 5 + "'", int91 == 5);
    }

    @Test
    public void test15393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15393");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        double double16 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMinReduction((double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator11.getStepHandler();
        int int20 = highamHall54Integrator11.getOrder();
        double double21 = highamHall54Integrator11.getMinStep();
        highamHall54Integrator11.setSafety(97.0d);
        int int24 = highamHall54Integrator11.getOrder();
        double[] doubleArray33 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray35 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray33, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction37, (double) 'a', 0.0d, 5);
        double double42 = highamHall54Integrator36.getMinStep();
        java.lang.String str43 = highamHall54Integrator36.getName();
        java.lang.String str44 = highamHall54Integrator36.getName();
        highamHall54Integrator36.setInitialStepSize((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator36.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler47);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9d + "'", double16 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 97.0d + "'", double21 == 97.0d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 97.0d + "'", double42 == 97.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Higham-Hall 5(4)" + "'", str43, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Higham-Hall 5(4)" + "'", str44, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler47);
    }

    @Test
    public void test15394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15394");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray14, doubleArray28);
        double[] doubleArray39 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray48 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray50 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray48, doubleArray50);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray39, doubleArray48);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (byte) 1, doubleArray28, doubleArray48);
        double[] doubleArray64 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray73 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray75 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray73, doubleArray75);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator77 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray64, doubleArray73);
        double[] doubleArray86 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray88 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator89 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray86, doubleArray88);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator90 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray73, doubleArray86);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator91 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (short) 0, doubleArray28, doubleArray86);
        double double92 = highamHall54Integrator91.getMaxStep();
        double double93 = highamHall54Integrator91.getCurrentSignedStepsize();
        double double94 = highamHall54Integrator91.getMaxGrowth();
        int int95 = highamHall54Integrator91.getOrder();
        highamHall54Integrator91.setMinReduction((double) 10.0f);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 10.0d + "'", double94 == 10.0d);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 5 + "'", int95 == 5);
    }

    @Test
    public void test15395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15395");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        java.lang.Object[] objArray21 = derivativeException20.getArguments();
        java.lang.Throwable[] throwableArray22 = derivativeException20.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException24);
        java.lang.Throwable[] throwableArray26 = integratorException24.getSuppressed();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test15396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15396");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, (double) 1, 5);
        double double10 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (double) 1, 0.0d, (int) (byte) 100);
        java.lang.String str16 = highamHall54Integrator4.getName();
        java.lang.String str17 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator4.getStepHandler();
        java.lang.String str19 = highamHall54Integrator4.getName();
        java.lang.String str20 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
    }

    @Test
    public void test15397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15397");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test15398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15398");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setSafety(1.0d);
        double double18 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth((double) 1);
        double[] doubleArray29 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray31 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray29, doubleArray31);
        double[] doubleArray41 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray43 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray41, doubleArray43);
        org.apache.commons.math.ode.StepHandler stepHandler45 = highamHall54Integrator44.getStepHandler();
        highamHall54Integrator32.setStepHandler(stepHandler45);
        java.lang.String str47 = highamHall54Integrator32.getName();
        highamHall54Integrator32.setMaxGrowth((double) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        highamHall54Integrator32.addSwitchingFunction(switchingFunction50, (double) 'a', 97.0d, (int) (byte) 100);
        double double55 = highamHall54Integrator32.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler56 = highamHall54Integrator32.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler56);
        double double58 = highamHall54Integrator11.getCurrentStepStart();
        java.lang.String str59 = highamHall54Integrator11.getName();
        int int60 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 31.144823004794873d + "'", double18 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Higham-Hall 5(4)" + "'", str47, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.9d + "'", double55 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Higham-Hall 5(4)" + "'", str59, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 5 + "'", int60 == 5);
    }

    @Test
    public void test15399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15399");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        double double16 = highamHall54Integrator11.getMaxStep();
        java.lang.String str17 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth(31.622776601683793d);
        double double20 = highamHall54Integrator11.getMinReduction();
        java.lang.String str21 = highamHall54Integrator11.getName();
        double double22 = highamHall54Integrator11.getCurrentStepStart();
        java.lang.String str23 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setSafety((double) 10.0f);
        java.lang.String str26 = highamHall54Integrator11.getName();
        int int27 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.2d + "'", double20 == 0.2d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
    }

    @Test
    public void test15400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15400");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator4.setMinReduction(0.9d);
        double double7 = highamHall54Integrator4.getMinStep();
        int int8 = highamHall54Integrator4.getOrder();
        int int9 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
    }

    @Test
    public void test15401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15401");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray19, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction37, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        highamHall54Integrator36.setMinReduction((double) (byte) 0);
        int int44 = highamHall54Integrator36.getOrder();
        java.lang.String str45 = highamHall54Integrator36.getName();
        double double46 = highamHall54Integrator36.getSafety();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Higham-Hall 5(4)" + "'", str45, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.9d + "'", double46 == 0.9d);
    }

    @Test
    public void test15402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15402");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        integratorException15.addSuppressed((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException15);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException29);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException31);
        java.lang.String str33 = derivativeException32.getPattern();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        java.lang.Object[] objArray43 = derivativeException42.getArguments();
        java.lang.Throwable[] throwableArray44 = derivativeException42.getSuppressed();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray52);
        java.lang.Object[] objArray54 = derivativeException53.getArguments();
        derivativeException42.addSuppressed((java.lang.Throwable) derivativeException53);
        derivativeException32.addSuppressed((java.lang.Throwable) derivativeException42);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException42);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException42);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray70);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray70);
        integratorException58.addSuppressed((java.lang.Throwable) integratorException75);
        java.lang.Throwable[] throwableArray77 = integratorException75.getSuppressed();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str33, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(throwableArray77);
    }

    @Test
    public void test15403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15403");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        double double18 = highamHall54Integrator11.getMinReduction();
        double double19 = highamHall54Integrator11.getMinReduction();
        java.lang.String str20 = highamHall54Integrator11.getName();
        double double21 = highamHall54Integrator11.getCurrentSignedStepsize();
        java.lang.String str22 = highamHall54Integrator11.getName();
        int int23 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2d + "'", double19 == 0.2d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 31.144823004794873d + "'", double21 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
    }

    @Test
    public void test15404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15404");
        java.lang.String[] strArray7 = new java.lang.String[] { "org.apache.commons.math.ode.DerivativeException: hi!", "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray7);
        java.lang.String str12 = derivativeException11.toString();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str12, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test15405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15405");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        java.lang.String str21 = integratorException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.Throwable[] throwableArray23 = integratorException19.getSuppressed();
        java.lang.Throwable[] throwableArray24 = integratorException19.getSuppressed();
        java.lang.String str25 = integratorException19.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test15406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15406");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        double[] doubleArray13 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray15 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray13, doubleArray15);
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler29);
        highamHall54Integrator4.setStepHandler(stepHandler29);
        int int32 = highamHall54Integrator4.getOrder();
        java.lang.String str33 = highamHall54Integrator4.getName();
        java.lang.String str34 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety(0.0d);
        double[] doubleArray45 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray47 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray45, doubleArray47);
        double double49 = highamHall54Integrator48.getCurrentSignedStepsize();
        highamHall54Integrator48.setMinReduction((double) (byte) 10);
        double double52 = highamHall54Integrator48.getMaxStep();
        int int53 = highamHall54Integrator48.getOrder();
        highamHall54Integrator48.setMinReduction((double) (-1.0f));
        double double56 = highamHall54Integrator48.getMaxStep();
        double double57 = highamHall54Integrator48.getSafety();
        java.lang.String str58 = highamHall54Integrator48.getName();
        org.apache.commons.math.ode.StepHandler stepHandler59 = highamHall54Integrator48.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler59);
        int int61 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Higham-Hall 5(4)" + "'", str33, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 31.144823004794873d + "'", double49 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 10.0d + "'", double52 == 10.0d);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.9d + "'", double57 == 0.9d);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Higham-Hall 5(4)" + "'", str58, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 5 + "'", int61 == 5);
    }

    @Test
    public void test15407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15407");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        double[] doubleArray30 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray32 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray30, doubleArray32);
        double[] doubleArray42 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray44 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray42, doubleArray44);
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator45.getStepHandler();
        highamHall54Integrator33.setStepHandler(stepHandler46);
        highamHall54Integrator21.setStepHandler(stepHandler46);
        highamHall54Integrator11.setStepHandler(stepHandler46);
        double double50 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction51, (double) 'a', 97.0d, 100);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
    }

    @Test
    public void test15408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15408");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getMaxStep();
        int int16 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMinReduction((double) (-1.0f));
        double double19 = highamHall54Integrator11.getCurrentSignedStepsize();
        int int20 = highamHall54Integrator11.getOrder();
        double double21 = highamHall54Integrator11.getMaxStep();
        java.lang.String str22 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setMaxGrowth((double) 0.0f);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 31.144823004794873d + "'", double19 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler23);
    }

    @Test
    public void test15409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15409");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1L), 0.0d, 0.2d, (double) (-1L));
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, 59.16079783099616d, (double) 100, (int) (byte) 100);
        java.lang.String str11 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        double double13 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-0.0d) + "'", double5 == (-0.0d));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1.0d) + "'", double13 == (-1.0d));
    }

    @Test
    public void test15410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15410");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray19, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction37, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        highamHall54Integrator36.setInitialStepSize((double) (-1L));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction44, 100.0d, (double) (byte) 0, (int) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator36.getStepHandler();
        highamHall54Integrator36.setSafety(2.4957893743180684d);
        highamHall54Integrator36.setInitialStepSize((double) (short) 10);
        double double54 = highamHall54Integrator36.getSafety();
        java.lang.String str55 = highamHall54Integrator36.getName();
        double double56 = highamHall54Integrator36.getCurrentStepStart();
        int int57 = highamHall54Integrator36.getOrder();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2.4957893743180684d + "'", double54 == 2.4957893743180684d);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Higham-Hall 5(4)" + "'", str55, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 5 + "'", int57 == 5);
    }

    @Test
    public void test15411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15411");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMinReduction();
        double double15 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction16, (double) 100.0f, (double) (short) -1, (int) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator11.getStepHandler();
        java.lang.String str22 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
    }

    @Test
    public void test15412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15412");
        double[] doubleArray2 = null;
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        double[] doubleArray27 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray29 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray27, doubleArray29);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray15, doubleArray29);
        double[] doubleArray42 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray44 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray42, doubleArray44);
        double[] doubleArray54 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray63 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray65 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray63, doubleArray65);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray54, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (-1L), doubleArray42, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator69 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (short) 0, doubleArray15, doubleArray42);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator70 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, 2.23606797749979d, doubleArray2, doubleArray42);
        double double71 = highamHall54Integrator70.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2.23606797749979d + "'", double71 == 2.23606797749979d);
    }

    @Test
    public void test15413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15413");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 0.0d, 32.0d, (double) (short) 100);
        highamHall54Integrator4.setMinReduction((double) (byte) 1);
        java.lang.String str7 = highamHall54Integrator4.getName();
        double[] doubleArray16 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray18 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray16, doubleArray18);
        double double20 = highamHall54Integrator19.getCurrentSignedStepsize();
        highamHall54Integrator19.setMinReduction((double) (byte) 10);
        double double23 = highamHall54Integrator19.getMaxStep();
        int int24 = highamHall54Integrator19.getOrder();
        highamHall54Integrator19.setMinReduction((double) (-1.0f));
        double double27 = highamHall54Integrator19.getCurrentSignedStepsize();
        double double28 = highamHall54Integrator19.getMinReduction();
        highamHall54Integrator19.setSafety((double) 1.0f);
        java.lang.String str31 = highamHall54Integrator19.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) (short) 10, (double) 0, (double) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler37 = highamHall54Integrator36.getStepHandler();
        highamHall54Integrator19.setStepHandler(stepHandler37);
        double double39 = highamHall54Integrator19.getSafety();
        double[] doubleArray48 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray50 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray48, doubleArray50);
        highamHall54Integrator51.setMaxGrowth((double) (-1));
        double double54 = highamHall54Integrator51.getMaxStep();
        int int55 = highamHall54Integrator51.getOrder();
        double double56 = highamHall54Integrator51.getMaxStep();
        java.lang.String str57 = highamHall54Integrator51.getName();
        org.apache.commons.math.ode.StepHandler stepHandler58 = highamHall54Integrator51.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler59 = highamHall54Integrator51.getStepHandler();
        highamHall54Integrator19.setStepHandler(stepHandler59);
        highamHall54Integrator4.setStepHandler(stepHandler59);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction62, 59.16079783099616d, (double) (byte) 100, (int) (short) 10);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 31.144823004794873d + "'", double20 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 31.144823004794873d + "'", double27 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 5 + "'", int55 == 5);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Higham-Hall 5(4)" + "'", str57, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertNotNull(stepHandler59);
    }

    @Test
    public void test15414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15414");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        double double18 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setMinReduction((double) (short) 100);
        double double21 = highamHall54Integrator11.getMinStep();
        int int22 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMaxGrowth((double) 1);
        highamHall54Integrator11.setMaxGrowth(5.580754698496868d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 97.0d + "'", double21 == 97.0d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
    }

    @Test
    public void test15415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15415");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 0, (double) 'a', (double) (-1));
        java.lang.String str5 = highamHall54Integrator4.getName();
        java.lang.String str6 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
    }

    @Test
    public void test15416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15416");
        double[] doubleArray16 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray18 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray16, doubleArray18);
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray20);
        java.lang.Object[] objArray22 = integratorException21.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException23);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        java.lang.Object[] objArray39 = derivativeException38.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray39);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray39);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("", objArray39);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray54);
        java.lang.Object[] objArray56 = derivativeException55.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray56);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray56);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray56);
        integratorException43.addSuppressed((java.lang.Throwable) integratorException59);
        integratorException25.addSuppressed((java.lang.Throwable) integratorException43);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException43);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException62);
        java.lang.Object[] objArray64 = derivativeException62.getArguments();
        java.lang.Throwable[] throwableArray65 = derivativeException62.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray65);
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException66);
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException67);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(throwableArray65);
    }

    @Test
    public void test15417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15417");
        double[] doubleArray16 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray18 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray16, doubleArray18);
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray20);
        java.lang.Object[] objArray22 = integratorException21.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException23);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        java.lang.Object[] objArray39 = derivativeException38.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray39);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray39);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("", objArray39);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray54);
        java.lang.Object[] objArray56 = derivativeException55.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray56);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray56);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray56);
        integratorException43.addSuppressed((java.lang.Throwable) integratorException59);
        integratorException25.addSuppressed((java.lang.Throwable) integratorException43);
        java.lang.Throwable[] throwableArray62 = integratorException25.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray62);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException63);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray62);
    }

    @Test
    public void test15418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15418");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        java.lang.String str17 = highamHall54Integrator11.getName();
        java.lang.String str18 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setSafety(9.924141172814958d);
        double[] doubleArray29 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray31 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray29, doubleArray31);
        double double33 = highamHall54Integrator32.getCurrentSignedStepsize();
        double double34 = highamHall54Integrator32.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator32.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler35);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 31.144823004794873d + "'", double33 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler35);
    }

    @Test
    public void test15419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15419");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test15420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15420");
        double[] doubleArray16 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray18 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray16, doubleArray18);
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray20);
        java.lang.Object[] objArray22 = integratorException21.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.Throwable[] throwableArray28 = derivativeException27.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray28);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException29);
        java.lang.String[] strArray41 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray41);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray41);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        java.lang.String str49 = derivativeException48.getPattern();
        java.lang.Throwable[] throwableArray50 = derivativeException48.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray50);
        derivativeException30.addSuppressed((java.lang.Throwable) integratorException51);
        java.lang.String str53 = derivativeException30.toString();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str53, "org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test15421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15421");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getSafety();
        double double16 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setSafety((-0.0d));
        highamHall54Integrator11.setInitialStepSize(31.622776601683793d);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator11.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler21);
    }

    @Test
    public void test15422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15422");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        double double16 = highamHall54Integrator11.getCurrentStepStart();
        highamHall54Integrator11.setSafety(59.16079783099616d);
        highamHall54Integrator11.setSafety(24.322992790977874d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test15423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15423");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        java.lang.String str21 = integratorException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test15424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15424");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        java.lang.String str5 = highamHall54Integrator4.getName();
        double double6 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, (double) (short) -1, (double) '4', (int) (short) 10);
        double double12 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
    }

    @Test
    public void test15425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15425");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(Double.NaN, 17.78279410038923d, 0.2d, 35.0d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator10 = new org.apache.commons.math.ode.HighamHall54Integrator(24.322992790977874d, Double.NaN, (double) (byte) 100, 35.0d);
        double double11 = highamHall54Integrator10.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator10.getStepHandler();
        highamHall54Integrator10.setSafety((double) 1);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, 100.0d, (double) 10L, (double) 0.0f);
        double double20 = highamHall54Integrator19.getCurrentSignedStepsize();
        int int21 = highamHall54Integrator19.getOrder();
        double[] doubleArray30 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray32 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray30, doubleArray32);
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator33.getStepHandler();
        double[] doubleArray43 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray45 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray43, doubleArray45);
        double double47 = highamHall54Integrator46.getCurrentSignedStepsize();
        highamHall54Integrator46.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler50 = highamHall54Integrator46.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler51 = highamHall54Integrator46.getStepHandler();
        highamHall54Integrator33.setStepHandler(stepHandler51);
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator33.getStepHandler();
        double double54 = highamHall54Integrator33.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        int int60 = highamHall54Integrator59.getOrder();
        java.lang.String str61 = highamHall54Integrator59.getName();
        int int62 = highamHall54Integrator59.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler63 = highamHall54Integrator59.getStepHandler();
        highamHall54Integrator33.setStepHandler(stepHandler63);
        highamHall54Integrator19.setStepHandler(stepHandler63);
        highamHall54Integrator10.setStepHandler(stepHandler63);
        highamHall54Integrator4.setStepHandler(stepHandler63);
        java.lang.String str68 = highamHall54Integrator4.getName();
        java.lang.String str69 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 31.622776601683793d + "'", double20 == 31.622776601683793d);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 31.144823004794873d + "'", double47 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 97.0d + "'", double54 == 97.0d);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 5 + "'", int60 == 5);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Higham-Hall 5(4)" + "'", str61, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 5 + "'", int62 == 5);
        org.junit.Assert.assertNotNull(stepHandler63);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Higham-Hall 5(4)" + "'", str68, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Higham-Hall 5(4)" + "'", str69, "Higham-Hall 5(4)");
    }

    @Test
    public void test15426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15426");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setInitialStepSize((double) 0);
        java.lang.String str17 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction18, (double) (short) 1, 1.0d, (int) (byte) 10);
        double double23 = highamHall54Integrator11.getMinStep();
        double double24 = highamHall54Integrator11.getMaxGrowth();
        java.lang.String str25 = highamHall54Integrator11.getName();
        java.lang.String str26 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction27, (double) 0, 0.9d, 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction32, (double) (short) 1, (double) 100.0f, (int) (byte) 0);
        double double37 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 97.0d + "'", double23 == 97.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 31.144823004794873d + "'", double37 == 31.144823004794873d);
    }

    @Test
    public void test15427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15427");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(4.995787599886596d, (double) 10L, 98.48857801796105d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 7.068088567559546d + "'", double5 == 7.068088567559546d);
    }

    @Test
    public void test15428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15428");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) -1);
        java.lang.String str29 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 0, (double) 'a', (double) (-1));
        java.lang.String str35 = highamHall54Integrator34.getName();
        double double36 = highamHall54Integrator34.getMaxGrowth();
        double double37 = highamHall54Integrator34.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator34.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler38);
        org.apache.commons.math.ode.StepHandler stepHandler40 = highamHall54Integrator11.getStepHandler();
        double double41 = highamHall54Integrator11.getMaxStep();
        double double42 = highamHall54Integrator11.getMinStep();
        highamHall54Integrator11.setInitialStepSize(5.916079783099616d);
        highamHall54Integrator11.setMinReduction(40.55100964572346d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Higham-Hall 5(4)" + "'", str35, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(stepHandler40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 97.0d + "'", double42 == 97.0d);
    }

    @Test
    public void test15429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15429");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getMaxStep();
        java.lang.String str17 = highamHall54Integrator11.getName();
        java.lang.String str18 = highamHall54Integrator11.getName();
        double double19 = highamHall54Integrator11.getCurrentSignedStepsize();
        int int20 = highamHall54Integrator11.getOrder();
        java.lang.String str21 = highamHall54Integrator11.getName();
        double double22 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setInitialStepSize(98.48857801796105d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 31.144823004794873d + "'", double19 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
    }

    @Test
    public void test15430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15430");
        java.lang.String[] strArray6 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray6);
        java.lang.String str11 = derivativeException10.getPattern();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str11, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test15431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15431");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test15432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15432");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray12);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray24);
        java.lang.Throwable[] throwableArray29 = derivativeException28.getSuppressed();
        integratorException13.addSuppressed((java.lang.Throwable) derivativeException28);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException28);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("", strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray44);
        java.lang.Throwable[] throwableArray50 = derivativeException49.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray50);
        derivativeException31.addSuppressed((java.lang.Throwable) integratorException51);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException31);
        java.lang.String str54 = derivativeException31.toString();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)" + "'", str54, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)");
    }

    @Test
    public void test15433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15433");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        double double16 = highamHall54Integrator11.getCurrentStepStart();
        double double17 = highamHall54Integrator11.getSafety();
        double double18 = highamHall54Integrator11.getMinStep();
        double double19 = highamHall54Integrator11.getMaxGrowth();
        double double20 = highamHall54Integrator11.getMaxGrowth();
        java.lang.Class<?> wildcardClass21 = highamHall54Integrator11.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.9d + "'", double17 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 97.0d + "'", double18 == 97.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.0d) + "'", double19 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1.0d) + "'", double20 == (-1.0d));
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test15434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15434");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        int int26 = highamHall54Integrator11.getOrder();
        java.lang.String str27 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth(0.0d);
        double double30 = highamHall54Integrator11.getMaxGrowth();
        double double31 = highamHall54Integrator11.getMaxGrowth();
        double double32 = highamHall54Integrator11.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (short) -1, (double) 'a', (double) 1L);
        double double38 = highamHall54Integrator37.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator37.setMaxGrowth((double) (-1.0f));
        java.lang.String str42 = highamHall54Integrator37.getName();
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler43);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.0d) + "'", double38 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Higham-Hall 5(4)" + "'", str42, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler43);
    }

    @Test
    public void test15435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15435");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException12);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test15436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15436");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        int int7 = highamHall54Integrator4.getOrder();
        double double8 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setSafety((double) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (double) (-1.0f), (double) 100, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, 71.02112361825881d, (double) 100.0f, (int) (short) -1);
        int int21 = highamHall54Integrator4.getOrder();
        java.lang.String str22 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
    }

    @Test
    public void test15437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15437");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, 22.80350850198276d, (double) 1L, 3.1622776601683795d);
    }

    @Test
    public void test15438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15438");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, (double) 1, 5);
        double double10 = highamHall54Integrator4.getMinStep();
        java.lang.String str11 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) (byte) 100);
        java.lang.String str14 = highamHall54Integrator4.getName();
        double double15 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) 100);
        highamHall54Integrator4.setMinReduction((double) 'a');
        double double20 = highamHall54Integrator4.getCurrentStepStart();
        double double21 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
    }

    @Test
    public void test15439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15439");
        java.lang.String[] strArray10 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray10);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray31);
        java.lang.Object[] objArray33 = derivativeException32.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray33);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray33);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("", objArray33);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException39);
        derivativeException18.addSuppressed((java.lang.Throwable) derivativeException39);
        java.lang.Class<?> wildcardClass43 = derivativeException18.getClass();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test15440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15440");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) -1, (double) (byte) 1, 97.0d);
        java.lang.String str5 = highamHall54Integrator4.getName();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth(0.9d);
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.0d) + "'", double7 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-0.0d) + "'", double10 == (-0.0d));
    }

    @Test
    public void test15441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15441");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException1 = new org.apache.commons.math.ode.DerivativeException(throwable0);
        java.lang.Throwable[] throwableArray2 = derivativeException1.getSuppressed();
        java.lang.Object[] objArray3 = derivativeException1.getArguments();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray17 = derivativeException16.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray17);
        java.lang.Object[] objArray19 = integratorException18.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException20);
        derivativeException1.addSuppressed((java.lang.Throwable) integratorException20);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray39);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        integratorException20.addSuppressed((java.lang.Throwable) derivativeException49);
        java.lang.Throwable[] throwableArray51 = integratorException20.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test15442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15442");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        double double16 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator21.addSwitchingFunction(switchingFunction22, (double) (byte) -1, (double) 1, 5);
        double double27 = highamHall54Integrator21.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler28);
        java.lang.String str30 = highamHall54Integrator11.getName();
        double double31 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setInitialStepSize((double) 100);
        int int34 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1.0d) + "'", double31 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
    }

    @Test
    public void test15443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15443");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        double double18 = highamHall54Integrator11.getMinReduction();
        double double19 = highamHall54Integrator11.getMaxStep();
        double double20 = highamHall54Integrator11.getSafety();
        double double21 = highamHall54Integrator11.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction22, (double) 'a', (double) 0L, (int) (byte) 0);
        highamHall54Integrator11.setSafety((double) (-1.0f));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.9d + "'", double20 == 0.9d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
    }

    @Test
    public void test15444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15444");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray19, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction37, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        highamHall54Integrator36.setInitialStepSize((double) (-1L));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction44, 100.0d, (double) (byte) 0, (int) (byte) -1);
        double double49 = highamHall54Integrator36.getCurrentSignedStepsize();
        double double50 = highamHall54Integrator36.getSafety();
        double double51 = highamHall54Integrator36.getMinReduction();
        java.lang.String str52 = highamHall54Integrator36.getName();
        java.lang.String str53 = highamHall54Integrator36.getName();
        double double54 = highamHall54Integrator36.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 35.0d + "'", double49 == 35.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.9d + "'", double50 == 0.9d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.2d + "'", double51 == 0.2d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Higham-Hall 5(4)" + "'", str52, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Higham-Hall 5(4)" + "'", str53, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2d + "'", double54 == 0.2d);
    }

    @Test
    public void test15445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15445");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, (double) 1, 5);
        double double10 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setInitialStepSize((double) (-1.0f));
        highamHall54Integrator4.setSafety(35.0d);
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        int int17 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety((double) (byte) -1);
        double double20 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test15446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15446");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMinReduction();
        java.lang.String str15 = highamHall54Integrator11.getName();
        double double16 = highamHall54Integrator11.getMinReduction();
        double double17 = highamHall54Integrator11.getMinReduction();
        double double18 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.2d + "'", double16 == 0.2d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 31.144823004794873d + "'", double18 == 31.144823004794873d);
    }

    @Test
    public void test15447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15447");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException21);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray38);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray38);
        integratorException21.addSuppressed((java.lang.Throwable) derivativeException47);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray38);
    }

    @Test
    public void test15448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15448");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        double double17 = highamHall54Integrator11.getMaxGrowth();
        java.lang.String str18 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth(0.2d);
        java.lang.String str21 = highamHall54Integrator11.getName();
        double double22 = highamHall54Integrator11.getMaxStep();
        double double23 = highamHall54Integrator11.getCurrentStepStart();
        highamHall54Integrator11.setInitialStepSize((double) 10L);
        double double26 = highamHall54Integrator11.getCurrentStepStart();
        double double27 = highamHall54Integrator11.getCurrentStepStart();
        java.lang.Class<?> wildcardClass28 = highamHall54Integrator11.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test15449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15449");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.Object[] objArray14 = derivativeException13.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray14);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException27);
        integratorException17.addSuppressed((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        java.lang.Throwable[] throwableArray31 = derivativeException30.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray31);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray31);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException33);
        java.lang.String str35 = integratorException33.getPattern();
        java.lang.Object[] objArray36 = integratorException33.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException33);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray48);
        java.lang.Object[] objArray53 = derivativeException52.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException52);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray62);
        java.lang.Object[] objArray64 = derivativeException63.getArguments();
        java.lang.Throwable[] throwableArray65 = derivativeException63.getSuppressed();
        java.lang.Throwable[] throwableArray66 = derivativeException63.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException63);
        java.lang.Object[] objArray68 = derivativeException63.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException69 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException63);
        derivativeException52.addSuppressed((java.lang.Throwable) derivativeException63);
        integratorException33.addSuppressed((java.lang.Throwable) derivativeException52);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str35, "org.apache.commons.math.ode.DerivativeException: ");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[hi!, , , , , ]");
    }

    @Test
    public void test15450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15450");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setSafety((double) 100L);
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator11.getStepHandler();
        double double20 = highamHall54Integrator11.getMinStep();
        java.lang.String str21 = highamHall54Integrator11.getName();
        java.lang.String str22 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction23, 5.580754698496868d, Double.NaN, 5);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 0, (double) 'a', (double) (-1));
        double[] doubleArray41 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray43 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray41, doubleArray43);
        highamHall54Integrator44.setMaxGrowth((double) (-1));
        double double47 = highamHall54Integrator44.getSafety();
        double double48 = highamHall54Integrator44.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator44.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        double[] doubleArray63 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray65 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray63, doubleArray65);
        double[] doubleArray75 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray77 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator78 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray75, doubleArray77);
        org.apache.commons.math.ode.StepHandler stepHandler79 = highamHall54Integrator78.getStepHandler();
        highamHall54Integrator66.setStepHandler(stepHandler79);
        highamHall54Integrator54.setStepHandler(stepHandler79);
        highamHall54Integrator44.setStepHandler(stepHandler79);
        highamHall54Integrator32.setStepHandler(stepHandler79);
        highamHall54Integrator11.setStepHandler(stepHandler79);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 97.0d + "'", double20 == 97.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.9d + "'", double47 == 0.9d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.2d + "'", double48 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler79);
    }

    @Test
    public void test15451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15451");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        double double5 = highamHall54Integrator4.getMaxStep();
        double double6 = highamHall54Integrator4.getSafety();
        double double7 = highamHall54Integrator4.getMinStep();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getMinReduction();
        int int10 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 100.0d + "'", double7 == 100.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
    }

    @Test
    public void test15452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15452");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator11.getStepHandler();
        double double17 = highamHall54Integrator11.getMinStep();
        double double18 = highamHall54Integrator11.getMinStep();
        double double19 = highamHall54Integrator11.getMaxGrowth();
        int int20 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 97.0d + "'", double18 == 97.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.0d) + "'", double19 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
    }

    @Test
    public void test15453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15453");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, 52.0d, 100.0d, 100.0d);
        java.lang.String str5 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
    }

    @Test
    public void test15454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15454");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        int int13 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction16, 0.0d, 0.0d, (int) '#');
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
    }

    @Test
    public void test15455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15455");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test15456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15456");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray18);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray18);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test15457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15457");
        java.lang.String[] strArray7 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray7);
        java.lang.String[] strArray20 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray20);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        derivativeException12.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException46);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException47);
        derivativeException37.addSuppressed((java.lang.Throwable) integratorException48);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("", strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray63);
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray63);
        java.lang.String[] strArray85 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException86 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray85);
        org.apache.commons.math.ode.DerivativeException derivativeException87 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray85);
        org.apache.commons.math.ode.DerivativeException derivativeException88 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray85);
        org.apache.commons.math.ode.DerivativeException derivativeException89 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray85);
        org.apache.commons.math.ode.DerivativeException derivativeException90 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray85);
        org.apache.commons.math.ode.DerivativeException derivativeException91 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray85);
        org.apache.commons.math.ode.DerivativeException derivativeException92 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray85);
        org.apache.commons.math.ode.IntegratorException integratorException93 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray85);
        integratorException70.addSuppressed((java.lang.Throwable) integratorException93);
        derivativeException37.addSuppressed((java.lang.Throwable) integratorException93);
        derivativeException12.addSuppressed((java.lang.Throwable) derivativeException37);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray85);
    }

    @Test
    public void test15458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15458");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        java.lang.Throwable[] throwableArray12 = integratorException11.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray12);
        java.lang.Throwable[] throwableArray14 = integratorException13.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException13);
        java.lang.Throwable[] throwableArray16 = integratorException13.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException13);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException13);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException13);
        java.lang.String str20 = integratorException19.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        java.lang.Object[] objArray22 = derivativeException21.getArguments();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str20, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
    }

    @Test
    public void test15459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15459");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        double double25 = highamHall54Integrator24.getCurrentSignedStepsize();
        highamHall54Integrator24.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator24.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler29);
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator11.getStepHandler();
        int int32 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMaxGrowth(5.916079783099616d);
        double double35 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setInitialStepSize(31.622776601683793d);
        double double38 = highamHall54Integrator11.getSafety();
        double double39 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((double) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 31.144823004794873d + "'", double25 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.9d + "'", double38 == 0.9d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.9d + "'", double39 == 0.9d);
    }

    @Test
    public void test15460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15460");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (-0.0d), 0.0d, 0.2d);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, 40.55100964572346d, (double) 100, 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
    }

    @Test
    public void test15461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15461");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray12);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        integratorException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.Throwable[] throwableArray28 = derivativeException25.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray43);
        java.lang.Object[] objArray45 = derivativeException44.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray45);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray45);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray45);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("", objArray45);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException50);
        derivativeException25.addSuppressed((java.lang.Throwable) integratorException50);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray66);
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("", strArray66);
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray66);
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray66);
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray66);
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray66);
        java.lang.Throwable[] throwableArray73 = derivativeException72.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException72);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException72);
        derivativeException25.addSuppressed((java.lang.Throwable) derivativeException72);
        java.lang.String str77 = derivativeException25.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str77, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test15462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15462");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray15);
        java.lang.String[] strArray29 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray29);
        java.lang.String str32 = integratorException31.getPattern();
        derivativeException24.addSuppressed((java.lang.Throwable) integratorException31);
        java.lang.Object[] objArray34 = integratorException31.getArguments();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str32, "org.apache.commons.math.ode.IntegratorException: ");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[org.apache.commons.math.ode.IntegratorException: hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[org.apache.commons.math.ode.IntegratorException: hi!, ]");
    }

    @Test
    public void test15463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15463");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator11.getStepHandler();
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        highamHall54Integrator28.setMaxGrowth((double) (-1));
        double double31 = highamHall54Integrator28.getSafety();
        double double32 = highamHall54Integrator28.getMinReduction();
        double double33 = highamHall54Integrator28.getMaxStep();
        java.lang.String str34 = highamHall54Integrator28.getName();
        double[] doubleArray43 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray45 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray43, doubleArray45);
        double[] doubleArray55 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray57 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray55, doubleArray57);
        org.apache.commons.math.ode.StepHandler stepHandler59 = highamHall54Integrator58.getStepHandler();
        highamHall54Integrator46.setStepHandler(stepHandler59);
        highamHall54Integrator28.setStepHandler(stepHandler59);
        highamHall54Integrator11.setStepHandler(stepHandler59);
        java.lang.String str63 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setInitialStepSize((double) (short) 1);
        highamHall54Integrator11.setMaxGrowth((double) (byte) 1);
        java.lang.String str68 = highamHall54Integrator11.getName();
        double double69 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setSafety(5.916079783099616d);
        highamHall54Integrator11.setMinReduction((double) 100);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.9d + "'", double31 == 0.9d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.2d + "'", double32 == 0.2d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Higham-Hall 5(4)" + "'", str63, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Higham-Hall 5(4)" + "'", str68, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.2d + "'", double69 == 0.2d);
    }

    @Test
    public void test15464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15464");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test15465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15465");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction29, (double) 'a', 97.0d, (int) (byte) 100);
        double double34 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction35, 0.0d, 10.0d, (int) (byte) 10);
        double double40 = highamHall54Integrator11.getMaxStep();
        java.lang.String str41 = highamHall54Integrator11.getName();
        java.lang.String str42 = highamHall54Integrator11.getName();
        java.lang.String str43 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.9d + "'", double34 == 0.9d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Higham-Hall 5(4)" + "'", str41, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Higham-Hall 5(4)" + "'", str42, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Higham-Hall 5(4)" + "'", str43, "Higham-Hall 5(4)");
    }

    @Test
    public void test15466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15466");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray19, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction37, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        double double42 = highamHall54Integrator36.getMaxStep();
        java.lang.String str43 = highamHall54Integrator36.getName();
        double double44 = highamHall54Integrator36.getMaxStep();
        highamHall54Integrator36.setSafety(0.0d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 35.0d + "'", double42 == 35.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Higham-Hall 5(4)" + "'", str43, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 35.0d + "'", double44 == 35.0d);
    }

    @Test
    public void test15467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15467");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        java.lang.String str23 = derivativeException22.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str23, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test15468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15468");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        double double16 = highamHall54Integrator11.getMaxStep();
        double double17 = highamHall54Integrator11.getMaxGrowth();
        double double18 = highamHall54Integrator11.getCurrentSignedStepsize();
        int int19 = highamHall54Integrator11.getOrder();
        int int20 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setSafety(5.916079783099616d);
        java.lang.String str23 = highamHall54Integrator11.getName();
        double double24 = highamHall54Integrator11.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 31.144823004794873d + "'", double18 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
    }

    @Test
    public void test15469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15469");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double double17 = highamHall54Integrator11.getCurrentSignedStepsize();
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        highamHall54Integrator29.setMaxGrowth((double) (-1));
        double double32 = highamHall54Integrator29.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator29.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler34);
        java.lang.String str36 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth(5.580754698496868d);
        double double39 = highamHall54Integrator11.getCurrentStepStart();
        double double40 = highamHall54Integrator11.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 31.144823004794873d + "'", double17 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Higham-Hall 5(4)" + "'", str36, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
    }

    @Test
    public void test15470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15470");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction29, (double) 'a', 97.0d, (int) (byte) 100);
        double double34 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator11.getStepHandler();
        java.lang.String str36 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth(31.622776601683793d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.9d + "'", double34 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Higham-Hall 5(4)" + "'", str36, "Higham-Hall 5(4)");
    }

    @Test
    public void test15471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15471");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) ' ', 32.0d, (double) (short) 1, (-0.0d));
        java.lang.String str5 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth(22.80350850198276d);
        double double8 = highamHall54Integrator4.getMinStep();
        double double9 = highamHall54Integrator4.getMinReduction();
        double double10 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, 5.580754698496868d, 0.0d, (int) 'a');
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 32.0d + "'", double8 == 32.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 32.0d + "'", double10 == 32.0d);
    }

    @Test
    public void test15472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15472");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        double double77 = highamHall54Integrator76.getSafety();
        highamHall54Integrator76.setInitialStepSize((double) (-1));
        highamHall54Integrator76.setMinReduction((double) (byte) 10);
        java.lang.String str82 = highamHall54Integrator76.getName();
        highamHall54Integrator76.setMaxGrowth(5.916079783099616d);
        java.lang.String str85 = highamHall54Integrator76.getName();
        double double86 = highamHall54Integrator76.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9d + "'", double77 == 0.9d);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Higham-Hall 5(4)" + "'", str82, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Higham-Hall 5(4)" + "'", str85, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 10.0d + "'", double86 == 10.0d);
    }

    @Test
    public void test15473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15473");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(52.0d, (double) 1.0f, 0.0d, (double) 5);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, 24.322992790977874d, 2.4957893743180684d, (int) (byte) 100);
        double double10 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMinReduction(0.0d);
        double double13 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction14, (double) 0, 20.654650327566205d, 1);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
    }

    @Test
    public void test15474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15474");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getSafety();
        double double16 = highamHall54Integrator11.getMinStep();
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        highamHall54Integrator28.setMaxGrowth((double) (-1));
        double double31 = highamHall54Integrator28.getMaxStep();
        int int32 = highamHall54Integrator28.getOrder();
        double double33 = highamHall54Integrator28.getMaxStep();
        java.lang.String str34 = highamHall54Integrator28.getName();
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler35);
        double double37 = highamHall54Integrator11.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction38, 11.683854606559324d, 22.80350850198276d, (int) 'a');
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 97.0d + "'", double16 == 97.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
    }

    @Test
    public void test15475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15475");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, 35.0d, (double) (-1.0f), (double) (byte) 0);
        java.lang.String str5 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        int int7 = highamHall54Integrator4.getOrder();
        double double8 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMinReduction(0.9d);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
    }

    @Test
    public void test15476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15476");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        highamHall54Integrator4.setMinReduction(32.0d);
        highamHall54Integrator4.setInitialStepSize(0.9d);
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        double[] doubleArray18 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray20 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray18, doubleArray20);
        double double22 = highamHall54Integrator21.getCurrentSignedStepsize();
        highamHall54Integrator21.setMinReduction((double) (byte) 10);
        double double25 = highamHall54Integrator21.getMaxStep();
        int int26 = highamHall54Integrator21.getOrder();
        highamHall54Integrator21.setMinReduction((double) (-1.0f));
        double double29 = highamHall54Integrator21.getMaxStep();
        int int30 = highamHall54Integrator21.getOrder();
        java.lang.String str31 = highamHall54Integrator21.getName();
        double double32 = highamHall54Integrator21.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler33);
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 31.144823004794873d + "'", double22 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(stepHandler33);
    }

    @Test
    public void test15477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15477");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        int int7 = highamHall54Integrator4.getOrder();
        double double8 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        java.lang.String str10 = highamHall54Integrator4.getName();
        double double11 = highamHall54Integrator4.getMinReduction();
        int int12 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.2d + "'", double11 == 0.2d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
    }

    @Test
    public void test15478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15478");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        double double16 = highamHall54Integrator11.getMaxStep();
        java.lang.String str17 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth(31.622776601683793d);
        int int20 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setInitialStepSize((double) 10);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
    }

    @Test
    public void test15479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15479");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(Double.NaN, 0.0d, (double) 0L, 5.580754698496868d);
        java.lang.String str5 = highamHall54Integrator4.getName();
        double double6 = highamHall54Integrator4.getMinReduction();
        java.lang.String str7 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
    }

    @Test
    public void test15480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15480");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException14);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray27);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        java.lang.Object[] objArray42 = derivativeException41.getArguments();
        java.lang.Object[] objArray43 = derivativeException41.getArguments();
        java.lang.Object[] objArray44 = derivativeException41.getArguments();
        derivativeException32.addSuppressed((java.lang.Throwable) derivativeException41);
        derivativeException14.addSuppressed((java.lang.Throwable) derivativeException32);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException14);
        java.lang.String str48 = derivativeException14.getPattern();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str48, "org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test15481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15481");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(7.521206186172788d, 0.0d, 4.995787599886596d, (double) (short) 10);
    }

    @Test
    public void test15482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15482");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth((double) ' ');
        java.lang.String str15 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (-1.0f));
        double double18 = highamHall54Integrator11.getMinStep();
        java.lang.String str19 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator11.getStepHandler();
        java.lang.String str21 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator11.getStepHandler();
        double double23 = highamHall54Integrator11.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 97.0d + "'", double18 == 97.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test15483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15483");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        double double18 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setMinReduction((double) (short) 100);
        double double21 = highamHall54Integrator11.getMinStep();
        int int22 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator11.getStepHandler();
        double double24 = highamHall54Integrator11.getMaxGrowth();
        double double25 = highamHall54Integrator11.getMinStep();
        java.lang.String str26 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 97.0d + "'", double21 == 97.0d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 97.0d + "'", double25 == 97.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
    }

    @Test
    public void test15484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15484");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        java.lang.Object[] objArray11 = derivativeException10.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray11);
        java.lang.String str14 = integratorException13.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException13);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str14, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test15485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15485");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) -1);
        java.lang.String str29 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 0, (double) 'a', (double) (-1));
        java.lang.String str35 = highamHall54Integrator34.getName();
        double double36 = highamHall54Integrator34.getMaxGrowth();
        double double37 = highamHall54Integrator34.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator34.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler38);
        double double40 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setMinReduction((-0.0d));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Higham-Hall 5(4)" + "'", str35, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.2d + "'", double40 == 0.2d);
    }

    @Test
    public void test15486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15486");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException21);
        java.lang.Throwable[] throwableArray25 = integratorException24.getSuppressed();
        java.lang.Throwable[] throwableArray26 = integratorException24.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException27);
        java.lang.Throwable[] throwableArray29 = derivativeException28.getSuppressed();
        java.lang.Throwable[] throwableArray30 = derivativeException28.getSuppressed();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test15487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15487");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getSafety();
        double double27 = highamHall54Integrator11.getCurrentStepStart();
        java.lang.String str28 = highamHall54Integrator11.getName();
        java.lang.String str29 = highamHall54Integrator11.getName();
        double double30 = highamHall54Integrator11.getSafety();
        java.lang.String str31 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.9d + "'", double26 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.9d + "'", double30 == 0.9d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
    }

    @Test
    public void test15488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15488");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (short) -1, (double) 'a', (double) 1L);
        double double5 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setMaxGrowth((double) ' ');
        double double8 = highamHall54Integrator4.getMinStep();
        double double9 = highamHall54Integrator4.getMinStep();
        int int10 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
    }

    @Test
    public void test15489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15489");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        java.lang.Throwable[] throwableArray12 = derivativeException10.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray12);
        java.lang.String str14 = integratorException13.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException13);
        java.lang.String str16 = integratorException15.toString();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str14, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str16, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test15490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15490");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setSafety((double) 100);
    }

    @Test
    public void test15491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15491");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, (double) 1, 5);
        double double10 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler11 = highamHall54Integrator4.getStepHandler();
        double[] doubleArray24 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray26 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray24, doubleArray26);
        double[] doubleArray36 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray38 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray36, doubleArray38);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray24, doubleArray38);
        double[] doubleArray51 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray53 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray51, doubleArray53);
        double[] doubleArray57 = new double[] { (-1L), 97.0d };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, doubleArray53, doubleArray57);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) (byte) 100, doubleArray24, doubleArray57);
        highamHall54Integrator59.setMaxGrowth((-1.0d));
        org.apache.commons.math.ode.StepHandler stepHandler62 = highamHall54Integrator59.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler62);
        highamHall54Integrator4.setMaxGrowth((double) 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 97.0]");
        org.junit.Assert.assertNotNull(stepHandler62);
    }

    @Test
    public void test15492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15492");
        double[] doubleArray12 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray14 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray12, doubleArray14);
        double[] doubleArray24 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray26 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray24, doubleArray26);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray12, doubleArray26);
        double[] doubleArray39 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray41 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray39, doubleArray41);
        double[] doubleArray45 = new double[] { (-1L), 97.0d };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, doubleArray41, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) (byte) 100, doubleArray12, doubleArray45);
        highamHall54Integrator47.setMaxGrowth((-1.0d));
        double double50 = highamHall54Integrator47.getCurrentSignedStepsize();
        highamHall54Integrator47.setMinReduction(5.916079783099616d);
        java.lang.String str53 = highamHall54Integrator47.getName();
        double double54 = highamHall54Integrator47.getSafety();
        highamHall54Integrator47.setSafety(22.80350850198276d);
        java.lang.String str57 = highamHall54Integrator47.getName();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Higham-Hall 5(4)" + "'", str53, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.9d + "'", double54 == 0.9d);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Higham-Hall 5(4)" + "'", str57, "Higham-Hall 5(4)");
    }

    @Test
    public void test15493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15493");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.Object[] objArray10 = derivativeException9.getArguments();
        java.lang.Throwable[] throwableArray11 = derivativeException9.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray11);
        double[] doubleArray27 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray29 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray27, doubleArray29);
        java.lang.Object[] objArray31 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray31);
        java.lang.Object[] objArray33 = integratorException32.getArguments();
        java.lang.String str34 = integratorException32.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException32);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException32);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException32);
        java.lang.Object[] objArray38 = integratorException37.getArguments();
        java.lang.Throwable[] throwableArray39 = integratorException37.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException37);
        java.lang.Throwable[] throwableArray41 = integratorException37.getSuppressed();
        integratorException12.addSuppressed((java.lang.Throwable) integratorException37);
        java.lang.String str43 = integratorException37.getPattern();
        java.lang.Class<?> wildcardClass44 = integratorException37.getClass();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test15494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15494");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) -1);
        java.lang.String str29 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) 0);
        highamHall54Integrator11.setSafety(100.0d);
        double[] doubleArray42 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray44 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray42, doubleArray44);
        double double46 = highamHall54Integrator45.getCurrentSignedStepsize();
        highamHall54Integrator45.setMinReduction((double) (byte) 10);
        double double49 = highamHall54Integrator45.getMaxStep();
        int int50 = highamHall54Integrator45.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler51 = highamHall54Integrator45.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler51);
        double double53 = highamHall54Integrator11.getMinStep();
        double double54 = highamHall54Integrator11.getCurrentStepStart();
        java.lang.String str55 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 31.144823004794873d + "'", double46 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 97.0d + "'", double53 == 97.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Higham-Hall 5(4)" + "'", str55, "Higham-Hall 5(4)");
    }

    @Test
    public void test15495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15495");
        java.lang.String[] strArray9 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test15496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15496");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray19, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction37, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        int int42 = highamHall54Integrator36.getOrder();
        double double43 = highamHall54Integrator36.getMinReduction();
        double double44 = highamHall54Integrator36.getMaxGrowth();
        double double45 = highamHall54Integrator36.getMaxStep();
        highamHall54Integrator36.setMinReduction(52.0d);
        int int48 = highamHall54Integrator36.getOrder();
        int int49 = highamHall54Integrator36.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler50 = highamHall54Integrator36.getStepHandler();
        java.lang.String str51 = highamHall54Integrator36.getName();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 5 + "'", int42 == 5);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.2d + "'", double43 == 0.2d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 35.0d + "'", double45 == 35.0d);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5);
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Higham-Hall 5(4)" + "'", str51, "Higham-Hall 5(4)");
    }

    @Test
    public void test15497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15497");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        java.lang.Throwable[] throwableArray12 = derivativeException11.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray12);
        double[] doubleArray30 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray32 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray30, doubleArray32);
        java.lang.Object[] objArray34 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray34);
        java.lang.Object[] objArray36 = integratorException35.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException38);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException39);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray48);
        java.lang.Object[] objArray50 = derivativeException49.getArguments();
        java.lang.Throwable[] throwableArray51 = derivativeException49.getSuppressed();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray59);
        java.lang.Object[] objArray61 = derivativeException60.getArguments();
        derivativeException49.addSuppressed((java.lang.Throwable) derivativeException60);
        java.lang.String str63 = derivativeException49.getPattern();
        derivativeException39.addSuppressed((java.lang.Throwable) derivativeException49);
        java.lang.Object[] objArray65 = derivativeException49.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray65);
        java.lang.String str67 = integratorException66.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException66);
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException68);
        integratorException13.addSuppressed((java.lang.Throwable) derivativeException68);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str67, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test15498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15498");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (short) -1, (double) 'a', (double) 1L);
        double double5 = highamHall54Integrator4.getMaxStep();
        int int6 = highamHall54Integrator4.getOrder();
        double double7 = highamHall54Integrator4.getMaxStep();
        double double8 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setMinReduction(35.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, 71.02112361825881d, (double) (short) 1, 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-1.0d) + "'", double5 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
    }

    @Test
    public void test15499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15499");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        java.lang.String str21 = integratorException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException24);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray37);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray50);
        java.lang.Object[] objArray52 = derivativeException51.getArguments();
        java.lang.Object[] objArray53 = derivativeException51.getArguments();
        java.lang.Object[] objArray54 = derivativeException51.getArguments();
        derivativeException42.addSuppressed((java.lang.Throwable) derivativeException51);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException42);
        integratorException24.addSuppressed((java.lang.Throwable) derivativeException42);
        java.lang.String str58 = derivativeException42.getPattern();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str58, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test15500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15500");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        double[] doubleArray46 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray55 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray57 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray55, doubleArray57);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray46, doubleArray55);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (-1L), doubleArray34, doubleArray55);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) (-1L), doubleArray19, doubleArray34);
        int int62 = highamHall54Integrator61.getOrder();
        highamHall54Integrator61.setSafety(32.0d);
        java.lang.String str65 = highamHall54Integrator61.getName();
        java.lang.String str66 = highamHall54Integrator61.getName();
        java.lang.String str67 = highamHall54Integrator61.getName();
        int int68 = highamHall54Integrator61.getOrder();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 5 + "'", int62 == 5);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Higham-Hall 5(4)" + "'", str65, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Higham-Hall 5(4)" + "'", str66, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Higham-Hall 5(4)" + "'", str67, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 5 + "'", int68 == 5);
    }
}

