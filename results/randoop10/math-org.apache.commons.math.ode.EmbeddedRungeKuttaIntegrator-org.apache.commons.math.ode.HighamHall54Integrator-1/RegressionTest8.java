import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest8 {

    public static boolean debug = false;

    @Test
    public void test04001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04001");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator4.setMinReduction(0.9d);
        double double7 = highamHall54Integrator4.getMaxGrowth();
        double double8 = highamHall54Integrator4.getMinStep();
        double double9 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
    }

    @Test
    public void test04002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04002");
        double[] doubleArray10 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray12 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray10, doubleArray12);
        double[] doubleArray22 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray24 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray22, doubleArray24);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray10, doubleArray24);
        int int27 = highamHall54Integrator26.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (short) -1, (double) 'a', (double) 1L);
        double double33 = highamHall54Integrator32.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator32.getStepHandler();
        highamHall54Integrator26.setStepHandler(stepHandler34);
        java.lang.String str36 = highamHall54Integrator26.getName();
        double double37 = highamHall54Integrator26.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1.0d) + "'", double33 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Higham-Hall 5(4)" + "'", str36, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
    }

    @Test
    public void test04003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04003");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 5, (double) (short) 1, (double) 100.0f, (double) (short) 10);
        highamHall54Integrator4.setMaxGrowth(0.0d);
        highamHall54Integrator4.setInitialStepSize((double) (short) 0);
    }

    @Test
    public void test04004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04004");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        java.lang.Throwable[] throwableArray12 = integratorException11.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray12);
        java.lang.Throwable[] throwableArray14 = integratorException13.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.Throwable[] throwableArray27 = derivativeException26.getSuppressed();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        java.lang.String str45 = derivativeException44.getPattern();
        derivativeException26.addSuppressed((java.lang.Throwable) derivativeException44);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException47);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray56);
        java.lang.Object[] objArray58 = derivativeException57.getArguments();
        java.lang.Throwable[] throwableArray59 = derivativeException57.getSuppressed();
        java.lang.Throwable[] throwableArray60 = derivativeException57.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException57);
        java.lang.Object[] objArray62 = derivativeException57.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException57);
        derivativeException15.addSuppressed((java.lang.Throwable) integratorException63);
        java.lang.Throwable throwable65 = null;
        // The following exception was thrown during execution in test generation
        try {
            derivativeException15.addSuppressed(throwable65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str45, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!, , , , , ]");
    }

    @Test
    public void test04005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04005");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) -1);
        java.lang.String str29 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator11.getStepHandler();
        java.lang.String str33 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setInitialStepSize(98.48857801796105d);
        java.lang.String str36 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Higham-Hall 5(4)" + "'", str33, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Higham-Hall 5(4)" + "'", str36, "Higham-Hall 5(4)");
    }

    @Test
    public void test04006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04006");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) -1);
        java.lang.String str29 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) 0);
        double double32 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setInitialStepSize((double) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
    }

    @Test
    public void test04007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04007");
        double[] doubleArray10 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray12 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray10, doubleArray12);
        double[] doubleArray16 = new double[] { (-1L), 97.0d };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, doubleArray12, doubleArray16);
        highamHall54Integrator17.setSafety((double) (short) 0);
        java.lang.String str20 = highamHall54Integrator17.getName();
        double double21 = highamHall54Integrator17.getCurrentSignedStepsize();
        double double22 = highamHall54Integrator17.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator17.addSwitchingFunction(switchingFunction23, 0.9d, (double) (short) 100, (int) '#');
        double double28 = highamHall54Integrator17.getMinStep();
        highamHall54Integrator17.setMinReduction((double) 1.0f);
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator17.getStepHandler();
        double double32 = highamHall54Integrator17.getSafety();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 97.0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 35.0d + "'", double22 == 35.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 35.0d + "'", double28 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    }

    @Test
    public void test04008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04008");
        double[] doubleArray10 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray12 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray10, doubleArray12);
        double[] doubleArray22 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray24 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray22, doubleArray24);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray10, doubleArray24);
        int int27 = highamHall54Integrator26.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (short) -1, (double) 'a', (double) 1L);
        double double33 = highamHall54Integrator32.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator32.getStepHandler();
        highamHall54Integrator26.setStepHandler(stepHandler34);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        highamHall54Integrator26.addSwitchingFunction(switchingFunction36, 0.0d, 3.1622776601683795d, 10);
        highamHall54Integrator26.setMinReduction((-1.0d));
        double double43 = highamHall54Integrator26.getSafety();
        double double44 = highamHall54Integrator26.getMinReduction();
        double double45 = highamHall54Integrator26.getMinReduction();
        double double46 = highamHall54Integrator26.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1.0d) + "'", double33 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.9d + "'", double43 == 0.9d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1.0d) + "'", double44 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1.0d) + "'", double45 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1.0d) + "'", double46 == (-1.0d));
    }

    @Test
    public void test04009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04009");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, (double) 1, 5);
        double double10 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setInitialStepSize((double) (-1.0f));
        highamHall54Integrator4.setMinReduction((double) (byte) -1);
        double double15 = highamHall54Integrator4.getSafety();
        java.lang.String str16 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
    }

    @Test
    public void test04010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04010");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        double double18 = highamHall54Integrator11.getMinReduction();
        double double19 = highamHall54Integrator11.getMinReduction();
        java.lang.String str20 = highamHall54Integrator11.getName();
        java.lang.String str21 = highamHall54Integrator11.getName();
        double double22 = highamHall54Integrator11.getMinReduction();
        double double23 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setInitialStepSize(2.4957893743180684d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2d + "'", double19 == 0.2d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.2d + "'", double23 == 0.2d);
    }

    @Test
    public void test04011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04011");
        double[] doubleArray10 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray12 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray10, doubleArray12);
        double[] doubleArray22 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray24 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray22, doubleArray24);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray10, doubleArray24);
        double double27 = highamHall54Integrator26.getMaxStep();
        double double28 = highamHall54Integrator26.getCurrentStepStart();
        double double29 = highamHall54Integrator26.getCurrentSignedStepsize();
        int int30 = highamHall54Integrator26.getOrder();
        java.lang.Class<?> wildcardClass31 = highamHall54Integrator26.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 31.144823004794873d + "'", double27 == 31.144823004794873d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2.4957893743180684d + "'", double29 == 2.4957893743180684d);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test04012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04012");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        java.lang.Throwable[] throwableArray13 = derivativeException12.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) throwableArray13);
        java.lang.Object[] objArray16 = integratorException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray16);
        java.lang.Throwable[] throwableArray18 = integratorException17.getSuppressed();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test04013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04013");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        int int7 = highamHall54Integrator4.getOrder();
        int int8 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, (double) (byte) 1, 35.0d, (int) ' ');
        highamHall54Integrator4.setSafety(9.848857801796104d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
    }

    @Test
    public void test04014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04014");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException22);
        java.lang.Object[] objArray24 = derivativeException23.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException23);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
    }

    @Test
    public void test04015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04015");
        double[] doubleArray12 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray14 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray12, doubleArray14);
        double[] doubleArray24 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray26 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray24, doubleArray26);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray12, doubleArray26);
        double[] doubleArray37 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray46 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray48 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray46, doubleArray48);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray37, doubleArray46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (byte) 1, doubleArray26, doubleArray46);
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator51.getStepHandler();
        int int53 = highamHall54Integrator51.getOrder();
        java.lang.String str54 = highamHall54Integrator51.getName();
        double double55 = highamHall54Integrator51.getSafety();
        java.lang.Class<?> wildcardClass56 = highamHall54Integrator51.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Higham-Hall 5(4)" + "'", str54, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.9d + "'", double55 == 0.9d);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test04016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04016");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 'a', 0.9d, 31.622776601683793d);
        highamHall54Integrator4.setMaxGrowth((double) '#');
    }

    @Test
    public void test04017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04017");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        double double77 = highamHall54Integrator76.getSafety();
        highamHall54Integrator76.setInitialStepSize((double) (-1));
        double double80 = highamHall54Integrator76.getMinReduction();
        java.lang.String str81 = highamHall54Integrator76.getName();
        double double82 = highamHall54Integrator76.getSafety();
        highamHall54Integrator76.setInitialStepSize((double) 1);
        double double85 = highamHall54Integrator76.getMaxStep();
        double double86 = highamHall54Integrator76.getMinReduction();
        int int87 = highamHall54Integrator76.getOrder();
        java.lang.String str88 = highamHall54Integrator76.getName();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9d + "'", double77 == 0.9d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.2d + "'", double80 == 0.2d);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Higham-Hall 5(4)" + "'", str81, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.9d + "'", double82 == 0.9d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 100.0d + "'", double85 == 100.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.2d + "'", double86 == 0.2d);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 5 + "'", int87 == 5);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Higham-Hall 5(4)" + "'", str88, "Higham-Hall 5(4)");
    }

    @Test
    public void test04018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04018");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getMaxStep();
        java.lang.String str17 = highamHall54Integrator11.getName();
        java.lang.String str18 = highamHall54Integrator11.getName();
        double double19 = highamHall54Integrator11.getCurrentSignedStepsize();
        int int20 = highamHall54Integrator11.getOrder();
        double double21 = highamHall54Integrator11.getMinStep();
        int int22 = highamHall54Integrator11.getOrder();
        double double23 = highamHall54Integrator11.getSafety();
        java.lang.String str24 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction((double) (byte) 100);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 31.144823004794873d + "'", double19 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 97.0d + "'", double21 == 97.0d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.9d + "'", double23 == 0.9d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
    }

    @Test
    public void test04019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04019");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator4.setMinReduction(0.9d);
        double double7 = highamHall54Integrator4.getMinStep();
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth((double) 10L);
        double double12 = highamHall54Integrator4.getMinReduction();
        java.lang.String str13 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth((double) 'a');
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9d + "'", double12 == 0.9d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
    }

    @Test
    public void test04020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04020");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        java.lang.Throwable[] throwableArray12 = integratorException11.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray12);
        java.lang.Throwable[] throwableArray14 = integratorException13.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException13);
        java.lang.Throwable[] throwableArray16 = integratorException13.getSuppressed();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray32);
        integratorException13.addSuppressed((java.lang.Throwable) derivativeException41);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(strArray32);
    }

    @Test
    public void test04021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04021");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        double double17 = highamHall54Integrator11.getMinReduction();
        java.lang.String str18 = highamHall54Integrator11.getName();
        int int19 = highamHall54Integrator11.getOrder();
        java.lang.String str20 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setInitialStepSize(17.88854381999832d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
    }

    @Test
    public void test04022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04022");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setInitialStepSize(71.02112361825881d);
        double double30 = highamHall54Integrator11.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.9d + "'", double26 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
    }

    @Test
    public void test04023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04023");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        int int17 = highamHall54Integrator11.getOrder();
        double double18 = highamHall54Integrator11.getMaxGrowth();
        double double19 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction20, (double) 1.0f, 0.2d, 5);
        highamHall54Integrator11.setInitialStepSize((double) 10.0f);
        int int27 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator11.getStepHandler();
        double double29 = highamHall54Integrator11.getMaxStep();
        java.lang.String str30 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setInitialStepSize(71.02112361825881d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
    }

    @Test
    public void test04024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04024");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException20);
        java.lang.Throwable[] throwableArray23 = integratorException20.getSuppressed();
        java.lang.Object[] objArray24 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", objArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException25);
        java.lang.String str27 = derivativeException26.toString();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str27, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test04025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04025");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, 31.144823004794873d, 31.144823004794873d, (double) ' ');
        double double5 = highamHall54Integrator4.getSafety();
        int int6 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(4.995787599886596d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9d + "'", double5 == 0.9d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
    }

    @Test
    public void test04026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04026");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        int int17 = highamHall54Integrator11.getOrder();
        double double18 = highamHall54Integrator11.getMaxGrowth();
        double double19 = highamHall54Integrator11.getCurrentStepStart();
        double double20 = highamHall54Integrator11.getMinStep();
        int int21 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 97.0d + "'", double20 == 97.0d);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
    }

    @Test
    public void test04027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04027");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 0, (double) 'a', (double) (-1));
        int int5 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize(35.0d);
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
    }

    @Test
    public void test04028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04028");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray19, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction37, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        int int42 = highamHall54Integrator36.getOrder();
        double double43 = highamHall54Integrator36.getMinReduction();
        double double44 = highamHall54Integrator36.getMaxGrowth();
        double double45 = highamHall54Integrator36.getMaxStep();
        highamHall54Integrator36.setMinReduction(52.0d);
        int int48 = highamHall54Integrator36.getOrder();
        double double49 = highamHall54Integrator36.getMinStep();
        highamHall54Integrator36.setMaxGrowth(5.612486080160912d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 5 + "'", int42 == 5);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.2d + "'", double43 == 0.2d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 35.0d + "'", double45 == 35.0d);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 35.0d + "'", double49 == 35.0d);
    }

    @Test
    public void test04029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04029");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setInitialStepSize((double) (-1));
        highamHall54Integrator11.setInitialStepSize((double) 100.0f);
        double double17 = highamHall54Integrator11.getMaxStep();
        double double18 = highamHall54Integrator11.getCurrentStepStart();
        double double19 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator11.getStepHandler();
        java.lang.Class<?> wildcardClass21 = highamHall54Integrator11.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 31.144823004794873d + "'", double19 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test04030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04030");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getMaxStep();
        int int16 = highamHall54Integrator11.getOrder();
        double double17 = highamHall54Integrator11.getMinReduction();
        double double18 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setSafety((double) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction21, (double) 'a', 100.0d, 1);
        double double26 = highamHall54Integrator11.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 31.144823004794873d + "'", double18 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
    }

    @Test
    public void test04031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04031");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test04032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04032");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test04033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04033");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.Throwable[] throwableArray10 = derivativeException8.getSuppressed();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        java.lang.Object[] objArray23 = derivativeException22.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray23);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray23);
        java.lang.Throwable[] throwableArray27 = integratorException26.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException26);
        derivativeException8.addSuppressed((java.lang.Throwable) integratorException26);
        java.lang.Object[] objArray30 = integratorException26.getArguments();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, , , , , ]");
    }

    @Test
    public void test04034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04034");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        java.lang.String str15 = highamHall54Integrator11.getName();
        double double16 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setSafety((double) (-1L));
        highamHall54Integrator11.setInitialStepSize(0.2d);
        highamHall54Integrator11.setSafety((double) 10.0f);
        double double23 = highamHall54Integrator11.getMaxGrowth();
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        highamHall54Integrator35.setMaxGrowth((double) (-1));
        double double38 = highamHall54Integrator35.getSafety();
        int int39 = highamHall54Integrator35.getOrder();
        java.lang.String str40 = highamHall54Integrator35.getName();
        int int41 = highamHall54Integrator35.getOrder();
        double double42 = highamHall54Integrator35.getMaxGrowth();
        double double43 = highamHall54Integrator35.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        highamHall54Integrator35.addSwitchingFunction(switchingFunction44, (double) 1.0f, 0.2d, 5);
        highamHall54Integrator35.setInitialStepSize((double) 10.0f);
        int int51 = highamHall54Integrator35.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator35.getStepHandler();
        double double53 = highamHall54Integrator35.getMaxStep();
        double double54 = highamHall54Integrator35.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler55);
        java.lang.Class<?> wildcardClass57 = highamHall54Integrator11.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.2d + "'", double16 == 0.2d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.9d + "'", double38 == 0.9d);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Higham-Hall 5(4)" + "'", str40, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 5 + "'", int41 == 5);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1.0d) + "'", double42 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 5 + "'", int51 == 5);
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.9d + "'", double54 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test04035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04035");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        double[] doubleArray39 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray41 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray39, doubleArray41);
        java.lang.Object[] objArray43 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray43);
        java.lang.Object[] objArray45 = integratorException44.getArguments();
        java.lang.String str46 = integratorException44.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException44);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException44);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException44);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException49);
        derivativeException23.addSuppressed((java.lang.Throwable) derivativeException50);
        java.lang.Throwable[] throwableArray52 = derivativeException23.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException23);
        java.lang.String str54 = integratorException53.getPattern();
        java.lang.String str55 = integratorException53.toString();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str54, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str55, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04036");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, (double) 1, 5);
        double double10 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setInitialStepSize((double) (-1.0f));
        int int13 = highamHall54Integrator4.getOrder();
        double double14 = highamHall54Integrator4.getMaxStep();
        double double15 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize(5.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test04037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04037");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double double17 = highamHall54Integrator11.getCurrentSignedStepsize();
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        highamHall54Integrator29.setMaxGrowth((double) (-1));
        double double32 = highamHall54Integrator29.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator29.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler34);
        highamHall54Integrator11.setInitialStepSize((double) (short) 10);
        java.lang.String str38 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 31.144823004794873d + "'", double17 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Higham-Hall 5(4)" + "'", str38, "Higham-Hall 5(4)");
    }

    @Test
    public void test04038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04038");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        int int5 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        double double9 = highamHall54Integrator4.getMinStep();
        double double10 = highamHall54Integrator4.getMinReduction();
        java.lang.String str11 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 100.0d + "'", double9 == 100.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
    }

    @Test
    public void test04039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04039");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        highamHall54Integrator11.setMaxGrowth((double) (-1L));
        int int20 = highamHall54Integrator11.getOrder();
        double double21 = highamHall54Integrator11.getSafety();
        double double22 = highamHall54Integrator11.getMinReduction();
        double double23 = highamHall54Integrator11.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.9d + "'", double21 == 0.9d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test04040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04040");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        java.lang.Class<?> wildcardClass21 = derivativeException20.getClass();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test04041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04041");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        java.lang.Object[] objArray9 = derivativeException8.getArguments();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        java.lang.Object[] objArray19 = derivativeException18.getArguments();
        java.lang.Throwable[] throwableArray20 = derivativeException18.getSuppressed();
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        java.lang.Object[] objArray24 = integratorException23.getArguments();
        java.lang.Class<?> wildcardClass25 = integratorException23.getClass();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test04042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04042");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        java.lang.String str27 = derivativeException26.toString();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str27, "org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test04043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04043");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        java.lang.Object[] objArray11 = derivativeException10.getArguments();
        java.lang.Object[] objArray12 = derivativeException10.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("", objArray12);
        java.lang.Throwable[] throwableArray14 = integratorException13.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException15);
        java.lang.String str17 = derivativeException16.toString();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: " + "'", str17, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test04044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04044");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth((double) ' ');
        double double15 = highamHall54Integrator11.getCurrentSignedStepsize();
        java.lang.String str16 = highamHall54Integrator11.getName();
        int int17 = highamHall54Integrator11.getOrder();
        java.lang.String str18 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 31.144823004794873d + "'", double15 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
    }

    @Test
    public void test04045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04045");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setInitialStepSize((double) '4');
        double double30 = highamHall54Integrator11.getSafety();
        double double31 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setMinReduction(0.2d);
        double double34 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setMinReduction(55.80754698496868d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2d + "'", double27 == 0.2d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.9d + "'", double30 == 0.9d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(stepHandler35);
    }

    @Test
    public void test04046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04046");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException21);
        java.lang.String str23 = integratorException21.toString();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)" + "'", str23, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)");
    }

    @Test
    public void test04047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04047");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setInitialStepSize((double) (short) 0);
        double double18 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        int int22 = highamHall54Integrator11.getOrder();
        java.lang.String str23 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setInitialStepSize(0.0d);
        highamHall54Integrator11.setMinReduction(5.916079783099616d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
    }

    @Test
    public void test04048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04048");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction13, (double) '4', 1.0d, 0);
        double double18 = highamHall54Integrator11.getSafety();
        int int19 = highamHall54Integrator11.getOrder();
        java.lang.String str20 = highamHall54Integrator11.getName();
        int int21 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setInitialStepSize(5.0d);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator11.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.9d + "'", double18 == 0.9d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertNotNull(stepHandler24);
    }

    @Test
    public void test04049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04049");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 52.0d, 0.0d, (double) (short) 10);
        double double5 = highamHall54Integrator4.getSafety();
        double double6 = highamHall54Integrator4.getSafety();
        int int7 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9d + "'", double5 == 0.9d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertNotNull(stepHandler8);
    }

    @Test
    public void test04050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04050");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException22);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException22);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException34);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("", strArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray45);
        derivativeException34.addSuppressed((java.lang.Throwable) derivativeException48);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException34);
        java.lang.String str51 = derivativeException50.getPattern();
        double[] doubleArray66 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray68 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator69 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray66, doubleArray68);
        java.lang.Object[] objArray70 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray70);
        java.lang.Object[] objArray72 = integratorException71.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException71);
        derivativeException50.addSuppressed((java.lang.Throwable) integratorException71);
        derivativeException25.addSuppressed((java.lang.Throwable) integratorException71);
        org.apache.commons.math.ode.IntegratorException integratorException76 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.IntegratorException integratorException77 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException77);
        java.lang.String str79 = integratorException77.getPattern();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str79, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04051");
        double[] doubleArray12 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray14 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray12, doubleArray14);
        double[] doubleArray24 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray26 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray24, doubleArray26);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray12, doubleArray26);
        double[] doubleArray37 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray46 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray48 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray46, doubleArray48);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray37, doubleArray46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (byte) 1, doubleArray26, doubleArray46);
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator51.getStepHandler();
        double double53 = highamHall54Integrator51.getSafety();
        double double54 = highamHall54Integrator51.getMaxStep();
        java.lang.String str55 = highamHall54Integrator51.getName();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.9d + "'", double53 == 0.9d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Higham-Hall 5(4)" + "'", str55, "Higham-Hall 5(4)");
    }

    @Test
    public void test04052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04052");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test04053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04053");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        java.lang.Class<?> wildcardClass27 = derivativeException26.getClass();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test04054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04054");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray12);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        integratorException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.Throwable[] throwableArray28 = derivativeException25.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray43);
        java.lang.Object[] objArray45 = derivativeException44.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray45);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray45);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray45);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("", objArray45);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException50);
        derivativeException25.addSuppressed((java.lang.Throwable) integratorException50);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        java.lang.String str55 = integratorException54.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str55, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test04055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04055");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (-1.0f), 0.2d, (double) (byte) -1);
        highamHall54Integrator4.setInitialStepSize((double) 1);
        double double7 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) (byte) -1);
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        int int12 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
    }

    @Test
    public void test04056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04056");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator11.getStepHandler();
        int int17 = highamHall54Integrator11.getOrder();
        java.lang.String str18 = highamHall54Integrator11.getName();
        java.lang.String str19 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
    }

    @Test
    public void test04057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04057");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray13);
        java.lang.String str21 = derivativeException20.toString();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: " + "'", str21, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test04058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04058");
        double[] doubleArray17 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray19 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray17, doubleArray19);
        java.lang.Object[] objArray21 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray21);
        java.lang.Object[] objArray23 = integratorException22.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException22);
        java.lang.Object[] objArray25 = integratorException22.getArguments();
        java.lang.Throwable[] throwableArray26 = integratorException22.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray26);
        java.lang.String str30 = integratorException29.getPattern();
        java.lang.Object[] objArray31 = integratorException29.getArguments();
        java.lang.String str32 = integratorException29.toString();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str32, "org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test04059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04059");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        double double16 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((double) '4');
        double double19 = highamHall54Integrator11.getMinStep();
        int int20 = highamHall54Integrator11.getOrder();
        int int21 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setInitialStepSize(0.0d);
        int int24 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9d + "'", double16 == 0.9d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 97.0d + "'", double19 == 97.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
    }

    @Test
    public void test04060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04060");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) ' ', 0.0d, (-1.0d), 0.0d);
        highamHall54Integrator4.setMaxGrowth((double) 100L);
        int int7 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
    }

    @Test
    public void test04061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04061");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        double[] doubleArray31 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray33 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray31, doubleArray33);
        java.lang.Object[] objArray35 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray35);
        java.lang.Object[] objArray37 = integratorException36.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray37);
        java.lang.Object[] objArray39 = integratorException38.getArguments();
        java.lang.Throwable[] throwableArray40 = integratorException38.getSuppressed();
        java.lang.Object[] objArray41 = integratorException38.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", objArray41);
        derivativeException14.addSuppressed((java.lang.Throwable) integratorException42);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[-1, 1, 1.0, -1.0, 1, a]");
    }

    @Test
    public void test04062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04062");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (-1.0f), (double) (short) 0, (double) (short) 100);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double6 = highamHall54Integrator4.getMaxGrowth();
        double double7 = highamHall54Integrator4.getMinStep();
        double double8 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (-1.0f), 0.2d, (double) (byte) -1);
        double double14 = highamHall54Integrator13.getCurrentSignedStepsize();
        double[] doubleArray23 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray25 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray23, doubleArray25);
        double[] doubleArray35 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray37 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray35, doubleArray37);
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator38.getStepHandler();
        highamHall54Integrator26.setStepHandler(stepHandler39);
        int int41 = highamHall54Integrator26.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator26.getStepHandler();
        highamHall54Integrator13.setStepHandler(stepHandler42);
        highamHall54Integrator4.setStepHandler(stepHandler42);
        highamHall54Integrator4.setSafety((double) (byte) 0);
        double double47 = highamHall54Integrator4.getCurrentStepStart();
        int int48 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-0.0d) + "'", double5 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.9d + "'", double8 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 5 + "'", int41 == 5);
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
    }

    @Test
    public void test04063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04063");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getMaxStep();
        double double17 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setInitialStepSize((double) 'a');
        highamHall54Integrator11.setSafety((double) (byte) 10);
        java.lang.String str22 = highamHall54Integrator11.getName();
        java.lang.String str23 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction(10.0d);
        double double26 = highamHall54Integrator11.getMaxStep();
        java.lang.String str27 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
    }

    @Test
    public void test04064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04064");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        double double25 = highamHall54Integrator24.getCurrentSignedStepsize();
        highamHall54Integrator24.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator24.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler29);
        double double31 = highamHall54Integrator11.getMinStep();
        java.lang.String str32 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction((double) (byte) -1);
        double double35 = highamHall54Integrator11.getMaxGrowth();
        double double36 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setSafety((double) 0.0f);
        double double39 = highamHall54Integrator11.getSafety();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 31.144823004794873d + "'", double25 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 97.0d + "'", double31 == 97.0d);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1.0d) + "'", double36 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    }

    @Test
    public void test04065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04065");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        double double77 = highamHall54Integrator76.getSafety();
        highamHall54Integrator76.setInitialStepSize((double) (-1));
        double double80 = highamHall54Integrator76.getMinReduction();
        java.lang.String str81 = highamHall54Integrator76.getName();
        highamHall54Integrator76.setInitialStepSize(31.144823004794873d);
        double double84 = highamHall54Integrator76.getCurrentSignedStepsize();
        highamHall54Integrator76.setMinReduction(0.2d);
        java.lang.String str87 = highamHall54Integrator76.getName();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9d + "'", double77 == 0.9d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.2d + "'", double80 == 0.2d);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Higham-Hall 5(4)" + "'", str81, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 10.0d + "'", double84 == 10.0d);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Higham-Hall 5(4)" + "'", str87, "Higham-Hall 5(4)");
    }

    @Test
    public void test04066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04066");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray19, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction37, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        highamHall54Integrator36.setInitialStepSize((double) (-1L));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction44, 100.0d, (double) (byte) 0, (int) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator36.getStepHandler();
        highamHall54Integrator36.setSafety(2.4957893743180684d);
        highamHall54Integrator36.setInitialStepSize((double) (short) 10);
        double double54 = highamHall54Integrator36.getSafety();
        java.lang.String str55 = highamHall54Integrator36.getName();
        highamHall54Integrator36.setInitialStepSize(7.211102550927978d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2.4957893743180684d + "'", double54 == 2.4957893743180684d);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Higham-Hall 5(4)" + "'", str55, "Higham-Hall 5(4)");
    }

    @Test
    public void test04067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04067");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 17.78279410038923d, 35.0d, 3.1622776601683795d);
    }

    @Test
    public void test04068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04068");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator4.setMinReduction(0.9d);
        double double7 = highamHall54Integrator4.getSafety();
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxGrowth();
        int int10 = highamHall54Integrator4.getOrder();
        double double11 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
    }

    @Test
    public void test04069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04069");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        highamHall54Integrator4.setSafety(1.0d);
        double double7 = highamHall54Integrator4.getMinReduction();
        double double8 = highamHall54Integrator4.getMinReduction();
        double double9 = highamHall54Integrator4.getSafety();
        double[] doubleArray18 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray20 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray18, doubleArray20);
        highamHall54Integrator21.setMaxGrowth((double) (-1));
        double double24 = highamHall54Integrator21.getMaxStep();
        highamHall54Integrator21.setInitialStepSize((double) 0);
        java.lang.String str27 = highamHall54Integrator21.getName();
        highamHall54Integrator21.setMaxGrowth((double) 100L);
        double double30 = highamHall54Integrator21.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        highamHall54Integrator21.addSwitchingFunction(switchingFunction31, (double) 0.0f, (double) (-1L), (int) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler36);
        highamHall54Integrator4.setSafety((double) '4');
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.2d + "'", double7 == 0.2d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.9d + "'", double30 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler36);
    }

    @Test
    public void test04070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04070");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getSafety();
        double[] doubleArray24 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray26 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray24, doubleArray26);
        highamHall54Integrator27.setMaxGrowth((double) (-1));
        double double30 = highamHall54Integrator27.getMaxStep();
        highamHall54Integrator27.setInitialStepSize((double) 0);
        java.lang.String str33 = highamHall54Integrator27.getName();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator27.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler34);
        double double36 = highamHall54Integrator11.getSafety();
        double double37 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double38 = highamHall54Integrator11.getMaxGrowth();
        double double39 = highamHall54Integrator11.getMinStep();
        double double40 = highamHall54Integrator11.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Higham-Hall 5(4)" + "'", str33, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.9d + "'", double36 == 0.9d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 31.144823004794873d + "'", double37 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 97.0d + "'", double39 == 97.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
    }

    @Test
    public void test04071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04071");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        java.lang.String str77 = highamHall54Integrator76.getName();
        highamHall54Integrator76.setMaxGrowth((double) '4');
        java.lang.String str80 = highamHall54Integrator76.getName();
        java.lang.Class<?> wildcardClass81 = highamHall54Integrator76.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Higham-Hall 5(4)" + "'", str77, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Higham-Hall 5(4)" + "'", str80, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test04072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04072");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        double double16 = highamHall54Integrator11.getMaxStep();
        double double17 = highamHall54Integrator11.getMaxGrowth();
        double double18 = highamHall54Integrator11.getCurrentSignedStepsize();
        java.lang.String str19 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator11.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 31.144823004794873d + "'", double18 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler20);
    }

    @Test
    public void test04073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04073");
        double[] doubleArray12 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray14 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray12, doubleArray14);
        double[] doubleArray24 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray26 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray24, doubleArray26);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray12, doubleArray26);
        double[] doubleArray39 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray41 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray39, doubleArray41);
        double[] doubleArray45 = new double[] { (-1L), 97.0d };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, doubleArray41, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (short) -1, doubleArray26, doubleArray41);
        double double48 = highamHall54Integrator47.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
    }

    @Test
    public void test04074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04074");
        double[] doubleArray6 = new double[] { 10L, (short) 1, (byte) -1, (byte) 100 };
        double[] doubleArray9 = null;
        double[] doubleArray20 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray29 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray31 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray29, doubleArray31);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray20, doubleArray29);
        double[] doubleArray44 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray53 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray55 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray53, doubleArray55);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray44, doubleArray53);
        double[] doubleArray68 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray77 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray79 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray77, doubleArray79);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator81 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray68, doubleArray77);
        double[] doubleArray90 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray92 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator93 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray90, doubleArray92);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator94 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray77, doubleArray90);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator95 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, 32.0d, doubleArray44, doubleArray77);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator96 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 10L, doubleArray29, doubleArray44);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator97 = new org.apache.commons.math.ode.HighamHall54Integrator(32.0d, 32.0d, doubleArray9, doubleArray44);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator98 = new org.apache.commons.math.ode.HighamHall54Integrator(5.580754698496868d, 4.995787599886596d, doubleArray6, doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[10.0, 1.0, -1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[1.0]");
    }

    @Test
    public void test04075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04075");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        int int26 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMinReduction((double) '4');
        double double29 = highamHall54Integrator11.getMaxGrowth();
        java.lang.Class<?> wildcardClass30 = highamHall54Integrator11.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test04076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04076");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test04077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04077");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, 0.0d, (double) (short) 100, (double) (byte) 0);
        java.lang.String str5 = highamHall54Integrator4.getName();
        double double6 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setInitialStepSize(7.211102550927978d);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
    }

    @Test
    public void test04078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04078");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getMaxStep();
        int int16 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        highamHall54Integrator11.setInitialStepSize(0.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
    }

    @Test
    public void test04079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04079");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setInitialStepSize((double) (byte) 1);
        double double30 = highamHall54Integrator11.getCurrentStepStart();
        double double31 = highamHall54Integrator11.getCurrentSignedStepsize();
        double[] doubleArray40 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray42 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray40, doubleArray42);
        double double44 = highamHall54Integrator43.getCurrentSignedStepsize();
        highamHall54Integrator43.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator43.setSafety((double) 100L);
        org.apache.commons.math.ode.StepHandler stepHandler50 = highamHall54Integrator43.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler51 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler51);
        double double53 = highamHall54Integrator11.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler54 = highamHall54Integrator11.getStepHandler();
        double[] doubleArray63 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray65 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray63, doubleArray65);
        double double67 = highamHall54Integrator66.getCurrentSignedStepsize();
        highamHall54Integrator66.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler70 = highamHall54Integrator66.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler70);
        int int72 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 31.144823004794873d + "'", double31 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 31.144823004794873d + "'", double44 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 31.144823004794873d + "'", double67 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 5 + "'", int72 == 5);
    }

    @Test
    public void test04080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04080");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getMinReduction();
        java.lang.String str17 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.2d + "'", double16 == 0.2d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
    }

    @Test
    public void test04081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04081");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray12);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        integratorException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.Throwable[] throwableArray28 = derivativeException25.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException31);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException31);
        java.lang.String str34 = derivativeException33.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str34, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04082");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test04083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04083");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        java.lang.Object[] objArray9 = derivativeException8.getArguments();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        java.lang.Object[] objArray19 = derivativeException18.getArguments();
        java.lang.Throwable[] throwableArray20 = derivativeException18.getSuppressed();
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray28 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray28);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray28);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray28);
        derivativeException22.addSuppressed((java.lang.Throwable) derivativeException31);
        java.lang.Throwable[] throwableArray33 = derivativeException22.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException34);
        java.lang.String str36 = derivativeException35.toString();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str36, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04084");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.Object[] objArray10 = derivativeException9.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        double[] doubleArray28 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray30 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray28, doubleArray30);
        java.lang.Object[] objArray32 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray32);
        java.lang.Object[] objArray34 = integratorException33.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException33);
        java.lang.Throwable[] throwableArray36 = integratorException33.getSuppressed();
        java.lang.Object[] objArray37 = integratorException33.getArguments();
        java.lang.Throwable[] throwableArray38 = integratorException33.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray38);
        integratorException12.addSuppressed((java.lang.Throwable) integratorException39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException12);
        java.lang.Throwable[] throwableArray42 = integratorException41.getSuppressed();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
    }

    @Test
    public void test04085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04085");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        java.lang.String str23 = derivativeException22.toString();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str23, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04086");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray10);
        java.lang.String str15 = derivativeException14.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str15, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test04087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04087");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        highamHall54Integrator4.setSafety(1.0d);
        java.lang.String str7 = highamHall54Integrator4.getName();
        double double8 = highamHall54Integrator4.getMinReduction();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        int int11 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
    }

    @Test
    public void test04088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04088");
        double[] doubleArray16 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray18 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray16, doubleArray18);
        double[] doubleArray28 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray30 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray28, doubleArray30);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray16, doubleArray30);
        double[] doubleArray43 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray45 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray43, doubleArray45);
        double[] doubleArray49 = new double[] { (-1L), 97.0d };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, doubleArray45, doubleArray49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (short) -1, doubleArray30, doubleArray45);
        double[] doubleArray54 = null;
        double[] doubleArray63 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray65 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray63, doubleArray65);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) 100, doubleArray54, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator(0.9d, (double) (-1.0f), doubleArray45, doubleArray63);
        double[] doubleArray77 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray79 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray77, doubleArray79);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator81 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, (double) (short) 10, doubleArray63, doubleArray77);
        double double82 = highamHall54Integrator81.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 97.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 100.0d + "'", double82 == 100.0d);
    }

    @Test
    public void test04089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04089");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.Throwable[] throwableArray22 = integratorException19.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        java.lang.Throwable[] throwableArray25 = integratorException19.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        java.lang.String str27 = derivativeException26.toString();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str27, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04090");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setMaxGrowth((double) (byte) 0);
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        double[] doubleArray20 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray29 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray31 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray29, doubleArray31);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray20, doubleArray29);
        double[] doubleArray42 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray44 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray42, doubleArray44);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray29, doubleArray42);
        double double47 = highamHall54Integrator46.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        highamHall54Integrator46.addSwitchingFunction(switchingFunction48, 1.0d, (double) (short) 10, (int) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator46.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler53);
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator4.getStepHandler();
        int int56 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 35.0d + "'", double47 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 5 + "'", int56 == 5);
    }

    @Test
    public void test04091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04091");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (-1.0f), 0.2d, (double) (byte) -1);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth(31.622776601683793d);
        highamHall54Integrator4.setMinReduction(71.02112361825881d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test04092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04092");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, 100.0d, (double) 10L, (double) 0.0f);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int6 = highamHall54Integrator4.getOrder();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getMaxStep();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 31.622776601683793d + "'", double5 == 31.622776601683793d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 31.622776601683793d + "'", double7 == 31.622776601683793d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 100.0d + "'", double8 == 100.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 31.622776601683793d + "'", double9 == 31.622776601683793d);
    }

    @Test
    public void test04093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04093");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        double double25 = highamHall54Integrator24.getCurrentSignedStepsize();
        highamHall54Integrator24.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator24.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler29);
        double double31 = highamHall54Integrator11.getCurrentSignedStepsize();
        java.lang.String str32 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction33, (double) 1, (double) (byte) 0, (int) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 31.144823004794873d + "'", double25 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 31.144823004794873d + "'", double31 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
    }

    @Test
    public void test04094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04094");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        java.lang.Object[] objArray34 = derivativeException33.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray34);
        integratorException19.addSuppressed((java.lang.Throwable) integratorException37);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray49);
        java.lang.Object[] objArray51 = derivativeException50.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray51);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray51);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray51);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException63);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException63);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException65);
        integratorException54.addSuppressed((java.lang.Throwable) derivativeException66);
        java.lang.Object[] objArray68 = derivativeException66.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException69 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException66);
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException69);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException69);
        integratorException19.addSuppressed((java.lang.Throwable) integratorException69);
        java.lang.Throwable throwable73 = null;
        // The following exception was thrown during execution in test generation
        try {
            integratorException69.addSuppressed(throwable73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
    }

    @Test
    public void test04095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04095");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        java.lang.Object[] objArray27 = derivativeException26.getArguments();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!, , , , , ]");
    }

    @Test
    public void test04096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04096");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(7.211102550927978d, (double) (byte) 10, (double) (-1L), 17.88854381999832d);
    }

    @Test
    public void test04097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04097");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        double[] doubleArray39 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray41 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray39, doubleArray41);
        java.lang.Object[] objArray43 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray43);
        java.lang.Object[] objArray45 = integratorException44.getArguments();
        java.lang.String str46 = integratorException44.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException44);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException44);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException44);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException49);
        derivativeException23.addSuppressed((java.lang.Throwable) derivativeException50);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException23);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException23);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException("", strArray70);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray70);
        org.apache.commons.math.ode.IntegratorException integratorException79 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray70);
        integratorException53.addSuppressed((java.lang.Throwable) derivativeException80);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(strArray70);
    }

    @Test
    public void test04098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04098");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMaxGrowth();
        double double28 = highamHall54Integrator11.getSafety();
        int int29 = highamHall54Integrator11.getOrder();
        java.lang.String str30 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.9d + "'", double28 == 0.9d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
    }

    @Test
    public void test04099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04099");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, 97.0d, (double) 100L, 10.0d);
        highamHall54Integrator4.setMinReduction((double) 1.0f);
        highamHall54Integrator4.setInitialStepSize((double) 0);
        double[] doubleArray17 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray19 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray17, doubleArray19);
        highamHall54Integrator20.setMaxGrowth((double) (-1));
        double double23 = highamHall54Integrator20.getSafety();
        int int24 = highamHall54Integrator20.getOrder();
        java.lang.String str25 = highamHall54Integrator20.getName();
        double double26 = highamHall54Integrator20.getCurrentSignedStepsize();
        double[] doubleArray35 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray37 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray35, doubleArray37);
        highamHall54Integrator38.setMaxGrowth((double) (-1));
        double double41 = highamHall54Integrator38.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator38.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler43);
        highamHall54Integrator4.setStepHandler(stepHandler43);
        int int46 = highamHall54Integrator4.getOrder();
        java.lang.String str47 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) (short) 10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.9d + "'", double23 == 0.9d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 31.144823004794873d + "'", double26 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.9d + "'", double41 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Higham-Hall 5(4)" + "'", str47, "Higham-Hall 5(4)");
    }

    @Test
    public void test04100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04100");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        java.lang.String str17 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction(100.0d);
        double double20 = highamHall54Integrator11.getMinStep();
        double double21 = highamHall54Integrator11.getMinStep();
        double double22 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double23 = highamHall54Integrator11.getMinReduction();
        int int24 = highamHall54Integrator11.getOrder();
        double double25 = highamHall54Integrator11.getMaxGrowth();
        double double26 = highamHall54Integrator11.getMinStep();
        double double27 = highamHall54Integrator11.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 97.0d + "'", double20 == 97.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 97.0d + "'", double21 == 97.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 31.144823004794873d + "'", double22 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 100.0d + "'", double23 == 100.0d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 97.0d + "'", double26 == 97.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
    }

    @Test
    public void test04101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04101");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 0, (double) 'a', (double) (-1));
        double double5 = highamHall54Integrator4.getMinReduction();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getMinStep();
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 35.0d + "'", double6 == 35.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 35.0d + "'", double7 == 35.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
    }

    @Test
    public void test04102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04102");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setInitialStepSize((double) 0);
        java.lang.String str17 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction18, (double) (short) 1, 1.0d, (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction23, (double) (byte) 0, 100.0d, 0);
        double double28 = highamHall54Integrator11.getMinStep();
        double double29 = highamHall54Integrator11.getCurrentStepStart();
        highamHall54Integrator11.setInitialStepSize(0.0d);
        double[] doubleArray42 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray51 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray53 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray51, doubleArray53);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray42, doubleArray51);
        double[] doubleArray64 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray66 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray64, doubleArray66);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray51, doubleArray64);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        highamHall54Integrator68.addSwitchingFunction(switchingFunction69, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        highamHall54Integrator68.setInitialStepSize((double) (-1L));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction76 = null;
        highamHall54Integrator68.addSwitchingFunction(switchingFunction76, 100.0d, (double) (byte) 0, (int) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler81 = highamHall54Integrator68.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler81);
        double double83 = highamHall54Integrator11.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 97.0d + "'", double28 == 97.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler81);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.2d + "'", double83 == 0.2d);
    }

    @Test
    public void test04103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04103");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException22);
        double[] doubleArray39 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray41 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray39, doubleArray41);
        java.lang.Object[] objArray43 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray43);
        java.lang.Object[] objArray45 = integratorException44.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException44);
        java.lang.Object[] objArray47 = integratorException44.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException44);
        integratorException22.addSuppressed((java.lang.Throwable) integratorException48);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException22);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[-1, 1, 1.0, -1.0, 1, a]");
    }

    @Test
    public void test04104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04104");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setMinReduction(0.0d);
        highamHall54Integrator11.setInitialStepSize((double) 100.0f);
        double[] doubleArray30 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray32 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray30, doubleArray32);
        double[] doubleArray42 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray44 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray42, doubleArray44);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray30, doubleArray44);
        double double47 = highamHall54Integrator46.getMaxStep();
        double double48 = highamHall54Integrator46.getCurrentStepStart();
        double double49 = highamHall54Integrator46.getCurrentSignedStepsize();
        double[] doubleArray60 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray69 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray71 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator72 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray69, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray60, doubleArray69);
        double[] doubleArray82 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray84 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator85 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray82, doubleArray84);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator86 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray69, doubleArray82);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction87 = null;
        highamHall54Integrator86.addSwitchingFunction(switchingFunction87, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        highamHall54Integrator86.setMinReduction((double) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler94 = highamHall54Integrator86.getStepHandler();
        highamHall54Integrator46.setStepHandler(stepHandler94);
        highamHall54Integrator11.setStepHandler(stepHandler94);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 31.144823004794873d + "'", double47 == 31.144823004794873d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2.4957893743180684d + "'", double49 == 2.4957893743180684d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler94);
    }

    @Test
    public void test04105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04105");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, (double) 1, 5);
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test04106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04106");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0.0f, 0.0d, (double) 100);
        double double5 = highamHall54Integrator4.getMinStep();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler7 = null;
        highamHall54Integrator4.setStepHandler(stepHandler7);
        double double9 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety((double) '#');
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
    }

    @Test
    public void test04107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04107");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        double double77 = highamHall54Integrator76.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction78 = null;
        highamHall54Integrator76.addSwitchingFunction(switchingFunction78, (double) '4', 97.0d, (int) (byte) -1);
        java.lang.String str83 = highamHall54Integrator76.getName();
        java.lang.String str84 = highamHall54Integrator76.getName();
        highamHall54Integrator76.setMaxGrowth((double) (-1));
        highamHall54Integrator76.setSafety((double) 5);
        highamHall54Integrator76.setSafety(32.0d);
        highamHall54Integrator76.setSafety((double) (byte) -1);
        java.lang.String str93 = highamHall54Integrator76.getName();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Higham-Hall 5(4)" + "'", str83, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Higham-Hall 5(4)" + "'", str84, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Higham-Hall 5(4)" + "'", str93, "Higham-Hall 5(4)");
    }

    @Test
    public void test04108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04108");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setSafety(97.0d);
        double double17 = highamHall54Integrator11.getSafety();
        double double18 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction19, (double) (byte) 100, (double) (byte) -1, (int) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 31.144823004794873d + "'", double18 == 31.144823004794873d);
    }

    @Test
    public void test04109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04109");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, 4.995787599886596d, (double) (-1));
    }

    @Test
    public void test04110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04110");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray51 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray49, doubleArray51);
        double[] doubleArray61 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray63 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray61, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray49, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray34, doubleArray49);
        highamHall54Integrator66.setMaxGrowth(24.322992790977874d);
        double double69 = highamHall54Integrator66.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
    }

    @Test
    public void test04111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04111");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double13 = highamHall54Integrator11.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction14, (double) (byte) 100, (double) 'a', (int) '4');
        double double19 = highamHall54Integrator11.getMaxStep();
        double double20 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction21, 23.62362101477432d, (double) '#', 1);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 31.144823004794873d + "'", double20 == 31.144823004794873d);
    }

    @Test
    public void test04112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04112");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getMaxStep();
        int int16 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMinReduction((double) (-1.0f));
        double double19 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double20 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setSafety((double) 1.0f);
        double double23 = highamHall54Integrator11.getSafety();
        java.lang.String str24 = highamHall54Integrator11.getName();
        int int25 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 31.144823004794873d + "'", double19 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1.0d) + "'", double20 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
    }

    @Test
    public void test04113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04113");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        java.lang.String str17 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction(100.0d);
        double double20 = highamHall54Integrator11.getMinStep();
        double double21 = highamHall54Integrator11.getMinReduction();
        double double22 = highamHall54Integrator11.getMaxStep();
        double double23 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth((double) 10L);
        double double26 = highamHall54Integrator11.getCurrentStepStart();
        java.lang.String str27 = highamHall54Integrator11.getName();
        java.lang.String str28 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 97.0d + "'", double20 == 97.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 31.144823004794873d + "'", double23 == 31.144823004794873d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
    }

    @Test
    public void test04114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04114");
        double[] doubleArray12 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray14 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray12, doubleArray14);
        double[] doubleArray24 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray26 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray24, doubleArray26);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray12, doubleArray26);
        double[] doubleArray39 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray48 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray50 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray48, doubleArray50);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray39, doubleArray48);
        double[] doubleArray61 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray63 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray61, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray48, doubleArray61);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, 10.0d, doubleArray26, doubleArray48);
        java.lang.String str67 = highamHall54Integrator66.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction68 = null;
        highamHall54Integrator66.addSwitchingFunction(switchingFunction68, (double) (byte) 10, 0.0d, (int) '#');
        double double73 = highamHall54Integrator66.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction74 = null;
        highamHall54Integrator66.addSwitchingFunction(switchingFunction74, 0.2d, (double) 100, (-1));
        highamHall54Integrator66.setSafety((double) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Higham-Hall 5(4)" + "'", str67, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.9d + "'", double73 == 0.9d);
    }

    @Test
    public void test04115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04115");
        java.lang.String[] strArray5 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray5);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        org.junit.Assert.assertNotNull(strArray5);
    }

    @Test
    public void test04116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04116");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (-1.0f), 0.2d, (double) (byte) -1);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
    }

    @Test
    public void test04117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04117");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        int int5 = highamHall54Integrator4.getOrder();
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        highamHall54Integrator17.setMaxGrowth((double) (-1));
        double double20 = highamHall54Integrator17.getSafety();
        highamHall54Integrator17.setSafety((double) 1.0f);
        highamHall54Integrator17.setInitialStepSize(0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        highamHall54Integrator17.addSwitchingFunction(switchingFunction25, (double) 0, 32.0d, 5);
        highamHall54Integrator17.setSafety(0.0d);
        double[] doubleArray40 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray42 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray40, doubleArray42);
        double[] doubleArray52 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray54 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray52, doubleArray54);
        org.apache.commons.math.ode.StepHandler stepHandler56 = highamHall54Integrator55.getStepHandler();
        highamHall54Integrator43.setStepHandler(stepHandler56);
        java.lang.String str58 = highamHall54Integrator43.getName();
        double double59 = highamHall54Integrator43.getMinReduction();
        double double60 = highamHall54Integrator43.getMaxGrowth();
        double double61 = highamHall54Integrator43.getMinStep();
        double double62 = highamHall54Integrator43.getCurrentStepStart();
        double double63 = highamHall54Integrator43.getMinStep();
        highamHall54Integrator43.setSafety((double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler66 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator17.setStepHandler(stepHandler66);
        highamHall54Integrator4.setStepHandler(stepHandler66);
        double double69 = highamHall54Integrator4.getMinReduction();
        double double70 = highamHall54Integrator4.getCurrentStepStart();
        double double71 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.9d + "'", double20 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Higham-Hall 5(4)" + "'", str58, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.2d + "'", double59 == 0.2d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 97.0d + "'", double61 == 97.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 97.0d + "'", double63 == 97.0d);
        org.junit.Assert.assertNotNull(stepHandler66);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.2d + "'", double69 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.2d + "'", double71 == 0.2d);
    }

    @Test
    public void test04118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04118");
        java.lang.String[] strArray12 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test04119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04119");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray19, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction37, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        double double42 = highamHall54Integrator36.getMaxStep();
        double double43 = highamHall54Integrator36.getMaxGrowth();
        double double44 = highamHall54Integrator36.getMinStep();
        int int45 = highamHall54Integrator36.getOrder();
        double double46 = highamHall54Integrator36.getMinStep();
        highamHall54Integrator36.setMaxGrowth((double) '4');
        double[] doubleArray57 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray59 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray57, doubleArray59);
        highamHall54Integrator60.setMaxGrowth((double) (-1));
        double double63 = highamHall54Integrator60.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler64 = highamHall54Integrator60.getStepHandler();
        double double65 = highamHall54Integrator60.getSafety();
        highamHall54Integrator60.setMaxGrowth((double) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction68 = null;
        highamHall54Integrator60.addSwitchingFunction(switchingFunction68, (double) (short) 0, 35.0d, 10);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator77 = new org.apache.commons.math.ode.HighamHall54Integrator(32.0d, Double.NaN, (double) 'a', 1.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator82 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        highamHall54Integrator82.setInitialStepSize((double) (-1L));
        int int85 = highamHall54Integrator82.getOrder();
        double double86 = highamHall54Integrator82.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler87 = highamHall54Integrator82.getStepHandler();
        highamHall54Integrator77.setStepHandler(stepHandler87);
        highamHall54Integrator60.setStepHandler(stepHandler87);
        highamHall54Integrator36.setStepHandler(stepHandler87);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 35.0d + "'", double42 == 35.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 35.0d + "'", double44 == 35.0d);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 5 + "'", int45 == 5);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 35.0d + "'", double46 == 35.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.9d + "'", double63 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.9d + "'", double65 == 0.9d);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 5 + "'", int85 == 5);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 10.0d + "'", double86 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler87);
    }

    @Test
    public void test04120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04120");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setMaxGrowth((double) 10);
        java.lang.Class<?> wildcardClass18 = highamHall54Integrator11.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test04121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04121");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 1.0f, (double) 10, (double) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getSafety();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 5.916079783099616d + "'", double8 == 5.916079783099616d);
    }

    @Test
    public void test04122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04122");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(17.88854381999832d, (double) (short) 10, 0.0d, 0.0d);
    }

    @Test
    public void test04123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04123");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.Object[] objArray10 = derivativeException9.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException13);
        java.lang.Throwable throwable16 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException(throwable16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        java.lang.Throwable[] throwableArray19 = derivativeException18.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray19);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        java.lang.Object[] objArray34 = derivativeException33.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("", objArray34);
        integratorException20.addSuppressed((java.lang.Throwable) integratorException38);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException38);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException38);
        integratorException13.addSuppressed((java.lang.Throwable) derivativeException41);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!, , , , , ]");
    }

    @Test
    public void test04124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04124");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Throwable[] throwableArray15 = derivativeException14.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException14);
        java.lang.Throwable[] throwableArray17 = derivativeException14.getSuppressed();
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        java.lang.Object[] objArray36 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray36);
        java.lang.Object[] objArray38 = integratorException37.getArguments();
        java.lang.String str39 = integratorException37.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException37);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException37);
        java.lang.Object[] objArray42 = integratorException37.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException37);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("", strArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("", strArray56);
        double[] doubleArray78 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray80 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator81 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray78, doubleArray80);
        java.lang.Object[] objArray82 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException83 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray82);
        java.lang.Object[] objArray84 = integratorException83.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException85 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray84);
        derivativeException62.addSuppressed((java.lang.Throwable) integratorException85);
        integratorException43.addSuppressed((java.lang.Throwable) integratorException85);
        org.apache.commons.math.ode.IntegratorException integratorException88 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException43);
        derivativeException14.addSuppressed((java.lang.Throwable) integratorException88);
        java.lang.String str90 = integratorException88.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0]");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str90, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test04125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04125");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException16);
        java.lang.String str18 = derivativeException16.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException16);
        java.lang.Class<?> wildcardClass20 = integratorException19.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str18, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test04126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04126");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        java.lang.Object[] objArray11 = derivativeException10.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray11);
        double[] doubleArray29 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray31 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray29, doubleArray31);
        java.lang.Object[] objArray33 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray33);
        java.lang.Object[] objArray35 = integratorException34.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException36);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException36);
        double[] doubleArray53 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray55 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray53, doubleArray55);
        java.lang.Object[] objArray57 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray57);
        java.lang.Object[] objArray59 = integratorException58.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException58);
        java.lang.Object[] objArray61 = integratorException58.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException58);
        integratorException36.addSuppressed((java.lang.Throwable) integratorException62);
        integratorException13.addSuppressed((java.lang.Throwable) integratorException62);
        java.lang.String str65 = integratorException62.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException62);
        java.lang.String str67 = integratorException62.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException62);
        java.lang.String str69 = derivativeException68.getPattern();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
    }

    @Test
    public void test04127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04127");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        java.lang.String str21 = integratorException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException31);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException31);
        integratorException22.addSuppressed((java.lang.Throwable) derivativeException33);
        java.lang.String str35 = integratorException22.getPattern();
        java.lang.String str36 = integratorException22.toString();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str36, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test04128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04128");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setInitialStepSize((double) (-1));
        highamHall54Integrator11.setInitialStepSize((double) 100.0f);
        double double17 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double18 = highamHall54Integrator11.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0.0f, 0.0d, (double) 100);
        double double24 = highamHall54Integrator23.getSafety();
        double double25 = highamHall54Integrator23.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator(32.0d, Double.NaN, (double) 'a', 1.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        highamHall54Integrator35.setInitialStepSize((double) (-1L));
        int int38 = highamHall54Integrator35.getOrder();
        double double39 = highamHall54Integrator35.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler40 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator30.setStepHandler(stepHandler40);
        highamHall54Integrator23.setStepHandler(stepHandler40);
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler43);
        highamHall54Integrator11.setMaxGrowth(5.580754698496868d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 31.144823004794873d + "'", double17 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 97.0d + "'", double18 == 97.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler40);
        org.junit.Assert.assertNotNull(stepHandler43);
    }

    @Test
    public void test04129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04129");
        double[] doubleArray4 = null;
        double[] doubleArray13 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray15 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray13, doubleArray15);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) 100, doubleArray4, doubleArray13);
        double[] doubleArray28 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray30 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray28, doubleArray30);
        double[] doubleArray44 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray46 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray44, doubleArray46);
        double[] doubleArray56 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray58 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray56, doubleArray58);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray44, doubleArray58);
        double[] doubleArray69 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray78 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray80 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator81 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray78, doubleArray80);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator82 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray69, doubleArray78);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator83 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (byte) 1, doubleArray58, doubleArray78);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator84 = new org.apache.commons.math.ode.HighamHall54Integrator((double) ' ', 59.16079783099616d, doubleArray28, doubleArray58);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator85 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1L), (double) 100L, doubleArray13, doubleArray28);
        org.apache.commons.math.ode.StepHandler stepHandler86 = highamHall54Integrator85.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler86);
    }

    @Test
    public void test04130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04130");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setMaxGrowth((double) 10);
        java.lang.String str18 = highamHall54Integrator11.getName();
        java.lang.String str19 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction20, (double) (short) 0, 59.16079783099616d, (int) (byte) 100);
        java.lang.String str25 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
    }

    @Test
    public void test04131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04131");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getMaxStep();
        int int16 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator11.getStepHandler();
        java.lang.String str21 = highamHall54Integrator11.getName();
        java.lang.String str22 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) 10.0f);
        highamHall54Integrator11.setInitialStepSize((double) (byte) 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
    }

    @Test
    public void test04132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04132");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException22);
        java.lang.Object[] objArray24 = derivativeException23.getArguments();
        java.lang.String str25 = derivativeException23.getPattern();
        java.lang.String str26 = derivativeException23.toString();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str25, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str26, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04133");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(9.924141172814958d, 31.622776601683793d, (double) 0, (double) (-1.0f));
    }

    @Test
    public void test04134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04134");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.Object[] objArray10 = derivativeException9.getArguments();
        java.lang.Throwable[] throwableArray11 = derivativeException9.getSuppressed();
        java.lang.Throwable[] throwableArray12 = derivativeException9.getSuppressed();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        java.lang.Object[] objArray24 = derivativeException23.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray24);
        derivativeException9.addSuppressed((java.lang.Throwable) integratorException26);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        java.lang.Object[] objArray39 = derivativeException36.getArguments();
        java.lang.String str40 = derivativeException36.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        java.lang.String str42 = derivativeException41.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException41);
        integratorException26.addSuppressed((java.lang.Throwable) integratorException43);
        java.lang.Throwable[] throwableArray45 = integratorException43.getSuppressed();
        java.lang.Throwable[] throwableArray46 = integratorException43.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray46);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException47);
        java.lang.Class<?> wildcardClass49 = integratorException47.getClass();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test04135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04135");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getMaxStep();
        int int16 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction18, 32.0d, (double) (byte) 100, (int) (short) -1);
        double double23 = highamHall54Integrator11.getMinStep();
        highamHall54Integrator11.setSafety(0.0d);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setInitialStepSize(7.211102550927978d);
        double double29 = highamHall54Integrator11.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 97.0d + "'", double23 == 97.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 97.0d + "'", double29 == 97.0d);
    }

    @Test
    public void test04136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04136");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction13, (double) '4', 1.0d, 0);
        double double18 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction19, (double) 'a', (double) '4', 100);
        java.lang.String str24 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.9d + "'", double18 == 0.9d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
    }

    @Test
    public void test04137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04137");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, 100.0d, (double) 10L, (double) 0.0f);
        int int5 = highamHall54Integrator4.getOrder();
        java.lang.String str6 = highamHall54Integrator4.getName();
        java.lang.String str7 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
    }

    @Test
    public void test04138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04138");
        double[] doubleArray17 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray19 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray17, doubleArray19);
        java.lang.Object[] objArray21 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray21);
        java.lang.Object[] objArray23 = integratorException22.getArguments();
        java.lang.String str24 = integratorException22.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException22);
        java.lang.String str26 = integratorException22.getPattern();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray37);
        integratorException22.addSuppressed((java.lang.Throwable) derivativeException41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException41);
        java.lang.Object[] objArray44 = derivativeException41.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray44);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", objArray44);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray44);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!, , , , , ]");
    }

    @Test
    public void test04139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04139");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        java.lang.Throwable[] throwableArray12 = integratorException11.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray12);
        java.lang.Throwable[] throwableArray14 = integratorException13.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.Throwable[] throwableArray27 = derivativeException26.getSuppressed();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        java.lang.String str45 = derivativeException44.getPattern();
        derivativeException26.addSuppressed((java.lang.Throwable) derivativeException44);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException47);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException47);
        java.lang.String str50 = derivativeException49.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException49);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str45, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
    }

    @Test
    public void test04140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04140");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) 'a', (double) 5, (double) (-1.0f));
    }

    @Test
    public void test04141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04141");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) (short) -1, (double) 0L, 10.0d);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double double7 = highamHall54Integrator4.getMinReduction();
        double double8 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.2d + "'", double7 == 0.2d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 100.0d + "'", double8 == 100.0d);
    }

    @Test
    public void test04142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04142");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMinReduction();
        java.lang.String str15 = highamHall54Integrator11.getName();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        double[] doubleArray37 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray39 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray37, doubleArray39);
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator40.getStepHandler();
        highamHall54Integrator28.setStepHandler(stepHandler41);
        int int43 = highamHall54Integrator28.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler44);
        java.lang.String str46 = highamHall54Integrator11.getName();
        int int47 = highamHall54Integrator11.getOrder();
        int int48 = highamHall54Integrator11.getOrder();
        double double49 = highamHall54Integrator11.getMaxGrowth();
        double double50 = highamHall54Integrator11.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Higham-Hall 5(4)" + "'", str46, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
    }

    @Test
    public void test04143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04143");
        java.lang.String[] strArray6 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        java.lang.Class<?> wildcardClass12 = integratorException11.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test04144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04144");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        java.lang.Object[] objArray13 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("", objArray13);
        java.lang.Throwable[] throwableArray15 = integratorException14.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException17);
        java.lang.String str19 = integratorException17.getPattern();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test04145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04145");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator4.setMinReduction(0.9d);
        double double7 = highamHall54Integrator4.getMinStep();
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int10 = highamHall54Integrator4.getOrder();
        double double11 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMaxGrowth((-1.0d));
        double double14 = highamHall54Integrator4.getMaxStep();
        int int15 = highamHall54Integrator4.getOrder();
        java.lang.Class<?> wildcardClass16 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.0d) + "'", double11 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1.0d) + "'", double14 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test04146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04146");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test04147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04147");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException1 = new org.apache.commons.math.ode.DerivativeException(throwable0);
        java.lang.Throwable[] throwableArray2 = derivativeException1.getSuppressed();
        java.lang.Object[] objArray3 = derivativeException1.getArguments();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray17 = derivativeException16.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray17);
        java.lang.Object[] objArray19 = integratorException18.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException20);
        derivativeException1.addSuppressed((java.lang.Throwable) integratorException20);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray39);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        integratorException20.addSuppressed((java.lang.Throwable) derivativeException49);
        java.lang.Throwable[] throwableArray51 = derivativeException49.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test04148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04148");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (short) 10, 24.322992790977874d, (double) (byte) 0);
        double double5 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setMinReduction((double) (short) 10);
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
    }

    @Test
    public void test04149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04149");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        double double16 = highamHall54Integrator11.getMaxStep();
        java.lang.String str17 = highamHall54Integrator11.getName();
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        double[] doubleArray38 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray40 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray38, doubleArray40);
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator41.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler42);
        highamHall54Integrator11.setStepHandler(stepHandler42);
        double double45 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setInitialStepSize((double) 10L);
        double double48 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMinReduction((double) (-1.0f));
        double double51 = highamHall54Integrator11.getMinReduction();
        int int52 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMaxGrowth(5.580754698496868d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.9d + "'", double45 == 0.9d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.9d + "'", double48 == 0.9d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1.0d) + "'", double51 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
    }

    @Test
    public void test04150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04150");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        java.lang.String str21 = integratorException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.String str23 = integratorException19.getPattern();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray34);
        integratorException19.addSuppressed((java.lang.Throwable) derivativeException38);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException38);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        java.lang.Object[] objArray53 = derivativeException52.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray53);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray53);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray53);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException56);
        integratorException40.addSuppressed((java.lang.Throwable) integratorException56);
        java.lang.Object[] objArray59 = integratorException40.getArguments();
        java.lang.Object[] objArray60 = integratorException40.getArguments();
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray68);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException69);
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException69);
        java.lang.String str72 = derivativeException69.getPattern();
        integratorException40.addSuppressed((java.lang.Throwable) derivativeException69);
        java.lang.String str74 = integratorException40.toString();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str74, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04151");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        double double16 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((double) '4');
        double double19 = highamHall54Integrator11.getMinReduction();
        java.lang.String str20 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9d + "'", double16 == 0.9d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2d + "'", double19 == 0.2d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
    }

    @Test
    public void test04152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04152");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        java.lang.Throwable[] throwableArray11 = derivativeException10.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray11);
        java.lang.Object[] objArray13 = integratorException12.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException12);
        java.lang.String str15 = integratorException12.toString();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str15, "org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test04153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04153");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        java.lang.String str15 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction16, (double) (byte) 100, 1.0d, 0);
        java.lang.String str21 = highamHall54Integrator11.getName();
        java.lang.String str22 = highamHall54Integrator11.getName();
        double double23 = highamHall54Integrator11.getCurrentSignedStepsize();
        int int24 = highamHall54Integrator11.getOrder();
        java.lang.String str25 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 31.144823004794873d + "'", double23 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
    }

    @Test
    public void test04154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04154");
        double[] doubleArray12 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray14 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray12, doubleArray14);
        double[] doubleArray24 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray26 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray24, doubleArray26);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray12, doubleArray26);
        double[] doubleArray37 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray46 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray48 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray46, doubleArray48);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray37, doubleArray46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (byte) 1, doubleArray26, doubleArray46);
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator51.getStepHandler();
        int int53 = highamHall54Integrator51.getOrder();
        double double54 = highamHall54Integrator51.getCurrentSignedStepsize();
        double double55 = highamHall54Integrator51.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
    }

    @Test
    public void test04155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04155");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        double double17 = highamHall54Integrator11.getMinReduction();
        java.lang.String str18 = highamHall54Integrator11.getName();
        int int19 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setInitialStepSize(31.622776601683793d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
    }

    @Test
    public void test04156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04156");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.Throwable[] throwableArray11 = derivativeException10.getSuppressed();
        java.lang.String str12 = derivativeException10.getPattern();
        java.lang.String str13 = derivativeException10.getPattern();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test04157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04157");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator11.getStepHandler();
        int int30 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction31, (double) '4', 31.144823004794873d, (int) ' ');
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
    }

    @Test
    public void test04158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04158");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMaxGrowth();
        double double28 = highamHall54Integrator11.getSafety();
        int int29 = highamHall54Integrator11.getOrder();
        java.lang.String str30 = highamHall54Integrator11.getName();
        double double31 = highamHall54Integrator11.getMinReduction();
        double double32 = highamHall54Integrator11.getMinStep();
        double double33 = highamHall54Integrator11.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.9d + "'", double28 == 0.9d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.2d + "'", double31 == 0.2d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 97.0d + "'", double32 == 97.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
    }

    @Test
    public void test04159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04159");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray14, doubleArray28);
        double[] doubleArray41 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray43 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray41, doubleArray43);
        double[] doubleArray47 = new double[] { (-1L), 97.0d };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, doubleArray43, doubleArray47);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) (byte) 100, doubleArray14, doubleArray47);
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1, (double) 'a', doubleArray14, doubleArray58);
        double double63 = highamHall54Integrator62.getMaxGrowth();
        int int64 = highamHall54Integrator62.getOrder();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 10.0d + "'", double63 == 10.0d);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 5 + "'", int64 == 5);
    }

    @Test
    public void test04160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04160");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 0, (double) 1, (double) 100);
    }

    @Test
    public void test04161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04161");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, 100.0d, (double) 10L, (double) 0.0f);
        int int5 = highamHall54Integrator4.getOrder();
        java.lang.String str6 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 'a');
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler7);
    }

    @Test
    public void test04162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04162");
        java.lang.String[] strArray7 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray7);
        java.lang.Object[] objArray13 = integratorException12.getArguments();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[org.apache.commons.math.ode.IntegratorException: hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[org.apache.commons.math.ode.IntegratorException: hi!, ]");
    }

    @Test
    public void test04163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04163");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(33.46640106136302d, (double) 0L, 71.02112361825881d, 35.0d);
    }

    @Test
    public void test04164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04164");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        highamHall54Integrator11.setMaxGrowth((double) (-1L));
        int int20 = highamHall54Integrator11.getOrder();
        java.lang.String str21 = highamHall54Integrator11.getName();
        double double22 = highamHall54Integrator11.getMinStep();
        double double23 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 97.0d + "'", double22 == 97.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 31.144823004794873d + "'", double23 == 31.144823004794873d);
    }

    @Test
    public void test04165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04165");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray19, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction37, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        double double42 = highamHall54Integrator36.getMaxStep();
        java.lang.String str43 = highamHall54Integrator36.getName();
        double[] doubleArray52 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray54 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray52, doubleArray54);
        double double56 = highamHall54Integrator55.getSafety();
        double[] doubleArray65 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray67 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray65, doubleArray67);
        double double69 = highamHall54Integrator68.getCurrentSignedStepsize();
        double double70 = highamHall54Integrator68.getCurrentStepStart();
        double double71 = highamHall54Integrator68.getMaxGrowth();
        double[] doubleArray80 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray82 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator83 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray80, doubleArray82);
        highamHall54Integrator83.setMaxGrowth((double) (-1));
        double double86 = highamHall54Integrator83.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler87 = highamHall54Integrator83.getStepHandler();
        highamHall54Integrator68.setStepHandler(stepHandler87);
        highamHall54Integrator55.setStepHandler(stepHandler87);
        highamHall54Integrator36.setStepHandler(stepHandler87);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction91 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction91, (double) (short) 0, (double) 10.0f, 10);
        double double96 = highamHall54Integrator36.getMaxGrowth();
        java.lang.String str97 = highamHall54Integrator36.getName();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 35.0d + "'", double42 == 35.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Higham-Hall 5(4)" + "'", str43, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.9d + "'", double56 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 31.144823004794873d + "'", double69 == 31.144823004794873d);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 10.0d + "'", double71 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.9d + "'", double86 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler87);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 10.0d + "'", double96 == 10.0d);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Higham-Hall 5(4)" + "'", str97, "Higham-Hall 5(4)");
    }

    @Test
    public void test04166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04166");
        double[] doubleArray2 = null;
        double[] doubleArray13 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray15 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray13, doubleArray15);
        double[] doubleArray29 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray31 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray29, doubleArray31);
        double[] doubleArray41 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray43 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray41, doubleArray43);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray29, doubleArray43);
        double[] doubleArray54 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray63 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray65 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray63, doubleArray65);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray54, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (byte) 1, doubleArray43, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator69 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (-1L), doubleArray15, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator70 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) 100, doubleArray2, doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
    }

    @Test
    public void test04167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04167");
        double[] doubleArray8 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray17 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray19 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray17, doubleArray19);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray8, doubleArray17);
        java.lang.String str22 = highamHall54Integrator21.getName();
        double double23 = highamHall54Integrator21.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        highamHall54Integrator21.addSwitchingFunction(switchingFunction24, 0.0d, 35.0d, (int) '#');
        int int29 = highamHall54Integrator21.getOrder();
        double double30 = highamHall54Integrator21.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.2d + "'", double30 == 0.2d);
    }

    @Test
    public void test04168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04168");
        double[] doubleArray12 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray14 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray12, doubleArray14);
        double[] doubleArray24 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray26 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray24, doubleArray26);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray12, doubleArray26);
        double[] doubleArray37 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray46 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray48 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray46, doubleArray48);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray37, doubleArray46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (byte) 1, doubleArray26, doubleArray46);
        highamHall54Integrator51.setSafety((double) (byte) 1);
        double double54 = highamHall54Integrator51.getSafety();
        highamHall54Integrator51.setSafety((double) (byte) -1);
        java.lang.String str57 = highamHall54Integrator51.getName();
        double double58 = highamHall54Integrator51.getMaxGrowth();
        java.lang.String str59 = highamHall54Integrator51.getName();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Higham-Hall 5(4)" + "'", str57, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Higham-Hall 5(4)" + "'", str59, "Higham-Hall 5(4)");
    }

    @Test
    public void test04169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04169");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        highamHall54Integrator11.setMaxGrowth((double) (-1L));
        int int20 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction21, (double) (byte) 1, (double) 1L, (int) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
    }

    @Test
    public void test04170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04170");
        java.lang.String[] strArray8 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray8);
        java.lang.String str15 = derivativeException14.toString();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str15, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04171");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray11);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test04172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04172");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        java.lang.Object[] objArray11 = derivativeException10.getArguments();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        java.lang.Object[] objArray24 = derivativeException23.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray24);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray24);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException37);
        integratorException27.addSuppressed((java.lang.Throwable) derivativeException37);
        java.lang.Throwable[] throwableArray40 = derivativeException37.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException37);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException37);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException37);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException37);
        java.lang.String str45 = derivativeException37.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException37);
        java.lang.String str47 = derivativeException46.toString();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str47, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04173");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getMaxStep();
        int int16 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMinReduction((double) (-1.0f));
        double double19 = highamHall54Integrator11.getSafety();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.9d + "'", double19 == 0.9d);
    }

    @Test
    public void test04174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04174");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) -1, 9.924141172814958d, (double) 5, (double) ' ');
    }

    @Test
    public void test04175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04175");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(22.80350850198276d, (double) (byte) 100, (double) 10L, 0.0d);
        java.lang.String str5 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
    }

    @Test
    public void test04176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04176");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (-1.0f), 0.2d, (double) (byte) -1);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        int int6 = highamHall54Integrator4.getOrder();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.Class<?> wildcardClass9 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test04177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04177");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        double double15 = highamHall54Integrator11.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (-1.0f), (double) (-1L), (double) (short) 1);
        double double21 = highamHall54Integrator20.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator20.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator11.getCurrentStepStart();
        highamHall54Integrator11.setMaxGrowth((double) 0.0f);
        double double27 = highamHall54Integrator11.getMaxGrowth();
        java.lang.String str28 = highamHall54Integrator11.getName();
        double double29 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double30 = highamHall54Integrator11.getCurrentStepStart();
        java.lang.Class<?> wildcardClass31 = highamHall54Integrator11.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.144823004794873d + "'", double29 == 31.144823004794873d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test04178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04178");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setMaxGrowth((double) (byte) 0);
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        double[] doubleArray20 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray29 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray31 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray29, doubleArray31);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray20, doubleArray29);
        double[] doubleArray42 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray44 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray42, doubleArray44);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray29, doubleArray42);
        double double47 = highamHall54Integrator46.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        highamHall54Integrator46.addSwitchingFunction(switchingFunction48, 1.0d, (double) (short) 10, (int) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator46.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler53);
        double double55 = highamHall54Integrator4.getMinStep();
        double double56 = highamHall54Integrator4.getSafety();
        double double57 = highamHall54Integrator4.getCurrentStepStart();
        double double58 = highamHall54Integrator4.getSafety();
        java.lang.String str59 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) 1.0f);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 35.0d + "'", double47 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.9d + "'", double56 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.9d + "'", double58 == 0.9d);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Higham-Hall 5(4)" + "'", str59, "Higham-Hall 5(4)");
    }

    @Test
    public void test04179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04179");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction13, (double) '4', 1.0d, 0);
        double double18 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator11.getStepHandler();
        double double20 = highamHall54Integrator11.getSafety();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.9d + "'", double18 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.9d + "'", double20 == 0.9d);
    }

    @Test
    public void test04180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04180");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        java.lang.Object[] objArray17 = derivativeException16.getArguments();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!, , , , , ]");
    }

    @Test
    public void test04181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04181");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMaxGrowth();
        double double28 = highamHall54Integrator11.getSafety();
        double double29 = highamHall54Integrator11.getMinStep();
        double double30 = highamHall54Integrator11.getSafety();
        int int31 = highamHall54Integrator11.getOrder();
        double double32 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setInitialStepSize(35.0d);
        double double35 = highamHall54Integrator11.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.9d + "'", double28 == 0.9d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 97.0d + "'", double29 == 97.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.9d + "'", double30 == 0.9d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.2d + "'", double35 == 0.2d);
    }

    @Test
    public void test04182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04182");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        java.lang.String str5 = highamHall54Integrator4.getName();
        double double6 = highamHall54Integrator4.getSafety();
        double double7 = highamHall54Integrator4.getMaxStep();
        java.lang.String str8 = highamHall54Integrator4.getName();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
    }

    @Test
    public void test04183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04183");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        double double18 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setMinReduction((double) (short) 100);
        double double21 = highamHall54Integrator11.getMinStep();
        highamHall54Integrator11.setInitialStepSize(0.0d);
        double double24 = highamHall54Integrator11.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 97.0d + "'", double21 == 97.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
    }

    @Test
    public void test04184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04184");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth((double) ' ');
        double double15 = highamHall54Integrator11.getCurrentSignedStepsize();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double double17 = highamHall54Integrator11.getCurrentSignedStepsize();
        int int18 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setSafety((double) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler21 = null;
        highamHall54Integrator11.setStepHandler(stepHandler21);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 31.144823004794873d + "'", double15 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 31.144823004794873d + "'", double17 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
    }

    @Test
    public void test04185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04185");
        double[] doubleArray10 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray12 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray10, doubleArray12);
        double[] doubleArray22 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray24 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray22, doubleArray24);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray10, doubleArray24);
        double double27 = highamHall54Integrator26.getMinStep();
        java.lang.String str28 = highamHall54Integrator26.getName();
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator26.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator26.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2d + "'", double27 == 0.2d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertNotNull(stepHandler30);
    }

    @Test
    public void test04186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04186");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        double[] doubleArray13 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray15 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray13, doubleArray15);
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler29);
        highamHall54Integrator4.setStepHandler(stepHandler29);
        double double32 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction33, (double) (short) 0, 0.0d, (int) (byte) 1);
        double double38 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMinReduction((double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
    }

    @Test
    public void test04187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04187");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator11.getStepHandler();
        int int17 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setSafety(97.0d);
        double double20 = highamHall54Integrator11.getCurrentStepStart();
        java.lang.String str21 = highamHall54Integrator11.getName();
        double double22 = highamHall54Integrator11.getSafety();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 97.0d + "'", double22 == 97.0d);
    }

    @Test
    public void test04188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04188");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (short) -1, 100.0d, (double) ' ');
        int int5 = highamHall54Integrator4.getOrder();
        java.lang.String str6 = highamHall54Integrator4.getName();
        java.lang.Class<?> wildcardClass7 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test04189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04189");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setInitialStepSize((double) (byte) 1);
        double double30 = highamHall54Integrator11.getCurrentStepStart();
        double double31 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double32 = highamHall54Integrator11.getSafety();
        java.lang.String str33 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction34, (double) (-1.0f), (double) 1.0f, (int) (byte) 1);
        java.lang.String str39 = highamHall54Integrator11.getName();
        java.lang.String str40 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator11.getStepHandler();
        double double42 = highamHall54Integrator11.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator11.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 31.144823004794873d + "'", double31 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Higham-Hall 5(4)" + "'", str33, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Higham-Hall 5(4)" + "'", str39, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Higham-Hall 5(4)" + "'", str40, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler43);
    }

    @Test
    public void test04190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04190");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        double double16 = highamHall54Integrator11.getCurrentStepStart();
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        highamHall54Integrator28.setMaxGrowth((double) (-1));
        double double31 = highamHall54Integrator28.getSafety();
        double double32 = highamHall54Integrator28.getSafety();
        double double33 = highamHall54Integrator28.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        highamHall54Integrator38.addSwitchingFunction(switchingFunction39, (double) (byte) -1, (double) 1, 5);
        double double44 = highamHall54Integrator38.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler45 = highamHall54Integrator38.getStepHandler();
        highamHall54Integrator28.setStepHandler(stepHandler45);
        highamHall54Integrator11.setStepHandler(stepHandler45);
        int int48 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setSafety((double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction51, (double) 1, (double) 100, (int) ' ');
        int int56 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.9d + "'", double31 == 0.9d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 5 + "'", int56 == 5);
    }

    @Test
    public void test04191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04191");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        java.lang.String str8 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize((double) (-1.0f));
        int int11 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
    }

    @Test
    public void test04192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04192");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException18);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test04193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04193");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        double double77 = highamHall54Integrator76.getSafety();
        java.lang.String str78 = highamHall54Integrator76.getName();
        highamHall54Integrator76.setMinReduction((double) (-1.0f));
        highamHall54Integrator76.setMinReduction(5.580754698496868d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9d + "'", double77 == 0.9d);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Higham-Hall 5(4)" + "'", str78, "Higham-Hall 5(4)");
    }

    @Test
    public void test04194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04194");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray19);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException22);
        double[] doubleArray39 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray41 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray39, doubleArray41);
        java.lang.Object[] objArray43 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray43);
        java.lang.Object[] objArray45 = integratorException44.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException46);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException47);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException48);
        derivativeException8.addSuppressed((java.lang.Throwable) integratorException49);
        java.lang.Throwable[] throwableArray51 = integratorException49.getSuppressed();
        java.lang.Throwable[] throwableArray52 = integratorException49.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException49);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException53);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException54);
        java.lang.String str56 = integratorException54.getPattern();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str56, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04195");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (-1.0f), (double) 10, (double) (byte) 10);
        double double5 = highamHall54Integrator4.getMaxStep();
        java.lang.Class<?> wildcardClass6 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-1.0d) + "'", double5 == (-1.0d));
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test04196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04196");
        double[] doubleArray10 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray12 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray10, doubleArray12);
        double[] doubleArray22 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray24 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray22, doubleArray24);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray10, doubleArray24);
        int int27 = highamHall54Integrator26.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (short) -1, (double) 'a', (double) 1L);
        double double33 = highamHall54Integrator32.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator32.getStepHandler();
        highamHall54Integrator26.setStepHandler(stepHandler34);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        highamHall54Integrator26.addSwitchingFunction(switchingFunction36, 0.0d, 3.1622776601683795d, 10);
        highamHall54Integrator26.setMinReduction((-1.0d));
        double double43 = highamHall54Integrator26.getSafety();
        double double44 = highamHall54Integrator26.getMinStep();
        double double45 = highamHall54Integrator26.getSafety();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1.0d) + "'", double33 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.9d + "'", double43 == 0.9d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.2d + "'", double44 == 0.2d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.9d + "'", double45 == 0.9d);
    }

    @Test
    public void test04197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04197");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        int int17 = highamHall54Integrator11.getOrder();
        double double18 = highamHall54Integrator11.getMaxGrowth();
        double double19 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction20, (double) 1.0f, 0.2d, 5);
        highamHall54Integrator11.setInitialStepSize((double) 10.0f);
        double[] doubleArray35 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray37 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray35, doubleArray37);
        highamHall54Integrator38.setMaxGrowth((double) (-1));
        double double41 = highamHall54Integrator38.getSafety();
        int int42 = highamHall54Integrator38.getOrder();
        java.lang.String str43 = highamHall54Integrator38.getName();
        double double44 = highamHall54Integrator38.getCurrentSignedStepsize();
        double[] doubleArray53 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray55 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray53, doubleArray55);
        highamHall54Integrator56.setMaxGrowth((double) (-1));
        double double59 = highamHall54Integrator56.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler60 = highamHall54Integrator56.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator56.getStepHandler();
        highamHall54Integrator38.setStepHandler(stepHandler61);
        highamHall54Integrator11.setStepHandler(stepHandler61);
        java.lang.String str64 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setInitialStepSize(10.0d);
        double double67 = highamHall54Integrator11.getMaxStep();
        double double68 = highamHall54Integrator11.getMinStep();
        java.lang.String str69 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.9d + "'", double41 == 0.9d);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 5 + "'", int42 == 5);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Higham-Hall 5(4)" + "'", str43, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 31.144823004794873d + "'", double44 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.9d + "'", double59 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Higham-Hall 5(4)" + "'", str64, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 10.0d + "'", double67 == 10.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 97.0d + "'", double68 == 97.0d);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Higham-Hall 5(4)" + "'", str69, "Higham-Hall 5(4)");
    }

    @Test
    public void test04198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04198");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        highamHall54Integrator11.setSafety((double) 0);
        java.lang.String str28 = highamHall54Integrator11.getName();
        double double29 = highamHall54Integrator11.getCurrentStepStart();
        double double30 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction31, 9.848857801796104d, (double) (-1), (-1));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    }

    @Test
    public void test04199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04199");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException26);
        integratorException9.addSuppressed((java.lang.Throwable) integratorException27);
        java.lang.Object[] objArray29 = integratorException9.getArguments();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
    }

    @Test
    public void test04200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04200");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        double double27 = highamHall54Integrator11.getMinReduction();
        double double28 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction(97.0d);
        java.lang.String str31 = highamHall54Integrator11.getName();
        double double32 = highamHall54Integrator11.getSafety();
        double double33 = highamHall54Integrator11.getMaxGrowth();
        double[] doubleArray42 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray44 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray42, doubleArray44);
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator45.getStepHandler();
        highamHall54Integrator45.setInitialStepSize((double) (-1));
        highamHall54Integrator45.setInitialStepSize((double) 100.0f);
        double double51 = highamHall54Integrator45.getCurrentSignedStepsize();
        java.lang.String str52 = highamHall54Integrator45.getName();
        double[] doubleArray61 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray63 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray61, doubleArray63);
        double[] doubleArray73 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray75 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray73, doubleArray75);
        org.apache.commons.math.ode.StepHandler stepHandler77 = highamHall54Integrator76.getStepHandler();
        highamHall54Integrator64.setStepHandler(stepHandler77);
        highamHall54Integrator45.setStepHandler(stepHandler77);
        highamHall54Integrator11.setStepHandler(stepHandler77);
        int int81 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2d + "'", double27 == 0.2d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 31.144823004794873d + "'", double28 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 31.144823004794873d + "'", double51 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Higham-Hall 5(4)" + "'", str52, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 5 + "'", int81 == 5);
    }

    @Test
    public void test04201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04201");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray10);
        java.lang.Object[] objArray15 = derivativeException14.getArguments();
        java.lang.String str16 = derivativeException14.getPattern();
        double[] doubleArray31 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray33 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray31, doubleArray33);
        java.lang.Object[] objArray35 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray35);
        java.lang.Object[] objArray37 = integratorException36.getArguments();
        java.lang.String str38 = integratorException36.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException36);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray49);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException50);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException51);
        java.lang.Object[] objArray53 = derivativeException52.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray53);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", objArray53);
        integratorException39.addSuppressed((java.lang.Throwable) integratorException55);
        derivativeException14.addSuppressed((java.lang.Throwable) integratorException55);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException14);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)" + "'", str16, "org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
    }

    @Test
    public void test04202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04202");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        double double18 = highamHall54Integrator11.getMinReduction();
        double double19 = highamHall54Integrator11.getMaxStep();
        double double20 = highamHall54Integrator11.getSafety();
        int int21 = highamHall54Integrator11.getOrder();
        double double22 = highamHall54Integrator11.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.9d + "'", double20 == 0.9d);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
    }

    @Test
    public void test04203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04203");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        java.lang.String str27 = highamHall54Integrator11.getName();
        java.lang.String str28 = highamHall54Integrator11.getName();
        int int29 = highamHall54Integrator11.getOrder();
        java.lang.Class<?> wildcardClass30 = highamHall54Integrator11.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test04204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04204");
        double[] doubleArray10 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray12 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray10, doubleArray12);
        double[] doubleArray22 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray24 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray22, doubleArray24);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray10, doubleArray24);
        int int27 = highamHall54Integrator26.getOrder();
        double double28 = highamHall54Integrator26.getMaxGrowth();
        highamHall54Integrator26.setMaxGrowth((double) (-1));
        double double31 = highamHall54Integrator26.getMinStep();
        double[] doubleArray40 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray42 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray40, doubleArray42);
        highamHall54Integrator43.setMaxGrowth((double) (-1));
        double double46 = highamHall54Integrator43.getMaxStep();
        highamHall54Integrator43.setInitialStepSize((double) 0);
        java.lang.String str49 = highamHall54Integrator43.getName();
        org.apache.commons.math.ode.StepHandler stepHandler50 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator26.setStepHandler(stepHandler50);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.2d + "'", double31 == 0.2d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Higham-Hall 5(4)" + "'", str49, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler50);
    }

    @Test
    public void test04205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04205");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, 31.144823004794873d, (-1.0d), (double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 31.144823004794873d + "'", double6 == 31.144823004794873d);
    }

    @Test
    public void test04206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04206");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        java.lang.Throwable[] throwableArray24 = integratorException23.getSuppressed();
        java.lang.String str25 = integratorException23.getPattern();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("", strArray34);
        java.lang.Object[] objArray37 = derivativeException36.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException36);
        integratorException23.addSuppressed((java.lang.Throwable) derivativeException36);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        java.lang.String str42 = derivativeException41.toString();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str42, "org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test04207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04207");
        double[] doubleArray2 = null;
        double[] doubleArray13 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray15 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray13, doubleArray15);
        double[] doubleArray27 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray29 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray27, doubleArray29);
        double[] doubleArray43 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray45 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray43, doubleArray45);
        double[] doubleArray55 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray57 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray55, doubleArray57);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray43, doubleArray57);
        double[] doubleArray68 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray77 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray79 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray77, doubleArray79);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator81 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray68, doubleArray77);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator82 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (byte) 1, doubleArray57, doubleArray77);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator83 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', (-0.0d), doubleArray29, doubleArray77);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator84 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), 5.580754698496868d, doubleArray13, doubleArray29);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator85 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), (double) 0L, doubleArray2, doubleArray29);
        java.lang.String str86 = highamHall54Integrator85.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction87 = null;
        highamHall54Integrator85.addSwitchingFunction(switchingFunction87, (double) 1.0f, Double.NaN, (int) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Higham-Hall 5(4)" + "'", str86, "Higham-Hall 5(4)");
    }

    @Test
    public void test04208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04208");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth((double) ' ');
        highamHall54Integrator11.setMinReduction(0.0d);
        double double17 = highamHall54Integrator11.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
    }

    @Test
    public void test04209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04209");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        java.lang.String str20 = derivativeException19.getPattern();
        java.lang.Object[] objArray21 = derivativeException19.getArguments();
        java.lang.Throwable throwable22 = null;
        // The following exception was thrown during execution in test generation
        try {
            derivativeException19.addSuppressed(throwable22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str20, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
    }

    @Test
    public void test04210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04210");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test04211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04211");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1L), 32.0d, 33.46640106136302d, (double) '4');
    }

    @Test
    public void test04212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04212");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, (double) 1, 5);
        double double10 = highamHall54Integrator4.getMinStep();
        java.lang.String str11 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) (byte) 100);
        java.lang.String str14 = highamHall54Integrator4.getName();
        int int15 = highamHall54Integrator4.getOrder();
        java.lang.String str16 = highamHall54Integrator4.getName();
        double double17 = highamHall54Integrator4.getSafety();
        java.lang.String str18 = highamHall54Integrator4.getName();
        double double19 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 100.0d + "'", double17 == 100.0d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test04213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04213");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(17.88854381999832d, (double) (byte) 0, (double) (short) -1, 98.48857801796105d);
        java.lang.String str5 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
    }

    @Test
    public void test04214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04214");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.Object[] objArray10 = derivativeException9.getArguments();
        java.lang.Throwable[] throwableArray11 = derivativeException9.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray11);
        double[] doubleArray27 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray29 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray27, doubleArray29);
        java.lang.Object[] objArray31 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray31);
        java.lang.Object[] objArray33 = integratorException32.getArguments();
        java.lang.String str34 = integratorException32.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException32);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException32);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException32);
        java.lang.Object[] objArray38 = integratorException37.getArguments();
        java.lang.Throwable[] throwableArray39 = integratorException37.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException37);
        java.lang.Throwable[] throwableArray41 = integratorException37.getSuppressed();
        integratorException12.addSuppressed((java.lang.Throwable) integratorException37);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException12);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException12);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray41);
    }

    @Test
    public void test04215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04215");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double double17 = highamHall54Integrator11.getCurrentSignedStepsize();
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        highamHall54Integrator29.setMaxGrowth((double) (-1));
        double double32 = highamHall54Integrator29.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator29.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler34);
        java.lang.String str36 = highamHall54Integrator11.getName();
        int int37 = highamHall54Integrator11.getOrder();
        int int38 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMaxGrowth(0.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 31.144823004794873d + "'", double17 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Higham-Hall 5(4)" + "'", str36, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 5 + "'", int37 == 5);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
    }

    @Test
    public void test04216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04216");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        java.lang.String str15 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction16, (double) (byte) 100, 1.0d, 0);
        java.lang.String str21 = highamHall54Integrator11.getName();
        double double22 = highamHall54Integrator11.getCurrentStepStart();
        double double23 = highamHall54Integrator11.getMaxGrowth();
        double double24 = highamHall54Integrator11.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test04217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04217");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        double double5 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMinReduction((double) 0L);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
    }

    @Test
    public void test04218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04218");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        double double25 = highamHall54Integrator24.getCurrentSignedStepsize();
        highamHall54Integrator24.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator24.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler29);
        double double31 = highamHall54Integrator11.getMinStep();
        java.lang.String str32 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction((double) (byte) -1);
        highamHall54Integrator11.setSafety((double) 100.0f);
        highamHall54Integrator11.setMaxGrowth((double) (short) 100);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 31.144823004794873d + "'", double25 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 97.0d + "'", double31 == 97.0d);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
    }

    @Test
    public void test04219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04219");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        double double77 = highamHall54Integrator76.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction78 = null;
        highamHall54Integrator76.addSwitchingFunction(switchingFunction78, (double) '4', 97.0d, (int) (byte) -1);
        highamHall54Integrator76.setSafety((double) (-1));
        java.lang.String str85 = highamHall54Integrator76.getName();
        double double86 = highamHall54Integrator76.getMaxStep();
        double double87 = highamHall54Integrator76.getMinReduction();
        java.lang.String str88 = highamHall54Integrator76.getName();
        double double89 = highamHall54Integrator76.getMinReduction();
        highamHall54Integrator76.setMinReduction(1.0d);
        java.lang.Class<?> wildcardClass92 = highamHall54Integrator76.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Higham-Hall 5(4)" + "'", str85, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 100.0d + "'", double86 == 100.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.2d + "'", double87 == 0.2d);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Higham-Hall 5(4)" + "'", str88, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.2d + "'", double89 == 0.2d);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test04220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04220");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setInitialStepSize((double) (byte) 1);
        double double30 = highamHall54Integrator11.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction31, 2.4957893743180684d, 0.0d, 0);
        highamHall54Integrator11.setInitialStepSize((double) 0.0f);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction38, (double) 100L, (double) (byte) 100, (int) (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
    }

    @Test
    public void test04221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04221");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', Double.NaN, 33.46640106136302d, 3.1622776601683795d);
    }

    @Test
    public void test04222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04222");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) ' ', 31.622776601683793d, (double) 10, (double) (byte) 100);
    }

    @Test
    public void test04223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04223");
        double[] doubleArray14 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray23 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray25 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray23, doubleArray25);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray14, doubleArray23);
        double[] doubleArray36 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray38 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray36, doubleArray38);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray23, doubleArray36);
        double[] doubleArray49 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray51 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray49, doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) (short) -1, doubleArray23, doubleArray51);
        double[] doubleArray64 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray73 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray75 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray73, doubleArray75);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator77 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray64, doubleArray73);
        double[] doubleArray86 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray88 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator89 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray86, doubleArray88);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator90 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray73, doubleArray86);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator91 = new org.apache.commons.math.ode.HighamHall54Integrator(35.0d, (double) '#', doubleArray51, doubleArray86);
        double double92 = highamHall54Integrator91.getCurrentSignedStepsize();
        double double93 = highamHall54Integrator91.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 35.0d + "'", double92 == 35.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 10.0d + "'", double93 == 10.0d);
    }

    @Test
    public void test04224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04224");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(2.4957893743180684d, (double) 10, (double) 100L, 22.80350850198276d);
    }

    @Test
    public void test04225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04225");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 5, (double) (short) 100, 52.0d, 9.924141172814958d);
    }

    @Test
    public void test04226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04226");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(97.0d, 0.0d, (double) (byte) 100, 0.0d);
        double double5 = highamHall54Integrator4.getMaxStep();
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator17.setStepHandler(stepHandler30);
        int int32 = highamHall54Integrator17.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler33);
        double double35 = highamHall54Integrator4.getMaxStep();
        int int36 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 5 + "'", int36 == 5);
    }

    @Test
    public void test04227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04227");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        double double17 = highamHall54Integrator11.getMinStep();
        java.lang.String str18 = highamHall54Integrator11.getName();
        java.lang.String str19 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setInitialStepSize((double) 10L);
        double double22 = highamHall54Integrator11.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
    }

    @Test
    public void test04228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04228");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray12);
        java.lang.Object[] objArray19 = derivativeException18.getArguments();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!, , , , , ]");
    }

    @Test
    public void test04229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04229");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100L, (double) (byte) -1, (double) 1.0f, 0.0d);
    }

    @Test
    public void test04230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04230");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (-1.0f), (double) (short) 0, (double) (short) 100);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(7.211102550927978d);
        int int8 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-0.0d) + "'", double5 == (-0.0d));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
    }

    @Test
    public void test04231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04231");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction16, (double) (byte) 10, 100.0d, 5);
        highamHall54Integrator11.setSafety((double) (-1.0f));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
    }

    @Test
    public void test04232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04232");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        java.lang.Throwable[] throwableArray25 = derivativeException24.getSuppressed();
        java.lang.String str26 = derivativeException24.toString();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str26, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04233");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        java.lang.Object[] objArray13 = derivativeException12.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", objArray13);
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray28);
        java.lang.Object[] objArray30 = derivativeException29.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray30);
        integratorException17.addSuppressed((java.lang.Throwable) integratorException33);
        java.lang.Object[] objArray35 = integratorException33.getArguments();
        java.lang.Throwable[] throwableArray36 = integratorException33.getSuppressed();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("", strArray45);
        java.lang.Object[] objArray48 = derivativeException47.getArguments();
        integratorException33.addSuppressed((java.lang.Throwable) derivativeException47);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException33);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!, , , , , ]");
    }

    @Test
    public void test04234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04234");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        int int26 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction27, 0.0d, 35.0d, (int) '4');
        java.lang.String str32 = highamHall54Integrator11.getName();
        int int33 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction34, 0.9d, (double) '4', (int) (byte) 100);
        int int39 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMinReduction(Double.NaN);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
    }

    @Test
    public void test04235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04235");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setInitialStepSize((double) 0);
        highamHall54Integrator11.setMaxGrowth((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction19, 35.0d, 59.16079783099616d, 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
    }

    @Test
    public void test04236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04236");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator4.setMinReduction(0.9d);
        highamHall54Integrator4.setInitialStepSize((double) 10L);
        double double9 = highamHall54Integrator4.getMaxStep();
        int int10 = highamHall54Integrator4.getOrder();
        java.lang.String str11 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
    }

    @Test
    public void test04237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04237");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setInitialStepSize((double) 0);
        java.lang.String str17 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) 100L);
        double double20 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMinReduction((double) (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.9d + "'", double20 == 0.9d);
    }

    @Test
    public void test04238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04238");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        double double18 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setMinReduction((double) (short) 100);
        double double21 = highamHall54Integrator11.getMinStep();
        double double22 = highamHall54Integrator11.getMinReduction();
        double double23 = highamHall54Integrator11.getMinReduction();
        double double24 = highamHall54Integrator11.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 97.0d + "'", double21 == 97.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 100.0d + "'", double22 == 100.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 100.0d + "'", double23 == 100.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test04239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04239");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) 1, 31.144823004794873d, 2.4957893743180684d);
        java.lang.String str5 = highamHall54Integrator4.getName();
        java.lang.String str6 = highamHall54Integrator4.getName();
        java.lang.String str7 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
    }

    @Test
    public void test04240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04240");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 17.88854381999832d, (double) 5, 22.80350850198276d);
    }

    @Test
    public void test04241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04241");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray15);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        java.lang.String str36 = derivativeException33.getPattern();
        java.lang.String str37 = derivativeException33.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        derivativeException24.addSuppressed((java.lang.Throwable) derivativeException33);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
    }

    @Test
    public void test04242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04242");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setSafety((double) (short) 10);
        java.lang.String str15 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
    }

    @Test
    public void test04243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04243");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        java.lang.String str20 = integratorException19.getPattern();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
    }

    @Test
    public void test04244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04244");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        java.lang.String str13 = derivativeException12.toString();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str13, "org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test04245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04245");
        java.lang.String[] strArray5 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray5);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray5);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException8);
        java.lang.String str10 = integratorException8.getPattern();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str10, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test04246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04246");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray47 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray49 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray47, doubleArray49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) (short) -1, doubleArray21, doubleArray49);
        highamHall54Integrator51.setMinReduction((double) 10L);
        highamHall54Integrator51.setMinReduction((double) (-1.0f));
        double double56 = highamHall54Integrator51.getMaxGrowth();
        double double57 = highamHall54Integrator51.getMaxGrowth();
        java.lang.String str58 = highamHall54Integrator51.getName();
        highamHall54Integrator51.setMaxGrowth(1.0d);
        java.lang.String str61 = highamHall54Integrator51.getName();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Higham-Hall 5(4)" + "'", str58, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Higham-Hall 5(4)" + "'", str61, "Higham-Hall 5(4)");
    }

    @Test
    public void test04247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04247");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setInitialStepSize((double) (-1));
        highamHall54Integrator11.setInitialStepSize((double) 10.0f);
        highamHall54Integrator11.setInitialStepSize(1.0d);
        double double19 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction20, 31.144823004794873d, (double) 10, (int) '#');
        java.lang.String str25 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 31.144823004794873d + "'", double19 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
    }

    @Test
    public void test04248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04248");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getCurrentSignedStepsize();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double double17 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMinReduction(0.0d);
        int int20 = highamHall54Integrator11.getOrder();
        int int21 = highamHall54Integrator11.getOrder();
        double[] doubleArray30 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray32 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray30, doubleArray32);
        highamHall54Integrator33.setMaxGrowth((double) (-1));
        double double36 = highamHall54Integrator33.getMinReduction();
        java.lang.String str37 = highamHall54Integrator33.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 0, (double) 'a', (double) (-1));
        int int43 = highamHall54Integrator42.getOrder();
        double[] doubleArray52 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray54 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray52, doubleArray54);
        double[] doubleArray64 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray66 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray64, doubleArray66);
        org.apache.commons.math.ode.StepHandler stepHandler68 = highamHall54Integrator67.getStepHandler();
        highamHall54Integrator55.setStepHandler(stepHandler68);
        int int70 = highamHall54Integrator55.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler71 = highamHall54Integrator55.getStepHandler();
        highamHall54Integrator42.setStepHandler(stepHandler71);
        highamHall54Integrator33.setStepHandler(stepHandler71);
        highamHall54Integrator11.setStepHandler(stepHandler71);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 31.144823004794873d + "'", double15 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.9d + "'", double17 == 0.9d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2d + "'", double36 == 0.2d);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Higham-Hall 5(4)" + "'", str37, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 5 + "'", int70 == 5);
        org.junit.Assert.assertNotNull(stepHandler71);
    }

    @Test
    public void test04249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04249");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        double double16 = highamHall54Integrator11.getCurrentStepStart();
        double double17 = highamHall54Integrator11.getSafety();
        double double18 = highamHall54Integrator11.getMinStep();
        double[] doubleArray27 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray29 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray27, doubleArray29);
        highamHall54Integrator30.setMaxGrowth((double) (-1));
        double double33 = highamHall54Integrator30.getSafety();
        double double34 = highamHall54Integrator30.getMinReduction();
        double double35 = highamHall54Integrator30.getMaxStep();
        java.lang.String str36 = highamHall54Integrator30.getName();
        double[] doubleArray45 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray47 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray45, doubleArray47);
        double[] doubleArray57 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray59 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray57, doubleArray59);
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator60.getStepHandler();
        highamHall54Integrator48.setStepHandler(stepHandler61);
        highamHall54Integrator30.setStepHandler(stepHandler61);
        highamHall54Integrator11.setStepHandler(stepHandler61);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.9d + "'", double17 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 97.0d + "'", double18 == 97.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.9d + "'", double33 == 0.9d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.2d + "'", double34 == 0.2d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Higham-Hall 5(4)" + "'", str36, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler61);
    }

    @Test
    public void test04250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04250");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 0.0d, 24.322992790977874d, (double) (byte) 10);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double[] doubleArray8 = null;
        double[] doubleArray11 = null;
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) 100, doubleArray11, doubleArray20);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100L, 5.580754698496868d, doubleArray8, doubleArray20);
        double[] doubleArray36 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray45 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray47 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray45, doubleArray47);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray36, doubleArray45);
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray45, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        highamHall54Integrator62.addSwitchingFunction(switchingFunction63, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        highamHall54Integrator62.setInitialStepSize((double) (-1L));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        highamHall54Integrator62.addSwitchingFunction(switchingFunction70, 100.0d, (double) (byte) 0, (int) (byte) -1);
        double double75 = highamHall54Integrator62.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler76 = highamHall54Integrator62.getStepHandler();
        highamHall54Integrator25.setStepHandler(stepHandler76);
        highamHall54Integrator4.setStepHandler(stepHandler76);
        java.lang.Class<?> wildcardClass79 = stepHandler76.getClass();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 35.0d + "'", double75 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler76);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test04251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04251");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 0.0d, (double) ' ', (double) 1.0f);
    }

    @Test
    public void test04252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04252");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        double[] doubleArray46 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray55 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray57 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray55, doubleArray57);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray46, doubleArray55);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (-1L), doubleArray34, doubleArray55);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) (-1L), doubleArray19, doubleArray34);
        int int62 = highamHall54Integrator61.getOrder();
        highamHall54Integrator61.setSafety(32.0d);
        highamHall54Integrator61.setInitialStepSize(17.88854381999832d);
        java.lang.Class<?> wildcardClass67 = highamHall54Integrator61.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 5 + "'", int62 == 5);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test04253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04253");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        java.lang.String str5 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) (short) 10);
        double double8 = highamHall54Integrator4.getMinReduction();
        double double9 = highamHall54Integrator4.getMaxStep();
        int int10 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler11 = highamHall54Integrator4.getStepHandler();
        int int12 = highamHall54Integrator4.getOrder();
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        double double14 = highamHall54Integrator4.getMaxStep();
        double double15 = highamHall54Integrator4.getMaxGrowth();
        java.lang.Class<?> wildcardClass16 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test04254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04254");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) -1);
        double double29 = highamHall54Integrator11.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        double[] doubleArray43 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray45 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray43, doubleArray45);
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator46.getStepHandler();
        double[] doubleArray56 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray58 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray56, doubleArray58);
        double double60 = highamHall54Integrator59.getCurrentSignedStepsize();
        highamHall54Integrator59.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler63 = highamHall54Integrator59.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler64 = highamHall54Integrator59.getStepHandler();
        highamHall54Integrator46.setStepHandler(stepHandler64);
        highamHall54Integrator34.setStepHandler(stepHandler64);
        highamHall54Integrator11.setStepHandler(stepHandler64);
        java.lang.String str68 = highamHall54Integrator11.getName();
        double double69 = highamHall54Integrator11.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 97.0d + "'", double29 == 97.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 31.144823004794873d + "'", double60 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler63);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Higham-Hall 5(4)" + "'", str68, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 97.0d + "'", double69 == 97.0d);
    }

    @Test
    public void test04255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04255");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, (double) 1, 5);
        double double10 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (double) 1, 0.0d, (int) (byte) 100);
        java.lang.String str16 = highamHall54Integrator4.getName();
        double double17 = highamHall54Integrator4.getMinReduction();
        double double18 = highamHall54Integrator4.getMaxStep();
        int int19 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
    }

    @Test
    public void test04256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04256");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (short) 0, (double) 100.0f, (double) 1.0f);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, 31.622776601683793d, (double) (-1), (int) (byte) 100);
    }

    @Test
    public void test04257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04257");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator18.getStepHandler();
        double[] doubleArray28 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray30 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray28, doubleArray30);
        double double32 = highamHall54Integrator31.getCurrentSignedStepsize();
        highamHall54Integrator31.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator31.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator31.getStepHandler();
        highamHall54Integrator18.setStepHandler(stepHandler36);
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler38);
        double double40 = highamHall54Integrator4.getMinStep();
        int int41 = highamHall54Integrator4.getOrder();
        double double42 = highamHall54Integrator4.getCurrentStepStart();
        double double43 = highamHall54Integrator4.getMaxStep();
        java.lang.String str44 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 31.144823004794873d + "'", double32 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 5 + "'", int41 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Higham-Hall 5(4)" + "'", str44, "Higham-Hall 5(4)");
    }

    @Test
    public void test04258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04258");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 1.0d, 2.4957893743180684d, 35.0d);
    }

    @Test
    public void test04259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04259");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException21);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray33);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException36);
        java.lang.String str38 = derivativeException36.getPattern();
        integratorException21.addSuppressed((java.lang.Throwable) derivativeException36);
        java.lang.String str40 = derivativeException36.getPattern();
        java.lang.Throwable[] throwableArray41 = derivativeException36.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray41);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str38, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str40, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(throwableArray41);
    }

    @Test
    public void test04260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04260");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        double[] doubleArray13 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray15 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray13, doubleArray15);
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler29);
        highamHall54Integrator4.setStepHandler(stepHandler29);
        highamHall54Integrator4.setInitialStepSize((double) 100.0f);
        java.lang.String str34 = highamHall54Integrator4.getName();
        double double35 = highamHall54Integrator4.getMaxGrowth();
        double[] doubleArray44 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray46 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray44, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        highamHall54Integrator47.addSwitchingFunction(switchingFunction48, (double) 'a', 0.0d, 5);
        double double53 = highamHall54Integrator47.getMaxGrowth();
        java.lang.String str54 = highamHall54Integrator47.getName();
        double double55 = highamHall54Integrator47.getMinStep();
        double[] doubleArray64 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray66 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray64, doubleArray66);
        double[] doubleArray76 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray78 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator79 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray76, doubleArray78);
        org.apache.commons.math.ode.StepHandler stepHandler80 = highamHall54Integrator79.getStepHandler();
        highamHall54Integrator67.setStepHandler(stepHandler80);
        highamHall54Integrator47.setStepHandler(stepHandler80);
        highamHall54Integrator4.setStepHandler(stepHandler80);
        highamHall54Integrator4.setSafety((double) 100L);
        int int86 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction87 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction87, (double) 10.0f, 22.80350850198276d, 0);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Higham-Hall 5(4)" + "'", str54, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 97.0d + "'", double55 == 97.0d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler80);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 5 + "'", int86 == 5);
    }

    @Test
    public void test04261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04261");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) 0.0f, 10.0d, 10);
        highamHall54Integrator4.setInitialStepSize(100.0d);
        double double12 = highamHall54Integrator4.getSafety();
        java.lang.String str13 = highamHall54Integrator4.getName();
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9d + "'", double12 == 0.9d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test04262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04262");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (-1.0f), (double) (-1L), (double) (short) 1);
        int int5 = highamHall54Integrator4.getOrder();
        int int6 = highamHall54Integrator4.getOrder();
        double double7 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
    }

    @Test
    public void test04263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04263");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) -1, (double) (byte) -1, (double) 0.0f, 0.9d);
    }

    @Test
    public void test04264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04264");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction13, (double) '4', 1.0d, 0);
        highamHall54Integrator11.setMaxGrowth(35.0d);
        double[] doubleArray28 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray30 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray28, doubleArray30);
        double double32 = highamHall54Integrator31.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        highamHall54Integrator31.addSwitchingFunction(switchingFunction33, (double) '4', 1.0d, 0);
        double double38 = highamHall54Integrator31.getSafety();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator43.setMinReduction(0.9d);
        double double46 = highamHall54Integrator43.getSafety();
        double[] doubleArray55 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray57 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray55, doubleArray57);
        highamHall54Integrator58.setMaxGrowth((double) (-1));
        double double61 = highamHall54Integrator58.getMaxStep();
        java.lang.String str62 = highamHall54Integrator58.getName();
        double double63 = highamHall54Integrator58.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler64 = highamHall54Integrator58.getStepHandler();
        highamHall54Integrator43.setStepHandler(stepHandler64);
        highamHall54Integrator31.setStepHandler(stepHandler64);
        highamHall54Integrator11.setStepHandler(stepHandler64);
        double double68 = highamHall54Integrator11.getMinStep();
        highamHall54Integrator11.setInitialStepSize((double) 1L);
        highamHall54Integrator11.setMinReduction((double) 100.0f);
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double75 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 31.144823004794873d + "'", double32 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.9d + "'", double38 == 0.9d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.9d + "'", double46 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Higham-Hall 5(4)" + "'", str62, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.2d + "'", double63 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 97.0d + "'", double68 == 97.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 31.144823004794873d + "'", double75 == 31.144823004794873d);
    }

    @Test
    public void test04265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04265");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        java.lang.Object[] objArray13 = derivativeException12.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        java.lang.Class<?> wildcardClass18 = integratorException17.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test04266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04266");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMaxGrowth();
        double double28 = highamHall54Integrator11.getMinReduction();
        int int29 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction30, (double) 100.0f, (double) 0, 0);
        java.lang.String str35 = highamHall54Integrator11.getName();
        int int36 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2d + "'", double28 == 0.2d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Higham-Hall 5(4)" + "'", str35, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 5 + "'", int36 == 5);
    }

    @Test
    public void test04267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04267");
        double[] doubleArray12 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray14 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray12, doubleArray14);
        double[] doubleArray24 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray26 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray24, doubleArray26);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray12, doubleArray26);
        double[] doubleArray39 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray41 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray39, doubleArray41);
        double[] doubleArray45 = new double[] { (-1L), 97.0d };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, doubleArray41, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) (byte) 100, doubleArray12, doubleArray45);
        highamHall54Integrator47.setMaxGrowth((-1.0d));
        double double50 = highamHall54Integrator47.getCurrentSignedStepsize();
        double double51 = highamHall54Integrator47.getMinReduction();
        highamHall54Integrator47.setInitialStepSize((double) 1.0f);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.2d + "'", double51 == 0.2d);
    }

    @Test
    public void test04268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04268");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) (short) 1, (double) (byte) 0, (double) 100.0f);
        double double5 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
    }

    @Test
    public void test04269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04269");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (short) -1, (double) 'a', (double) 1L);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        java.lang.String str7 = highamHall54Integrator4.getName();
        java.lang.String str8 = highamHall54Integrator4.getName();
        int int9 = highamHall54Integrator4.getOrder();
        java.lang.Class<?> wildcardClass10 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test04270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04270");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        java.lang.String str21 = integratorException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.String str23 = integratorException19.getPattern();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray34);
        integratorException19.addSuppressed((java.lang.Throwable) derivativeException38);
        java.lang.Object[] objArray40 = integratorException19.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        java.lang.Object[] objArray42 = derivativeException41.getArguments();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
    }

    @Test
    public void test04271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04271");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getMaxStep();
        double double17 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setInitialStepSize((double) 'a');
        highamHall54Integrator11.setSafety((double) (byte) 10);
        highamHall54Integrator11.setInitialStepSize((double) 0L);
        double double24 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setInitialStepSize(2.23606797749979d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 31.144823004794873d + "'", double24 == 31.144823004794873d);
    }

    @Test
    public void test04272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04272");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getMaxStep();
        double double17 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setInitialStepSize((double) 'a');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        highamHall54Integrator24.setInitialStepSize((double) (-1L));
        double[] doubleArray35 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray37 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray35, doubleArray37);
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator38.getStepHandler();
        double[] doubleArray48 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray50 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray48, doubleArray50);
        double double52 = highamHall54Integrator51.getCurrentSignedStepsize();
        highamHall54Integrator51.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator51.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler56 = highamHall54Integrator51.getStepHandler();
        highamHall54Integrator38.setStepHandler(stepHandler56);
        org.apache.commons.math.ode.StepHandler stepHandler58 = highamHall54Integrator38.getStepHandler();
        highamHall54Integrator24.setStepHandler(stepHandler58);
        highamHall54Integrator11.setStepHandler(stepHandler58);
        java.lang.Class<?> wildcardClass61 = highamHall54Integrator11.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 31.144823004794873d + "'", double52 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test04273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04273");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (-1.0f), (double) (short) 0, (double) (short) 100);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double6 = highamHall54Integrator4.getMaxGrowth();
        double double7 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setInitialStepSize((double) 1.0f);
        highamHall54Integrator4.setInitialStepSize(22.80350850198276d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-0.0d) + "'", double5 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.2d + "'", double7 == 0.2d);
    }

    @Test
    public void test04274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04274");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        java.lang.String str25 = derivativeException24.getPattern();
        double[] doubleArray40 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray42 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray40, doubleArray42);
        java.lang.Object[] objArray44 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray44);
        java.lang.Object[] objArray46 = integratorException45.getArguments();
        java.lang.String str47 = integratorException45.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException45);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException45);
        java.lang.Object[] objArray50 = integratorException45.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException45);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException51);
        derivativeException24.addSuppressed((java.lang.Throwable) derivativeException52);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[-1, 1, 1.0, -1.0, 1, a]");
    }

    @Test
    public void test04275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04275");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.Object[] objArray22 = integratorException19.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.Object[] objArray24 = integratorException19.getArguments();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        java.lang.Object[] objArray36 = derivativeException33.getArguments();
        java.lang.Throwable[] throwableArray37 = derivativeException33.getSuppressed();
        java.lang.Throwable[] throwableArray38 = derivativeException33.getSuppressed();
        java.lang.String str39 = derivativeException33.getPattern();
        integratorException19.addSuppressed((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        java.lang.Throwable[] throwableArray42 = derivativeException33.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        java.lang.String str44 = derivativeException43.getPattern();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
    }

    @Test
    public void test04276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04276");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction13, (double) '4', 1.0d, 0);
        highamHall54Integrator11.setMaxGrowth(35.0d);
        double[] doubleArray28 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray30 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray28, doubleArray30);
        double double32 = highamHall54Integrator31.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        highamHall54Integrator31.addSwitchingFunction(switchingFunction33, (double) '4', 1.0d, 0);
        double double38 = highamHall54Integrator31.getSafety();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator43.setMinReduction(0.9d);
        double double46 = highamHall54Integrator43.getSafety();
        double[] doubleArray55 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray57 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray55, doubleArray57);
        highamHall54Integrator58.setMaxGrowth((double) (-1));
        double double61 = highamHall54Integrator58.getMaxStep();
        java.lang.String str62 = highamHall54Integrator58.getName();
        double double63 = highamHall54Integrator58.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler64 = highamHall54Integrator58.getStepHandler();
        highamHall54Integrator43.setStepHandler(stepHandler64);
        highamHall54Integrator31.setStepHandler(stepHandler64);
        highamHall54Integrator11.setStepHandler(stepHandler64);
        double double68 = highamHall54Integrator11.getMinStep();
        double double69 = highamHall54Integrator11.getMaxGrowth();
        double double70 = highamHall54Integrator11.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction71 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction71, 2.4957893743180684d, (double) (short) 1, (int) (byte) -1);
        highamHall54Integrator11.setMaxGrowth(9.848857801796104d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 31.144823004794873d + "'", double32 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.9d + "'", double38 == 0.9d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.9d + "'", double46 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Higham-Hall 5(4)" + "'", str62, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.2d + "'", double63 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 97.0d + "'", double68 == 97.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 35.0d + "'", double69 == 35.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.2d + "'", double70 == 0.2d);
    }

    @Test
    public void test04277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04277");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray9);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray25);
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray42);
        java.lang.Object[] objArray44 = derivativeException43.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray44);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray44);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray44);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException47);
        derivativeException31.addSuppressed((java.lang.Throwable) integratorException48);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException48);
        java.lang.Throwable[] throwableArray51 = integratorException50.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException50);
        java.lang.String str53 = integratorException50.getPattern();
        java.lang.String str54 = integratorException50.getPattern();
        derivativeException12.addSuppressed((java.lang.Throwable) integratorException50);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str53, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str54, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04278");
        double[] doubleArray16 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray18 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray16, doubleArray18);
        java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray20);
        java.lang.Object[] objArray22 = integratorException21.getArguments();
        java.lang.String str23 = integratorException21.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException21);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        integratorException24.addSuppressed((java.lang.Throwable) derivativeException35);
        double[] doubleArray51 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray53 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray51, doubleArray53);
        java.lang.Object[] objArray55 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray55);
        java.lang.Object[] objArray57 = integratorException56.getArguments();
        java.lang.String str58 = integratorException56.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException56);
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray67);
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException68);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException68);
        integratorException59.addSuppressed((java.lang.Throwable) derivativeException70);
        derivativeException35.addSuppressed((java.lang.Throwable) integratorException59);
        java.lang.Throwable[] throwableArray73 = derivativeException35.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray73);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) throwableArray73);
        java.lang.Throwable[] throwableArray76 = integratorException75.getSuppressed();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray76);
    }

    @Test
    public void test04279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04279");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        double double16 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator21.addSwitchingFunction(switchingFunction22, (double) (byte) -1, (double) 1, 5);
        double double27 = highamHall54Integrator21.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler28);
        double double30 = highamHall54Integrator11.getMaxGrowth();
        double double31 = highamHall54Integrator11.getMaxGrowth();
        double double32 = highamHall54Integrator11.getMaxGrowth();
        double double33 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1.0d) + "'", double31 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1.0d) + "'", double32 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 31.144823004794873d + "'", double33 == 31.144823004794873d);
    }

    @Test
    public void test04280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04280");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double double7 = highamHall54Integrator4.getMinStep();
        double double8 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
    }

    @Test
    public void test04281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04281");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        double[] doubleArray30 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray32 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray30, doubleArray32);
        java.lang.Object[] objArray34 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray34);
        java.lang.Object[] objArray36 = integratorException35.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException38);
        double[] doubleArray54 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray56 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray54, doubleArray56);
        java.lang.Object[] objArray58 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray58);
        java.lang.Object[] objArray60 = integratorException59.getArguments();
        java.lang.String str61 = integratorException59.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException59);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException59);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException59);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException64);
        derivativeException38.addSuppressed((java.lang.Throwable) derivativeException65);
        java.lang.Throwable[] throwableArray67 = derivativeException38.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException38);
        java.lang.String str69 = derivativeException38.getPattern();
        derivativeException14.addSuppressed((java.lang.Throwable) derivativeException38);
        java.lang.String str71 = derivativeException38.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str69, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str71, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04282");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double double17 = highamHall54Integrator11.getCurrentSignedStepsize();
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        highamHall54Integrator29.setMaxGrowth((double) (-1));
        double double32 = highamHall54Integrator29.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator29.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler34);
        int int36 = highamHall54Integrator11.getOrder();
        double double37 = highamHall54Integrator11.getMaxGrowth();
        double double38 = highamHall54Integrator11.getSafety();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 31.144823004794873d + "'", double17 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 5 + "'", int36 == 5);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.9d + "'", double38 == 0.9d);
    }

    @Test
    public void test04283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04283");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        java.lang.Throwable[] throwableArray23 = derivativeException22.getSuppressed();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(throwableArray23);
    }

    @Test
    public void test04284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04284");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray12);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        java.lang.Object[] objArray26 = derivativeException25.getArguments();
        java.lang.Throwable[] throwableArray27 = derivativeException25.getSuppressed();
        java.lang.Throwable[] throwableArray28 = derivativeException25.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray28);
        integratorException15.addSuppressed((java.lang.Throwable) integratorException29);
        java.lang.Object[] objArray31 = integratorException29.getArguments();
        java.lang.Object[] objArray32 = integratorException29.getArguments();
        java.lang.Object[] objArray33 = integratorException29.getArguments();
        java.lang.String str34 = integratorException29.getPattern();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test04285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04285");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        java.lang.String str15 = highamHall54Integrator11.getName();
        double double16 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction17, 97.0d, (double) (byte) 0, (int) (short) 1);
        highamHall54Integrator11.setMaxGrowth(17.88854381999832d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 31.144823004794873d + "'", double16 == 31.144823004794873d);
    }

    @Test
    public void test04286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04286");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray15);
        java.lang.String str25 = derivativeException24.toString();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: " + "'", str25, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test04287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04287");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        double double17 = highamHall54Integrator11.getMaxGrowth();
        java.lang.String str18 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth(0.2d);
        java.lang.String str21 = highamHall54Integrator11.getName();
        double double22 = highamHall54Integrator11.getMaxStep();
        double double23 = highamHall54Integrator11.getCurrentStepStart();
        int int24 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setInitialStepSize(0.9d);
        double double27 = highamHall54Integrator11.getSafety();
        double double28 = highamHall54Integrator11.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.9d + "'", double27 == 0.9d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2d + "'", double28 == 0.2d);
    }

    @Test
    public void test04288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04288");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMaxGrowth();
        double double28 = highamHall54Integrator11.getMinReduction();
        int int29 = highamHall54Integrator11.getOrder();
        int int30 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setInitialStepSize((double) (short) 10);
        double double33 = highamHall54Integrator11.getCurrentStepStart();
        double double34 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2d + "'", double28 == 0.2d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 31.144823004794873d + "'", double34 == 31.144823004794873d);
    }

    @Test
    public void test04289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04289");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(55.80754698496868d, 24.322992790977874d, (double) (byte) 100, 2.23606797749979d);
    }

    @Test
    public void test04290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04290");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setSafety((double) (byte) 0);
        double double17 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth(31.144823004794873d);
        double double20 = highamHall54Integrator11.getCurrentStepStart();
        double double21 = highamHall54Integrator11.getMaxGrowth();
        java.lang.String str22 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 31.144823004794873d + "'", double17 == 31.144823004794873d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 31.144823004794873d + "'", double21 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
    }

    @Test
    public void test04291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04291");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        java.lang.Throwable[] throwableArray12 = integratorException11.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray12);
        java.lang.Throwable[] throwableArray14 = integratorException13.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.Throwable[] throwableArray27 = derivativeException26.getSuppressed();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        java.lang.String str45 = derivativeException44.getPattern();
        derivativeException26.addSuppressed((java.lang.Throwable) derivativeException44);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException47);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException47);
        java.lang.Throwable[] throwableArray50 = derivativeException47.getSuppressed();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str45, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(throwableArray50);
    }

    @Test
    public void test04292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04292");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        java.lang.Object[] objArray19 = derivativeException18.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        java.lang.Object[] objArray21 = derivativeException18.getArguments();
        java.lang.String str22 = derivativeException18.toString();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str22, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04293");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        java.lang.Throwable[] throwableArray17 = derivativeException15.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray17);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test04294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04294");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, 0.0d, (double) 'a', (double) 1);
        double double5 = highamHall54Integrator4.getMaxStep();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str7 = highamHall54Integrator4.getName();
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
    }

    @Test
    public void test04295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04295");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getMaxStep();
        java.lang.String str17 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1L), 0.0d, 0.2d, (double) (-1L));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator28.addSwitchingFunction(switchingFunction29, (double) (byte) -1, (double) 1, 5);
        double double34 = highamHall54Integrator28.getMinStep();
        highamHall54Integrator28.setInitialStepSize((double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler37 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler37);
        highamHall54Integrator11.setStepHandler(stepHandler37);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler37);
    }

    @Test
    public void test04296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04296");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        double double77 = highamHall54Integrator76.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction78 = null;
        highamHall54Integrator76.addSwitchingFunction(switchingFunction78, (double) '4', 97.0d, (int) (byte) -1);
        java.lang.String str83 = highamHall54Integrator76.getName();
        java.lang.String str84 = highamHall54Integrator76.getName();
        double double85 = highamHall54Integrator76.getCurrentStepStart();
        int int86 = highamHall54Integrator76.getOrder();
        java.lang.String str87 = highamHall54Integrator76.getName();
        java.lang.String str88 = highamHall54Integrator76.getName();
        highamHall54Integrator76.setMinReduction((double) (byte) 1);
        java.lang.String str91 = highamHall54Integrator76.getName();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Higham-Hall 5(4)" + "'", str83, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Higham-Hall 5(4)" + "'", str84, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 5 + "'", int86 == 5);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Higham-Hall 5(4)" + "'", str87, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Higham-Hall 5(4)" + "'", str88, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Higham-Hall 5(4)" + "'", str91, "Higham-Hall 5(4)");
    }

    @Test
    public void test04297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04297");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) ' ', (double) 10.0f, (double) (-1));
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.Class<?> wildcardClass6 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test04298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04298");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        java.lang.Object[] objArray20 = derivativeException19.getArguments();
        java.lang.Object[] objArray21 = derivativeException19.getArguments();
        java.lang.Object[] objArray22 = derivativeException19.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException19);
        java.lang.Throwable[] throwableArray25 = derivativeException19.getSuppressed();
        java.lang.Throwable[] throwableArray26 = derivativeException19.getSuppressed();
        java.lang.Throwable[] throwableArray27 = derivativeException19.getSuppressed();
        java.lang.String str28 = derivativeException19.toString();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str28, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04299");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        double double16 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator21.addSwitchingFunction(switchingFunction22, (double) (byte) -1, (double) 1, 5);
        double double27 = highamHall54Integrator21.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler28);
        double double30 = highamHall54Integrator11.getMaxGrowth();
        double double31 = highamHall54Integrator11.getMaxGrowth();
        double double32 = highamHall54Integrator11.getMinReduction();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        int int38 = highamHall54Integrator37.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator37.getStepHandler();
        java.lang.String str40 = highamHall54Integrator37.getName();
        double double41 = highamHall54Integrator37.getCurrentStepStart();
        double[] doubleArray50 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray52 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray50, doubleArray52);
        double double54 = highamHall54Integrator53.getCurrentSignedStepsize();
        highamHall54Integrator53.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler57 = highamHall54Integrator53.getStepHandler();
        highamHall54Integrator37.setStepHandler(stepHandler57);
        highamHall54Integrator11.setStepHandler(stepHandler57);
        double double60 = highamHall54Integrator11.getSafety();
        double double61 = highamHall54Integrator11.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1.0d) + "'", double31 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.2d + "'", double32 == 0.2d);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Higham-Hall 5(4)" + "'", str40, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 31.144823004794873d + "'", double54 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.9d + "'", double60 == 0.9d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
    }

    @Test
    public void test04300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04300");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) -1);
        java.lang.String str29 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator37.setMinReduction(0.9d);
        double double40 = highamHall54Integrator37.getMinStep();
        int int41 = highamHall54Integrator37.getOrder();
        double double42 = highamHall54Integrator37.getCurrentSignedStepsize();
        double double43 = highamHall54Integrator37.getMaxGrowth();
        int int44 = highamHall54Integrator37.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler45 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler45);
        double double47 = highamHall54Integrator11.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 5 + "'", int41 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
    }

    @Test
    public void test04301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04301");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray10);
        java.lang.Throwable[] throwableArray14 = derivativeException13.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException15);
        java.lang.Object[] objArray17 = derivativeException16.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException16);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
    }

    @Test
    public void test04302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04302");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) -1);
        double double29 = highamHall54Integrator11.getMinStep();
        int int30 = highamHall54Integrator11.getOrder();
        double double31 = highamHall54Integrator11.getCurrentStepStart();
        java.lang.String str32 = highamHall54Integrator11.getName();
        double double33 = highamHall54Integrator11.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 97.0d + "'", double29 == 97.0d);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
    }

    @Test
    public void test04303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04303");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray12);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        integratorException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.Throwable[] throwableArray28 = derivativeException25.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        java.lang.Throwable[] throwableArray30 = integratorException29.getSuppressed();
        java.lang.String str31 = integratorException29.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str31, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test04304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04304");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray19, doubleArray32);
        java.lang.String str37 = highamHall54Integrator36.getName();
        double double38 = highamHall54Integrator36.getSafety();
        int int39 = highamHall54Integrator36.getOrder();
        java.lang.String str40 = highamHall54Integrator36.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        highamHall54Integrator45.addSwitchingFunction(switchingFunction46, (double) 0.0f, 10.0d, 10);
        highamHall54Integrator45.setInitialStepSize(100.0d);
        double double53 = highamHall54Integrator45.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler54 = highamHall54Integrator45.getStepHandler();
        highamHall54Integrator36.setStepHandler(stepHandler54);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Higham-Hall 5(4)" + "'", str37, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.9d + "'", double38 == 0.9d);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Higham-Hall 5(4)" + "'", str40, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2d + "'", double53 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler54);
    }

    @Test
    public void test04305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04305");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray20);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException23);
        double[] doubleArray40 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray42 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray40, doubleArray42);
        java.lang.Object[] objArray44 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray44);
        java.lang.Object[] objArray46 = integratorException45.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException47);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException48);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException49);
        derivativeException9.addSuppressed((java.lang.Throwable) integratorException50);
        java.lang.Throwable[] throwableArray52 = integratorException50.getSuppressed();
        java.lang.Throwable[] throwableArray53 = integratorException50.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", (java.lang.Object[]) throwableArray53);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray53);
    }

    @Test
    public void test04306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04306");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getCurrentStepStart();
        double double17 = highamHall54Integrator11.getMaxStep();
        double double18 = highamHall54Integrator11.getMaxStep();
        double double19 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setMaxGrowth((double) (byte) 10);
        int int22 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setSafety(0.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
    }

    @Test
    public void test04307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04307");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator4.setMinReduction(0.9d);
        highamHall54Integrator4.setInitialStepSize((double) 10L);
        double double9 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction10, (double) 0.0f, (-0.0d), 10);
        highamHall54Integrator4.setMaxGrowth(7.211102550927978d);
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator4.getStepHandler();
        int int18 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
    }

    @Test
    public void test04308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04308");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, (double) 1, 5);
        double double10 = highamHall54Integrator4.getMinStep();
        java.lang.String str11 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) (byte) 100);
        java.lang.String str14 = highamHall54Integrator4.getName();
        int int15 = highamHall54Integrator4.getOrder();
        java.lang.String str16 = highamHall54Integrator4.getName();
        double double17 = highamHall54Integrator4.getSafety();
        int int18 = highamHall54Integrator4.getOrder();
        double double19 = highamHall54Integrator4.getCurrentStepStart();
        double double20 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double21 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 100.0d + "'", double17 == 100.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
    }

    @Test
    public void test04309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04309");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) ' ', 0.0d, (-1.0d), 0.0d);
        highamHall54Integrator4.setMaxGrowth((double) 100L);
        double double7 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
    }

    @Test
    public void test04310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04310");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        double[] doubleArray46 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray55 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray57 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray55, doubleArray57);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray46, doubleArray55);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (-1L), doubleArray34, doubleArray55);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) (-1L), doubleArray19, doubleArray34);
        int int62 = highamHall54Integrator61.getOrder();
        highamHall54Integrator61.setSafety(32.0d);
        java.lang.String str65 = highamHall54Integrator61.getName();
        double double66 = highamHall54Integrator61.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        highamHall54Integrator61.addSwitchingFunction(switchingFunction67, 17.88854381999832d, 0.0d, (int) (byte) -1);
        double double72 = highamHall54Integrator61.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 5 + "'", int62 == 5);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Higham-Hall 5(4)" + "'", str65, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
    }

    @Test
    public void test04311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04311");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100L, 35.0d, 2.4957893743180684d, (double) (short) 0);
        highamHall54Integrator4.setSafety((double) 1L);
        double double7 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler8);
    }

    @Test
    public void test04312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04312");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) -1);
        java.lang.String str29 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction30, (double) (-1), (double) (-1), 1);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
    }

    @Test
    public void test04313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04313");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        java.lang.String str15 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction16, (double) (byte) 100, 1.0d, 0);
        int int21 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction22, 0.0d, 0.0d, (int) (byte) 1);
        double double27 = highamHall54Integrator11.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 97.0d + "'", double27 == 97.0d);
    }

    @Test
    public void test04314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04314");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.Object[] objArray22 = integratorException19.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.Throwable[] throwableArray24 = integratorException23.getSuppressed();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        java.lang.Throwable[] throwableArray41 = derivativeException40.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray41);
        integratorException23.addSuppressed((java.lang.Throwable) integratorException42);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException52);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray61);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException62);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException62);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException64);
        derivativeException52.addSuppressed((java.lang.Throwable) derivativeException64);
        java.lang.Throwable[] throwableArray67 = derivativeException52.getSuppressed();
        java.lang.String str68 = derivativeException52.getPattern();
        integratorException23.addSuppressed((java.lang.Throwable) derivativeException52);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException52);
        java.lang.String str71 = derivativeException52.toString();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str71, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04315");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(3.1622776601683795d, (double) (byte) 1, (double) 0.0f, 32.0d);
        java.lang.String str5 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
    }

    @Test
    public void test04316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04316");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (byte) -1, (double) (byte) 1, 97.0d);
        java.lang.String str5 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) '#');
        java.lang.String str8 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction(5.916079783099616d);
        double double11 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
    }

    @Test
    public void test04317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04317");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test04318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04318");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        int int15 = highamHall54Integrator11.getOrder();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double double17 = highamHall54Integrator11.getCurrentSignedStepsize();
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        highamHall54Integrator29.setMaxGrowth((double) (-1));
        double double32 = highamHall54Integrator29.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator29.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler34);
        int int36 = highamHall54Integrator11.getOrder();
        int int37 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction38, 0.0d, 2.23606797749979d, (int) (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 31.144823004794873d + "'", double17 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 5 + "'", int36 == 5);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 5 + "'", int37 == 5);
    }

    @Test
    public void test04319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04319");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator4.setMinReduction(0.9d);
        highamHall54Integrator4.setInitialStepSize((double) 10L);
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(stepHandler12);
    }

    @Test
    public void test04320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04320");
        java.lang.String[] strArray9 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test04321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04321");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setSafety(31.144823004794873d);
        java.lang.String str19 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
    }

    @Test
    public void test04322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04322");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        java.lang.String str17 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction(100.0d);
        highamHall54Integrator11.setInitialStepSize((double) '#');
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
    }

    @Test
    public void test04323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04323");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction19, (double) 10, 35.0d, (int) (byte) 100);
        highamHall54Integrator11.setMaxGrowth(59.16079783099616d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(stepHandler18);
    }

    @Test
    public void test04324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04324");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        highamHall54Integrator11.setMaxGrowth((double) (-1L));
        int int20 = highamHall54Integrator11.getOrder();
        double[] doubleArray29 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray31 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray29, doubleArray31);
        highamHall54Integrator32.setMaxGrowth((double) (-1));
        double double35 = highamHall54Integrator32.getSafety();
        double double36 = highamHall54Integrator32.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler37 = highamHall54Integrator32.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        double[] doubleArray51 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray53 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray51, doubleArray53);
        double[] doubleArray63 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray65 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray63, doubleArray65);
        org.apache.commons.math.ode.StepHandler stepHandler67 = highamHall54Integrator66.getStepHandler();
        highamHall54Integrator54.setStepHandler(stepHandler67);
        highamHall54Integrator42.setStepHandler(stepHandler67);
        highamHall54Integrator32.setStepHandler(stepHandler67);
        highamHall54Integrator11.setStepHandler(stepHandler67);
        java.lang.String str72 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setSafety(52.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.9d + "'", double35 == 0.9d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2d + "'", double36 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Higham-Hall 5(4)" + "'", str72, "Higham-Hall 5(4)");
    }

    @Test
    public void test04325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04325");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray12);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test04326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04326");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        double double16 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator21.addSwitchingFunction(switchingFunction22, (double) (byte) -1, (double) 1, 5);
        double double27 = highamHall54Integrator21.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler28);
        java.lang.String str30 = highamHall54Integrator11.getName();
        java.lang.String str31 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setSafety(Double.NaN);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
    }

    @Test
    public void test04327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04327");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMinReduction();
        double double15 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction16, (double) 100.0f, (double) (short) -1, (int) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator11.getStepHandler();
        double double22 = highamHall54Integrator11.getSafety();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
    }

    @Test
    public void test04328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04328");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        highamHall54Integrator4.setSafety(1.0d);
        double double7 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (-0.0d), 31.622776601683793d, (double) (byte) -1);
        double double13 = highamHall54Integrator12.getMinReduction();
        java.lang.String str14 = highamHall54Integrator12.getName();
        double[] doubleArray23 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray25 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray23, doubleArray25);
        double[] doubleArray35 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray37 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray35, doubleArray37);
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator38.getStepHandler();
        highamHall54Integrator26.setStepHandler(stepHandler39);
        java.lang.String str41 = highamHall54Integrator26.getName();
        highamHall54Integrator26.setMaxGrowth((double) (short) -1);
        java.lang.String str44 = highamHall54Integrator26.getName();
        highamHall54Integrator26.setMaxGrowth((double) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator26.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator52.setMinReduction(0.9d);
        double double55 = highamHall54Integrator52.getMinStep();
        int int56 = highamHall54Integrator52.getOrder();
        double double57 = highamHall54Integrator52.getCurrentSignedStepsize();
        double double58 = highamHall54Integrator52.getMaxGrowth();
        int int59 = highamHall54Integrator52.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler60 = highamHall54Integrator52.getStepHandler();
        highamHall54Integrator26.setStepHandler(stepHandler60);
        highamHall54Integrator12.setStepHandler(stepHandler60);
        highamHall54Integrator4.setStepHandler(stepHandler60);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.2d + "'", double7 == 0.2d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.2d + "'", double13 == 0.2d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Higham-Hall 5(4)" + "'", str41, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Higham-Hall 5(4)" + "'", str44, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 5 + "'", int56 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 5 + "'", int59 == 5);
        org.junit.Assert.assertNotNull(stepHandler60);
    }

    @Test
    public void test04329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04329");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray12);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        integratorException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray32 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray32);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray32);
        integratorException15.addSuppressed((java.lang.Throwable) integratorException34);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray43);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException44);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException45);
        java.lang.Throwable[] throwableArray47 = derivativeException46.getSuppressed();
        java.lang.Throwable[] throwableArray48 = derivativeException46.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException46);
        integratorException34.addSuppressed((java.lang.Throwable) derivativeException49);
        java.lang.Throwable[] throwableArray51 = integratorException34.getSuppressed();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test04330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04330");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        double double16 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator21.addSwitchingFunction(switchingFunction22, (double) (byte) -1, (double) 1, 5);
        double double27 = highamHall54Integrator21.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler28);
        double double30 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setMinReduction(0.9d);
        double double33 = highamHall54Integrator11.getSafety();
        double double34 = highamHall54Integrator11.getMinStep();
        double double35 = highamHall54Integrator11.getMaxGrowth();
        int int36 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.9d + "'", double33 == 0.9d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 97.0d + "'", double34 == 97.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 5 + "'", int36 == 5);
    }

    @Test
    public void test04331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04331");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        java.lang.Throwable[] throwableArray24 = derivativeException20.getSuppressed();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        java.lang.Object[] objArray36 = derivativeException35.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray36);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray36);
        derivativeException20.addSuppressed((java.lang.Throwable) integratorException38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException38);
        java.lang.String str41 = integratorException38.toString();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str41, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test04332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04332");
        java.lang.String[] strArray6 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        java.lang.String str12 = integratorException11.toString();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str12, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test04333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04333");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        java.lang.Object[] objArray13 = derivativeException12.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        java.lang.Throwable[] throwableArray17 = integratorException16.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        java.lang.String str21 = integratorException19.getPattern();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str21, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04334");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        double double25 = highamHall54Integrator24.getCurrentSignedStepsize();
        highamHall54Integrator24.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator24.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler29);
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator11.getStepHandler();
        double double32 = highamHall54Integrator11.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        int int38 = highamHall54Integrator37.getOrder();
        java.lang.String str39 = highamHall54Integrator37.getName();
        int int40 = highamHall54Integrator37.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler41);
        highamHall54Integrator11.setInitialStepSize(97.0d);
        double double45 = highamHall54Integrator11.getMinReduction();
        java.lang.String str46 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 31.144823004794873d + "'", double25 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 97.0d + "'", double32 == 97.0d);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Higham-Hall 5(4)" + "'", str39, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.2d + "'", double45 == 0.2d);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Higham-Hall 5(4)" + "'", str46, "Higham-Hall 5(4)");
    }

    @Test
    public void test04335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04335");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction13, (double) '4', 1.0d, 0);
        double double18 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator11.getStepHandler();
        java.lang.String str20 = highamHall54Integrator11.getName();
        double double21 = highamHall54Integrator11.getMaxStep();
        double double22 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth(Double.NaN);
        double double25 = highamHall54Integrator11.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.9d + "'", double18 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
    }

    @Test
    public void test04336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04336");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize(0.0d);
        highamHall54Integrator4.setMinReduction((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        double double13 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test04337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04337");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        highamHall54Integrator11.setSafety((double) 0);
        java.lang.String str28 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction29, (double) 0L, 33.46640106136302d, (-1));
        double double34 = highamHall54Integrator11.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
    }

    @Test
    public void test04338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04338");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        double double16 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator21.addSwitchingFunction(switchingFunction22, (double) (byte) -1, (double) 1, 5);
        double double27 = highamHall54Integrator21.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler28);
        double double30 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setMinReduction(0.9d);
        double double33 = highamHall54Integrator11.getSafety();
        double double34 = highamHall54Integrator11.getMinStep();
        int int35 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.9d + "'", double33 == 0.9d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 97.0d + "'", double34 == 97.0d);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
    }

    @Test
    public void test04339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04339");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        double double16 = highamHall54Integrator11.getCurrentStepStart();
        double double17 = highamHall54Integrator11.getSafety();
        double double18 = highamHall54Integrator11.getMinStep();
        double double19 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setMinReduction(10.0d);
        int int22 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMinReduction((double) 10);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.9d + "'", double17 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 97.0d + "'", double18 == 97.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.0d) + "'", double19 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
    }

    @Test
    public void test04340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04340");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        double double77 = highamHall54Integrator76.getSafety();
        highamHall54Integrator76.setInitialStepSize((double) (-1));
        double double80 = highamHall54Integrator76.getMinReduction();
        java.lang.String str81 = highamHall54Integrator76.getName();
        double double82 = highamHall54Integrator76.getSafety();
        double double83 = highamHall54Integrator76.getMaxStep();
        highamHall54Integrator76.setSafety((double) '#');
        double double86 = highamHall54Integrator76.getSafety();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9d + "'", double77 == 0.9d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.2d + "'", double80 == 0.2d);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Higham-Hall 5(4)" + "'", str81, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.9d + "'", double82 == 0.9d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 100.0d + "'", double83 == 100.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 35.0d + "'", double86 == 35.0d);
    }

    @Test
    public void test04341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04341");
        java.lang.String[] strArray9 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray9);
        java.lang.String str17 = derivativeException16.toString();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)" + "'", str17, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)");
    }

    @Test
    public void test04342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04342");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        java.lang.Throwable[] throwableArray24 = integratorException23.getSuppressed();
        java.lang.String str25 = integratorException23.getPattern();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("", strArray34);
        java.lang.Object[] objArray37 = derivativeException36.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException36);
        integratorException23.addSuppressed((java.lang.Throwable) derivativeException36);
        java.lang.String[] strArray43 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray43);
        java.lang.String str45 = derivativeException44.getPattern();
        derivativeException36.addSuppressed((java.lang.Throwable) derivativeException44);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException44);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException44);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str45, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04343");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        java.lang.String str17 = derivativeException16.toString();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str17, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test04344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04344");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        java.lang.Throwable[] throwableArray24 = derivativeException20.getSuppressed();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        java.lang.Object[] objArray36 = derivativeException35.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray36);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray36);
        derivativeException20.addSuppressed((java.lang.Throwable) integratorException38);
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray52);
        java.lang.Object[] objArray59 = derivativeException58.getArguments();
        integratorException38.addSuppressed((java.lang.Throwable) derivativeException58);
        java.lang.String str61 = derivativeException58.toString();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str61, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test04345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04345");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getMaxStep();
        int int17 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setSafety((double) 5);
        highamHall54Integrator11.setMinReduction((-1.0d));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
    }

    @Test
    public void test04346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04346");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (-1.0f), 0.2d, (double) (byte) -1);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str6 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        double double12 = highamHall54Integrator11.getMinStep();
        java.lang.String str13 = highamHall54Integrator11.getName();
        double[] doubleArray22 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray24 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray22, doubleArray24);
        highamHall54Integrator25.setMaxGrowth((double) (-1));
        double double28 = highamHall54Integrator25.getSafety();
        double double29 = highamHall54Integrator25.getMinReduction();
        double double30 = highamHall54Integrator25.getMaxStep();
        java.lang.String str31 = highamHall54Integrator25.getName();
        double[] doubleArray40 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray42 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray40, doubleArray42);
        double[] doubleArray52 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray54 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray52, doubleArray54);
        org.apache.commons.math.ode.StepHandler stepHandler56 = highamHall54Integrator55.getStepHandler();
        highamHall54Integrator43.setStepHandler(stepHandler56);
        highamHall54Integrator25.setStepHandler(stepHandler56);
        highamHall54Integrator11.setStepHandler(stepHandler56);
        org.apache.commons.math.ode.StepHandler stepHandler60 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler60);
        int int62 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety((double) (-1.0f));
        java.lang.String str65 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth((double) ' ');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.9d + "'", double28 == 0.9d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 5 + "'", int62 == 5);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Higham-Hall 5(4)" + "'", str65, "Higham-Hall 5(4)");
    }

    @Test
    public void test04347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04347");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        highamHall54Integrator11.setSafety((double) 0);
        java.lang.String str28 = highamHall54Integrator11.getName();
        double double29 = highamHall54Integrator11.getSafety();
        int int30 = highamHall54Integrator11.getOrder();
        int int31 = highamHall54Integrator11.getOrder();
        java.lang.String str32 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) 0.0f);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
    }

    @Test
    public void test04348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04348");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.Object[] objArray10 = derivativeException9.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        double[] doubleArray28 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray30 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray28, doubleArray30);
        java.lang.Object[] objArray32 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray32);
        java.lang.Object[] objArray34 = integratorException33.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException33);
        java.lang.Throwable[] throwableArray36 = integratorException33.getSuppressed();
        java.lang.Object[] objArray37 = integratorException33.getArguments();
        java.lang.Throwable[] throwableArray38 = integratorException33.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray38);
        integratorException12.addSuppressed((java.lang.Throwable) integratorException39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException12);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException41);
        java.lang.String str43 = integratorException41.getPattern();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str43, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04349");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray12);
        java.lang.String str19 = derivativeException18.toString();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)" + "'", str19, "org.apache.commons.math.ode.DerivativeException: Higham-Hall 5(4)");
    }

    @Test
    public void test04350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04350");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray12);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        integratorException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.Throwable[] throwableArray28 = derivativeException25.getSuppressed();
        double[] doubleArray43 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray45 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray43, doubleArray45);
        java.lang.Object[] objArray47 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray47);
        java.lang.Object[] objArray49 = integratorException48.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException48);
        java.lang.Throwable[] throwableArray51 = integratorException48.getSuppressed();
        java.lang.Object[] objArray52 = integratorException48.getArguments();
        derivativeException25.addSuppressed((java.lang.Throwable) integratorException48);
        java.lang.String str54 = integratorException48.getPattern();
        java.lang.Class<?> wildcardClass55 = integratorException48.getClass();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test04351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04351");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1, (double) 10L, 0.2d, (double) (short) 0);
        java.lang.String str5 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        java.lang.String str7 = highamHall54Integrator4.getName();
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
    }

    @Test
    public void test04352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04352");
        double[] doubleArray16 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray18 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray16, doubleArray18);
        double[] doubleArray28 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray30 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray28, doubleArray30);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray16, doubleArray30);
        double[] doubleArray43 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray52 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray54 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray52, doubleArray54);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray43, doubleArray52);
        double[] doubleArray65 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray67 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray65, doubleArray67);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator69 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray52, doubleArray65);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator70 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, 10.0d, doubleArray30, doubleArray52);
        double[] doubleArray79 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray81 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator82 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray79, doubleArray81);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator83 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 0.2d, doubleArray52, doubleArray79);
        double[] doubleArray84 = null;
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator85 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, (double) 5, doubleArray52, doubleArray84);
        highamHall54Integrator85.setSafety(5.612486080160912d);
        int int88 = highamHall54Integrator85.getOrder();
        java.lang.String str89 = highamHall54Integrator85.getName();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 5 + "'", int88 == 5);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Higham-Hall 5(4)" + "'", str89, "Higham-Hall 5(4)");
    }

    @Test
    public void test04353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04353");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), 52.0d, 0.0d, (double) (short) 10);
        double double5 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
    }

    @Test
    public void test04354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04354");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray19);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException22);
        java.lang.Object[] objArray24 = derivativeException8.getArguments();
        java.lang.String str25 = derivativeException8.getPattern();
        java.lang.Object[] objArray26 = derivativeException8.getArguments();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException37);
        java.lang.Throwable[] throwableArray39 = integratorException38.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray39);
        java.lang.Throwable[] throwableArray41 = integratorException40.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException40);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException42);
        java.lang.Throwable[] throwableArray44 = derivativeException8.getSuppressed();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray44);
    }

    @Test
    public void test04355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04355");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction13, (double) '4', 1.0d, 0);
        highamHall54Integrator11.setMaxGrowth(35.0d);
        double[] doubleArray28 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray30 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray28, doubleArray30);
        double double32 = highamHall54Integrator31.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        highamHall54Integrator31.addSwitchingFunction(switchingFunction33, (double) '4', 1.0d, 0);
        double double38 = highamHall54Integrator31.getSafety();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator43.setMinReduction(0.9d);
        double double46 = highamHall54Integrator43.getSafety();
        double[] doubleArray55 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray57 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray55, doubleArray57);
        highamHall54Integrator58.setMaxGrowth((double) (-1));
        double double61 = highamHall54Integrator58.getMaxStep();
        java.lang.String str62 = highamHall54Integrator58.getName();
        double double63 = highamHall54Integrator58.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler64 = highamHall54Integrator58.getStepHandler();
        highamHall54Integrator43.setStepHandler(stepHandler64);
        highamHall54Integrator31.setStepHandler(stepHandler64);
        highamHall54Integrator11.setStepHandler(stepHandler64);
        double double68 = highamHall54Integrator11.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction69, (double) 5, 100.0d, (int) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 31.144823004794873d + "'", double32 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.9d + "'", double38 == 0.9d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.9d + "'", double46 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Higham-Hall 5(4)" + "'", str62, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.2d + "'", double63 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.2d + "'", double68 == 0.2d);
    }

    @Test
    public void test04356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04356");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        java.lang.Object[] objArray13 = derivativeException12.getArguments();
        java.lang.String str14 = derivativeException12.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException12);
        double[] doubleArray31 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray33 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray31, doubleArray33);
        java.lang.Object[] objArray35 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray35);
        java.lang.Object[] objArray37 = integratorException36.getArguments();
        java.lang.String str38 = integratorException36.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException36);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException36);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException36);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException36);
        java.lang.Throwable[] throwableArray43 = integratorException36.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) throwableArray43);
        java.lang.Throwable[] throwableArray45 = integratorException44.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException44);
        derivativeException12.addSuppressed((java.lang.Throwable) integratorException44);
        java.lang.String str48 = derivativeException12.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str14, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str48, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04357");
        java.lang.String[] strArray6 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray6);
        java.lang.Throwable[] throwableArray11 = derivativeException10.getSuppressed();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test04358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04358");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (-1.0f), 0.2d, (double) (byte) -1);
        highamHall54Integrator4.setInitialStepSize((double) 1);
        double double7 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) (byte) -1);
        double double10 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setSafety((double) 1);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test04359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04359");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setSafety(1.0d);
        highamHall54Integrator11.setInitialStepSize((double) (short) 1);
        double double20 = highamHall54Integrator11.getMaxGrowth();
        double double21 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setInitialStepSize(0.2d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1.0d) + "'", double20 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
    }

    @Test
    public void test04360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04360");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        double double77 = highamHall54Integrator76.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler78 = highamHall54Integrator76.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler79 = highamHall54Integrator76.getStepHandler();
        double double80 = highamHall54Integrator76.getMinStep();
        highamHall54Integrator76.setMinReduction((double) (byte) 0);
        java.lang.String str83 = highamHall54Integrator76.getName();
        highamHall54Integrator76.setMaxGrowth((-1.0d));
        java.lang.String str86 = highamHall54Integrator76.getName();
        double double87 = highamHall54Integrator76.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9d + "'", double77 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler78);
        org.junit.Assert.assertNotNull(stepHandler79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Higham-Hall 5(4)" + "'", str83, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Higham-Hall 5(4)" + "'", str86, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 100.0d + "'", double87 == 100.0d);
    }

    @Test
    public void test04361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04361");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, (double) 1, (double) ' ', (int) (short) 10);
        double double12 = highamHall54Integrator4.getMinStep();
        double double13 = highamHall54Integrator4.getMaxStep();
        double[] doubleArray22 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray24 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray22, doubleArray24);
        highamHall54Integrator25.setMaxGrowth((double) (-1));
        double double28 = highamHall54Integrator25.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator25.getStepHandler();
        highamHall54Integrator25.setMaxGrowth((double) 10);
        highamHall54Integrator25.setMinReduction((double) 10.0f);
        double double34 = highamHall54Integrator25.getMinStep();
        double[] doubleArray43 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray45 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray43, doubleArray45);
        double[] doubleArray55 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray57 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray55, doubleArray57);
        org.apache.commons.math.ode.StepHandler stepHandler59 = highamHall54Integrator58.getStepHandler();
        highamHall54Integrator46.setStepHandler(stepHandler59);
        double double61 = highamHall54Integrator46.getMaxStep();
        double double62 = highamHall54Integrator46.getMinReduction();
        highamHall54Integrator46.setInitialStepSize((double) '4');
        double double65 = highamHall54Integrator46.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler66 = highamHall54Integrator46.getStepHandler();
        highamHall54Integrator25.setStepHandler(stepHandler66);
        highamHall54Integrator4.setStepHandler(stepHandler66);
        double double69 = highamHall54Integrator4.getSafety();
        java.lang.String str70 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.9d + "'", double28 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 97.0d + "'", double34 == 97.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.2d + "'", double62 == 0.2d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.9d + "'", double65 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler66);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.9d + "'", double69 == 0.9d);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Higham-Hall 5(4)" + "'", str70, "Higham-Hall 5(4)");
    }

    @Test
    public void test04362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04362");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getMaxStep();
        java.lang.String str17 = highamHall54Integrator11.getName();
        double double18 = highamHall54Integrator11.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator11.getStepHandler();
        double double20 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double21 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setMinReduction(10.0d);
        double double24 = highamHall54Integrator11.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 97.0d + "'", double18 == 97.0d);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 31.144823004794873d + "'", double20 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
    }

    @Test
    public void test04363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04363");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setInitialStepSize((double) '4');
        double double30 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setSafety((double) '#');
        double double33 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setSafety(23.62362101477432d);
        double double36 = highamHall54Integrator11.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2d + "'", double27 == 0.2d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.9d + "'", double30 == 0.9d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
    }

    @Test
    public void test04364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04364");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.Object[] objArray10 = derivativeException9.getArguments();
        java.lang.Throwable[] throwableArray11 = derivativeException9.getSuppressed();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        java.lang.Object[] objArray21 = derivativeException20.getArguments();
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException20);
        java.lang.Throwable[] throwableArray23 = derivativeException20.getSuppressed();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        java.lang.Object[] objArray37 = derivativeException36.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray37);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray37);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray37);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray49);
        java.lang.Object[] objArray51 = derivativeException50.getArguments();
        java.lang.Throwable[] throwableArray52 = derivativeException50.getSuppressed();
        java.lang.Throwable[] throwableArray53 = derivativeException50.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray53);
        integratorException40.addSuppressed((java.lang.Throwable) integratorException54);
        java.lang.Throwable[] throwableArray56 = integratorException40.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException57);
        derivativeException20.addSuppressed((java.lang.Throwable) derivativeException58);
        java.lang.Object[] objArray60 = derivativeException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray60);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!, , , , , ]");
    }

    @Test
    public void test04365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04365");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        double double18 = highamHall54Integrator11.getMinReduction();
        double double19 = highamHall54Integrator11.getMaxStep();
        double double20 = highamHall54Integrator11.getSafety();
        java.lang.String str21 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.9d + "'", double20 == 0.9d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
    }

    @Test
    public void test04366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04366");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        double double18 = highamHall54Integrator11.getMinReduction();
        highamHall54Integrator11.setMinReduction((double) (short) 100);
        double double21 = highamHall54Integrator11.getMinStep();
        int int22 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator11.getStepHandler();
        double double24 = highamHall54Integrator11.getMaxGrowth();
        int int25 = highamHall54Integrator11.getOrder();
        double double26 = highamHall54Integrator11.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', 0.9d, (double) '4', (double) 5);
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator31.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler32);
        int int34 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 97.0d + "'", double21 == 97.0d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
    }

    @Test
    public void test04367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04367");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException22);
        java.lang.Object[] objArray24 = derivativeException23.getArguments();
        java.lang.String str25 = derivativeException23.getPattern();
        java.lang.Object[] objArray26 = derivativeException23.getArguments();
        java.lang.Object[] objArray27 = derivativeException23.getArguments();
        java.lang.Object[] objArray28 = derivativeException23.getArguments();
        java.lang.Class<?> wildcardClass29 = objArray28.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str25, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test04368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04368");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException20);
        java.lang.Throwable[] throwableArray23 = integratorException20.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException24);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray38);
        integratorException24.addSuppressed((java.lang.Throwable) derivativeException44);
        java.lang.String[] strArray50 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray50);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray50);
        java.lang.String str53 = derivativeException52.getPattern();
        derivativeException44.addSuppressed((java.lang.Throwable) derivativeException52);
        java.lang.Throwable[] throwableArray55 = derivativeException44.getSuppressed();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(throwableArray55);
    }

    @Test
    public void test04369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04369");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException22);
        java.lang.Object[] objArray24 = derivativeException23.getArguments();
        java.lang.String str25 = derivativeException23.getPattern();
        java.lang.Object[] objArray26 = derivativeException23.getArguments();
        java.lang.Class<?> wildcardClass27 = derivativeException23.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str25, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test04370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04370");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        highamHall54Integrator11.setMaxGrowth((double) (-1L));
        int int20 = highamHall54Integrator11.getOrder();
        java.lang.String str21 = highamHall54Integrator11.getName();
        double double22 = highamHall54Integrator11.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction23, 0.0d, 71.02112361825881d, 0);
        double double28 = highamHall54Integrator11.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 97.0d + "'", double22 == 97.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 97.0d + "'", double28 == 97.0d);
    }

    @Test
    public void test04371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04371");
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException22);
        java.lang.Object[] objArray24 = derivativeException23.getArguments();
        java.lang.String str25 = derivativeException23.getPattern();
        java.lang.Object[] objArray26 = derivativeException23.getArguments();
        java.lang.Object[] objArray27 = derivativeException23.getArguments();
        java.lang.Throwable[] throwableArray28 = derivativeException23.getSuppressed();
        java.lang.String str29 = derivativeException23.getPattern();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str25, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str29, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04372");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        double double16 = highamHall54Integrator11.getMaxStep();
        java.lang.String str17 = highamHall54Integrator11.getName();
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        double[] doubleArray38 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray40 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray38, doubleArray40);
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator41.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler42);
        highamHall54Integrator11.setStepHandler(stepHandler42);
        double double45 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setInitialStepSize((double) 10L);
        double double48 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMinReduction((double) (-1.0f));
        double double51 = highamHall54Integrator11.getMinReduction();
        int int52 = highamHall54Integrator11.getOrder();
        int int53 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.9d + "'", double45 == 0.9d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.9d + "'", double48 == 0.9d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1.0d) + "'", double51 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
    }

    @Test
    public void test04373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04373");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        double double16 = highamHall54Integrator11.getMaxStep();
        double double17 = highamHall54Integrator11.getMaxGrowth();
        double double18 = highamHall54Integrator11.getCurrentSignedStepsize();
        java.lang.String str19 = highamHall54Integrator11.getName();
        double double20 = highamHall54Integrator11.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 31.144823004794873d + "'", double18 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }

    @Test
    public void test04374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04374");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test04375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04375");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 1.0f, (double) 10, (double) (byte) 1);
        java.lang.String str5 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction(7.211102550927978d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, 56.23413251903491d, (double) 0L, (int) (short) 10);
        int int13 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
    }

    @Test
    public void test04376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04376");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getMaxStep();
        double double17 = highamHall54Integrator11.getMinReduction();
        java.lang.String str18 = highamHall54Integrator11.getName();
        int int19 = highamHall54Integrator11.getOrder();
        int int20 = highamHall54Integrator11.getOrder();
        int int21 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
    }

    @Test
    public void test04377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04377");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        int int5 = highamHall54Integrator4.getOrder();
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        highamHall54Integrator17.setMaxGrowth((double) (-1));
        double double20 = highamHall54Integrator17.getSafety();
        highamHall54Integrator17.setSafety((double) 1.0f);
        highamHall54Integrator17.setInitialStepSize(0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        highamHall54Integrator17.addSwitchingFunction(switchingFunction25, (double) 0, 32.0d, 5);
        highamHall54Integrator17.setSafety(0.0d);
        double[] doubleArray40 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray42 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray40, doubleArray42);
        double[] doubleArray52 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray54 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray52, doubleArray54);
        org.apache.commons.math.ode.StepHandler stepHandler56 = highamHall54Integrator55.getStepHandler();
        highamHall54Integrator43.setStepHandler(stepHandler56);
        java.lang.String str58 = highamHall54Integrator43.getName();
        double double59 = highamHall54Integrator43.getMinReduction();
        double double60 = highamHall54Integrator43.getMaxGrowth();
        double double61 = highamHall54Integrator43.getMinStep();
        double double62 = highamHall54Integrator43.getCurrentStepStart();
        double double63 = highamHall54Integrator43.getMinStep();
        highamHall54Integrator43.setSafety((double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler66 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator17.setStepHandler(stepHandler66);
        highamHall54Integrator4.setStepHandler(stepHandler66);
        double double69 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.9d + "'", double20 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Higham-Hall 5(4)" + "'", str58, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.2d + "'", double59 == 0.2d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 97.0d + "'", double61 == 97.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 97.0d + "'", double63 == 97.0d);
        org.junit.Assert.assertNotNull(stepHandler66);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test04378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04378");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (-1.0f), 0.2d, (double) (byte) -1);
        highamHall54Integrator4.setInitialStepSize((double) 1);
        double double7 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) (byte) -1);
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getMinReduction();
        double double12 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.0d) + "'", double11 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
    }

    @Test
    public void test04379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04379");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray19, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction37, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        highamHall54Integrator36.setMinReduction((double) (byte) 0);
        int int44 = highamHall54Integrator36.getOrder();
        int int45 = highamHall54Integrator36.getOrder();
        int int46 = highamHall54Integrator36.getOrder();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 5 + "'", int45 == 5);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
    }

    @Test
    public void test04380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04380");
        double[] doubleArray10 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray12 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray10, doubleArray12);
        double[] doubleArray22 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray24 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray22, doubleArray24);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray10, doubleArray24);
        int int27 = highamHall54Integrator26.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (short) -1, (double) 'a', (double) 1L);
        double double33 = highamHall54Integrator32.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator32.getStepHandler();
        highamHall54Integrator26.setStepHandler(stepHandler34);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        highamHall54Integrator26.addSwitchingFunction(switchingFunction36, 0.0d, 3.1622776601683795d, 10);
        highamHall54Integrator26.setMinReduction((-1.0d));
        double double43 = highamHall54Integrator26.getSafety();
        double double44 = highamHall54Integrator26.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1.0d) + "'", double33 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.9d + "'", double43 == 0.9d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
    }

    @Test
    public void test04381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04381");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getCurrentSignedStepsize();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        highamHall54Integrator28.setMaxGrowth((double) (-1));
        double double31 = highamHall54Integrator28.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        highamHall54Integrator36.setSafety(1.0d);
        double double39 = highamHall54Integrator36.getMinReduction();
        double[] doubleArray48 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray50 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray48, doubleArray50);
        double double52 = highamHall54Integrator51.getCurrentSignedStepsize();
        highamHall54Integrator51.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator51.getStepHandler();
        highamHall54Integrator36.setStepHandler(stepHandler55);
        highamHall54Integrator28.setStepHandler(stepHandler55);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        int int63 = highamHall54Integrator62.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler64 = highamHall54Integrator62.getStepHandler();
        highamHall54Integrator62.setMaxGrowth((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler67 = highamHall54Integrator62.getStepHandler();
        highamHall54Integrator28.setStepHandler(stepHandler67);
        highamHall54Integrator11.setStepHandler(stepHandler67);
        highamHall54Integrator11.setMaxGrowth((double) 100);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 31.144823004794873d + "'", double15 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.2d + "'", double39 == 0.2d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 31.144823004794873d + "'", double52 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 5 + "'", int63 == 5);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertNotNull(stepHandler67);
    }

    @Test
    public void test04382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04382");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray12);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        java.lang.Object[] objArray26 = derivativeException25.getArguments();
        java.lang.Throwable[] throwableArray27 = derivativeException25.getSuppressed();
        java.lang.Throwable[] throwableArray28 = derivativeException25.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray28);
        integratorException15.addSuppressed((java.lang.Throwable) integratorException29);
        java.lang.Object[] objArray31 = integratorException29.getArguments();
        java.lang.Object[] objArray32 = integratorException29.getArguments();
        java.lang.Throwable[] throwableArray33 = integratorException29.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException29);
        java.lang.Throwable[] throwableArray35 = integratorException29.getSuppressed();
        java.lang.String str36 = integratorException29.getPattern();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test04383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04383");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        java.lang.String str21 = integratorException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.Object[] objArray25 = integratorException24.getArguments();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException34);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray43);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException44);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException45);
        java.lang.String str47 = derivativeException45.getPattern();
        derivativeException34.addSuppressed((java.lang.Throwable) derivativeException45);
        integratorException24.addSuppressed((java.lang.Throwable) derivativeException45);
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray60);
        java.lang.Object[] objArray62 = derivativeException61.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray62);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray62);
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray62);
        java.lang.Throwable[] throwableArray66 = integratorException65.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException65);
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException65);
        derivativeException45.addSuppressed((java.lang.Throwable) integratorException65);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException65);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray66);
    }

    @Test
    public void test04384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04384");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        double double27 = highamHall54Integrator11.getMinReduction();
        double double28 = highamHall54Integrator11.getMaxGrowth();
        double double29 = highamHall54Integrator11.getMinStep();
        double double30 = highamHall54Integrator11.getCurrentStepStart();
        double double31 = highamHall54Integrator11.getMinStep();
        highamHall54Integrator11.setSafety((double) 1L);
        double double34 = highamHall54Integrator11.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2d + "'", double27 == 0.2d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 97.0d + "'", double29 == 97.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 97.0d + "'", double31 == 97.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
    }

    @Test
    public void test04385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04385");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray13);
        double[] doubleArray36 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray38 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray36, doubleArray38);
        java.lang.Object[] objArray40 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray40);
        java.lang.Object[] objArray42 = integratorException41.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray42);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException43);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException44);
        double[] doubleArray60 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray62 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray60, doubleArray62);
        java.lang.Object[] objArray64 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray64);
        java.lang.Object[] objArray66 = integratorException65.getArguments();
        java.lang.String str67 = integratorException65.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException65);
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException65);
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException65);
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException70);
        derivativeException44.addSuppressed((java.lang.Throwable) derivativeException71);
        java.lang.Throwable[] throwableArray73 = derivativeException44.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException44);
        derivativeException20.addSuppressed((java.lang.Throwable) integratorException74);
        java.lang.Throwable[] throwableArray76 = derivativeException20.getSuppressed();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray76);
    }

    @Test
    public void test04386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04386");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator4.setMinReduction(0.9d);
        double double7 = highamHall54Integrator4.getSafety();
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety((double) 1);
        highamHall54Integrator4.setMinReduction((double) (-1));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
    }

    @Test
    public void test04387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04387");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        double double25 = highamHall54Integrator24.getCurrentSignedStepsize();
        highamHall54Integrator24.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator24.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler29);
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator11.getStepHandler();
        int int32 = highamHall54Integrator11.getOrder();
        java.lang.String str33 = highamHall54Integrator11.getName();
        int int34 = highamHall54Integrator11.getOrder();
        java.lang.String str35 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 31.144823004794873d + "'", double25 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Higham-Hall 5(4)" + "'", str33, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Higham-Hall 5(4)" + "'", str35, "Higham-Hall 5(4)");
    }

    @Test
    public void test04388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04388");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0, (double) 10, 0.0d);
        double double5 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety(5.580754698496868d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
    }

    @Test
    public void test04389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04389");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0.0f, 0.0d, (double) 100);
        double double5 = highamHall54Integrator4.getMinReduction();
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator17.setStepHandler(stepHandler30);
        double double32 = highamHall54Integrator17.getMaxStep();
        double double33 = highamHall54Integrator17.getMaxGrowth();
        double double34 = highamHall54Integrator17.getSafety();
        double double35 = highamHall54Integrator17.getMinStep();
        double double36 = highamHall54Integrator17.getSafety();
        int int37 = highamHall54Integrator17.getOrder();
        double double38 = highamHall54Integrator17.getMaxStep();
        double double39 = highamHall54Integrator17.getCurrentStepStart();
        double[] doubleArray48 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray50 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray48, doubleArray50);
        highamHall54Integrator51.setMaxGrowth((double) (-1));
        double double54 = highamHall54Integrator51.getMaxStep();
        highamHall54Integrator51.setInitialStepSize((double) 0);
        java.lang.String str57 = highamHall54Integrator51.getName();
        double double58 = highamHall54Integrator51.getCurrentStepStart();
        java.lang.String str59 = highamHall54Integrator51.getName();
        java.lang.String str60 = highamHall54Integrator51.getName();
        double double61 = highamHall54Integrator51.getMinStep();
        highamHall54Integrator51.setMinReduction((double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler64 = highamHall54Integrator51.getStepHandler();
        highamHall54Integrator17.setStepHandler(stepHandler64);
        highamHall54Integrator4.setStepHandler(stepHandler64);
        highamHall54Integrator4.setSafety(5.916079783099616d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.9d + "'", double34 == 0.9d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 97.0d + "'", double35 == 97.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.9d + "'", double36 == 0.9d);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 5 + "'", int37 == 5);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Higham-Hall 5(4)" + "'", str57, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Higham-Hall 5(4)" + "'", str59, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Higham-Hall 5(4)" + "'", str60, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 97.0d + "'", double61 == 97.0d);
        org.junit.Assert.assertNotNull(stepHandler64);
    }

    @Test
    public void test04390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04390");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setInitialStepSize((double) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction30, (double) (-1.0f), (double) 100L, (int) (byte) 10);
        double double35 = highamHall54Integrator11.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.2d + "'", double35 == 0.2d);
    }

    @Test
    public void test04391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04391");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test04392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04392");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) ' ', (double) 10.0f, (double) (-1));
        double[] doubleArray13 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray15 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray13, doubleArray15);
        double double17 = highamHall54Integrator16.getCurrentSignedStepsize();
        double double18 = highamHall54Integrator16.getCurrentStepStart();
        double double19 = highamHall54Integrator16.getMaxGrowth();
        double[] doubleArray28 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray30 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray28, doubleArray30);
        highamHall54Integrator31.setMaxGrowth((double) (-1));
        double double34 = highamHall54Integrator31.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator31.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler35);
        java.lang.String str37 = highamHall54Integrator16.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        int int43 = highamHall54Integrator42.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator42.getStepHandler();
        java.lang.String str45 = highamHall54Integrator42.getName();
        double double46 = highamHall54Integrator42.getCurrentStepStart();
        java.lang.String str47 = highamHall54Integrator42.getName();
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator42.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler48);
        highamHall54Integrator4.setStepHandler(stepHandler48);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 31.144823004794873d + "'", double17 == 31.144823004794873d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.9d + "'", double34 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Higham-Hall 5(4)" + "'", str37, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Higham-Hall 5(4)" + "'", str45, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Higham-Hall 5(4)" + "'", str47, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler48);
    }

    @Test
    public void test04393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04393");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (short) -1, (double) 'a', (double) 1L);
        double double5 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setMinReduction(31.144823004794873d);
        highamHall54Integrator4.setSafety(100.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
    }

    @Test
    public void test04394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04394");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray31);
        java.lang.Object[] objArray33 = derivativeException32.getArguments();
        java.lang.Throwable[] throwableArray34 = derivativeException32.getSuppressed();
        java.lang.Throwable[] throwableArray35 = derivativeException32.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) throwableArray35);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray35);
        derivativeException20.addSuppressed((java.lang.Throwable) integratorException38);
        java.lang.Throwable[] throwableArray40 = integratorException38.getSuppressed();
        java.lang.Throwable[] throwableArray41 = integratorException38.getSuppressed();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray41);
    }

    @Test
    public void test04395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04395");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction29, (double) 'a', 97.0d, (int) (byte) 100);
        java.lang.String str34 = highamHall54Integrator11.getName();
        double double35 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setInitialStepSize((double) 1L);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 31.144823004794873d + "'", double35 == 31.144823004794873d);
    }

    @Test
    public void test04396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04396");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setMaxGrowth((double) 10);
        java.lang.String str18 = highamHall54Integrator11.getName();
        double double19 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setSafety((double) 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.9d + "'", double19 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler20);
    }

    @Test
    public void test04397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04397");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (short) -1, (double) 'a', (double) 1L);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double8 = highamHall54Integrator4.getMaxStep();
        double double9 = highamHall54Integrator4.getMinStep();
        double double10 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
    }

    @Test
    public void test04398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04398");
        double[] doubleArray12 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray14 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray12, doubleArray14);
        double[] doubleArray24 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray26 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray24, doubleArray26);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray12, doubleArray26);
        double[] doubleArray39 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray41 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray39, doubleArray41);
        double[] doubleArray45 = new double[] { (-1L), 97.0d };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, doubleArray41, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) (byte) 100, doubleArray12, doubleArray45);
        highamHall54Integrator47.setMaxGrowth((-1.0d));
        double double50 = highamHall54Integrator47.getCurrentSignedStepsize();
        highamHall54Integrator47.setMinReduction(5.916079783099616d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        highamHall54Integrator47.addSwitchingFunction(switchingFunction53, (double) (byte) 1, 4.995787599886596d, (-1));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 97.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
    }

    @Test
    public void test04399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04399");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        java.lang.Object[] objArray14 = derivativeException13.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException15);
        java.lang.Object[] objArray18 = integratorException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", objArray18);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
    }

    @Test
    public void test04400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04400");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        int int17 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setSafety((double) (-1.0f));
        java.lang.Class<?> wildcardClass20 = highamHall54Integrator11.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test04401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04401");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getMaxStep();
        int int16 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMinReduction((double) (-1.0f));
        double double19 = highamHall54Integrator11.getMaxStep();
        int int20 = highamHall54Integrator11.getOrder();
        double double21 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 31.144823004794873d + "'", double21 == 31.144823004794873d);
    }

    @Test
    public void test04402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04402");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.Object[] objArray10 = derivativeException9.getArguments();
        java.lang.Throwable[] throwableArray11 = derivativeException9.getSuppressed();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        java.lang.Object[] objArray21 = derivativeException20.getArguments();
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException20);
        java.lang.Throwable[] throwableArray23 = derivativeException9.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException24);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray23);
    }

    @Test
    public void test04403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04403");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, Double.NaN, (double) (short) 0, 2.4957893743180684d);
        double[] doubleArray13 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray15 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray13, doubleArray15);
        highamHall54Integrator16.setMaxGrowth((double) (-1));
        double double19 = highamHall54Integrator16.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator16.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator16.getStepHandler();
        double[] doubleArray30 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray32 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray30, doubleArray32);
        highamHall54Integrator33.setMaxGrowth((double) (-1));
        double double36 = highamHall54Integrator33.getSafety();
        double double37 = highamHall54Integrator33.getMinReduction();
        double double38 = highamHall54Integrator33.getMaxStep();
        java.lang.String str39 = highamHall54Integrator33.getName();
        double[] doubleArray48 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray50 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray48, doubleArray50);
        double[] doubleArray60 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray62 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray60, doubleArray62);
        org.apache.commons.math.ode.StepHandler stepHandler64 = highamHall54Integrator63.getStepHandler();
        highamHall54Integrator51.setStepHandler(stepHandler64);
        highamHall54Integrator33.setStepHandler(stepHandler64);
        highamHall54Integrator16.setStepHandler(stepHandler64);
        int int68 = highamHall54Integrator16.getOrder();
        double[] doubleArray77 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray79 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray77, doubleArray79);
        org.apache.commons.math.ode.StepHandler stepHandler81 = highamHall54Integrator80.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler81);
        highamHall54Integrator4.setStepHandler(stepHandler81);
        int int84 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.9d + "'", double19 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.9d + "'", double36 == 0.9d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2d + "'", double37 == 0.2d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Higham-Hall 5(4)" + "'", str39, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 5 + "'", int68 == 5);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 5 + "'", int84 == 5);
    }

    @Test
    public void test04404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04404");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        double double16 = highamHall54Integrator11.getMaxStep();
        double double17 = highamHall54Integrator11.getMaxGrowth();
        double double18 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double19 = highamHall54Integrator11.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 31.144823004794873d + "'", double18 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2d + "'", double19 == 0.2d);
    }

    @Test
    public void test04405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04405");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) (short) -1, 22.80350850198276d, 31.144823004794873d);
    }

    @Test
    public void test04406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04406");
        java.lang.String[] strArray5 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray5);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException9);
        java.lang.String[] strArray16 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        integratorException10.addSuppressed((java.lang.Throwable) derivativeException19);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test04407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04407");
        double[] doubleArray8 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray17 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray19 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray17, doubleArray19);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray8, doubleArray17);
        double double22 = highamHall54Integrator21.getCurrentSignedStepsize();
        java.lang.String str23 = highamHall54Integrator21.getName();
        highamHall54Integrator21.setSafety(35.0d);
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator21.getStepHandler();
        double double27 = highamHall54Integrator21.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator21.addSwitchingFunction(switchingFunction28, 31.144823004794873d, (double) (short) -1, 100);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2d + "'", double27 == 0.2d);
    }

    @Test
    public void test04408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04408");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        java.lang.Object[] objArray34 = derivativeException33.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray34);
        integratorException19.addSuppressed((java.lang.Throwable) integratorException37);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.Throwable[] throwableArray40 = integratorException19.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray40);
    }

    @Test
    public void test04409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04409");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        double double15 = highamHall54Integrator11.getMaxStep();
        java.lang.String str16 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction((-0.0d));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
    }

    @Test
    public void test04410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04410");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(Double.NaN, 10.0d, (double) 10, 0.2d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        int int6 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
    }

    @Test
    public void test04411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04411");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100L, 35.0d, 2.4957893743180684d, (double) (short) 0);
        highamHall54Integrator4.setSafety((double) 1L);
        double double7 = highamHall54Integrator4.getSafety();
        int int8 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
    }

    @Test
    public void test04412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04412");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) 100, (double) (byte) -1, (double) 10L);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        double double6 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
    }

    @Test
    public void test04413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04413");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        java.lang.Object[] objArray13 = derivativeException12.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        java.lang.Throwable[] throwableArray17 = integratorException16.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", (java.lang.Object[]) throwableArray17);
        java.lang.String str19 = integratorException18.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException18);
        java.lang.String str21 = derivativeException20.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        java.lang.Object[] objArray23 = integratorException22.getArguments();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
    }

    @Test
    public void test04414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04414");
        double[] doubleArray12 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray14 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray12, doubleArray14);
        double[] doubleArray18 = new double[] { (-1L), 97.0d };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, doubleArray14, doubleArray18);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        double[] doubleArray44 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray46 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray44, doubleArray46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray32, doubleArray46);
        double[] doubleArray57 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray66 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray68 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator69 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray66, doubleArray68);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator70 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray57, doubleArray66);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator71 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (byte) 1, doubleArray46, doubleArray66);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator72 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, 0.9d, doubleArray18, doubleArray66);
        highamHall54Integrator72.setSafety(9.924141172814958d);
        highamHall54Integrator72.setMaxGrowth((double) 100L);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 97.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0]");
    }

    @Test
    public void test04415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04415");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        java.lang.Object[] objArray18 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        java.lang.Throwable[] throwableArray22 = integratorException19.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray39);
        integratorException19.addSuppressed((java.lang.Throwable) integratorException47);
        java.lang.String str49 = integratorException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
    }

    @Test
    public void test04416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04416");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (-1.0f), 0.2d, (double) (byte) -1);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize(0.0d);
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, 9.848857801796104d, (double) (short) 1, (int) (short) 100);
        highamHall54Integrator4.setSafety((double) (-1.0f));
        java.lang.String str18 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.9d + "'", double10 == 0.9d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
    }

    @Test
    public void test04417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04417");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.9d, (double) (byte) 0, 23.62362101477432d, (-0.0d));
    }

    @Test
    public void test04418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04418");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        java.lang.String str17 = derivativeException16.toString();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str17, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test04419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04419");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, 35.0d, (double) (-1.0f), (double) (byte) 0);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        double double19 = highamHall54Integrator18.getCurrentSignedStepsize();
        highamHall54Integrator18.setMinReduction((double) (byte) 10);
        double double22 = highamHall54Integrator18.getCurrentSignedStepsize();
        java.lang.String str23 = highamHall54Integrator18.getName();
        int int24 = highamHall54Integrator18.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler25);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 31.144823004794873d + "'", double19 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 31.144823004794873d + "'", double22 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertNotNull(stepHandler25);
    }

    @Test
    public void test04420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04420");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        double double77 = highamHall54Integrator76.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction78 = null;
        highamHall54Integrator76.addSwitchingFunction(switchingFunction78, (double) '4', 97.0d, (int) (byte) -1);
        java.lang.String str83 = highamHall54Integrator76.getName();
        java.lang.String str84 = highamHall54Integrator76.getName();
        double double85 = highamHall54Integrator76.getCurrentStepStart();
        java.lang.String str86 = highamHall54Integrator76.getName();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Higham-Hall 5(4)" + "'", str83, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Higham-Hall 5(4)" + "'", str84, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Higham-Hall 5(4)" + "'", str86, "Higham-Hall 5(4)");
    }

    @Test
    public void test04421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04421");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        java.lang.String str17 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction(100.0d);
        double double20 = highamHall54Integrator11.getMinStep();
        double double21 = highamHall54Integrator11.getMinStep();
        double double22 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double23 = highamHall54Integrator11.getMinReduction();
        int int24 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setInitialStepSize(32.0d);
        double double27 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double28 = highamHall54Integrator11.getMaxGrowth();
        double double29 = highamHall54Integrator11.getSafety();
        double double30 = highamHall54Integrator11.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 97.0d + "'", double20 == 97.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 97.0d + "'", double21 == 97.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 31.144823004794873d + "'", double22 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 100.0d + "'", double23 == 100.0d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 31.144823004794873d + "'", double27 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.9d + "'", double29 == 0.9d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 100.0d + "'", double30 == 100.0d);
    }

    @Test
    public void test04422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04422");
        double[] doubleArray14 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray23 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray25 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray23, doubleArray25);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray14, doubleArray23);
        double[] doubleArray36 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray38 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray36, doubleArray38);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray23, doubleArray36);
        double[] doubleArray51 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray60 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray62 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray60, doubleArray62);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray51, doubleArray60);
        double[] doubleArray73 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray75 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray73, doubleArray75);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator77 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray60, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator78 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) 1, doubleArray36, doubleArray73);
        double[] doubleArray79 = null;
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 5.580754698496868d, doubleArray36, doubleArray79);
        highamHall54Integrator80.setMinReduction(2.23606797749979d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0]");
    }

    @Test
    public void test04423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04423");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) -1, (double) (short) -1, 32.0d, (double) 10.0f);
        highamHall54Integrator4.setMinReduction((double) 0);
        double double7 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMaxGrowth((double) 0.0f);
        java.lang.String str10 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
    }

    @Test
    public void test04424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04424");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException24);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test04425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04425");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray19, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction37, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        highamHall54Integrator36.setMinReduction((double) (byte) 0);
        highamHall54Integrator36.setInitialStepSize((double) 'a');
        java.lang.String str46 = highamHall54Integrator36.getName();
        highamHall54Integrator36.setInitialStepSize((double) (byte) -1);
        double double49 = highamHall54Integrator36.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Higham-Hall 5(4)" + "'", str46, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 35.0d + "'", double49 == 35.0d);
    }

    @Test
    public void test04426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04426");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        double double77 = highamHall54Integrator76.getSafety();
        highamHall54Integrator76.setInitialStepSize((double) (-1));
        highamHall54Integrator76.setMinReduction((double) (byte) 10);
        java.lang.String str82 = highamHall54Integrator76.getName();
        highamHall54Integrator76.setMaxGrowth(5.916079783099616d);
        double double85 = highamHall54Integrator76.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9d + "'", double77 == 0.9d);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Higham-Hall 5(4)" + "'", str82, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double85));
    }

    @Test
    public void test04427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04427");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(2.4957893743180684d, 0.9d, (double) 100.0f, 9.924141172814958d);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9d + "'", double5 == 0.9d);
    }

    @Test
    public void test04428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04428");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        java.lang.String str27 = highamHall54Integrator11.getName();
        double double28 = highamHall54Integrator11.getCurrentSignedStepsize();
        int int29 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 31.144823004794873d + "'", double28 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
    }

    @Test
    public void test04429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04429");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.Object[] objArray10 = derivativeException9.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        double[] doubleArray28 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray30 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray28, doubleArray30);
        java.lang.Object[] objArray32 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray32);
        java.lang.Object[] objArray34 = integratorException33.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException33);
        java.lang.Throwable[] throwableArray36 = integratorException33.getSuppressed();
        java.lang.Object[] objArray37 = integratorException33.getArguments();
        java.lang.Throwable[] throwableArray38 = integratorException33.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray38);
        integratorException12.addSuppressed((java.lang.Throwable) integratorException39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException12);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException41);
        java.lang.Class<?> wildcardClass43 = derivativeException42.getClass();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test04430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04430");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, (double) 1, 5);
        double double10 = highamHall54Integrator4.getMinStep();
        java.lang.String str11 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) (byte) 100);
        java.lang.String str14 = highamHall54Integrator4.getName();
        double double15 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) 100);
        highamHall54Integrator4.setMinReduction((double) 'a');
        double double20 = highamHall54Integrator4.getCurrentStepStart();
        double double21 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
    }

    @Test
    public void test04431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04431");
        java.lang.String[] strArray4 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray26);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException29);
        double[] doubleArray46 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray48 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray46, doubleArray48);
        java.lang.Object[] objArray50 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray50);
        java.lang.Object[] objArray52 = integratorException51.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException53);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException54);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException55);
        derivativeException15.addSuppressed((java.lang.Throwable) integratorException56);
        java.lang.Throwable[] throwableArray58 = integratorException56.getSuppressed();
        java.lang.Throwable[] throwableArray59 = integratorException56.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException56);
        derivativeException6.addSuppressed((java.lang.Throwable) integratorException56);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException56);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException71);
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException71);
        java.lang.String str74 = derivativeException71.getPattern();
        java.lang.String str75 = derivativeException71.getPattern();
        integratorException56.addSuppressed((java.lang.Throwable) derivativeException71);
        java.lang.Object[] objArray77 = derivativeException71.getArguments();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[hi!, , , , , ]");
    }

    @Test
    public void test04432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04432");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) -1);
        double double29 = highamHall54Integrator11.getMinStep();
        double double30 = highamHall54Integrator11.getMaxGrowth();
        double double31 = highamHall54Integrator11.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 97.0d + "'", double29 == 97.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.2d + "'", double31 == 0.2d);
    }

    @Test
    public void test04433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04433");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator11.getStepHandler();
        java.lang.String str17 = highamHall54Integrator11.getName();
        java.lang.String str18 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setSafety(24.322992790977874d);
        java.lang.String str21 = highamHall54Integrator11.getName();
        java.lang.String str22 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setSafety((double) 1L);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
    }

    @Test
    public void test04434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04434");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getMaxStep();
        double double17 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setInitialStepSize((double) 'a');
        highamHall54Integrator11.setMinReduction(0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction22, 31.144823004794873d, 97.0d, (-1));
        java.lang.String str27 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator11.getStepHandler();
        double[] doubleArray37 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray39 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray37, doubleArray39);
        highamHall54Integrator40.setMaxGrowth((double) (-1));
        double double43 = highamHall54Integrator40.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator40.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler45 = highamHall54Integrator40.getStepHandler();
        double[] doubleArray54 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray56 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray54, doubleArray56);
        highamHall54Integrator57.setMaxGrowth((double) (-1));
        double double60 = highamHall54Integrator57.getSafety();
        double double61 = highamHall54Integrator57.getMinReduction();
        double double62 = highamHall54Integrator57.getMaxStep();
        java.lang.String str63 = highamHall54Integrator57.getName();
        double[] doubleArray72 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray74 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray72, doubleArray74);
        double[] doubleArray84 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray86 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator87 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray84, doubleArray86);
        org.apache.commons.math.ode.StepHandler stepHandler88 = highamHall54Integrator87.getStepHandler();
        highamHall54Integrator75.setStepHandler(stepHandler88);
        highamHall54Integrator57.setStepHandler(stepHandler88);
        highamHall54Integrator40.setStepHandler(stepHandler88);
        java.lang.String str92 = highamHall54Integrator40.getName();
        java.lang.String str93 = highamHall54Integrator40.getName();
        double double94 = highamHall54Integrator40.getSafety();
        double double95 = highamHall54Integrator40.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler96 = highamHall54Integrator40.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler96);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.9d + "'", double43 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.9d + "'", double60 == 0.9d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2d + "'", double61 == 0.2d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 10.0d + "'", double62 == 10.0d);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Higham-Hall 5(4)" + "'", str63, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler88);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Higham-Hall 5(4)" + "'", str92, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Higham-Hall 5(4)" + "'", str93, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.9d + "'", double94 == 0.9d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.2d + "'", double95 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler96);
    }

    @Test
    public void test04435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04435");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, 22.80350850198276d, 0.0d, (double) 10.0f);
    }

    @Test
    public void test04436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04436");
        double[] doubleArray12 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray12, doubleArray21);
        double[] doubleArray34 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray36 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray34, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray21, doubleArray34);
        double[] doubleArray49 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray49, doubleArray58);
        double[] doubleArray71 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray73 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray71, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray58, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) 100.0f, doubleArray34, doubleArray71);
        double double77 = highamHall54Integrator76.getSafety();
        highamHall54Integrator76.setInitialStepSize((double) (-1));
        double double80 = highamHall54Integrator76.getMinReduction();
        java.lang.String str81 = highamHall54Integrator76.getName();
        highamHall54Integrator76.setInitialStepSize(31.144823004794873d);
        double double84 = highamHall54Integrator76.getCurrentSignedStepsize();
        highamHall54Integrator76.setMinReduction(0.2d);
        highamHall54Integrator76.setSafety((double) 100);
        java.lang.Class<?> wildcardClass89 = highamHall54Integrator76.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9d + "'", double77 == 0.9d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.2d + "'", double80 == 0.2d);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Higham-Hall 5(4)" + "'", str81, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 10.0d + "'", double84 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test04437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04437");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        double[] doubleArray13 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray15 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray13, doubleArray15);
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler29);
        highamHall54Integrator4.setStepHandler(stepHandler29);
        highamHall54Integrator4.setInitialStepSize((double) 100.0f);
        java.lang.String str34 = highamHall54Integrator4.getName();
        double double35 = highamHall54Integrator4.getMaxGrowth();
        double double36 = highamHall54Integrator4.getMaxGrowth();
        double double37 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
    }

    @Test
    public void test04438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04438");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (-1.0f), 0.2d, (double) (byte) -1);
        highamHall54Integrator4.setInitialStepSize((double) 1);
        double double7 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) (byte) -1);
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
    }

    @Test
    public void test04439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04439");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(23.62362101477432d, 17.78279410038923d, Double.NaN, (double) 100.0f);
    }

    @Test
    public void test04440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04440");
        double[] doubleArray14 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray16 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray14, doubleArray16);
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray14, doubleArray28);
        double[] doubleArray41 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray43 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray41, doubleArray43);
        double[] doubleArray47 = new double[] { (-1L), 97.0d };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) (byte) 0, doubleArray43, doubleArray47);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (short) -1, doubleArray28, doubleArray43);
        double[] doubleArray52 = null;
        double[] doubleArray61 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray63 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray61, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) 100, doubleArray52, doubleArray61);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator(0.9d, (double) (-1.0f), doubleArray43, doubleArray61);
        highamHall54Integrator66.setMaxGrowth((double) 0L);
        java.lang.String str69 = highamHall54Integrator66.getName();
        highamHall54Integrator66.setSafety(56.23413251903491d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 97.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Higham-Hall 5(4)" + "'", str69, "Higham-Hall 5(4)");
    }

    @Test
    public void test04441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04441");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction13, (double) '4', 1.0d, 0);
        double double18 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator11.getStepHandler();
        java.lang.String str20 = highamHall54Integrator11.getName();
        double double21 = highamHall54Integrator11.getMaxStep();
        double double22 = highamHall54Integrator11.getSafety();
        java.lang.String str23 = highamHall54Integrator11.getName();
        double double24 = highamHall54Integrator11.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        double double30 = highamHall54Integrator29.getMinStep();
        java.lang.String str31 = highamHall54Integrator29.getName();
        double[] doubleArray40 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray42 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray40, doubleArray42);
        highamHall54Integrator43.setMaxGrowth((double) (-1));
        double double46 = highamHall54Integrator43.getSafety();
        double double47 = highamHall54Integrator43.getMinReduction();
        double double48 = highamHall54Integrator43.getMaxStep();
        java.lang.String str49 = highamHall54Integrator43.getName();
        double[] doubleArray58 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray60 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray58, doubleArray60);
        double[] doubleArray70 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray72 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray70, doubleArray72);
        org.apache.commons.math.ode.StepHandler stepHandler74 = highamHall54Integrator73.getStepHandler();
        highamHall54Integrator61.setStepHandler(stepHandler74);
        highamHall54Integrator43.setStepHandler(stepHandler74);
        highamHall54Integrator29.setStepHandler(stepHandler74);
        double double78 = highamHall54Integrator29.getCurrentSignedStepsize();
        double double79 = highamHall54Integrator29.getCurrentSignedStepsize();
        java.lang.String str80 = highamHall54Integrator29.getName();
        double double81 = highamHall54Integrator29.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler82 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler82);
        double double84 = highamHall54Integrator11.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.9d + "'", double18 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.9d + "'", double46 == 0.9d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.2d + "'", double47 == 0.2d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Higham-Hall 5(4)" + "'", str49, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler74);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Higham-Hall 5(4)" + "'", str80, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 10.0d + "'", double81 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler82);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 10.0d + "'", double84 == 10.0d);
    }

    @Test
    public void test04442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04442");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (-1.0f), 0.2d, (double) (byte) -1);
        highamHall54Integrator4.setInitialStepSize((double) 1);
        double double7 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMaxGrowth((double) 10L);
        highamHall54Integrator4.setInitialStepSize(32.0d);
        highamHall54Integrator4.setMaxGrowth((double) (short) 10);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test04443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04443");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator4.setMinReduction(0.9d);
        double double7 = highamHall54Integrator4.getMinStep();
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int10 = highamHall54Integrator4.getOrder();
        java.lang.String str11 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize((double) (short) -1);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
    }

    @Test
    public void test04444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04444");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator11.getStepHandler();
        int int30 = highamHall54Integrator11.getOrder();
        double double31 = highamHall54Integrator11.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test04445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04445");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (-1.0f), (double) (-1L), (double) (short) 1);
        int int5 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth((double) (-1.0f));
        highamHall54Integrator4.setInitialStepSize(2.23606797749979d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
    }

    @Test
    public void test04446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04446");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getMaxStep();
        int int16 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator11.getStepHandler();
        java.lang.String str21 = highamHall54Integrator11.getName();
        double double22 = highamHall54Integrator11.getCurrentStepStart();
        java.lang.String str23 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
    }

    @Test
    public void test04447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04447");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), 0.0d, 10.0d, (double) '4');
        int int5 = highamHall54Integrator4.getOrder();
        java.lang.String str6 = highamHall54Integrator4.getName();
        java.lang.String str7 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction(9.848857801796104d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction10, 31.622776601683793d, (double) (short) 1, (int) 'a');
        double double15 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
    }

    @Test
    public void test04448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04448");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        java.lang.Class<?> wildcardClass17 = derivativeException16.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test04449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04449");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        java.lang.String str17 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction(100.0d);
        double double20 = highamHall54Integrator11.getMinStep();
        double double21 = highamHall54Integrator11.getMinReduction();
        double double22 = highamHall54Integrator11.getMaxStep();
        double double23 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMaxGrowth((double) 10L);
        double double26 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 97.0d + "'", double20 == 97.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 31.144823004794873d + "'", double23 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 31.144823004794873d + "'", double26 == 31.144823004794873d);
    }

    @Test
    public void test04450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04450");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, (double) 1, 5);
        double double10 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setInitialStepSize((double) (-1.0f));
        highamHall54Integrator4.setInitialStepSize((double) 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test04451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04451");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) (byte) 100, (double) 10.0f, (double) 100L);
        double double5 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9d + "'", double5 == 0.9d);
    }

    @Test
    public void test04452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04452");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.Throwable[] throwableArray10 = derivativeException9.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException9);
        java.lang.Object[] objArray12 = integratorException11.getArguments();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        java.lang.Throwable[] throwableArray24 = integratorException23.getSuppressed();
        integratorException11.addSuppressed((java.lang.Throwable) integratorException23);
        java.lang.String str26 = integratorException23.toString();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str26, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test04453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04453");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        int int15 = highamHall54Integrator11.getOrder();
        double double16 = highamHall54Integrator11.getMaxStep();
        java.lang.String str17 = highamHall54Integrator11.getName();
        java.lang.String str18 = highamHall54Integrator11.getName();
        double double19 = highamHall54Integrator11.getCurrentSignedStepsize();
        int int20 = highamHall54Integrator11.getOrder();
        double double21 = highamHall54Integrator11.getMinStep();
        highamHall54Integrator11.setInitialStepSize(35.0d);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator11.getStepHandler();
        java.lang.String str25 = highamHall54Integrator11.getName();
        double double26 = highamHall54Integrator11.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 31.144823004794873d + "'", double19 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 97.0d + "'", double21 == 97.0d);
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test04454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04454");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) -1, (double) (short) -1, 32.0d, (double) 10.0f);
        highamHall54Integrator4.setMinReduction((double) 0);
        double double7 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, 17.88854381999832d, (double) 0.0f, 10);
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.Class<?> wildcardClass14 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test04455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04455");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) (byte) -1, (double) 0L, (double) (short) 100);
        highamHall54Integrator4.setMinReduction(0.9d);
        double double7 = highamHall54Integrator4.getSafety();
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMaxGrowth();
        double double10 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str11 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
    }

    @Test
    public void test04456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04456");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setInitialStepSize((double) 0);
        java.lang.String str17 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) 100L);
        double double20 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction21, (double) 0.0f, (double) (-1L), (int) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator11.getStepHandler();
        java.lang.String str27 = highamHall54Integrator11.getName();
        double double28 = highamHall54Integrator11.getMaxStep();
        highamHall54Integrator11.setMinReduction(0.2d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.9d + "'", double20 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
    }

    @Test
    public void test04457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04457");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), 0.9d, (double) (byte) 100, (double) '4');
        int int5 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
    }

    @Test
    public void test04458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04458");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test04459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04459");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMinReduction();
        java.lang.String str15 = highamHall54Integrator11.getName();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        double[] doubleArray37 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray39 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray37, doubleArray39);
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator40.getStepHandler();
        highamHall54Integrator28.setStepHandler(stepHandler41);
        int int43 = highamHall54Integrator28.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler44);
        java.lang.String str46 = highamHall54Integrator11.getName();
        int int47 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setInitialStepSize((double) 0L);
        double double50 = highamHall54Integrator11.getMaxGrowth();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Higham-Hall 5(4)" + "'", str46, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-1.0d) + "'", double50 == (-1.0d));
    }

    @Test
    public void test04460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04460");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        java.lang.Throwable[] throwableArray24 = integratorException23.getSuppressed();
        java.lang.String str25 = integratorException23.getPattern();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("", strArray34);
        java.lang.Object[] objArray37 = derivativeException36.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException36);
        integratorException23.addSuppressed((java.lang.Throwable) derivativeException36);
        java.lang.String[] strArray43 = new java.lang.String[] { "org.apache.commons.math.ode.IntegratorException: hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray43);
        java.lang.String str45 = derivativeException44.getPattern();
        derivativeException36.addSuppressed((java.lang.Throwable) derivativeException44);
        java.lang.String str47 = derivativeException44.toString();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str45, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str47, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04461");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getMinReduction();
        double double16 = highamHall54Integrator11.getMaxStep();
        java.lang.String str17 = highamHall54Integrator11.getName();
        double[] doubleArray26 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray28 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray26, doubleArray28);
        double[] doubleArray38 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray40 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray38, doubleArray40);
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator41.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler42);
        highamHall54Integrator11.setStepHandler(stepHandler42);
        double double45 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setInitialStepSize((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator11.getStepHandler();
        int int49 = highamHall54Integrator11.getOrder();
        double double50 = highamHall54Integrator11.getCurrentStepStart();
        double double51 = highamHall54Integrator11.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction52, 0.0d, (double) 0L, 0);
        highamHall54Integrator11.setMinReduction((double) ' ');
        highamHall54Integrator11.setMaxGrowth(32.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.9d + "'", double45 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.2d + "'", double51 == 0.2d);
    }

    @Test
    public void test04462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04462");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, 0.9d, 71.02112361825881d, (double) (short) 1);
    }

    @Test
    public void test04463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04463");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        java.lang.Object[] objArray25 = derivativeException24.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray25);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray25);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        java.lang.Object[] objArray38 = derivativeException37.getArguments();
        java.lang.Object[] objArray39 = derivativeException37.getArguments();
        integratorException28.addSuppressed((java.lang.Throwable) derivativeException37);
        derivativeException12.addSuppressed((java.lang.Throwable) integratorException28);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException12);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray51);
        double[] doubleArray68 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray70 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator71 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray68, doubleArray70);
        java.lang.Object[] objArray72 = new java.lang.Object[] { (byte) -1, (short) 1, 1.0d, (-1.0f), 1, 'a' };
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray72);
        java.lang.Object[] objArray74 = integratorException73.getArguments();
        java.lang.String str75 = integratorException73.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException76 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException73);
        derivativeException53.addSuppressed((java.lang.Throwable) integratorException73);
        derivativeException12.addSuppressed((java.lang.Throwable) integratorException73);
        java.lang.Object[] objArray79 = derivativeException12.getArguments();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[-1, 1, 1.0, -1.0, 1, a]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[hi!, , , , , ]");
    }

    @Test
    public void test04464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04464");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        double double18 = highamHall54Integrator11.getMinReduction();
        double double19 = highamHall54Integrator11.getMinReduction();
        java.lang.String str20 = highamHall54Integrator11.getName();
        double double21 = highamHall54Integrator11.getMaxGrowth();
        java.lang.String str22 = highamHall54Integrator11.getName();
        java.lang.String str23 = highamHall54Integrator11.getName();
        int int24 = highamHall54Integrator11.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2d + "'", double19 == 0.2d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
    }

    @Test
    public void test04465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04465");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) 0, (double) 10, 35.0d);
        int int5 = highamHall54Integrator4.getOrder();
        int int6 = highamHall54Integrator4.getOrder();
        double double7 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test04466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04466");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(52.0d, (double) 1.0f, 0.0d, (double) 5);
        double double5 = highamHall54Integrator4.getSafety();
        double double6 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9d + "'", double5 == 0.9d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
    }

    @Test
    public void test04467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04467");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        java.lang.String str26 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMaxGrowth((double) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction29, (double) 'a', 97.0d, (int) (byte) 100);
        double double34 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction35, 0.0d, 10.0d, (int) (byte) 10);
        double double40 = highamHall54Integrator11.getMaxStep();
        double double41 = highamHall54Integrator11.getMaxStep();
        double double42 = highamHall54Integrator11.getMinStep();
        double double43 = highamHall54Integrator11.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.9d + "'", double34 == 0.9d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 97.0d + "'", double42 == 97.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 97.0d + "'", double43 == 97.0d);
    }

    @Test
    public void test04468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04468");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getMaxStep();
        int int16 = highamHall54Integrator11.getOrder();
        highamHall54Integrator11.setSafety(0.0d);
        double double19 = highamHall54Integrator11.getSafety();
        java.lang.String str20 = highamHall54Integrator11.getName();
        double double21 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 31.144823004794873d + "'", double21 == 31.144823004794873d);
    }

    @Test
    public void test04469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04469");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((-1.0d), 4.995787599886596d, (double) (byte) 1, (double) 10.0f);
    }

    @Test
    public void test04470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04470");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMaxGrowth();
        highamHall54Integrator11.setInitialStepSize((double) (byte) 1);
        double double30 = highamHall54Integrator11.getMinReduction();
        double double31 = highamHall54Integrator11.getSafety();
        double double32 = highamHall54Integrator11.getMaxStep();
        double double33 = highamHall54Integrator11.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.2d + "'", double30 == 0.2d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.9d + "'", double31 == 0.9d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 97.0d + "'", double33 == 97.0d);
    }

    @Test
    public void test04471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04471");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMinReduction();
        java.lang.String str15 = highamHall54Integrator11.getName();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        double[] doubleArray37 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray39 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray37, doubleArray39);
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator40.getStepHandler();
        highamHall54Integrator28.setStepHandler(stepHandler41);
        int int43 = highamHall54Integrator28.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler44);
        java.lang.String str46 = highamHall54Integrator11.getName();
        double double47 = highamHall54Integrator11.getSafety();
        java.lang.String str48 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setInitialStepSize(32.0d);
        java.lang.String str51 = highamHall54Integrator11.getName();
        java.lang.String str52 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Higham-Hall 5(4)" + "'", str46, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.9d + "'", double47 == 0.9d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Higham-Hall 5(4)" + "'", str48, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Higham-Hall 5(4)" + "'", str51, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Higham-Hall 5(4)" + "'", str52, "Higham-Hall 5(4)");
    }

    @Test
    public void test04472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04472");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        int int5 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, (double) 1, (double) ' ', (int) (short) 10);
        double double12 = highamHall54Integrator4.getMinStep();
        java.lang.String str13 = highamHall54Integrator4.getName();
        java.lang.String str14 = highamHall54Integrator4.getName();
        double[] doubleArray23 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray25 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray23, doubleArray25);
        highamHall54Integrator26.setMaxGrowth((double) (-1));
        double double29 = highamHall54Integrator26.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator26.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator26.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler31);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.9d + "'", double29 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertNotNull(stepHandler31);
    }

    @Test
    public void test04473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04473");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.Object[] objArray11 = derivativeException8.getArguments();
        java.lang.String str12 = derivativeException8.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException14);
        java.lang.Object[] objArray16 = derivativeException15.getArguments();
        java.lang.Throwable[] throwableArray17 = derivativeException15.getSuppressed();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test04474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04474");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double13 = highamHall54Integrator11.getCurrentStepStart();
        double double14 = highamHall54Integrator11.getMaxGrowth();
        double[] doubleArray23 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray25 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray23, doubleArray25);
        highamHall54Integrator26.setMaxGrowth((double) (-1));
        double double29 = highamHall54Integrator26.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator26.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler30);
        java.lang.String str32 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setInitialStepSize((double) '4');
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setMaxGrowth((double) (short) 10);
        int int38 = highamHall54Integrator11.getOrder();
        java.lang.String str39 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.9d + "'", double29 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Higham-Hall 5(4)" + "'", str39, "Higham-Hall 5(4)");
    }

    @Test
    public void test04475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04475");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        double[] doubleArray21 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray23 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray21, doubleArray23);
        double double25 = highamHall54Integrator24.getCurrentSignedStepsize();
        highamHall54Integrator24.setMaxGrowth((double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator24.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler29);
        double double31 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double32 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations33 = null;
        double[] doubleArray37 = new double[] {};
        double[] doubleArray48 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray50 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray48, doubleArray50);
        double[] doubleArray60 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray62 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray60, doubleArray62);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray48, doubleArray62);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 22.80350850198276d, doubleArray37, doubleArray62);
        double[] doubleArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator11.integrate(firstOrderDifferentialEquations33, 17.78279410038923d, doubleArray62, (double) 100, doubleArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 31.144823004794873d + "'", double25 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 31.144823004794873d + "'", double31 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0]");
    }

    @Test
    public void test04476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04476");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(2.4957893743180684d, 5.916079783099616d, (double) 0.0f, (double) 10L);
        highamHall54Integrator4.setSafety(3.1622776601683795d);
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        double[] doubleArray31 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray33 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray31, doubleArray33);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, 31.144823004794873d, doubleArray19, doubleArray33);
        double[] doubleArray46 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray55 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray57 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray55, doubleArray57);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray46, doubleArray55);
        double[] doubleArray68 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray70 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator71 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray68, doubleArray70);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator72 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray55, doubleArray68);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, 10.0d, doubleArray33, doubleArray55);
        java.lang.String str74 = highamHall54Integrator73.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction75 = null;
        highamHall54Integrator73.addSwitchingFunction(switchingFunction75, (double) (byte) 10, 0.0d, (int) '#');
        double double80 = highamHall54Integrator73.getMaxStep();
        double double81 = highamHall54Integrator73.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator86 = new org.apache.commons.math.ode.HighamHall54Integrator(32.0d, 0.0d, 3.1622776601683795d, 2.4957893743180684d);
        org.apache.commons.math.ode.StepHandler stepHandler87 = highamHall54Integrator86.getStepHandler();
        highamHall54Integrator73.setStepHandler(stepHandler87);
        highamHall54Integrator4.setStepHandler(stepHandler87);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Higham-Hall 5(4)" + "'", str74, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 10.0d + "'", double80 == 10.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler87);
    }

    @Test
    public void test04477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04477");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setMaxGrowth((-1.0d));
        double double18 = highamHall54Integrator11.getSafety();
        java.lang.String str19 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setSafety(100.0d);
        highamHall54Integrator11.setMaxGrowth((double) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.9d + "'", double18 == 0.9d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
    }

    @Test
    public void test04478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04478");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException12);
        java.lang.Object[] objArray14 = derivativeException12.getArguments();
        java.lang.String str15 = derivativeException12.getPattern();
        java.lang.String str16 = derivativeException12.getPattern();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        java.lang.Object[] objArray29 = derivativeException28.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray29);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("Higham-Hall 5(4)", objArray29);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException42);
        integratorException32.addSuppressed((java.lang.Throwable) derivativeException42);
        java.lang.Throwable[] throwableArray45 = derivativeException42.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException42);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray58);
        java.lang.Object[] objArray60 = derivativeException59.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray60);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray60);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray60);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray60);
        derivativeException42.addSuppressed((java.lang.Throwable) integratorException64);
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException64);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException64);
        java.lang.Object[] objArray68 = integratorException64.getArguments();
        derivativeException12.addSuppressed((java.lang.Throwable) integratorException64);
        java.lang.String str70 = integratorException64.getPattern();
        java.lang.Class<?> wildcardClass71 = integratorException64.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str15, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str16, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str70, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test04479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04479");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setMaxGrowth((double) (byte) 0);
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        double[] doubleArray20 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray29 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray31 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray29, doubleArray31);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray20, doubleArray29);
        double[] doubleArray42 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray44 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray42, doubleArray44);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray29, doubleArray42);
        double double47 = highamHall54Integrator46.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        highamHall54Integrator46.addSwitchingFunction(switchingFunction48, 1.0d, (double) (short) 10, (int) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator46.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler53);
        double double55 = highamHall54Integrator4.getMinStep();
        double double56 = highamHall54Integrator4.getSafety();
        java.lang.String str57 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction58, (double) 100.0f, 2.4957893743180684d, (int) ' ');
        java.lang.String str63 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 35.0d + "'", double47 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.9d + "'", double56 == 0.9d);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Higham-Hall 5(4)" + "'", str57, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Higham-Hall 5(4)" + "'", str63, "Higham-Hall 5(4)");
    }

    @Test
    public void test04480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04480");
        double[] doubleArray10 = new double[] { 1L, (short) 0, ' ', 10.0f, (byte) 10, (-1.0d) };
        double[] doubleArray19 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray21 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray19, doubleArray21);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), 31.144823004794873d, doubleArray10, doubleArray19);
        double[] doubleArray32 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray34 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray32, doubleArray34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) '#', doubleArray19, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction37, (double) 1.0f, (double) (short) 1, (int) (short) -1);
        double double42 = highamHall54Integrator36.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction43 = null;
        highamHall54Integrator36.addSwitchingFunction(switchingFunction43, (double) (-1), (double) 1L, 100);
        highamHall54Integrator36.setInitialStepSize((double) (-1.0f));
        double double50 = highamHall54Integrator36.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 0.0, 32.0, 10.0, 10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 35.0d + "'", double42 == 35.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.2d + "'", double50 == 0.2d);
    }

    @Test
    public void test04481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04481");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (byte) 10, (double) 'a', Double.NaN);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        double double6 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction(32.0d);
        java.lang.Class<?> wildcardClass9 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test04482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04482");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1L), 2.4957893743180684d, (-0.0d), 10.0d);
        int int5 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
    }

    @Test
    public void test04483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04483");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray12);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        java.lang.Object[] objArray31 = derivativeException30.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException34);
        derivativeException18.addSuppressed((java.lang.Throwable) integratorException35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException35);
        java.lang.Throwable[] throwableArray38 = integratorException35.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException35);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(throwableArray38);
    }

    @Test
    public void test04484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04484");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMinReduction();
        java.lang.String str15 = highamHall54Integrator11.getName();
        java.lang.String str16 = highamHall54Integrator11.getName();
        double[] doubleArray25 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray27 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray25, doubleArray27);
        double[] doubleArray37 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray39 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray37, doubleArray39);
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator40.getStepHandler();
        highamHall54Integrator28.setStepHandler(stepHandler41);
        int int43 = highamHall54Integrator28.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler44);
        java.lang.String str46 = highamHall54Integrator11.getName();
        double double47 = highamHall54Integrator11.getMinStep();
        int int48 = highamHall54Integrator11.getOrder();
        java.lang.String str49 = highamHall54Integrator11.getName();
        double double50 = highamHall54Integrator11.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction51, (double) '#', 5.916079783099616d, 5);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 1.0d, (double) (byte) 0, (double) 1.0f);
        int int61 = highamHall54Integrator60.getOrder();
        highamHall54Integrator60.setMaxGrowth(0.0d);
        double double64 = highamHall54Integrator60.getMinReduction();
        int int65 = highamHall54Integrator60.getOrder();
        double double66 = highamHall54Integrator60.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler67 = highamHall54Integrator60.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler67);
        highamHall54Integrator11.setSafety((-1.0d));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Higham-Hall 5(4)" + "'", str46, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 97.0d + "'", double47 == 97.0d);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Higham-Hall 5(4)" + "'", str49, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 5 + "'", int61 == 5);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.2d + "'", double64 == 0.2d);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 5 + "'", int65 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(stepHandler67);
    }

    @Test
    public void test04485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04485");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        java.lang.String str17 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction(100.0d);
        double double20 = highamHall54Integrator11.getMinStep();
        double double21 = highamHall54Integrator11.getMinStep();
        double double22 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double23 = highamHall54Integrator11.getMaxStep();
        double double24 = highamHall54Integrator11.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator11.getStepHandler();
        java.lang.String str26 = highamHall54Integrator11.getName();
        double double27 = highamHall54Integrator11.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 97.0d + "'", double20 == 97.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 97.0d + "'", double21 == 97.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 31.144823004794873d + "'", double22 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 97.0d + "'", double27 == 97.0d);
    }

    @Test
    public void test04486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04486");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException41);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray55);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray55);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray55);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("", strArray55);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("Higham-Hall 5(4)", strArray55);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray55);
        derivativeException42.addSuppressed((java.lang.Throwable) derivativeException61);
        derivativeException26.addSuppressed((java.lang.Throwable) derivativeException61);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray55);
    }

    @Test
    public void test04487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04487");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator11.getStepHandler();
        double double17 = highamHall54Integrator11.getMinStep();
        java.lang.String str18 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setInitialStepSize((double) 10);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
    }

    @Test
    public void test04488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04488");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getSafety();
        double double15 = highamHall54Integrator11.getSafety();
        double double16 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator21.addSwitchingFunction(switchingFunction22, (double) (byte) -1, (double) 1, 5);
        double double27 = highamHall54Integrator21.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler28);
        java.lang.String str30 = highamHall54Integrator11.getName();
        double double31 = highamHall54Integrator11.getMaxGrowth();
        double double32 = highamHall54Integrator11.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction33, (double) 'a', (double) (byte) 10, 5);
        highamHall54Integrator11.setInitialStepSize((double) 100);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1.0d) + "'", double31 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.2d + "'", double32 == 0.2d);
    }

    @Test
    public void test04489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04489");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double double12 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setMinReduction((double) (byte) 10);
        double double15 = highamHall54Integrator11.getCurrentSignedStepsize();
        java.lang.String str16 = highamHall54Integrator11.getName();
        highamHall54Integrator11.setMinReduction(0.0d);
        double double19 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double20 = highamHall54Integrator11.getMinReduction();
        java.lang.String str21 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 31.144823004794873d + "'", double15 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 31.144823004794873d + "'", double19 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
    }

    @Test
    public void test04490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04490");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        double[] doubleArray20 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray22 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray20, doubleArray22);
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator11.getMaxStep();
        double double27 = highamHall54Integrator11.getMaxGrowth();
        double double28 = highamHall54Integrator11.getSafety();
        highamHall54Integrator11.setSafety((double) (byte) 10);
        highamHall54Integrator11.setMaxGrowth(32.0d);
        highamHall54Integrator11.setSafety(23.62362101477432d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.9d + "'", double28 == 0.9d);
    }

    @Test
    public void test04491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04491");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.9d, (double) (byte) 0, (double) (byte) -1, (double) '#');
        int int5 = highamHall54Integrator4.getOrder();
        double double6 = highamHall54Integrator4.getMinReduction();
        double[] doubleArray15 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray17 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray15, doubleArray17);
        highamHall54Integrator18.setMaxGrowth((double) (-1));
        double double21 = highamHall54Integrator18.getSafety();
        highamHall54Integrator18.setSafety((double) 1.0f);
        double double24 = highamHall54Integrator18.getMaxStep();
        double[] doubleArray33 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray35 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray33, doubleArray35);
        highamHall54Integrator36.setMaxGrowth((double) (-1));
        double double39 = highamHall54Integrator36.getSafety();
        int int40 = highamHall54Integrator36.getOrder();
        java.lang.String str41 = highamHall54Integrator36.getName();
        double double42 = highamHall54Integrator36.getCurrentSignedStepsize();
        double[] doubleArray51 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray53 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray51, doubleArray53);
        highamHall54Integrator54.setMaxGrowth((double) (-1));
        double double57 = highamHall54Integrator54.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler58 = highamHall54Integrator54.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler59 = highamHall54Integrator54.getStepHandler();
        highamHall54Integrator36.setStepHandler(stepHandler59);
        highamHall54Integrator18.setStepHandler(stepHandler59);
        highamHall54Integrator4.setStepHandler(stepHandler59);
        double double63 = highamHall54Integrator4.getMinReduction();
        double double64 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.9d + "'", double21 == 0.9d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.9d + "'", double39 == 0.9d);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Higham-Hall 5(4)" + "'", str41, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.144823004794873d + "'", double42 == 31.144823004794873d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.9d + "'", double57 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.2d + "'", double63 == 0.2d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.9d + "'", double64 == 0.9d);
    }

    @Test
    public void test04492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04492");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        highamHall54Integrator11.setMaxGrowth((double) (-1));
        double double14 = highamHall54Integrator11.getMaxStep();
        double double15 = highamHall54Integrator11.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (-1.0f), (double) (-1L), (double) (short) 1);
        double double21 = highamHall54Integrator20.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator20.getStepHandler();
        highamHall54Integrator11.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator11.getCurrentStepStart();
        double double25 = highamHall54Integrator11.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator11.getStepHandler();
        double double27 = highamHall54Integrator11.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction28, (double) (short) 10, (-0.0d), 0);
        highamHall54Integrator11.setSafety(3.1622776601683795d);
        double double35 = highamHall54Integrator11.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-1.0d) + "'", double25 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2d + "'", double27 == 0.2d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.2d + "'", double35 == 0.2d);
    }

    @Test
    public void test04493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04493");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, (double) (short) 10, (double) '4', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, (double) 1, 5);
        double double10 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (double) 1, 0.0d, (int) (byte) 100);
        double double16 = highamHall54Integrator4.getMinStep();
        double double17 = highamHall54Integrator4.getMinReduction();
        java.lang.String str18 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
    }

    @Test
    public void test04494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04494");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException20);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException31);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException31);
        java.lang.Object[] objArray34 = derivativeException31.getArguments();
        java.lang.String str35 = derivativeException31.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException31);
        java.lang.String str37 = derivativeException36.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException36);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException38);
        derivativeException8.addSuppressed((java.lang.Throwable) integratorException38);
        java.lang.String str41 = derivativeException8.toString();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str41, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test04495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04495");
        double[] doubleArray8 = new double[] { 1.0d, 100.0d, 1.0d, (short) -1, (byte) 100, (-1.0f) };
        double[] doubleArray10 = new double[] { 1 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', (double) (byte) 10, doubleArray8, doubleArray10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction12, (double) 'a', 0.0d, 5);
        double double17 = highamHall54Integrator11.getMinStep();
        double double18 = highamHall54Integrator11.getSafety();
        int int19 = highamHall54Integrator11.getOrder();
        double double20 = highamHall54Integrator11.getCurrentStepStart();
        double double21 = highamHall54Integrator11.getCurrentSignedStepsize();
        java.lang.String str22 = highamHall54Integrator11.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, -1.0, 100.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0]");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.9d + "'", double18 == 0.9d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 31.144823004794873d + "'", double21 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
    }

    @Test
    public void test04496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04496");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        java.lang.Object[] objArray15 = derivativeException14.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray15);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray15);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray15);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("", objArray15);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray15);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray21);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, , , , , ]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, , , , , ]");
    }

    @Test
    public void test04497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04497");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        java.lang.Object[] objArray23 = derivativeException22.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", objArray23);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!, , , , , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!, , , , , ]");
    }

    @Test
    public void test04498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04498");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, 97.0d, 10.0d, 0.0d);
        highamHall54Integrator4.setMinReduction(0.0d);
        double double7 = highamHall54Integrator4.getSafety();
        double double8 = highamHall54Integrator4.getMinStep();
        int int9 = highamHall54Integrator4.getOrder();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
    }

    @Test
    public void test04499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04499");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100L, 35.0d, 2.4957893743180684d, (double) (short) 0);
        highamHall54Integrator4.setSafety((double) 1L);
        double double7 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 35.0d + "'", double9 == 35.0d);
    }

    @Test
    public void test04500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04500");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "", "", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Higham-Hall 5(4)", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray10);
        org.junit.Assert.assertNotNull(strArray10);
    }
}

