import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest13 {

    public static boolean debug = false;

    @Test
    public void test06501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06501");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService21 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean22 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNull(executorService21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test06502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06502");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        boolean boolean9 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService10 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test06503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06503");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test06504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06504");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer0.get();
        java.lang.Object obj40 = multiBackgroundInitializerResults38.getResultObject("hi!");
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test06505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06505");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean7 = multiBackgroundInitializerResultsFuture2.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.isCancelled();
        java.util.concurrent.TimeUnit timeUnit11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializerResultsFuture2.get((long) '#', timeUnit11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06506");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        boolean boolean12 = multiBackgroundInitializerResultsFuture11.isDone();
        boolean boolean13 = multiBackgroundInitializerResultsFuture11.isDone();
        java.util.concurrent.TimeUnit timeUnit15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializerResultsFuture11.get((long) (short) 100, timeUnit15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test06507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06507");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer18.getFuture();
        boolean boolean31 = multiBackgroundInitializer18.start();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService33 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean34 = multiBackgroundInitializer18.isStarted();
        boolean boolean35 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture36 = multiBackgroundInitializer18.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService38 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer18.setExternalExecutor(executorService38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(executorService33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
    }

    @Test
    public void test06508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06508");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        boolean boolean19 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06509");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.ExecutorService executorService19 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService19);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService23);
        java.util.concurrent.ExecutorService executorService25 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService26 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean27 = multiBackgroundInitializer0.start();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(executorService25);
        org.junit.Assert.assertNull(executorService26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test06510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06510");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean10 = multiBackgroundInitializerResultsFuture2.cancel(false);
        java.util.concurrent.TimeUnit timeUnit12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializerResultsFuture2.get((long) (short) 10, timeUnit12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test06511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06511");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer23.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture35 = multiBackgroundInitializer23.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer23.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = multiBackgroundInitializerResults36.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture35);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
    }

    @Test
    public void test06512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06512");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer3.get();
        boolean boolean8 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer3.getFuture();
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
    }

    @Test
    public void test06513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06513");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean5 = multiBackgroundInitializerResultsFuture2.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture2.get();
        java.util.Set<java.lang.String> strSet7 = multiBackgroundInitializerResults6.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer9 = multiBackgroundInitializerResults6.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test06514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06514");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = multiBackgroundInitializerResults13.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
    }

    @Test
    public void test06515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06515");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet21 = multiBackgroundInitializerResults20.initializerNames();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer23 = multiBackgroundInitializerResults20.getInitializer("hi!");
        boolean boolean24 = multiBackgroundInitializerResults20.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test06516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06516");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        boolean boolean36 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean38 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test06517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06517");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService19 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06518");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        boolean boolean37 = multiBackgroundInitializer0.isStarted();
        boolean boolean38 = multiBackgroundInitializer0.isStarted();
        boolean boolean39 = multiBackgroundInitializer0.start();
        boolean boolean40 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults41 = multiBackgroundInitializer0.get();
        java.lang.Object obj43 = multiBackgroundInitializerResults41.getResultObject("");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults41);
        org.junit.Assert.assertNotNull(obj43);
    }

    @Test
    public void test06519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06519");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        boolean boolean19 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService20 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06520");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException14 = multiBackgroundInitializerResults12.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
    }

    @Test
    public void test06521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06521");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean5 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean7 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean11 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean12 = multiBackgroundInitializerResultsFuture2.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test06522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06522");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer10.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer10.get();
        boolean boolean22 = multiBackgroundInitializer10.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer10.get();
        boolean boolean24 = multiBackgroundInitializer10.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture25 = multiBackgroundInitializer10.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializerResultsFuture25.get();
        boolean boolean28 = multiBackgroundInitializerResultsFuture25.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture25);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test06523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06523");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService22 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer3.get();
        boolean boolean24 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture25 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNull(executorService22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture25);
    }

    @Test
    public void test06524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06524");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService9 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNull(executorService8);
    }

    @Test
    public void test06525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06525");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        boolean boolean19 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService20 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean27 = multiBackgroundInitializer26.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
        boolean boolean29 = multiBackgroundInitializer23.isStarted();
        boolean boolean30 = multiBackgroundInitializer23.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer23.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer23.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer35 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean36 = multiBackgroundInitializer35.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer38 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean39 = multiBackgroundInitializer38.isStarted();
        multiBackgroundInitializer35.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer38);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer42 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean43 = multiBackgroundInitializer42.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer45 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean46 = multiBackgroundInitializer45.isStarted();
        multiBackgroundInitializer42.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer45);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer49 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean50 = multiBackgroundInitializer49.isStarted();
        multiBackgroundInitializer45.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer49);
        boolean boolean52 = multiBackgroundInitializer45.start();
        multiBackgroundInitializer35.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer45);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture54 = multiBackgroundInitializer45.getFuture();
        boolean boolean55 = multiBackgroundInitializer45.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults56 = multiBackgroundInitializer45.get();
        java.util.concurrent.ExecutorService executorService57 = multiBackgroundInitializer45.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService58 = multiBackgroundInitializer45.getExternalExecutor();
        boolean boolean59 = multiBackgroundInitializer45.start();
        boolean boolean60 = multiBackgroundInitializer45.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture61 = multiBackgroundInitializer45.getFuture();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer23.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults56);
        org.junit.Assert.assertNull(executorService57);
        org.junit.Assert.assertNull(executorService58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture61);
    }

    @Test
    public void test06526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06526");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet15 = multiBackgroundInitializerResults14.initializerNames();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException17 = multiBackgroundInitializerResults14.getException("hi!");
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer19 = multiBackgroundInitializerResults14.getInitializer("hi!");
        java.util.Set<java.lang.String> strSet20 = multiBackgroundInitializerResults14.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = multiBackgroundInitializerResults14.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(concurrentException17);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer19);
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test06527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06527");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializerResultsFuture21.get();
        boolean boolean23 = multiBackgroundInitializerResults22.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test06528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06528");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.lang.Class<?> wildcardClass17 = multiBackgroundInitializer3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06529");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        boolean boolean17 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
    }

    @Test
    public void test06530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06530");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer3.get();
        boolean boolean8 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer3.getFuture();
        boolean boolean11 = multiBackgroundInitializerResultsFuture9.cancel(false);
        boolean boolean13 = multiBackgroundInitializerResultsFuture9.cancel(true);
        boolean boolean14 = multiBackgroundInitializerResultsFuture9.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06531");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer5 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean6 = multiBackgroundInitializer5.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        multiBackgroundInitializer5.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer8);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean13 = multiBackgroundInitializer12.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer12.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer19 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean20 = multiBackgroundInitializer19.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer19);
        boolean boolean22 = multiBackgroundInitializer15.start();
        multiBackgroundInitializer5.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer25 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean26 = multiBackgroundInitializer25.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer28 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean29 = multiBackgroundInitializer28.isStarted();
        multiBackgroundInitializer25.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer28);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        multiBackgroundInitializer28.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        java.util.concurrent.ExecutorService executorService35 = null;
        multiBackgroundInitializer28.setExternalExecutor(executorService35);
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer28.getExternalExecutor();
        multiBackgroundInitializer5.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer28);
        boolean boolean39 = multiBackgroundInitializer5.start();
        boolean boolean40 = multiBackgroundInitializer5.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults41 = multiBackgroundInitializer5.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults42 = multiBackgroundInitializer5.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer5.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults41);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults42);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
    }

    @Test
    public void test06532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06532");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture29 = multiBackgroundInitializer18.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService31 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        boolean boolean33 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture34 = multiBackgroundInitializer18.getFuture();
        boolean boolean35 = multiBackgroundInitializer18.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer37 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean38 = multiBackgroundInitializer37.start();
        boolean boolean39 = multiBackgroundInitializer37.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer37.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture41 = multiBackgroundInitializer37.getFuture();
        boolean boolean42 = multiBackgroundInitializer37.start();
        java.util.concurrent.ExecutorService executorService43 = multiBackgroundInitializer37.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer18.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture29);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
        org.junit.Assert.assertNull(executorService31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(executorService43);
    }

    @Test
    public void test06533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06533");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer0.getFuture();
        boolean boolean12 = multiBackgroundInitializerResultsFuture11.isDone();
        boolean boolean13 = multiBackgroundInitializerResultsFuture11.isDone();
        boolean boolean15 = multiBackgroundInitializerResultsFuture11.cancel(true);
        boolean boolean17 = multiBackgroundInitializerResultsFuture11.cancel(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06534");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer0.start();
        boolean boolean11 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer0.getFuture();
        java.lang.Class<?> wildcardClass13 = multiBackgroundInitializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test06535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06535");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        boolean boolean21 = multiBackgroundInitializerResults20.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test06536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06536");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean30 = multiBackgroundInitializer23.start();
        boolean boolean31 = multiBackgroundInitializer23.isStarted();
        boolean boolean32 = multiBackgroundInitializer23.isStarted();
        boolean boolean33 = multiBackgroundInitializer23.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test06537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06537");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test06538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06538");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer7.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService12 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService12);
        boolean boolean14 = multiBackgroundInitializer7.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer7.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06539");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        boolean boolean16 = multiBackgroundInitializerResultsFuture15.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializerResultsFuture15.get();
        boolean boolean18 = multiBackgroundInitializerResultsFuture15.isCancelled();
        java.util.concurrent.TimeUnit timeUnit20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializerResultsFuture15.get((long) 'a', timeUnit20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06540");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06541");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = multiBackgroundInitializerResults14.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
    }

    @Test
    public void test06542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06542");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializerResults16.isSuccessful();
        boolean boolean18 = multiBackgroundInitializerResults16.isSuccessful();
        boolean boolean20 = multiBackgroundInitializerResults16.isException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06543");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.ExecutorService executorService26 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService26);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        multiBackgroundInitializer29.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean37 = multiBackgroundInitializer36.isStarted();
        multiBackgroundInitializer32.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer36);
        java.util.concurrent.ExecutorService executorService39 = null;
        multiBackgroundInitializer32.setExternalExecutor(executorService39);
        java.util.concurrent.ExecutorService executorService41 = multiBackgroundInitializer32.getExternalExecutor();
        boolean boolean42 = multiBackgroundInitializer32.start();
        boolean boolean43 = multiBackgroundInitializer32.start();
        boolean boolean44 = multiBackgroundInitializer32.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture45 = multiBackgroundInitializer32.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults46 = multiBackgroundInitializer32.get();
        multiBackgroundInitializer7.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        java.util.concurrent.ExecutorService executorService48 = multiBackgroundInitializer7.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService49 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService49);
        boolean boolean51 = multiBackgroundInitializer7.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture52 = multiBackgroundInitializer7.getFuture();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(executorService41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture45);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults46);
        org.junit.Assert.assertNull(executorService48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test06544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06544");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean5 = multiBackgroundInitializerResultsFuture4.isCancelled();
        boolean boolean6 = multiBackgroundInitializerResultsFuture4.isCancelled();
        boolean boolean8 = multiBackgroundInitializerResultsFuture4.cancel(false);
        boolean boolean9 = multiBackgroundInitializerResultsFuture4.isCancelled();
        boolean boolean10 = multiBackgroundInitializerResultsFuture4.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture4.get();
        boolean boolean12 = multiBackgroundInitializerResultsFuture4.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializerResultsFuture4.get();
        boolean boolean15 = multiBackgroundInitializerResultsFuture4.cancel(true);
        boolean boolean17 = multiBackgroundInitializerResultsFuture4.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06545");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        boolean boolean9 = multiBackgroundInitializerResultsFuture8.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06546");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture5.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture5.get();
        java.util.Set<java.lang.String> strSet8 = multiBackgroundInitializerResults7.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test06547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06547");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer3.getFuture();
        boolean boolean21 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test06548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06548");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer14.getFuture();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.ExecutorService executorService24 = multiBackgroundInitializer14.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializer14.get();
        boolean boolean26 = multiBackgroundInitializer14.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture27 = multiBackgroundInitializer14.getFuture();
        boolean boolean29 = multiBackgroundInitializerResultsFuture27.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializerResultsFuture27.get();
        boolean boolean31 = multiBackgroundInitializerResultsFuture27.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNull(executorService24);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test06549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06549");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        boolean boolean15 = multiBackgroundInitializerResults14.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = multiBackgroundInitializerResults14.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test06550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06550");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService21 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean22 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer3.get();
        java.lang.Class<?> wildcardClass24 = multiBackgroundInitializerResults23.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
        org.junit.Assert.assertNull(executorService21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test06551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06551");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.isStarted();
        boolean boolean8 = multiBackgroundInitializer3.isStarted();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06552");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService11 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService11);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertNull(executorService10);
    }

    @Test
    public void test06553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06553");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        boolean boolean36 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture38 = multiBackgroundInitializer0.getFuture();
        boolean boolean39 = multiBackgroundInitializerResultsFuture38.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test06554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06554");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        boolean boolean19 = multiBackgroundInitializer3.start();
        boolean boolean20 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test06555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06555");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializerResults3.isSuccessful();
        boolean boolean5 = multiBackgroundInitializerResults3.isSuccessful();
        boolean boolean6 = multiBackgroundInitializerResults3.isSuccessful();
        boolean boolean7 = multiBackgroundInitializerResults3.isSuccessful();
        boolean boolean8 = multiBackgroundInitializerResults3.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException10 = multiBackgroundInitializerResults3.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test06556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06556");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        boolean boolean20 = multiBackgroundInitializerResultsFuture18.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test06557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06557");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        boolean boolean31 = multiBackgroundInitializer18.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer18.get();
        boolean boolean33 = multiBackgroundInitializer18.start();
        java.util.concurrent.ExecutorService executorService34 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer18.setExternalExecutor(executorService34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test06558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06558");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet5 = multiBackgroundInitializerResults4.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(strSet5);
    }

    @Test
    public void test06559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06559");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        boolean boolean19 = multiBackgroundInitializer15.start();
        java.util.concurrent.ExecutorService executorService20 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer15.setExternalExecutor(executorService20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test06560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06560");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet18 = multiBackgroundInitializerResults17.initializerNames();
        java.lang.Class<?> wildcardClass19 = strSet18.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test06561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06561");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean7 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializerResultsFuture2.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = multiBackgroundInitializerResults10.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
    }

    @Test
    public void test06562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06562");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        boolean boolean34 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService35 = multiBackgroundInitializer18.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture36 = multiBackgroundInitializer18.getFuture();
        boolean boolean38 = multiBackgroundInitializerResultsFuture36.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(executorService35);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test06563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06563");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        boolean boolean18 = multiBackgroundInitializerResultsFuture16.cancel(true);
        boolean boolean20 = multiBackgroundInitializerResultsFuture16.cancel(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06564");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.start();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        boolean boolean9 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer0.getFuture();
        boolean boolean14 = multiBackgroundInitializerResultsFuture13.isDone();
        boolean boolean15 = multiBackgroundInitializerResultsFuture13.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06565");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        boolean boolean20 = multiBackgroundInitializer3.start();
        boolean boolean21 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test06566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06566");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException18 = multiBackgroundInitializerResults16.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test06567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06567");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService6);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer9 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean10 = multiBackgroundInitializer9.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean13 = multiBackgroundInitializer12.isStarted();
        multiBackgroundInitializer9.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer12);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer16 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean17 = multiBackgroundInitializer16.isStarted();
        multiBackgroundInitializer12.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer16);
        boolean boolean19 = multiBackgroundInitializer12.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer12.get();
        boolean boolean21 = multiBackgroundInitializer12.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer12.getFuture();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer12);
        java.util.concurrent.ExecutorService executorService24 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean27 = multiBackgroundInitializer26.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.isStarted();
        multiBackgroundInitializer26.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer29);
        boolean boolean32 = multiBackgroundInitializer26.isStarted();
        boolean boolean33 = multiBackgroundInitializer26.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture34 = multiBackgroundInitializer26.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture35 = multiBackgroundInitializer26.getFuture();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
        boolean boolean37 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService38 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService38);
        java.util.concurrent.ExecutorService executorService40 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean41 = multiBackgroundInitializer3.start();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults42 = multiBackgroundInitializer3.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNull(executorService24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture34);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(executorService40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test06568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06568");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializerResults3.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = multiBackgroundInitializerResults3.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test06569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06569");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
    }

    @Test
    public void test06570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06570");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializerResultsFuture19.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializerResultsFuture19.get();
        boolean boolean22 = multiBackgroundInitializerResultsFuture19.isCancelled();
        boolean boolean23 = multiBackgroundInitializerResultsFuture19.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults24 = multiBackgroundInitializerResultsFuture19.get();
        java.lang.Class<?> wildcardClass25 = multiBackgroundInitializerResultsFuture19.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test06571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06571");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.ExecutorService executorService19 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService19);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService23);
        java.util.concurrent.ExecutorService executorService25 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService26 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean27 = multiBackgroundInitializer0.start();
        java.lang.Class<?> wildcardClass28 = multiBackgroundInitializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(executorService25);
        org.junit.Assert.assertNull(executorService26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test06572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06572");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = multiBackgroundInitializerResults6.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test06573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06573");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException19 = multiBackgroundInitializerResults17.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
    }

    @Test
    public void test06574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06574");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer15.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer15.get();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer15.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer15.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer15.getFuture();
        boolean boolean22 = multiBackgroundInitializer15.isStarted();
        boolean boolean23 = multiBackgroundInitializer15.isStarted();
        java.util.concurrent.ExecutorService executorService24 = multiBackgroundInitializer15.getExternalExecutor();
        boolean boolean25 = multiBackgroundInitializer15.start();
        boolean boolean26 = multiBackgroundInitializer15.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture27 = multiBackgroundInitializer15.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer15.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults29 = multiBackgroundInitializer15.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(executorService24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture27);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults29);
    }

    @Test
    public void test06575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06575");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture4.cancel(false);
        boolean boolean7 = multiBackgroundInitializerResultsFuture4.isCancelled();
        boolean boolean8 = multiBackgroundInitializerResultsFuture4.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture4.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = multiBackgroundInitializerResults9.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
    }

    @Test
    public void test06576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06576");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test06577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06577");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        boolean boolean7 = multiBackgroundInitializer3.start();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer17 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean18 = multiBackgroundInitializer17.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer17);
        boolean boolean20 = multiBackgroundInitializer14.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer25 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean26 = multiBackgroundInitializer25.isStarted();
        multiBackgroundInitializer22.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer25);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        multiBackgroundInitializer29.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean37 = multiBackgroundInitializer36.isStarted();
        multiBackgroundInitializer32.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer36);
        boolean boolean39 = multiBackgroundInitializer32.start();
        multiBackgroundInitializer22.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults42 = multiBackgroundInitializer32.get();
        boolean boolean43 = multiBackgroundInitializer32.isStarted();
        boolean boolean44 = multiBackgroundInitializer32.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture45 = multiBackgroundInitializer32.getFuture();
        boolean boolean46 = multiBackgroundInitializer32.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults47 = multiBackgroundInitializer32.get();
        boolean boolean48 = multiBackgroundInitializer32.isStarted();
        boolean boolean49 = multiBackgroundInitializer32.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test06578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06578");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = multiBackgroundInitializerResults10.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
    }

    @Test
    public void test06579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06579");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        boolean boolean10 = multiBackgroundInitializer0.start();
        boolean boolean11 = multiBackgroundInitializer0.isStarted();
        boolean boolean12 = multiBackgroundInitializer0.start();
        boolean boolean13 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializerResultsFuture15.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException18 = multiBackgroundInitializerResults16.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test06580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06580");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean11 = multiBackgroundInitializer0.start();
        boolean boolean12 = multiBackgroundInitializer0.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test06581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06581");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService40 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults41 = multiBackgroundInitializer0.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertNull(executorService40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults41);
    }

    @Test
    public void test06582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06582");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer4.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer27.setExternalExecutor(executorService34);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer27.getExternalExecutor();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean38 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        boolean boolean40 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture41 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture42 = multiBackgroundInitializer0.getFuture();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture41);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture42);
    }

    @Test
    public void test06583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06583");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
    }

    @Test
    public void test06584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06584");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        boolean boolean13 = multiBackgroundInitializerResults11.isSuccessful();
        boolean boolean15 = multiBackgroundInitializerResults11.isException("hi!");
        boolean boolean16 = multiBackgroundInitializerResults11.isSuccessful();
        java.lang.Object obj18 = multiBackgroundInitializerResults11.getResultObject("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer20 = multiBackgroundInitializerResults11.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
    }

    @Test
    public void test06585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06585");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer18.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializerResultsFuture30.get();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer33 = multiBackgroundInitializerResults31.getInitializer("hi!");
        java.util.Set<java.lang.String> strSet34 = multiBackgroundInitializerResults31.initializerNames();
        boolean boolean35 = multiBackgroundInitializerResults31.isSuccessful();
        java.util.Set<java.lang.String> strSet36 = multiBackgroundInitializerResults31.initializerNames();
        java.lang.Class<?> wildcardClass37 = multiBackgroundInitializerResults31.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults31);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test06586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06586");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializer18.get();
        boolean boolean31 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService33 = multiBackgroundInitializer18.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService34 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer18.setExternalExecutor(executorService34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNull(executorService33);
    }

    @Test
    public void test06587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06587");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        boolean boolean7 = multiBackgroundInitializer3.start();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.lang.Class<?> wildcardClass13 = multiBackgroundInitializer3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test06588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06588");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        boolean boolean9 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer13 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean14 = multiBackgroundInitializer13.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer16 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean17 = multiBackgroundInitializer16.isStarted();
        multiBackgroundInitializer13.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer16);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean30 = multiBackgroundInitializer23.start();
        multiBackgroundInitializer13.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean32 = multiBackgroundInitializer13.isStarted();
        java.util.concurrent.ExecutorService executorService33 = multiBackgroundInitializer13.getExternalExecutor();
        boolean boolean34 = multiBackgroundInitializer13.isStarted();
        boolean boolean35 = multiBackgroundInitializer13.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(executorService33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test06589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06589");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException39 = multiBackgroundInitializerResults37.getException("");
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException41 = multiBackgroundInitializerResults37.getException("");
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException43 = multiBackgroundInitializerResults37.getException("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass44 = concurrentException43.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertNull(concurrentException39);
        org.junit.Assert.assertNull(concurrentException41);
        org.junit.Assert.assertNull(concurrentException43);
    }

    @Test
    public void test06590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06590");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean5 = multiBackgroundInitializerResultsFuture4.isCancelled();
        boolean boolean6 = multiBackgroundInitializerResultsFuture4.isCancelled();
        boolean boolean7 = multiBackgroundInitializerResultsFuture4.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture4.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture4.get();
        boolean boolean10 = multiBackgroundInitializerResultsFuture4.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture4.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer13 = multiBackgroundInitializerResults11.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
    }

    @Test
    public void test06591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06591");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        boolean boolean19 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService21 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean22 = multiBackgroundInitializer0.start();
        boolean boolean23 = multiBackgroundInitializer0.start();
        boolean boolean24 = multiBackgroundInitializer0.start();
        boolean boolean25 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService26 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNull(executorService21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test06592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06592");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        boolean boolean10 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean13 = multiBackgroundInitializer12.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer12.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer19 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean20 = multiBackgroundInitializer19.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer19.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean27 = multiBackgroundInitializer26.isStarted();
        multiBackgroundInitializer22.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
        boolean boolean29 = multiBackgroundInitializer22.start();
        multiBackgroundInitializer12.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean31 = multiBackgroundInitializer12.isStarted();
        java.util.concurrent.ExecutorService executorService32 = null;
        multiBackgroundInitializer12.setExternalExecutor(executorService32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer35 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean36 = multiBackgroundInitializer35.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer38 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean39 = multiBackgroundInitializer38.isStarted();
        multiBackgroundInitializer35.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer38);
        boolean boolean41 = multiBackgroundInitializer35.isStarted();
        boolean boolean42 = multiBackgroundInitializer35.start();
        multiBackgroundInitializer12.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer35);
        java.util.concurrent.ExecutorService executorService44 = multiBackgroundInitializer12.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService45 = multiBackgroundInitializer12.getExternalExecutor();
        boolean boolean46 = multiBackgroundInitializer12.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(executorService44);
        org.junit.Assert.assertNull(executorService45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test06593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06593");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test06594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06594");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        boolean boolean20 = multiBackgroundInitializer3.start();
        boolean boolean21 = multiBackgroundInitializer3.start();
        boolean boolean22 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService23 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test06595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06595");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.TimeUnit timeUnit18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializerResultsFuture16.get((long) '4', timeUnit18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
    }

    @Test
    public void test06596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06596");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer14.getFuture();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.ExecutorService executorService24 = multiBackgroundInitializer14.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializer14.get();
        boolean boolean26 = multiBackgroundInitializer14.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer14.get();
        boolean boolean28 = multiBackgroundInitializer14.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNull(executorService24);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test06597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06597");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer3.getFuture();
        boolean boolean23 = multiBackgroundInitializerResultsFuture21.cancel(false);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults24 = multiBackgroundInitializerResultsFuture21.get();
        boolean boolean26 = multiBackgroundInitializerResultsFuture21.cancel(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test06598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06598");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        boolean boolean9 = multiBackgroundInitializerResultsFuture8.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test06599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06599");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        boolean boolean18 = multiBackgroundInitializerResultsFuture16.cancel(false);
        java.util.concurrent.TimeUnit timeUnit20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializerResultsFuture16.get((-1L), timeUnit20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06600");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer10.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer10.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializer10.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer10.get();
        boolean boolean24 = multiBackgroundInitializer10.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializer10.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer27 = multiBackgroundInitializerResults25.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
    }

    @Test
    public void test06601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06601");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        boolean boolean20 = multiBackgroundInitializer10.start();
        boolean boolean21 = multiBackgroundInitializer10.start();
        boolean boolean22 = multiBackgroundInitializer10.start();
        boolean boolean23 = multiBackgroundInitializer10.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture24 = multiBackgroundInitializer10.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializer10.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture24);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
    }

    @Test
    public void test06602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06602");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer14 = multiBackgroundInitializerResults12.getInitializer("hi!");
        boolean boolean16 = multiBackgroundInitializerResults12.isException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test06603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06603");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService29 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean30 = multiBackgroundInitializer18.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializer18.get();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService33 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean34 = multiBackgroundInitializer18.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNull(executorService29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(executorService33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test06604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06604");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean5 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean7 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.cancel(true);
        boolean boolean10 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean12 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean14 = multiBackgroundInitializerResultsFuture2.cancel(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06605");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializerResultsFuture17.get();
        boolean boolean20 = multiBackgroundInitializerResultsFuture17.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06606");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        boolean boolean19 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer3.getFuture();
        java.lang.Class<?> wildcardClass21 = multiBackgroundInitializer3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test06607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06607");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializerResultsFuture14.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test06608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06608");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        boolean boolean19 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06609");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializerResults15.isException("hi!");
        java.util.Set<java.lang.String> strSet18 = multiBackgroundInitializerResults15.initializerNames();
        boolean boolean20 = multiBackgroundInitializerResults15.isException("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = multiBackgroundInitializerResults15.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06610");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService7 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test06611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06611");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        java.util.concurrent.ExecutorService executorService9 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService9);
        boolean boolean11 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.TimeUnit timeUnit16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializerResultsFuture14.get(0L, timeUnit16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
    }

    @Test
    public void test06612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06612");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializerResults15.isException("hi!");
        java.util.Set<java.lang.String> strSet18 = multiBackgroundInitializerResults15.initializerNames();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer20 = multiBackgroundInitializerResults15.getInitializer("hi!");
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer22 = multiBackgroundInitializerResults15.getInitializer("hi!");
        boolean boolean24 = multiBackgroundInitializerResults15.isException("hi!");
        java.util.Set<java.lang.String> strSet25 = multiBackgroundInitializerResults15.initializerNames();
        java.util.Set<java.lang.String> strSet26 = multiBackgroundInitializerResults15.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer20);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test06613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06613");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        boolean boolean36 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService38 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService39 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertNull(executorService38);
    }

    @Test
    public void test06614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06614");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean38 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture39 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults41 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture42 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture43 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException46 = multiBackgroundInitializerResults44.getException("");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture39);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults41);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture42);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture43);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
        org.junit.Assert.assertNull(concurrentException46);
    }

    @Test
    public void test06615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06615");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        boolean boolean17 = multiBackgroundInitializerResultsFuture16.isCancelled();
        java.util.concurrent.TimeUnit timeUnit19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializerResultsFuture16.get((long) (short) -1, timeUnit19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06616");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        boolean boolean19 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test06617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06617");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture2.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = multiBackgroundInitializerResults4.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test06618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06618");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        boolean boolean12 = multiBackgroundInitializerResultsFuture10.cancel(false);
        java.util.concurrent.TimeUnit timeUnit14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializerResultsFuture10.get((long) 10, timeUnit14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06619");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test06620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06620");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        boolean boolean31 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer18.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture33 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture34 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture35 = multiBackgroundInitializer18.getFuture();
        boolean boolean36 = multiBackgroundInitializerResultsFuture35.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture33);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture34);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test06621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06621");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
    }

    @Test
    public void test06622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06622");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        boolean boolean8 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException11 = multiBackgroundInitializerResults9.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
    }

    @Test
    public void test06623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06623");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService21 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService22 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture24 = multiBackgroundInitializer3.getFuture();
        boolean boolean25 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(executorService21);
        org.junit.Assert.assertNull(executorService22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
    }

    @Test
    public void test06624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06624");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        boolean boolean36 = multiBackgroundInitializer0.start();
        boolean boolean37 = multiBackgroundInitializer0.start();
        boolean boolean38 = multiBackgroundInitializer0.start();
        boolean boolean39 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer41 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean42 = multiBackgroundInitializer41.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture43 = multiBackgroundInitializer41.getFuture();
        boolean boolean44 = multiBackgroundInitializer41.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults45 = multiBackgroundInitializer41.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults46 = multiBackgroundInitializer41.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults47 = multiBackgroundInitializer41.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture48 = multiBackgroundInitializer41.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults49 = multiBackgroundInitializer41.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults45);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults46);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults47);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture48);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults49);
    }

    @Test
    public void test06625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06625");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        boolean boolean19 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService21 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean22 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        boolean boolean34 = multiBackgroundInitializer27.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer27.get();
        boolean boolean36 = multiBackgroundInitializer27.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer27.get();
        boolean boolean38 = multiBackgroundInitializer27.start();
        boolean boolean39 = multiBackgroundInitializer27.isStarted();
        boolean boolean40 = multiBackgroundInitializer27.start();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService42 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService42);
        java.util.concurrent.ExecutorService executorService44 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService44);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture46 = multiBackgroundInitializer0.getFuture();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNull(executorService21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test06626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06626");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.Set<java.lang.String> strSet13 = multiBackgroundInitializerResults11.initializerNames();
        java.util.Set<java.lang.String> strSet14 = multiBackgroundInitializerResults11.initializerNames();
        java.lang.Object obj16 = multiBackgroundInitializerResults11.getResultObject("hi!");
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer18 = multiBackgroundInitializerResults11.getInitializer("hi!");
        java.util.Set<java.lang.String> strSet19 = multiBackgroundInitializerResults11.initializerNames();
        java.util.Set<java.lang.String> strSet20 = multiBackgroundInitializerResults11.initializerNames();
        java.util.Set<java.lang.String> strSet21 = multiBackgroundInitializerResults11.initializerNames();
        java.lang.Class<?> wildcardClass22 = multiBackgroundInitializerResults11.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test06627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06627");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean28 = multiBackgroundInitializer0.start();
        boolean boolean29 = multiBackgroundInitializer0.isStarted();
        java.lang.Class<?> wildcardClass30 = multiBackgroundInitializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test06628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06628");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer18.getFuture();
        boolean boolean31 = multiBackgroundInitializer18.start();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        boolean boolean33 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture34 = multiBackgroundInitializer18.getFuture();
        boolean boolean35 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer18.get();
        boolean boolean38 = multiBackgroundInitializer18.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test06629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06629");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        java.lang.Class<?> wildcardClass10 = multiBackgroundInitializer3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test06630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06630");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        boolean boolean19 = multiBackgroundInitializer3.start();
        boolean boolean20 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06631");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer16 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean17 = multiBackgroundInitializer16.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer19 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean20 = multiBackgroundInitializer19.isStarted();
        multiBackgroundInitializer16.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer19);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer19.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        java.util.concurrent.ExecutorService executorService26 = multiBackgroundInitializer19.getExternalExecutor();
        boolean boolean27 = multiBackgroundInitializer19.isStarted();
        java.util.concurrent.ExecutorService executorService28 = multiBackgroundInitializer19.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(executorService26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(executorService28);
    }

    @Test
    public void test06632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06632");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer3.getFuture();
        boolean boolean8 = multiBackgroundInitializerResultsFuture7.isDone();
        boolean boolean9 = multiBackgroundInitializerResultsFuture7.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializerResultsFuture7.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture7.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializerResultsFuture7.get();
        boolean boolean14 = multiBackgroundInitializerResultsFuture7.cancel(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06633");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService14 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
    }

    @Test
    public void test06634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06634");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.ExecutorService executorService26 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService26);
        java.util.concurrent.ExecutorService executorService28 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService28);
        boolean boolean30 = multiBackgroundInitializer7.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer7.getFuture();
        java.util.concurrent.TimeUnit timeUnit33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializerResultsFuture31.get((long) (byte) 0, timeUnit33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
    }

    @Test
    public void test06635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06635");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        boolean boolean13 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        java.util.concurrent.ExecutorService executorService25 = multiBackgroundInitializer22.getExternalExecutor();
        boolean boolean26 = multiBackgroundInitializer22.start();
        java.util.concurrent.ExecutorService executorService27 = multiBackgroundInitializer22.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(executorService25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(executorService27);
    }

    @Test
    public void test06636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06636");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer4.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer27.setExternalExecutor(executorService34);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer27.getExternalExecutor();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean38 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer4.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture41 = multiBackgroundInitializer4.getFuture();
        java.util.concurrent.ExecutorService executorService42 = multiBackgroundInitializer4.getExternalExecutor();
        boolean boolean43 = multiBackgroundInitializer4.start();
        boolean boolean44 = multiBackgroundInitializer4.isStarted();
        java.util.concurrent.ExecutorService executorService45 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer4.setExternalExecutor(executorService45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture41);
        org.junit.Assert.assertNull(executorService42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test06637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06637");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializerResultsFuture14.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializerResultsFuture14.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test06638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06638");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        boolean boolean19 = multiBackgroundInitializer3.isStarted();
        boolean boolean20 = multiBackgroundInitializer3.isStarted();
        java.lang.Class<?> wildcardClass21 = multiBackgroundInitializer3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test06639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06639");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializerResultsFuture16.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
    }

    @Test
    public void test06640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06640");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        boolean boolean8 = multiBackgroundInitializer3.start();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean12 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
    }

    @Test
    public void test06641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06641");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        boolean boolean17 = multiBackgroundInitializer3.start();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test06642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06642");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        boolean boolean19 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet21 = multiBackgroundInitializerResults20.initializerNames();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException23 = multiBackgroundInitializerResults20.getException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(concurrentException23);
    }

    @Test
    public void test06643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06643");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
    }

    @Test
    public void test06644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06644");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializerResults3.isSuccessful();
        boolean boolean5 = multiBackgroundInitializerResults3.isSuccessful();
        boolean boolean6 = multiBackgroundInitializerResults3.isSuccessful();
        java.util.Set<java.lang.String> strSet7 = multiBackgroundInitializerResults3.initializerNames();
        boolean boolean8 = multiBackgroundInitializerResults3.isSuccessful();
        boolean boolean9 = multiBackgroundInitializerResults3.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = multiBackgroundInitializerResults3.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test06645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06645");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializerResultsFuture11.get();
        boolean boolean13 = multiBackgroundInitializerResultsFuture11.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test06646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06646");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        java.lang.Object obj38 = multiBackgroundInitializerResults36.getResultObject("");
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException40 = multiBackgroundInitializerResults36.getException("hi!");
        boolean boolean42 = multiBackgroundInitializerResults36.isException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNull(concurrentException40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test06647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06647");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.lang.Class<?> wildcardClass16 = multiBackgroundInitializer3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test06648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06648");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = multiBackgroundInitializerResults16.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test06649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06649");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture4.get();
        boolean boolean7 = multiBackgroundInitializerResultsFuture4.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture4.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = multiBackgroundInitializerResults8.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test06650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06650");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(executorService19);
    }

    @Test
    public void test06651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06651");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean7 = multiBackgroundInitializerResultsFuture2.cancel(false);
        java.util.concurrent.TimeUnit timeUnit9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializerResultsFuture2.get(0L, timeUnit9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test06652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06652");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        java.util.concurrent.ExecutorService executorService9 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService9);
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNull(executorService16);
    }

    @Test
    public void test06653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06653");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean28 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture29 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer0.getFuture();
        boolean boolean31 = multiBackgroundInitializerResultsFuture30.isDone();
        boolean boolean32 = multiBackgroundInitializerResultsFuture30.isCancelled();
        boolean boolean34 = multiBackgroundInitializerResultsFuture30.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture29);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test06654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06654");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNull(executorService8);
    }

    @Test
    public void test06655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06655");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test06656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06656");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06657");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService3 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService4 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService4);
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService9 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(executorService3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test06658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06658");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        boolean boolean7 = multiBackgroundInitializer3.start();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializerResults12.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = multiBackgroundInitializerResults12.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test06659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06659");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
    }

    @Test
    public void test06660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06660");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService19 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test06661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06661");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.ExecutorService executorService26 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService26);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        multiBackgroundInitializer29.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean37 = multiBackgroundInitializer36.isStarted();
        multiBackgroundInitializer32.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer36);
        java.util.concurrent.ExecutorService executorService39 = null;
        multiBackgroundInitializer32.setExternalExecutor(executorService39);
        java.util.concurrent.ExecutorService executorService41 = multiBackgroundInitializer32.getExternalExecutor();
        boolean boolean42 = multiBackgroundInitializer32.start();
        boolean boolean43 = multiBackgroundInitializer32.start();
        boolean boolean44 = multiBackgroundInitializer32.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture45 = multiBackgroundInitializer32.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults46 = multiBackgroundInitializer32.get();
        multiBackgroundInitializer7.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        boolean boolean48 = multiBackgroundInitializer32.isStarted();
        java.util.concurrent.ExecutorService executorService49 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer32.setExternalExecutor(executorService49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(executorService41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture45);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test06662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06662");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializer18.get();
        boolean boolean31 = multiBackgroundInitializer18.start();
        boolean boolean32 = multiBackgroundInitializer18.start();
        java.lang.Class<?> wildcardClass33 = multiBackgroundInitializer18.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test06663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06663");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.start();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        java.lang.Class<?> wildcardClass10 = multiBackgroundInitializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test06664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06664");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsBackgroundInitializer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("", multiBackgroundInitializerResultsBackgroundInitializer11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Child initializer must not be null!");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
    }

    @Test
    public void test06665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06665");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer14.getFuture();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.ExecutorService executorService24 = multiBackgroundInitializer14.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializer14.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer14.get();
        java.util.concurrent.ExecutorService executorService27 = multiBackgroundInitializer14.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture28 = multiBackgroundInitializer14.getFuture();
        boolean boolean29 = multiBackgroundInitializerResultsFuture28.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNull(executorService24);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNull(executorService27);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test06666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06666");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNull(executorService23);
    }

    @Test
    public void test06667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06667");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        boolean boolean19 = multiBackgroundInitializerResults18.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test06668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06668");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer4.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer27.setExternalExecutor(executorService34);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer27.getExternalExecutor();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean38 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer4.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults41 = multiBackgroundInitializer4.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults42 = multiBackgroundInitializer4.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer4.get();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer45 = multiBackgroundInitializerResults43.getInitializer("");
        boolean boolean46 = multiBackgroundInitializerResults43.isSuccessful();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer48 = multiBackgroundInitializerResults43.getInitializer("");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults41);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults42);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer48);
    }

    @Test
    public void test06669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06669");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        boolean boolean19 = multiBackgroundInitializerResultsFuture18.isCancelled();
        boolean boolean21 = multiBackgroundInitializerResultsFuture18.cancel(false);
        boolean boolean22 = multiBackgroundInitializerResultsFuture18.isDone();
        java.util.concurrent.TimeUnit timeUnit24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializerResultsFuture18.get((long) '4', timeUnit24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test06670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06670");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer0.get();
        boolean boolean13 = multiBackgroundInitializerResults12.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test06671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06671");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        boolean boolean9 = multiBackgroundInitializerResults8.isSuccessful();
        boolean boolean10 = multiBackgroundInitializerResults8.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = multiBackgroundInitializerResults8.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test06672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06672");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        boolean boolean20 = multiBackgroundInitializer10.start();
        boolean boolean21 = multiBackgroundInitializer10.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer10.getFuture();
        boolean boolean24 = multiBackgroundInitializerResultsFuture22.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test06673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06673");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService6);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer9 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean10 = multiBackgroundInitializer9.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean13 = multiBackgroundInitializer12.isStarted();
        multiBackgroundInitializer9.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer12);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer16 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean17 = multiBackgroundInitializer16.isStarted();
        multiBackgroundInitializer12.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer16);
        boolean boolean19 = multiBackgroundInitializer12.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer12.get();
        boolean boolean21 = multiBackgroundInitializer12.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer12.getFuture();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer12);
        java.util.concurrent.ExecutorService executorService24 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean25 = multiBackgroundInitializer3.isStarted();
        boolean boolean26 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService27 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService27);
        java.util.concurrent.ExecutorService executorService29 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializer3.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNull(executorService24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test06674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06674");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.lang.Object obj17 = multiBackgroundInitializerResults15.getResultObject("hi!");
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException19 = multiBackgroundInitializerResults15.getException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNull(concurrentException19);
    }

    @Test
    public void test06675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06675");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializerResultsFuture14.get();
        boolean boolean16 = multiBackgroundInitializerResultsFuture14.isDone();
        java.util.concurrent.TimeUnit timeUnit18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializerResultsFuture14.get((long) 'a', timeUnit18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test06676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06676");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer3.getFuture();
        boolean boolean22 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test06677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06677");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
    }

    @Test
    public void test06678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06678");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer14 = multiBackgroundInitializerResults12.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
    }

    @Test
    public void test06679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06679");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService12);
        boolean boolean14 = multiBackgroundInitializer7.start();
        boolean boolean15 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer7.get();
        java.util.concurrent.ExecutorService executorService17 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer7.setExternalExecutor(executorService17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test06680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06680");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializerResultsFuture13.get();
        java.util.concurrent.TimeUnit timeUnit16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializerResultsFuture13.get((long) (short) 10, timeUnit16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
    }

    @Test
    public void test06681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06681");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer10.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer10.get();
        boolean boolean22 = multiBackgroundInitializer10.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture23 = multiBackgroundInitializer10.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults24 = multiBackgroundInitializer10.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture25 = multiBackgroundInitializer10.getFuture();
        boolean boolean26 = multiBackgroundInitializerResultsFuture25.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture23);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults24);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test06682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06682");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06683");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService6);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer9 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean10 = multiBackgroundInitializer9.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean13 = multiBackgroundInitializer12.isStarted();
        multiBackgroundInitializer9.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer12);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer16 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean17 = multiBackgroundInitializer16.isStarted();
        multiBackgroundInitializer12.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer16);
        boolean boolean19 = multiBackgroundInitializer12.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer12.get();
        boolean boolean21 = multiBackgroundInitializer12.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer12.getFuture();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer12);
        java.util.concurrent.ExecutorService executorService24 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean27 = multiBackgroundInitializer26.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.isStarted();
        multiBackgroundInitializer26.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer29);
        boolean boolean32 = multiBackgroundInitializer26.isStarted();
        boolean boolean33 = multiBackgroundInitializer26.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture34 = multiBackgroundInitializer26.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture35 = multiBackgroundInitializer26.getFuture();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer26.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer26.get();
        boolean boolean39 = multiBackgroundInitializer26.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer26.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer42 = multiBackgroundInitializerResults40.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNull(executorService24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture34);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture35);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
    }

    @Test
    public void test06684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06684");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet17 = multiBackgroundInitializerResults16.initializerNames();
        java.lang.Class<?> wildcardClass18 = strSet17.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test06685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06685");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture8.get();
        java.util.concurrent.TimeUnit timeUnit11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializerResultsFuture8.get((long) (short) 100, timeUnit11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
    }

    @Test
    public void test06686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06686");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean38 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture39 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService41 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture39);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
    }

    @Test
    public void test06687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06687");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializerResultsFuture16.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializerResultsFuture16.get();
        java.lang.Class<?> wildcardClass19 = multiBackgroundInitializerResultsFuture16.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test06688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06688");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        boolean boolean19 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        multiBackgroundInitializer21.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer24);
        java.util.concurrent.ExecutorService executorService27 = multiBackgroundInitializer24.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer24);
        java.util.concurrent.ExecutorService executorService29 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService29);
        java.util.concurrent.ExecutorService executorService31 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService31);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture33 = multiBackgroundInitializer0.getFuture();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(executorService27);
    }

    @Test
    public void test06689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06689");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        boolean boolean12 = multiBackgroundInitializerResultsFuture11.isCancelled();
        boolean boolean14 = multiBackgroundInitializerResultsFuture11.cancel(false);
        java.util.concurrent.TimeUnit timeUnit16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializerResultsFuture11.get((long) ' ', timeUnit16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06690");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer11 = multiBackgroundInitializerResults8.getInitializer("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test06691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06691");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
    }

    @Test
    public void test06692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06692");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService12);
        boolean boolean14 = multiBackgroundInitializer7.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer7.get();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer7.getExternalExecutor();
        boolean boolean17 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer7.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer7.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
    }

    @Test
    public void test06693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06693");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture38 = multiBackgroundInitializer0.getFuture();
        boolean boolean39 = multiBackgroundInitializer0.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test06694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06694");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(executorService18);
    }

    @Test
    public void test06695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06695");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean28 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture29 = multiBackgroundInitializer0.getFuture();
        boolean boolean30 = multiBackgroundInitializer0.start();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializer0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test06696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06696");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = multiBackgroundInitializerResults4.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test06697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06697");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer18.getFuture();
        boolean boolean31 = multiBackgroundInitializer18.start();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture33 = multiBackgroundInitializer18.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService35 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer18.setExternalExecutor(executorService35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture33);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults34);
    }

    @Test
    public void test06698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06698");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        boolean boolean16 = multiBackgroundInitializerResultsFuture15.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test06699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06699");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean13 = multiBackgroundInitializer12.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer12.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer15.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService19 = null;
        multiBackgroundInitializer15.setExternalExecutor(executorService19);
        boolean boolean21 = multiBackgroundInitializer15.start();
        boolean boolean22 = multiBackgroundInitializer15.start();
        multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults24 = multiBackgroundInitializer15.get();
        boolean boolean25 = multiBackgroundInitializer15.start();
        boolean boolean26 = multiBackgroundInitializer15.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test06700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06700");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.Set<java.lang.String> strSet13 = multiBackgroundInitializerResults11.initializerNames();
        java.util.Set<java.lang.String> strSet14 = multiBackgroundInitializerResults11.initializerNames();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException16 = multiBackgroundInitializerResults11.getException("hi!");
        java.util.Set<java.lang.String> strSet17 = multiBackgroundInitializerResults11.initializerNames();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException19 = multiBackgroundInitializerResults11.getException("hi!");
        boolean boolean20 = multiBackgroundInitializerResults11.isSuccessful();
        boolean boolean21 = multiBackgroundInitializerResults11.isSuccessful();
        boolean boolean22 = multiBackgroundInitializerResults11.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(concurrentException16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(concurrentException19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test06701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06701");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        boolean boolean9 = multiBackgroundInitializerResultsFuture8.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test06702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06702");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.ExecutorService executorService19 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService19);
        boolean boolean21 = multiBackgroundInitializer0.start();
        boolean boolean22 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService23 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test06703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06703");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        boolean boolean36 = multiBackgroundInitializer0.start();
        boolean boolean37 = multiBackgroundInitializer0.start();
        boolean boolean38 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture39 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults41 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer43 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean44 = multiBackgroundInitializer43.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer46 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean47 = multiBackgroundInitializer46.isStarted();
        multiBackgroundInitializer43.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer46);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer50 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean51 = multiBackgroundInitializer50.isStarted();
        multiBackgroundInitializer46.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer50);
        boolean boolean53 = multiBackgroundInitializer46.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults54 = multiBackgroundInitializer46.get();
        java.util.concurrent.ExecutorService executorService55 = multiBackgroundInitializer46.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture56 = multiBackgroundInitializer46.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults57 = multiBackgroundInitializer46.get();
        java.util.concurrent.ExecutorService executorService58 = multiBackgroundInitializer46.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture59 = multiBackgroundInitializer46.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults60 = multiBackgroundInitializer46.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture39);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults54);
        org.junit.Assert.assertNull(executorService55);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture56);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults57);
        org.junit.Assert.assertNull(executorService58);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture59);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults60);
    }

    @Test
    public void test06704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06704");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNull(executorService17);
    }

    @Test
    public void test06705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06705");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        boolean boolean19 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet21 = multiBackgroundInitializerResults20.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(strSet21);
    }

    @Test
    public void test06706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06706");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer6 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean7 = multiBackgroundInitializer6.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer9 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean10 = multiBackgroundInitializer9.isStarted();
        multiBackgroundInitializer6.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer9);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer13 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean14 = multiBackgroundInitializer13.isStarted();
        multiBackgroundInitializer9.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer13);
        boolean boolean16 = multiBackgroundInitializer9.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer9.getFuture();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer9.getExternalExecutor();
        boolean boolean19 = multiBackgroundInitializer9.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer9.get();
        boolean boolean21 = multiBackgroundInitializer9.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializer9.get();
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer9.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
        org.junit.Assert.assertNull(executorService23);
    }

    @Test
    public void test06707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06707");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer35 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean36 = multiBackgroundInitializer35.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer38 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean39 = multiBackgroundInitializer38.isStarted();
        multiBackgroundInitializer35.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer38);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer42 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean43 = multiBackgroundInitializer42.isStarted();
        multiBackgroundInitializer38.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer42);
        java.util.concurrent.ExecutorService executorService45 = null;
        multiBackgroundInitializer38.setExternalExecutor(executorService45);
        java.util.concurrent.ExecutorService executorService47 = multiBackgroundInitializer38.getExternalExecutor();
        boolean boolean48 = multiBackgroundInitializer38.start();
        boolean boolean49 = multiBackgroundInitializer38.isStarted();
        boolean boolean50 = multiBackgroundInitializer38.start();
        java.util.concurrent.ExecutorService executorService51 = multiBackgroundInitializer38.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService52 = multiBackgroundInitializer38.getExternalExecutor();
        boolean boolean53 = multiBackgroundInitializer38.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults54 = multiBackgroundInitializer38.get();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer38);
        java.util.concurrent.ExecutorService executorService56 = multiBackgroundInitializer38.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults57 = multiBackgroundInitializer38.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults58 = multiBackgroundInitializer38.get();
        java.util.concurrent.ExecutorService executorService59 = multiBackgroundInitializer38.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture60 = multiBackgroundInitializer38.getFuture();
        boolean boolean62 = multiBackgroundInitializerResultsFuture60.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(executorService47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(executorService51);
        org.junit.Assert.assertNull(executorService52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults54);
        org.junit.Assert.assertNull(executorService56);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults57);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults58);
        org.junit.Assert.assertNull(executorService59);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test06708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06708");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializerResultsFuture11.get();
        boolean boolean13 = multiBackgroundInitializerResults12.isSuccessful();
        java.util.Set<java.lang.String> strSet14 = multiBackgroundInitializerResults12.initializerNames();
        java.util.Set<java.lang.String> strSet15 = multiBackgroundInitializerResults12.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException17 = multiBackgroundInitializerResults12.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test06709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06709");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializerResultsFuture14.isDone();
        boolean boolean16 = multiBackgroundInitializerResultsFuture14.isDone();
        boolean boolean17 = multiBackgroundInitializerResultsFuture14.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializerResultsFuture14.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = multiBackgroundInitializerResults18.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
    }

    @Test
    public void test06710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06710");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet40 = multiBackgroundInitializerResults39.initializerNames();
        boolean boolean42 = multiBackgroundInitializerResults39.isException("");
        java.lang.Object obj44 = multiBackgroundInitializerResults39.getResultObject("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(obj44);
    }

    @Test
    public void test06711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06711");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        boolean boolean9 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer0.getFuture();
        boolean boolean11 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer0.getFuture();
        boolean boolean13 = multiBackgroundInitializerResultsFuture12.isDone();
        java.lang.Class<?> wildcardClass14 = multiBackgroundInitializerResultsFuture12.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test06712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06712");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializerResultsFuture12.cancel(false);
        boolean boolean15 = multiBackgroundInitializerResultsFuture12.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test06713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06713");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.ExecutorService executorService26 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService26);
        java.util.concurrent.ExecutorService executorService28 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService28);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService30);
        boolean boolean32 = multiBackgroundInitializer7.start();
        java.lang.Class<?> wildcardClass33 = multiBackgroundInitializer7.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test06714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06714");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer0.getFuture();
        boolean boolean38 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture39 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer41 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean42 = multiBackgroundInitializer41.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer44 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean45 = multiBackgroundInitializer44.isStarted();
        multiBackgroundInitializer41.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer44);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer48 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean49 = multiBackgroundInitializer48.isStarted();
        multiBackgroundInitializer44.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer48);
        boolean boolean51 = multiBackgroundInitializer44.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults52 = multiBackgroundInitializer44.get();
        boolean boolean53 = multiBackgroundInitializer44.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture54 = multiBackgroundInitializer44.getFuture();
        java.util.concurrent.ExecutorService executorService55 = multiBackgroundInitializer44.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture56 = multiBackgroundInitializer44.getFuture();
        boolean boolean57 = multiBackgroundInitializer44.start();
        boolean boolean58 = multiBackgroundInitializer44.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture54);
        org.junit.Assert.assertNull(executorService55);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test06715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06715");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        boolean boolean31 = multiBackgroundInitializer18.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer18.get();
        java.util.Set<java.lang.String> strSet33 = multiBackgroundInitializerResults32.initializerNames();
        java.util.Set<java.lang.String> strSet34 = multiBackgroundInitializerResults32.initializerNames();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer36 = multiBackgroundInitializerResults32.getInitializer("hi!");
        java.lang.Class<?> wildcardClass37 = multiBackgroundInitializerResults32.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test06716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06716");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        boolean boolean31 = multiBackgroundInitializer18.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer18.get();
        boolean boolean33 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService34 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean35 = multiBackgroundInitializer18.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(executorService34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test06717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06717");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService29 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.ExecutorService executorService31 = multiBackgroundInitializer18.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer18.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture33 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.ExecutorService executorService34 = multiBackgroundInitializer18.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNull(executorService29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(executorService31);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture33);
        org.junit.Assert.assertNull(executorService34);
    }

    @Test
    public void test06718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06718");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.Set<java.lang.String> strSet13 = multiBackgroundInitializerResults11.initializerNames();
        java.util.Set<java.lang.String> strSet14 = multiBackgroundInitializerResults11.initializerNames();
        boolean boolean15 = multiBackgroundInitializerResults11.isSuccessful();
        java.util.Set<java.lang.String> strSet16 = multiBackgroundInitializerResults11.initializerNames();
        java.util.Set<java.lang.String> strSet17 = multiBackgroundInitializerResults11.initializerNames();
        java.util.Set<java.lang.String> strSet18 = multiBackgroundInitializerResults11.initializerNames();
        boolean boolean20 = multiBackgroundInitializerResults11.isException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06719");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer0.start();
        boolean boolean11 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer0.getFuture();
        boolean boolean13 = multiBackgroundInitializerResultsFuture12.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializerResultsFuture12.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException16 = multiBackgroundInitializerResults14.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
    }

    @Test
    public void test06720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06720");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture26 = multiBackgroundInitializer14.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture27 = multiBackgroundInitializer14.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture28 = multiBackgroundInitializer14.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults29 = multiBackgroundInitializerResultsFuture28.get();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer31 = multiBackgroundInitializerResults29.getInitializer("hi!");
        java.lang.Object obj33 = multiBackgroundInitializerResults29.getResultObject("hi!");
        boolean boolean34 = multiBackgroundInitializerResults29.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture26);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture27);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture28);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults29);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test06721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06721");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
    }

    @Test
    public void test06722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06722");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer35 = multiBackgroundInitializerResults33.getInitializer("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = multiBackgroundInitializerResults33.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer35);
    }

    @Test
    public void test06723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06723");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        boolean boolean17 = multiBackgroundInitializerResultsFuture15.cancel(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06724");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer38 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean39 = multiBackgroundInitializer38.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer41 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean42 = multiBackgroundInitializer41.isStarted();
        multiBackgroundInitializer38.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer41);
        java.util.concurrent.ExecutorService executorService44 = multiBackgroundInitializer41.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService45 = multiBackgroundInitializer41.getExternalExecutor();
        boolean boolean46 = multiBackgroundInitializer41.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults47 = multiBackgroundInitializer41.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults48 = multiBackgroundInitializer41.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults49 = multiBackgroundInitializer41.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture50 = multiBackgroundInitializer41.getFuture();
        boolean boolean51 = multiBackgroundInitializer41.isStarted();
        java.util.concurrent.ExecutorService executorService52 = multiBackgroundInitializer41.getExternalExecutor();
        boolean boolean53 = multiBackgroundInitializer41.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture54 = multiBackgroundInitializer41.getFuture();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(executorService44);
        org.junit.Assert.assertNull(executorService45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults47);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults48);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults49);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(executorService52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture54);
    }

    @Test
    public void test06725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06725");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet11 = multiBackgroundInitializerResults10.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException13 = multiBackgroundInitializerResults10.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test06726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06726");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean6 = multiBackgroundInitializerResultsFuture2.cancel(true);
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean10 = multiBackgroundInitializerResultsFuture2.isDone();
        java.util.concurrent.TimeUnit timeUnit12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializerResultsFuture2.get((long) ' ', timeUnit12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test06727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06727");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture23 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture23);
    }

    @Test
    public void test06728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06728");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        boolean boolean9 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer14.start();
        boolean boolean18 = multiBackgroundInitializer14.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer14.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer14.get();
        boolean boolean21 = multiBackgroundInitializer14.isStarted();
        java.util.concurrent.ExecutorService executorService22 = multiBackgroundInitializer14.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(executorService22);
    }

    @Test
    public void test06729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06729");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService29 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture32 = multiBackgroundInitializer18.getFuture();
        java.lang.Class<?> wildcardClass33 = multiBackgroundInitializer18.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNull(executorService29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test06730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06730");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture36 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture38 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer0.get();
        java.lang.Class<?> wildcardClass40 = multiBackgroundInitializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture38);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test06731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06731");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
    }

    @Test
    public void test06732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06732");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        boolean boolean8 = multiBackgroundInitializer3.start();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer17 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean18 = multiBackgroundInitializer17.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer17);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        multiBackgroundInitializer17.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer21);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer25 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean26 = multiBackgroundInitializer25.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer28 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean29 = multiBackgroundInitializer28.isStarted();
        multiBackgroundInitializer25.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer28);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        multiBackgroundInitializer28.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        java.util.concurrent.ExecutorService executorService35 = null;
        multiBackgroundInitializer28.setExternalExecutor(executorService35);
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer28.getExternalExecutor();
        boolean boolean38 = multiBackgroundInitializer28.start();
        multiBackgroundInitializer21.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer28);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture40 = multiBackgroundInitializer28.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults41 = multiBackgroundInitializer28.get();
        java.util.concurrent.ExecutorService executorService42 = multiBackgroundInitializer28.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults41);
        org.junit.Assert.assertNull(executorService42);
    }

    @Test
    public void test06733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06733");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNull(executorService11);
    }

    @Test
    public void test06734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06734");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        boolean boolean31 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer18.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture33 = multiBackgroundInitializer18.getFuture();
        boolean boolean34 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer18.get();
        boolean boolean36 = multiBackgroundInitializer18.isStarted();
        boolean boolean37 = multiBackgroundInitializer18.start();
        boolean boolean38 = multiBackgroundInitializer18.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test06735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06735");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer4.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer27.setExternalExecutor(executorService34);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer27.getExternalExecutor();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean38 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        java.util.concurrent.ExecutorService executorService40 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService40);
        boolean boolean42 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture43 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService44 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService45 = multiBackgroundInitializer0.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults46 = multiBackgroundInitializer0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture43);
        org.junit.Assert.assertNull(executorService44);
        org.junit.Assert.assertNull(executorService45);
    }

    @Test
    public void test06736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06736");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean5 = multiBackgroundInitializerResultsFuture2.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture2.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
    }

    @Test
    public void test06737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06737");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException14 = multiBackgroundInitializerResults12.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
    }

    @Test
    public void test06738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06738");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        java.util.concurrent.ExecutorService executorService19 = null;
        multiBackgroundInitializer15.setExternalExecutor(executorService19);
        boolean boolean21 = multiBackgroundInitializer15.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializer15.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer15.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException25 = multiBackgroundInitializerResults23.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
    }

    @Test
    public void test06739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06739");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException10 = multiBackgroundInitializerResults8.getException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test06740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06740");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService11 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
    }

    @Test
    public void test06741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06741");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = multiBackgroundInitializerResults7.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test06742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06742");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        boolean boolean36 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer0.getFuture();
        boolean boolean38 = multiBackgroundInitializer0.start();
        boolean boolean39 = multiBackgroundInitializer0.isStarted();
        boolean boolean40 = multiBackgroundInitializer0.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test06743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06743");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean11 = multiBackgroundInitializer3.start();
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
    }

    @Test
    public void test06744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06744");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
    }

    @Test
    public void test06745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06745");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService35 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(executorService35);
        org.junit.Assert.assertNull(executorService36);
    }

    @Test
    public void test06746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06746");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean38 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer0.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
    }

    @Test
    public void test06747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06747");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean19 = multiBackgroundInitializer3.isStarted();
        boolean boolean20 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean27 = multiBackgroundInitializer26.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
        boolean boolean29 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer34 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean35 = multiBackgroundInitializer34.isStarted();
        multiBackgroundInitializer31.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer34);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer38 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean39 = multiBackgroundInitializer38.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer41 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean42 = multiBackgroundInitializer41.isStarted();
        multiBackgroundInitializer38.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer41);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer45 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean46 = multiBackgroundInitializer45.isStarted();
        multiBackgroundInitializer41.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer45);
        boolean boolean48 = multiBackgroundInitializer41.start();
        multiBackgroundInitializer31.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer41);
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer41);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults51 = multiBackgroundInitializer41.get();
        boolean boolean52 = multiBackgroundInitializer41.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture53 = multiBackgroundInitializer41.getFuture();
        boolean boolean54 = multiBackgroundInitializer41.start();
        boolean boolean55 = multiBackgroundInitializer41.isStarted();
        boolean boolean56 = multiBackgroundInitializer41.start();
        boolean boolean57 = multiBackgroundInitializer41.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults58 = multiBackgroundInitializer41.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture59 = multiBackgroundInitializer41.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture60 = multiBackgroundInitializer41.getFuture();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults58);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture59);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture60);
    }

    @Test
    public void test06748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06748");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializerResultsFuture14.isDone();
        boolean boolean16 = multiBackgroundInitializerResultsFuture14.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializerResultsFuture14.get();
        java.util.Set<java.lang.String> strSet18 = multiBackgroundInitializerResults17.initializerNames();
        boolean boolean19 = multiBackgroundInitializerResults17.isSuccessful();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException21 = multiBackgroundInitializerResults17.getException("hi!");
        boolean boolean22 = multiBackgroundInitializerResults17.isSuccessful();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer24 = multiBackgroundInitializerResults17.getInitializer("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(concurrentException21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer24);
    }

    @Test
    public void test06749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06749");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        boolean boolean34 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService35 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean36 = multiBackgroundInitializer18.start();
        boolean boolean37 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer18.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(executorService35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
    }

    @Test
    public void test06750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06750");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer0.get();
        boolean boolean39 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService40 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(executorService40);
    }

    @Test
    public void test06751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06751");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        boolean boolean4 = multiBackgroundInitializerResultsFuture3.isCancelled();
        boolean boolean5 = multiBackgroundInitializerResultsFuture3.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean7 = multiBackgroundInitializerResultsFuture3.isCancelled();
        boolean boolean8 = multiBackgroundInitializerResultsFuture3.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializerResultsFuture3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
    }

    @Test
    public void test06752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06752");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer7.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer7.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService12 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService12);
        boolean boolean14 = multiBackgroundInitializer7.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06753");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        java.lang.Object obj18 = multiBackgroundInitializerResults16.getResultObject("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(obj18);
    }

    @Test
    public void test06754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06754");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.ExecutorService executorService26 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService26);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        multiBackgroundInitializer29.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean37 = multiBackgroundInitializer36.isStarted();
        multiBackgroundInitializer32.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer36);
        java.util.concurrent.ExecutorService executorService39 = null;
        multiBackgroundInitializer32.setExternalExecutor(executorService39);
        java.util.concurrent.ExecutorService executorService41 = multiBackgroundInitializer32.getExternalExecutor();
        boolean boolean42 = multiBackgroundInitializer32.start();
        boolean boolean43 = multiBackgroundInitializer32.start();
        boolean boolean44 = multiBackgroundInitializer32.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture45 = multiBackgroundInitializer32.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults46 = multiBackgroundInitializer32.get();
        multiBackgroundInitializer7.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        java.util.concurrent.ExecutorService executorService48 = multiBackgroundInitializer7.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService49 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService49);
        boolean boolean51 = multiBackgroundInitializer7.isStarted();
        boolean boolean52 = multiBackgroundInitializer7.isStarted();
        java.util.concurrent.ExecutorService executorService53 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService53);
        java.util.concurrent.ExecutorService executorService55 = multiBackgroundInitializer7.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(executorService41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture45);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults46);
        org.junit.Assert.assertNull(executorService48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(executorService55);
    }

    @Test
    public void test06755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06755");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer21);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer25 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean26 = multiBackgroundInitializer25.isStarted();
        multiBackgroundInitializer21.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer25);
        boolean boolean28 = multiBackgroundInitializer21.start();
        multiBackgroundInitializer11.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer21);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer34 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean35 = multiBackgroundInitializer34.isStarted();
        multiBackgroundInitializer31.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer34);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer38 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean39 = multiBackgroundInitializer38.isStarted();
        multiBackgroundInitializer34.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer38);
        java.util.concurrent.ExecutorService executorService41 = null;
        multiBackgroundInitializer34.setExternalExecutor(executorService41);
        java.util.concurrent.ExecutorService executorService43 = multiBackgroundInitializer34.getExternalExecutor();
        multiBackgroundInitializer11.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer34);
        java.util.concurrent.ExecutorService executorService45 = null;
        multiBackgroundInitializer11.setExternalExecutor(executorService45);
        java.util.concurrent.ExecutorService executorService47 = null;
        multiBackgroundInitializer11.setExternalExecutor(executorService47);
        java.util.concurrent.ExecutorService executorService49 = multiBackgroundInitializer11.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer51 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean52 = multiBackgroundInitializer51.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer54 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean55 = multiBackgroundInitializer54.isStarted();
        multiBackgroundInitializer51.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer54);
        boolean boolean57 = multiBackgroundInitializer54.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults58 = multiBackgroundInitializer54.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture59 = multiBackgroundInitializer54.getFuture();
        boolean boolean60 = multiBackgroundInitializer54.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults61 = multiBackgroundInitializer54.get();
        boolean boolean62 = multiBackgroundInitializer54.start();
        multiBackgroundInitializer11.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer54);
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(executorService43);
        org.junit.Assert.assertNull(executorService49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults58);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test06756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06756");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer0.start();
        boolean boolean11 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer0.get();
        boolean boolean15 = multiBackgroundInitializer0.start();
        boolean boolean16 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test06757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06757");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean37 = multiBackgroundInitializer36.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture38 = multiBackgroundInitializer36.getFuture();
        boolean boolean39 = multiBackgroundInitializer36.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer36.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults41 = multiBackgroundInitializer36.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults42 = multiBackgroundInitializer36.get();
        boolean boolean43 = multiBackgroundInitializer36.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer36.get();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer36);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture46 = multiBackgroundInitializer23.getFuture();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults41);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
    }

    @Test
    public void test06758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06758");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer4.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer27.setExternalExecutor(executorService34);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer27.getExternalExecutor();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean38 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer4.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture41 = multiBackgroundInitializer4.getFuture();
        java.util.concurrent.ExecutorService executorService42 = multiBackgroundInitializer4.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer4.get();
        boolean boolean45 = multiBackgroundInitializerResults43.isException("");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture41);
        org.junit.Assert.assertNull(executorService42);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test06759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06759");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture4.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test06760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06760");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
    }

    @Test
    public void test06761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06761");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        boolean boolean34 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture35 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture36 = multiBackgroundInitializer18.getFuture();
        boolean boolean37 = multiBackgroundInitializer18.isStarted();
        boolean boolean38 = multiBackgroundInitializer18.start();
        boolean boolean39 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture40 = multiBackgroundInitializer18.getFuture();
        java.lang.Class<?> wildcardClass41 = multiBackgroundInitializerResultsFuture40.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture35);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test06762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06762");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService11 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
    }

    @Test
    public void test06763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06763");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException14 = multiBackgroundInitializerResults12.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
    }

    @Test
    public void test06764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06764");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        java.lang.Class<?> wildcardClass20 = multiBackgroundInitializerResultsFuture19.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test06765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06765");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        boolean boolean19 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
    }

    @Test
    public void test06766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06766");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService6);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer9 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean10 = multiBackgroundInitializer9.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean13 = multiBackgroundInitializer12.isStarted();
        multiBackgroundInitializer9.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer12);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer16 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean17 = multiBackgroundInitializer16.isStarted();
        multiBackgroundInitializer12.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer16);
        boolean boolean19 = multiBackgroundInitializer12.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer12.get();
        boolean boolean21 = multiBackgroundInitializer12.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer12.getFuture();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer12);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture24 = multiBackgroundInitializer12.getFuture();
        boolean boolean25 = multiBackgroundInitializer12.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer12.get();
        java.util.Set<java.lang.String> strSet27 = multiBackgroundInitializerResults26.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(strSet27);
    }

    @Test
    public void test06767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06767");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNull(executorService19);
    }

    @Test
    public void test06768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06768");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        boolean boolean19 = multiBackgroundInitializerResultsFuture17.cancel(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06769");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        java.util.concurrent.ExecutorService executorService9 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService9);
        boolean boolean11 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializerResultsFuture14.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializerResultsFuture14.get();
        boolean boolean18 = multiBackgroundInitializerResultsFuture14.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06770");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
    }

    @Test
    public void test06771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06771");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer12 = multiBackgroundInitializerResults10.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
    }

    @Test
    public void test06772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06772");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean5 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean6 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean11 = multiBackgroundInitializerResultsFuture2.cancel(false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializerResultsFuture2.get();
            org.junit.Assert.fail("Expected exception of type java.util.concurrent.CancellationException; message: null");
        } catch (java.util.concurrent.CancellationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06773");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.cancel(false);
        java.util.concurrent.TimeUnit timeUnit11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializerResultsFuture2.get((long) (-1), timeUnit11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06774");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        boolean boolean18 = multiBackgroundInitializerResultsFuture17.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializerResultsFuture17.get();
        java.util.Set<java.lang.String> strSet20 = multiBackgroundInitializerResults19.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException22 = multiBackgroundInitializerResults19.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test06775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06775");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = multiBackgroundInitializerResults8.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test06776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06776");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializerResultsFuture13.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06777");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer4.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer27.setExternalExecutor(executorService34);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer27.getExternalExecutor();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean38 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer4.get();
        boolean boolean41 = multiBackgroundInitializer4.isStarted();
        boolean boolean42 = multiBackgroundInitializer4.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer4.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer4.get();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException46 = multiBackgroundInitializerResults44.getException("");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults44);
        org.junit.Assert.assertNull(concurrentException46);
    }

    @Test
    public void test06778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06778");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService34);
        boolean boolean36 = multiBackgroundInitializer23.start();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer23.getExternalExecutor();
        boolean boolean38 = multiBackgroundInitializer23.isStarted();
        boolean boolean39 = multiBackgroundInitializer23.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test06779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06779");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture4.cancel(false);
        boolean boolean8 = multiBackgroundInitializerResultsFuture4.cancel(false);
        boolean boolean9 = multiBackgroundInitializerResultsFuture4.isDone();
        boolean boolean10 = multiBackgroundInitializerResultsFuture4.isCancelled();
        boolean boolean11 = multiBackgroundInitializerResultsFuture4.isDone();
        java.util.concurrent.TimeUnit timeUnit13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializerResultsFuture4.get(10L, timeUnit13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test06780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06780");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer0.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
    }

    @Test
    public void test06781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06781");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = multiBackgroundInitializerResults14.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
    }

    @Test
    public void test06782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06782");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet8 = multiBackgroundInitializerResults7.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = multiBackgroundInitializerResults7.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test06783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06783");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        boolean boolean31 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean33 = multiBackgroundInitializer18.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializer18.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture35 = multiBackgroundInitializer18.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializerResultsFuture35.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults34);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture35);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
    }

    @Test
    public void test06784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06784");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer7.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService12 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService12);
        boolean boolean14 = multiBackgroundInitializer7.isStarted();
        boolean boolean15 = multiBackgroundInitializer7.isStarted();
        boolean boolean16 = multiBackgroundInitializer7.isStarted();
        boolean boolean17 = multiBackgroundInitializer7.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test06785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06785");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer14.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer14.get();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer29 = multiBackgroundInitializerResults27.getInitializer("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer29);
    }

    @Test
    public void test06786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06786");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService13 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService13);
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService17 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test06787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06787");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializerResults17.isSuccessful();
        boolean boolean19 = multiBackgroundInitializerResults17.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = multiBackgroundInitializerResults17.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test06788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06788");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        boolean boolean5 = multiBackgroundInitializer0.start();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        boolean boolean14 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer16 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean17 = multiBackgroundInitializer16.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer19 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean20 = multiBackgroundInitializer19.isStarted();
        multiBackgroundInitializer16.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer19);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean27 = multiBackgroundInitializer26.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer30 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean31 = multiBackgroundInitializer30.isStarted();
        multiBackgroundInitializer26.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer30);
        boolean boolean33 = multiBackgroundInitializer26.start();
        multiBackgroundInitializer16.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer26.get();
        boolean boolean37 = multiBackgroundInitializer26.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer26.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
    }

    @Test
    public void test06789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06789");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        boolean boolean19 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        multiBackgroundInitializer21.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer24);
        java.util.concurrent.ExecutorService executorService27 = multiBackgroundInitializer24.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer24);
        boolean boolean29 = multiBackgroundInitializer0.isStarted();
        boolean boolean30 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture34 = multiBackgroundInitializer0.getFuture();
        boolean boolean35 = multiBackgroundInitializerResultsFuture34.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(executorService27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test06790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06790");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        boolean boolean7 = multiBackgroundInitializer3.start();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06791");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.cancel(false);
        boolean boolean10 = multiBackgroundInitializerResultsFuture2.cancel(false);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture2.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test06792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06792");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
    }

    @Test
    public void test06793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06793");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        multiBackgroundInitializer21.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer24);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer28 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean29 = multiBackgroundInitializer28.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer28);
        boolean boolean31 = multiBackgroundInitializer24.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer24.get();
        boolean boolean33 = multiBackgroundInitializer24.isStarted();
        java.util.concurrent.ExecutorService executorService34 = multiBackgroundInitializer24.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture35 = multiBackgroundInitializer24.getFuture();
        boolean boolean36 = multiBackgroundInitializer24.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(executorService34);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test06794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06794");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer11.getFuture();
        boolean boolean14 = multiBackgroundInitializer11.start();
        boolean boolean15 = multiBackgroundInitializer11.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test06795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06795");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture6.get();
        boolean boolean8 = multiBackgroundInitializerResultsFuture6.isDone();
        boolean boolean9 = multiBackgroundInitializerResultsFuture6.isCancelled();
        boolean boolean11 = multiBackgroundInitializerResultsFuture6.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializerResultsFuture6.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
    }

    @Test
    public void test06796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06796");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        java.lang.Class<?> wildcardClass6 = multiBackgroundInitializer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test06797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06797");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService10 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
    }

    @Test
    public void test06798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06798");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer18.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializerResultsFuture30.get();
        boolean boolean33 = multiBackgroundInitializerResultsFuture30.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializerResultsFuture30.get();
        java.util.Set<java.lang.String> strSet35 = multiBackgroundInitializerResults34.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults34);
        org.junit.Assert.assertNotNull(strSet35);
    }

    @Test
    public void test06799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06799");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer40 = multiBackgroundInitializerResults38.getInitializer("hi!");
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException42 = multiBackgroundInitializerResults38.getException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer40);
        org.junit.Assert.assertNull(concurrentException42);
    }

    @Test
    public void test06800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06800");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer0.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
    }

    @Test
    public void test06801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06801");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06802");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
    }

    @Test
    public void test06803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06803");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        boolean boolean20 = multiBackgroundInitializer10.start();
        boolean boolean21 = multiBackgroundInitializer10.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializer10.get();
        boolean boolean23 = multiBackgroundInitializer10.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test06804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06804");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer3.getFuture();
        boolean boolean8 = multiBackgroundInitializerResultsFuture7.isDone();
        boolean boolean9 = multiBackgroundInitializerResultsFuture7.isCancelled();
        boolean boolean10 = multiBackgroundInitializerResultsFuture7.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture7.get();
        boolean boolean12 = multiBackgroundInitializerResultsFuture7.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializerResultsFuture7.get();
        java.util.concurrent.TimeUnit timeUnit15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializerResultsFuture7.get(10L, timeUnit15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
    }

    @Test
    public void test06805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06805");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test06806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06806");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializerResults6.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test06807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06807");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNull(executorService18);
    }

    @Test
    public void test06808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06808");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture36 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture38 = multiBackgroundInitializer0.getFuture();
        boolean boolean39 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer0.get();
        java.lang.Object obj42 = multiBackgroundInitializerResults40.getResultObject("hi!");
        boolean boolean44 = multiBackgroundInitializerResults40.isException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test06809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06809");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        boolean boolean19 = multiBackgroundInitializer0.isStarted();
        boolean boolean20 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer0.getFuture();
        boolean boolean22 = multiBackgroundInitializerResultsFuture21.isDone();
        java.util.concurrent.TimeUnit timeUnit24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializerResultsFuture21.get((long) (short) 100, timeUnit24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test06810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06810");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.ExecutorService executorService26 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService26);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        multiBackgroundInitializer29.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean37 = multiBackgroundInitializer36.isStarted();
        multiBackgroundInitializer32.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer36);
        java.util.concurrent.ExecutorService executorService39 = null;
        multiBackgroundInitializer32.setExternalExecutor(executorService39);
        java.util.concurrent.ExecutorService executorService41 = multiBackgroundInitializer32.getExternalExecutor();
        boolean boolean42 = multiBackgroundInitializer32.start();
        boolean boolean43 = multiBackgroundInitializer32.start();
        boolean boolean44 = multiBackgroundInitializer32.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture45 = multiBackgroundInitializer32.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults46 = multiBackgroundInitializer32.get();
        multiBackgroundInitializer7.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        java.util.concurrent.ExecutorService executorService48 = multiBackgroundInitializer7.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService49 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService49);
        boolean boolean51 = multiBackgroundInitializer7.isStarted();
        boolean boolean52 = multiBackgroundInitializer7.isStarted();
        java.util.concurrent.ExecutorService executorService53 = multiBackgroundInitializer7.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults54 = multiBackgroundInitializer7.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(executorService41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture45);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults46);
        org.junit.Assert.assertNull(executorService48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(executorService53);
    }

    @Test
    public void test06811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06811");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        boolean boolean19 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06812");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializerResults16.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test06813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06813");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean10 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean11 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean12 = multiBackgroundInitializerResultsFuture2.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializerResultsFuture2.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
    }

    @Test
    public void test06814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06814");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer3.getFuture();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = multiBackgroundInitializerResults11.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
    }

    @Test
    public void test06815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06815");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        boolean boolean19 = multiBackgroundInitializerResultsFuture18.isDone();
        boolean boolean20 = multiBackgroundInitializerResultsFuture18.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test06816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06816");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        boolean boolean20 = multiBackgroundInitializer3.isStarted();
        boolean boolean21 = multiBackgroundInitializer3.start();
        boolean boolean22 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException25 = multiBackgroundInitializerResults23.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
    }

    @Test
    public void test06817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06817");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06818");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture29 = multiBackgroundInitializer18.getFuture();
        boolean boolean30 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer35 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean36 = multiBackgroundInitializer35.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer38 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean39 = multiBackgroundInitializer38.isStarted();
        multiBackgroundInitializer35.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer38);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer42 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean43 = multiBackgroundInitializer42.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer45 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean46 = multiBackgroundInitializer45.isStarted();
        multiBackgroundInitializer42.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer45);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer49 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean50 = multiBackgroundInitializer49.isStarted();
        multiBackgroundInitializer45.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer49);
        boolean boolean52 = multiBackgroundInitializer45.start();
        multiBackgroundInitializer35.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer45);
        boolean boolean54 = multiBackgroundInitializer35.isStarted();
        java.util.concurrent.ExecutorService executorService55 = multiBackgroundInitializer35.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService56 = multiBackgroundInitializer35.getExternalExecutor();
        boolean boolean57 = multiBackgroundInitializer35.start();
        boolean boolean58 = multiBackgroundInitializer35.start();
        java.util.concurrent.ExecutorService executorService59 = multiBackgroundInitializer35.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(executorService55);
        org.junit.Assert.assertNull(executorService56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(executorService59);
    }

    @Test
    public void test06819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06819");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        boolean boolean21 = multiBackgroundInitializer3.isStarted();
        boolean boolean22 = multiBackgroundInitializer3.start();
        boolean boolean23 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults24 = multiBackgroundInitializer3.get();
        boolean boolean25 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer30 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean31 = multiBackgroundInitializer30.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer30);
        java.util.concurrent.ExecutorService executorService33 = multiBackgroundInitializer30.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService34 = multiBackgroundInitializer30.getExternalExecutor();
        boolean boolean35 = multiBackgroundInitializer30.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer30.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer30.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults38 = multiBackgroundInitializer30.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture39 = multiBackgroundInitializer30.getFuture();
        boolean boolean40 = multiBackgroundInitializer30.start();
        boolean boolean41 = multiBackgroundInitializer30.start();
        java.util.concurrent.ExecutorService executorService42 = multiBackgroundInitializer30.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer30.get();
        java.util.concurrent.ExecutorService executorService44 = multiBackgroundInitializer30.getExternalExecutor();
        boolean boolean45 = multiBackgroundInitializer30.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(executorService33);
        org.junit.Assert.assertNull(executorService34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults38);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(executorService42);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertNull(executorService44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test06820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06820");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        boolean boolean19 = multiBackgroundInitializer3.start();
        java.lang.Class<?> wildcardClass20 = multiBackgroundInitializer3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test06821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06821");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer21);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer25 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean26 = multiBackgroundInitializer25.isStarted();
        multiBackgroundInitializer21.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer25);
        java.util.concurrent.ExecutorService executorService28 = null;
        multiBackgroundInitializer21.setExternalExecutor(executorService28);
        java.util.concurrent.ExecutorService executorService30 = multiBackgroundInitializer21.getExternalExecutor();
        boolean boolean31 = multiBackgroundInitializer21.start();
        boolean boolean32 = multiBackgroundInitializer21.start();
        boolean boolean33 = multiBackgroundInitializer21.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture34 = multiBackgroundInitializer21.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture35 = multiBackgroundInitializer21.getFuture();
        boolean boolean36 = multiBackgroundInitializer21.start();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer21.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService38 = multiBackgroundInitializer21.getExternalExecutor();
        boolean boolean39 = multiBackgroundInitializer21.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(executorService30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture34);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertNull(executorService38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test06822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06822");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer7.getExternalExecutor();
        boolean boolean11 = multiBackgroundInitializer7.start();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer7.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer7.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
    }

    @Test
    public void test06823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06823");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService34);
        boolean boolean36 = multiBackgroundInitializer23.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer23.get();
        boolean boolean38 = multiBackgroundInitializer23.start();
        boolean boolean39 = multiBackgroundInitializer23.isStarted();
        boolean boolean40 = multiBackgroundInitializer23.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test06824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06824");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        java.util.concurrent.ExecutorService executorService9 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService9);
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializerResultsFuture13.get();
        java.util.concurrent.TimeUnit timeUnit16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializerResultsFuture13.get(100L, timeUnit16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
    }

    @Test
    public void test06825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06825");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        boolean boolean8 = multiBackgroundInitializerResultsFuture7.isDone();
        boolean boolean9 = multiBackgroundInitializerResultsFuture7.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06826");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture38 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService39 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture38);
        org.junit.Assert.assertNull(executorService39);
    }

    @Test
    public void test06827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06827");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        boolean boolean19 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test06828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06828");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        boolean boolean13 = multiBackgroundInitializerResults11.isSuccessful();
        java.lang.Object obj15 = multiBackgroundInitializerResults11.getResultObject("hi!");
        boolean boolean17 = multiBackgroundInitializerResults11.isException("hi!");
        boolean boolean18 = multiBackgroundInitializerResults11.isSuccessful();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer20 = multiBackgroundInitializerResults11.getInitializer("hi!");
        boolean boolean22 = multiBackgroundInitializerResults11.isException("hi!");
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException24 = multiBackgroundInitializerResults11.getException("hi!");
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer26 = multiBackgroundInitializerResults11.getInitializer("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(concurrentException24);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer26);
    }

    @Test
    public void test06829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06829");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = multiBackgroundInitializerResults18.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
    }

    @Test
    public void test06830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06830");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer21 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean22 = multiBackgroundInitializer21.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        multiBackgroundInitializer21.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer24);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer28 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean29 = multiBackgroundInitializer28.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer28);
        java.util.concurrent.ExecutorService executorService31 = null;
        multiBackgroundInitializer24.setExternalExecutor(executorService31);
        java.util.concurrent.ExecutorService executorService33 = multiBackgroundInitializer24.getExternalExecutor();
        boolean boolean34 = multiBackgroundInitializer24.start();
        boolean boolean35 = multiBackgroundInitializer24.isStarted();
        boolean boolean36 = multiBackgroundInitializer24.start();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer24.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService38 = multiBackgroundInitializer24.getExternalExecutor();
        boolean boolean39 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer24.get();
        boolean boolean41 = multiBackgroundInitializer24.isStarted();
        boolean boolean42 = multiBackgroundInitializer24.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(executorService33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertNull(executorService38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test06831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06831");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test06832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06832");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer9 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean10 = multiBackgroundInitializer9.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean13 = multiBackgroundInitializer12.isStarted();
        multiBackgroundInitializer9.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer12);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer16 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean17 = multiBackgroundInitializer16.isStarted();
        multiBackgroundInitializer12.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer16);
        java.util.concurrent.ExecutorService executorService19 = null;
        multiBackgroundInitializer16.setExternalExecutor(executorService19);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer16.setExternalExecutor(executorService21);
        boolean boolean23 = multiBackgroundInitializer16.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults24 = multiBackgroundInitializer16.get();
        java.util.concurrent.ExecutorService executorService25 = multiBackgroundInitializer16.getExternalExecutor();
        boolean boolean26 = multiBackgroundInitializer16.isStarted();
        boolean boolean27 = multiBackgroundInitializer16.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer16.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults24);
        org.junit.Assert.assertNull(executorService25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
    }

    @Test
    public void test06833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06833");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer4.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer27.setExternalExecutor(executorService34);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer27.getExternalExecutor();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean38 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer4.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults41 = multiBackgroundInitializer4.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture42 = multiBackgroundInitializer4.getFuture();
        java.util.concurrent.ExecutorService executorService43 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer4.setExternalExecutor(executorService43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults41);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture42);
    }

    @Test
    public void test06834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06834");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializer18.get();
        boolean boolean31 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer18.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException34 = multiBackgroundInitializerResults32.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
    }

    @Test
    public void test06835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06835");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        java.util.concurrent.ExecutorService executorService19 = null;
        multiBackgroundInitializer15.setExternalExecutor(executorService19);
        boolean boolean21 = multiBackgroundInitializer15.start();
        boolean boolean22 = multiBackgroundInitializer15.isStarted();
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer15.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults24 = multiBackgroundInitializer15.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = multiBackgroundInitializerResults24.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults24);
    }

    @Test
    public void test06836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06836");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        boolean boolean20 = multiBackgroundInitializer3.start();
        boolean boolean21 = multiBackgroundInitializer3.start();
        boolean boolean22 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = multiBackgroundInitializer27.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService31 = multiBackgroundInitializer27.getExternalExecutor();
        boolean boolean32 = multiBackgroundInitializer27.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer27.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializer27.get();
        boolean boolean35 = multiBackgroundInitializer27.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture36 = multiBackgroundInitializer27.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer27.get();
        boolean boolean38 = multiBackgroundInitializer27.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService30);
        org.junit.Assert.assertNull(executorService31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test06837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06837");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer3.getFuture();
        boolean boolean9 = multiBackgroundInitializerResultsFuture7.cancel(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test06838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06838");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = multiBackgroundInitializerResults12.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
    }

    @Test
    public void test06839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06839");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer10.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer10.get();
        boolean boolean22 = multiBackgroundInitializer10.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture23 = multiBackgroundInitializer10.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults24 = multiBackgroundInitializer10.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = multiBackgroundInitializerResults24.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture23);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults24);
    }

    @Test
    public void test06840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06840");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
    }

    @Test
    public void test06841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06841");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        java.util.concurrent.ExecutorService executorService34 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService35 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService35);
        boolean boolean37 = multiBackgroundInitializer0.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertNull(executorService34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test06842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06842");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializerResults16.isSuccessful();
        boolean boolean18 = multiBackgroundInitializerResults16.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test06843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06843");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializerResultsFuture12.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializerResultsFuture12.get();
        java.util.concurrent.TimeUnit timeUnit16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializerResultsFuture12.get((long) 100, timeUnit16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
    }

    @Test
    public void test06844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06844");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        boolean boolean31 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer18.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture33 = multiBackgroundInitializer18.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializer18.get();
        java.util.Set<java.lang.String> strSet35 = multiBackgroundInitializerResults34.initializerNames();
        java.lang.Object obj37 = multiBackgroundInitializerResults34.getResultObject("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture33);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test06845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06845");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializerResultsFuture5.isCancelled();
        boolean boolean7 = multiBackgroundInitializerResultsFuture5.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture5.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer10 = multiBackgroundInitializerResults8.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test06846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06846");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService24 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean25 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService26 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertNull(executorService24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test06847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06847");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.ExecutorService executorService19 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService19);
        boolean boolean21 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer0.getFuture();
        boolean boolean24 = multiBackgroundInitializerResultsFuture22.cancel(true);
        boolean boolean25 = multiBackgroundInitializerResultsFuture22.isCancelled();
        java.util.concurrent.TimeUnit timeUnit27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializerResultsFuture22.get((long) 1, timeUnit27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test06848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06848");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        boolean boolean36 = multiBackgroundInitializer0.start();
        boolean boolean37 = multiBackgroundInitializer0.start();
        boolean boolean38 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture39 = multiBackgroundInitializer0.getFuture();
        boolean boolean40 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults41 = multiBackgroundInitializer0.get();
        boolean boolean42 = multiBackgroundInitializerResults41.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test06849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06849");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        boolean boolean7 = multiBackgroundInitializer3.start();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer13 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean14 = multiBackgroundInitializer13.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer16 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean17 = multiBackgroundInitializer16.isStarted();
        multiBackgroundInitializer13.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer16);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean30 = multiBackgroundInitializer23.start();
        multiBackgroundInitializer13.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer33 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean34 = multiBackgroundInitializer33.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean37 = multiBackgroundInitializer36.isStarted();
        multiBackgroundInitializer33.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer36);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer40 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean41 = multiBackgroundInitializer40.isStarted();
        multiBackgroundInitializer36.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer40);
        java.util.concurrent.ExecutorService executorService43 = null;
        multiBackgroundInitializer36.setExternalExecutor(executorService43);
        java.util.concurrent.ExecutorService executorService45 = multiBackgroundInitializer36.getExternalExecutor();
        multiBackgroundInitializer13.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer36);
        boolean boolean47 = multiBackgroundInitializer13.start();
        boolean boolean48 = multiBackgroundInitializer13.start();
        boolean boolean49 = multiBackgroundInitializer13.start();
        java.util.concurrent.ExecutorService executorService50 = multiBackgroundInitializer13.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService51 = multiBackgroundInitializer13.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(executorService45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(executorService50);
        org.junit.Assert.assertNull(executorService51);
    }

    @Test
    public void test06850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06850");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.ExecutorService executorService26 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService26);
        java.util.concurrent.ExecutorService executorService28 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService28);
        boolean boolean30 = multiBackgroundInitializer7.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer7.getFuture();
        java.lang.Class<?> wildcardClass32 = multiBackgroundInitializerResultsFuture31.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test06851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06851");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer3.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test06852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06852");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet17 = multiBackgroundInitializerResults16.initializerNames();
        java.util.Set<java.lang.String> strSet18 = multiBackgroundInitializerResults16.initializerNames();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer20 = multiBackgroundInitializerResults16.getInitializer("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = multiBackgroundInitializerResults16.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer20);
    }

    @Test
    public void test06853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06853");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializerResultsFuture31.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializerResultsFuture31.get();
        boolean boolean34 = multiBackgroundInitializerResults33.isSuccessful();
        boolean boolean35 = multiBackgroundInitializerResults33.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test06854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06854");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        boolean boolean18 = multiBackgroundInitializer3.start();
        boolean boolean19 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06855");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        boolean boolean17 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer19 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean20 = multiBackgroundInitializer19.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer19.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializer19.get();
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer19.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer19.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture25 = multiBackgroundInitializer19.getFuture();
        boolean boolean26 = multiBackgroundInitializer19.isStarted();
        boolean boolean27 = multiBackgroundInitializer19.isStarted();
        boolean boolean28 = multiBackgroundInitializer19.start();
        boolean boolean29 = multiBackgroundInitializer19.start();
        boolean boolean30 = multiBackgroundInitializer19.start();
        boolean boolean31 = multiBackgroundInitializer19.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test06856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06856");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer10.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer10.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializer10.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture23 = multiBackgroundInitializer10.getFuture();
        java.lang.Class<?> wildcardClass24 = multiBackgroundInitializerResultsFuture23.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test06857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06857");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean7 = multiBackgroundInitializer3.start();
        boolean boolean8 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        boolean boolean12 = multiBackgroundInitializerResultsFuture11.isDone();
        java.lang.Class<?> wildcardClass13 = multiBackgroundInitializerResultsFuture11.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test06858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06858");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        boolean boolean11 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = multiBackgroundInitializerResults13.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
    }

    @Test
    public void test06859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06859");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNull(executorService14);
    }

    @Test
    public void test06860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06860");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
    }

    @Test
    public void test06861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06861");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer0.getFuture();
        boolean boolean13 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer0.getFuture();
        boolean boolean15 = multiBackgroundInitializer0.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test06862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06862");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean26 = multiBackgroundInitializer20.isStarted();
        boolean boolean27 = multiBackgroundInitializer20.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture28 = multiBackgroundInitializer20.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults29 = multiBackgroundInitializer20.get();
        boolean boolean30 = multiBackgroundInitializer20.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializer20.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture28);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults31);
    }

    @Test
    public void test06863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06863");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.util.Set<java.lang.String> strSet13 = multiBackgroundInitializerResults11.initializerNames();
        java.util.Set<java.lang.String> strSet14 = multiBackgroundInitializerResults11.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException16 = multiBackgroundInitializerResults11.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test06864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06864");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializer18.get();
        boolean boolean31 = multiBackgroundInitializer18.isStarted();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture33 = multiBackgroundInitializer18.getFuture();
        boolean boolean34 = multiBackgroundInitializerResultsFuture33.isDone();
        boolean boolean36 = multiBackgroundInitializerResultsFuture33.cancel(true);
        java.util.concurrent.TimeUnit timeUnit38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializerResultsFuture33.get((long) 10, timeUnit38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test06865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06865");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException20 = multiBackgroundInitializerResults18.getException("hi!");
        boolean boolean22 = multiBackgroundInitializerResults18.isException("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = multiBackgroundInitializerResults18.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNull(concurrentException20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test06866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06866");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
    }

    @Test
    public void test06867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06867");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        boolean boolean19 = multiBackgroundInitializerResultsFuture18.isDone();
        boolean boolean20 = multiBackgroundInitializerResultsFuture18.isCancelled();
        boolean boolean21 = multiBackgroundInitializerResultsFuture18.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test06868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06868");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        boolean boolean36 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService38 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer40 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean41 = multiBackgroundInitializer40.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer43 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean44 = multiBackgroundInitializer43.isStarted();
        multiBackgroundInitializer40.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer43);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer47 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean48 = multiBackgroundInitializer47.isStarted();
        multiBackgroundInitializer43.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer47);
        java.util.concurrent.ExecutorService executorService50 = null;
        multiBackgroundInitializer43.setExternalExecutor(executorService50);
        java.util.concurrent.ExecutorService executorService52 = multiBackgroundInitializer43.getExternalExecutor();
        boolean boolean53 = multiBackgroundInitializer43.start();
        boolean boolean54 = multiBackgroundInitializer43.start();
        boolean boolean55 = multiBackgroundInitializer43.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture56 = multiBackgroundInitializer43.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults57 = multiBackgroundInitializer43.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults58 = multiBackgroundInitializer43.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture59 = multiBackgroundInitializer43.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults60 = multiBackgroundInitializer43.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults61 = multiBackgroundInitializer43.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertNull(executorService38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(executorService52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture56);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults57);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults58);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture59);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults60);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults61);
    }

    @Test
    public void test06869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06869");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer7.getExternalExecutor();
        boolean boolean11 = multiBackgroundInitializer7.start();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer7.getExternalExecutor();
        java.lang.Class<?> wildcardClass13 = multiBackgroundInitializer7.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test06870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06870");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService3 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService3);
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService9 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test06871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06871");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet9 = multiBackgroundInitializerResults8.initializerNames();
        java.util.Set<java.lang.String> strSet10 = multiBackgroundInitializerResults8.initializerNames();
        java.util.Set<java.lang.String> strSet11 = multiBackgroundInitializerResults8.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.ConcurrentException concurrentException13 = multiBackgroundInitializerResults8.getException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test06872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06872");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture8 = multiBackgroundInitializer3.getFuture();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNull(executorService16);
    }

    @Test
    public void test06873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06873");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer18.get();
        boolean boolean33 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer35 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean36 = multiBackgroundInitializer35.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer38 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean39 = multiBackgroundInitializer38.isStarted();
        multiBackgroundInitializer35.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer38);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer42 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean43 = multiBackgroundInitializer42.isStarted();
        multiBackgroundInitializer38.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer42);
        boolean boolean45 = multiBackgroundInitializer38.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults46 = multiBackgroundInitializer38.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults47 = multiBackgroundInitializer38.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture48 = multiBackgroundInitializer38.getFuture();
        boolean boolean49 = multiBackgroundInitializer38.isStarted();
        java.util.concurrent.ExecutorService executorService50 = multiBackgroundInitializer38.getExternalExecutor();
        boolean boolean51 = multiBackgroundInitializer38.start();
        java.util.concurrent.ExecutorService executorService52 = multiBackgroundInitializer38.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture53 = multiBackgroundInitializer38.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture54 = multiBackgroundInitializer38.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture55 = multiBackgroundInitializer38.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults56 = multiBackgroundInitializer38.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults57 = multiBackgroundInitializer38.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults58 = multiBackgroundInitializer38.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults31);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults46);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults47);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(executorService50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(executorService52);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture53);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture54);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture55);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults56);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults57);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults58);
    }

    @Test
    public void test06874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06874");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNull(executorService18);
    }

    @Test
    public void test06875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06875");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        boolean boolean19 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService20 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean27 = multiBackgroundInitializer26.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
        boolean boolean29 = multiBackgroundInitializer23.isStarted();
        boolean boolean30 = multiBackgroundInitializer23.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService33 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService34 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService35 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean36 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService37 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService37);
        java.util.concurrent.ExecutorService executorService39 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService40 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService40);
        boolean boolean42 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertNull(executorService33);
        org.junit.Assert.assertNull(executorService34);
        org.junit.Assert.assertNull(executorService35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(executorService39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test06876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06876");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = multiBackgroundInitializerResults11.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
    }

    @Test
    public void test06877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06877");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        boolean boolean9 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(executorService10);
    }

    @Test
    public void test06878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06878");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer3.get();
        boolean boolean24 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService26 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture27 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializerResultsFuture27.get();
        boolean boolean29 = multiBackgroundInitializerResultsFuture27.isCancelled();
        boolean boolean30 = multiBackgroundInitializerResultsFuture27.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
        org.junit.Assert.assertNull(executorService26);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture27);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test06879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06879");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        boolean boolean11 = multiBackgroundInitializerResultsFuture10.isDone();
        boolean boolean12 = multiBackgroundInitializerResultsFuture10.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06880");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        java.util.concurrent.ExecutorService executorService9 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService9);
        boolean boolean11 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test06881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06881");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializerResultsFuture14.get();
        boolean boolean17 = multiBackgroundInitializerResultsFuture14.cancel(false);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializerResultsFuture14.get();
        boolean boolean19 = multiBackgroundInitializerResultsFuture14.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializerResultsFuture14.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = multiBackgroundInitializerResults20.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
    }

    @Test
    public void test06882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06882");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertNull(executorService10);
    }

    @Test
    public void test06883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06883");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer3.get();
        boolean boolean23 = multiBackgroundInitializerResults21.isException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test06884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06884");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService2 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializerResultsFuture6.isDone();
        boolean boolean8 = multiBackgroundInitializerResultsFuture6.isDone();
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertNull(executorService2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test06885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06885");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer4.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer27.setExternalExecutor(executorService34);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer27.getExternalExecutor();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean38 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        java.util.concurrent.ExecutorService executorService40 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService40);
        boolean boolean42 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture43 = multiBackgroundInitializer0.getFuture();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults44 = multiBackgroundInitializer0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture43);
    }

    @Test
    public void test06886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06886");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture24 = multiBackgroundInitializer3.getFuture();
        boolean boolean25 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture26 = multiBackgroundInitializer3.getFuture();
        boolean boolean27 = multiBackgroundInitializerResultsFuture26.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test06887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06887");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializerResults15.isException("hi!");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = multiBackgroundInitializerResults15.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06888");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer14.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture27 = multiBackgroundInitializer14.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer14.get();
        boolean boolean29 = multiBackgroundInitializer14.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer34 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean35 = multiBackgroundInitializer34.isStarted();
        multiBackgroundInitializer31.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer34);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer38 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean39 = multiBackgroundInitializer38.isStarted();
        multiBackgroundInitializer34.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer38);
        boolean boolean41 = multiBackgroundInitializer34.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults42 = multiBackgroundInitializer34.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer34.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture44 = multiBackgroundInitializer34.getFuture();
        boolean boolean45 = multiBackgroundInitializer34.isStarted();
        java.util.concurrent.ExecutorService executorService46 = multiBackgroundInitializer34.getExternalExecutor();
        boolean boolean47 = multiBackgroundInitializer34.start();
        java.util.concurrent.ExecutorService executorService48 = multiBackgroundInitializer34.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture49 = multiBackgroundInitializer34.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture50 = multiBackgroundInitializer34.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture51 = multiBackgroundInitializer34.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults52 = multiBackgroundInitializer34.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture27);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults42);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(executorService46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(executorService48);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture49);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture50);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture51);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults52);
    }

    @Test
    public void test06889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06889");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        boolean boolean8 = multiBackgroundInitializer3.start();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        boolean boolean10 = multiBackgroundInitializer3.isStarted();
        java.lang.Class<?> wildcardClass11 = multiBackgroundInitializer3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test06890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06890");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException39 = multiBackgroundInitializerResults37.getException("hi!");
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException41 = multiBackgroundInitializerResults37.getException("hi!");
        java.util.Set<java.lang.String> strSet42 = multiBackgroundInitializerResults37.initializerNames();
        java.lang.Class<?> wildcardClass43 = strSet42.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertNull(concurrentException39);
        org.junit.Assert.assertNull(concurrentException41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test06891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06891");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet18 = multiBackgroundInitializerResults17.initializerNames();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException20 = multiBackgroundInitializerResults17.getException("hi!");
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer22 = multiBackgroundInitializerResults17.getInitializer("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNull(concurrentException20);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer22);
    }

    @Test
    public void test06892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06892");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService21 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
    }

    @Test
    public void test06893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06893");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService8 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService8);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test06894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06894");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
    }

    @Test
    public void test06895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06895");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        boolean boolean8 = multiBackgroundInitializerResults7.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test06896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06896");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        boolean boolean17 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService20 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNull(executorService19);
    }

    @Test
    public void test06897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06897");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializerResults17.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test06898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06898");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean13 = multiBackgroundInitializer12.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer12.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer15.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService19 = null;
        multiBackgroundInitializer15.setExternalExecutor(executorService19);
        boolean boolean21 = multiBackgroundInitializer15.start();
        boolean boolean22 = multiBackgroundInitializer15.start();
        multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture24 = multiBackgroundInitializer15.getFuture();
        boolean boolean25 = multiBackgroundInitializerResultsFuture24.isDone();
        java.util.concurrent.TimeUnit timeUnit27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializerResultsFuture24.get((long) (-1), timeUnit27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test06899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06899");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        boolean boolean36 = multiBackgroundInitializer0.start();
        boolean boolean37 = multiBackgroundInitializer0.start();
        boolean boolean38 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer0.get();
        boolean boolean41 = multiBackgroundInitializerResults39.isException("");
        java.lang.Object obj43 = multiBackgroundInitializerResults39.getResultObject("");
        boolean boolean45 = multiBackgroundInitializerResults39.isException("hi!");
        java.lang.Object obj47 = multiBackgroundInitializerResults39.getResultObject("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test06900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06900");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        boolean boolean38 = multiBackgroundInitializerResults36.isException("hi!");
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException40 = multiBackgroundInitializerResults36.getException("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass41 = concurrentException40.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(concurrentException40);
    }

    @Test
    public void test06901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06901");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer3.get();
        boolean boolean21 = multiBackgroundInitializer3.isStarted();
        boolean boolean22 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults23);
    }

    @Test
    public void test06902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06902");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        boolean boolean17 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = executorService18.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(executorService18);
    }

    @Test
    public void test06903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06903");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer14.getFuture();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.ExecutorService executorService24 = multiBackgroundInitializer14.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializer14.get();
        boolean boolean26 = multiBackgroundInitializer14.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture27 = multiBackgroundInitializer14.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer29 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean30 = multiBackgroundInitializer29.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        multiBackgroundInitializer29.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer36 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean37 = multiBackgroundInitializer36.isStarted();
        multiBackgroundInitializer32.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer36);
        java.util.concurrent.ExecutorService executorService39 = null;
        multiBackgroundInitializer32.setExternalExecutor(executorService39);
        java.util.concurrent.ExecutorService executorService41 = multiBackgroundInitializer32.getExternalExecutor();
        boolean boolean42 = multiBackgroundInitializer32.start();
        boolean boolean43 = multiBackgroundInitializer32.start();
        boolean boolean44 = multiBackgroundInitializer32.start();
        boolean boolean45 = multiBackgroundInitializer32.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults46 = multiBackgroundInitializer32.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer14.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNull(executorService24);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(executorService41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults46);
    }

    @Test
    public void test06904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06904");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture36 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer0.getFuture();
        boolean boolean38 = multiBackgroundInitializer0.isStarted();
        boolean boolean39 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer0.get();
        boolean boolean41 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults42 = multiBackgroundInitializer0.get();
        boolean boolean43 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test06905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06905");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture4 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService10 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
    }

    @Test
    public void test06906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06906");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer11.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        boolean boolean15 = multiBackgroundInitializer11.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        boolean boolean17 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer11.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer11.get();
        boolean boolean20 = multiBackgroundInitializerResults19.isSuccessful();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = multiBackgroundInitializerResults19.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test06907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06907");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
    }

    @Test
    public void test06908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06908");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture2.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.cancel(true);
        java.util.concurrent.TimeUnit timeUnit10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture2.get((long) 100, timeUnit10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test06909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06909");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
    }

    @Test
    public void test06910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06910");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException39 = multiBackgroundInitializerResults37.getException("");
        java.lang.Object obj41 = multiBackgroundInitializerResults37.getResultObject("");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertNull(concurrentException39);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test06911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06911");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializer0.start();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        boolean boolean9 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06912");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = multiBackgroundInitializerResults17.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
    }

    @Test
    public void test06913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06913");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        boolean boolean34 = multiBackgroundInitializerResults33.isSuccessful();
        boolean boolean35 = multiBackgroundInitializerResults33.isSuccessful();
        java.util.Set<java.lang.String> strSet36 = multiBackgroundInitializerResults33.initializerNames();
        java.util.Set<java.lang.String> strSet37 = multiBackgroundInitializerResults33.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strSet37);
    }

    @Test
    public void test06914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06914");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        java.util.concurrent.ExecutorService executorService18 = null;
        multiBackgroundInitializer11.setExternalExecutor(executorService18);
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer11.getExternalExecutor();
        boolean boolean21 = multiBackgroundInitializer11.start();
        java.util.concurrent.ExecutorService executorService22 = multiBackgroundInitializer11.getExternalExecutor();
        boolean boolean23 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        java.util.concurrent.ExecutorService executorService25 = multiBackgroundInitializer11.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService26 = multiBackgroundInitializer11.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer11.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture28 = multiBackgroundInitializer11.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer30 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean31 = multiBackgroundInitializer30.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer33 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean34 = multiBackgroundInitializer33.isStarted();
        multiBackgroundInitializer30.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer33);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer33.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService37 = multiBackgroundInitializer33.getExternalExecutor();
        boolean boolean38 = multiBackgroundInitializer33.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer33.get();
        boolean boolean40 = multiBackgroundInitializer33.start();
        boolean boolean41 = multiBackgroundInitializer33.start();
        java.util.concurrent.ExecutorService executorService42 = multiBackgroundInitializer33.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer33.get();
        java.util.concurrent.ExecutorService executorService44 = multiBackgroundInitializer33.getExternalExecutor();
        boolean boolean45 = multiBackgroundInitializer33.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(executorService22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(executorService25);
        org.junit.Assert.assertNull(executorService26);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertNull(executorService37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(executorService42);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertNull(executorService44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test06915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06915");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        boolean boolean15 = multiBackgroundInitializerResults14.isSuccessful();
        java.lang.Object obj17 = multiBackgroundInitializerResults14.getResultObject("hi!");
        boolean boolean19 = multiBackgroundInitializerResults14.isException("hi!");
        boolean boolean20 = multiBackgroundInitializerResults14.isSuccessful();
        boolean boolean21 = multiBackgroundInitializerResults14.isSuccessful();
        boolean boolean23 = multiBackgroundInitializerResults14.isException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test06916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06916");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean26 = multiBackgroundInitializer7.start();
        boolean boolean27 = multiBackgroundInitializer7.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test06917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06917");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.TimeUnit timeUnit14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializerResultsFuture12.get((long) 'a', timeUnit14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
    }

    @Test
    public void test06918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06918");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        boolean boolean18 = multiBackgroundInitializer3.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test06919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06919");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
    }

    @Test
    public void test06920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06920");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.start();
        boolean boolean7 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer0.getFuture();
        boolean boolean12 = multiBackgroundInitializerResultsFuture11.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06921");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        boolean boolean11 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06922");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNull(executorService17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNull(executorService19);
    }

    @Test
    public void test06923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06923");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        boolean boolean19 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService20 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService20);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean27 = multiBackgroundInitializer26.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
        boolean boolean29 = multiBackgroundInitializer23.isStarted();
        boolean boolean30 = multiBackgroundInitializer23.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture32 = multiBackgroundInitializer23.getFuture();
        boolean boolean33 = multiBackgroundInitializerResultsFuture32.isDone();
        boolean boolean34 = multiBackgroundInitializerResultsFuture32.isDone();
        boolean boolean35 = multiBackgroundInitializerResultsFuture32.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test06924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06924");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
    }

    @Test
    public void test06925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06925");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer3.get();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService16 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(executorService11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
    }

    @Test
    public void test06926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06926");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.lang.Object obj14 = multiBackgroundInitializerResults11.getResultObject("hi!");
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer16 = multiBackgroundInitializerResults11.getInitializer("hi!");
        java.lang.Object obj18 = multiBackgroundInitializerResults11.getResultObject("hi!");
        boolean boolean20 = multiBackgroundInitializerResults11.isException("hi!");
        java.lang.Object obj22 = multiBackgroundInitializerResults11.getResultObject("hi!");
        boolean boolean23 = multiBackgroundInitializerResults11.isSuccessful();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test06927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06927");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer18.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture37 = multiBackgroundInitializer18.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults34);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture37);
    }

    @Test
    public void test06928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06928");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean28 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture29 = multiBackgroundInitializer0.getFuture();
        boolean boolean30 = multiBackgroundInitializerResultsFuture29.isCancelled();
        boolean boolean31 = multiBackgroundInitializerResultsFuture29.isCancelled();
        boolean boolean33 = multiBackgroundInitializerResultsFuture29.cancel(true);
        boolean boolean34 = multiBackgroundInitializerResultsFuture29.isCancelled();
        boolean boolean35 = multiBackgroundInitializerResultsFuture29.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test06929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06929");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        boolean boolean20 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = multiBackgroundInitializerResults21.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
    }

    @Test
    public void test06930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06930");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean17 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService20 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
    }

    @Test
    public void test06931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06931");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer14.getFuture();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.ExecutorService executorService24 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean25 = multiBackgroundInitializer14.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer14.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNull(executorService24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
    }

    @Test
    public void test06932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06932");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        java.lang.Object obj18 = multiBackgroundInitializerResults16.getResultObject("hi!");
        java.util.Set<java.lang.String> strSet19 = multiBackgroundInitializerResults16.initializerNames();
        java.lang.Object obj21 = multiBackgroundInitializerResults16.getResultObject("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test06933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06933");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        boolean boolean11 = multiBackgroundInitializerResultsFuture10.isDone();
        boolean boolean12 = multiBackgroundInitializerResultsFuture10.isDone();
        boolean boolean13 = multiBackgroundInitializerResultsFuture10.isDone();
        java.util.concurrent.TimeUnit timeUnit15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializerResultsFuture10.get((long) (byte) 10, timeUnit15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test06934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06934");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer11 = multiBackgroundInitializerResults9.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
    }

    @Test
    public void test06935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06935");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults30 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer34 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean35 = multiBackgroundInitializer34.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer37 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean38 = multiBackgroundInitializer37.isStarted();
        multiBackgroundInitializer34.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer37);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer41 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean42 = multiBackgroundInitializer41.isStarted();
        multiBackgroundInitializer37.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer41);
        boolean boolean44 = multiBackgroundInitializer37.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults45 = multiBackgroundInitializer37.get();
        boolean boolean46 = multiBackgroundInitializer37.isStarted();
        java.util.concurrent.ExecutorService executorService47 = multiBackgroundInitializer37.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService48 = multiBackgroundInitializer37.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults49 = multiBackgroundInitializer37.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults50 = multiBackgroundInitializer37.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture51 = multiBackgroundInitializer37.getFuture();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer18.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults30);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults31);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(executorService47);
        org.junit.Assert.assertNull(executorService48);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults49);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults50);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture51);
    }

    @Test
    public void test06936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06936");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        boolean boolean17 = multiBackgroundInitializerResultsFuture16.isDone();
        boolean boolean18 = multiBackgroundInitializerResultsFuture16.isCancelled();
        boolean boolean19 = multiBackgroundInitializerResultsFuture16.isDone();
        boolean boolean20 = multiBackgroundInitializerResultsFuture16.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06937");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = multiBackgroundInitializerResults11.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
    }

    @Test
    public void test06938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06938");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer3.get();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test06939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06939");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        java.util.concurrent.ExecutorService executorService21 = null;
        multiBackgroundInitializer14.setExternalExecutor(executorService21);
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer14.getExternalExecutor();
        boolean boolean24 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture26 = multiBackgroundInitializer14.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializerResultsFuture26.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = multiBackgroundInitializerResults27.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture26);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
    }

    @Test
    public void test06940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06940");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer18.getFuture();
        boolean boolean31 = multiBackgroundInitializer18.start();
        boolean boolean32 = multiBackgroundInitializer18.isStarted();
        boolean boolean33 = multiBackgroundInitializer18.start();
        boolean boolean34 = multiBackgroundInitializer18.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test06941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06941");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        boolean boolean36 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer0.get();
        java.util.Set<java.lang.String> strSet38 = multiBackgroundInitializerResults37.initializerNames();
        java.lang.Object obj40 = multiBackgroundInitializerResults37.getResultObject("hi!");
        java.lang.Class<?> wildcardClass41 = multiBackgroundInitializerResults37.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test06942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06942");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture6.get();
        java.util.concurrent.TimeUnit timeUnit9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializerResultsFuture6.get((long) 0, timeUnit9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
    }

    @Test
    public void test06943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06943");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializerResultsFuture31.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializerResultsFuture31.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializerResultsFuture31.get();
        boolean boolean35 = multiBackgroundInitializerResultsFuture31.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test06944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06944");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        boolean boolean8 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer0.get();
        boolean boolean11 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults12 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = multiBackgroundInitializerResults12.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults12);
    }

    @Test
    public void test06945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06945");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture29 = multiBackgroundInitializer18.getFuture();
        boolean boolean30 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializer18.get();
        java.util.Set<java.lang.String> strSet32 = multiBackgroundInitializerResults31.initializerNames();
        boolean boolean33 = multiBackgroundInitializerResults31.isSuccessful();
        java.lang.Object obj35 = multiBackgroundInitializerResults31.getResultObject("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test06946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06946");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        boolean boolean8 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializerResultsFuture9.get();
        java.lang.Class<?> wildcardClass11 = multiBackgroundInitializerResultsFuture9.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test06947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06947");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.TimeUnit timeUnit20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializerResultsFuture18.get((long) 0, timeUnit20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
    }

    @Test
    public void test06948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06948");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
    }

    @Test
    public void test06949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06949");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer7.isStarted();
        boolean boolean11 = multiBackgroundInitializer7.start();
        boolean boolean12 = multiBackgroundInitializer7.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer7.getExternalExecutor();
        boolean boolean14 = multiBackgroundInitializer7.start();
        boolean boolean15 = multiBackgroundInitializer7.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer7.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer7.get();
        boolean boolean18 = multiBackgroundInitializer7.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06950");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = multiBackgroundInitializerResults9.isException("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
    }

    @Test
    public void test06951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06951");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException19 = multiBackgroundInitializerResults17.getException("hi!");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = multiBackgroundInitializerResults17.isException("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertNull(concurrentException19);
    }

    @Test
    public void test06952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06952");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer34 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean35 = multiBackgroundInitializer34.isStarted();
        multiBackgroundInitializer31.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer34);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer38 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean39 = multiBackgroundInitializer38.isStarted();
        multiBackgroundInitializer34.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer38);
        java.util.concurrent.ExecutorService executorService41 = null;
        multiBackgroundInitializer34.setExternalExecutor(executorService41);
        java.util.concurrent.ExecutorService executorService43 = multiBackgroundInitializer34.getExternalExecutor();
        boolean boolean44 = multiBackgroundInitializer34.start();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer34);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture46 = multiBackgroundInitializer34.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults47 = multiBackgroundInitializer34.get();
        java.util.concurrent.ExecutorService executorService48 = multiBackgroundInitializer34.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults49 = multiBackgroundInitializer34.get();
        boolean boolean50 = multiBackgroundInitializer34.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(executorService43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture46);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults47);
        org.junit.Assert.assertNull(executorService48);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test06953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06953");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        boolean boolean29 = multiBackgroundInitializer18.isStarted();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        boolean boolean32 = multiBackgroundInitializer18.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService34 = multiBackgroundInitializer18.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults35 = multiBackgroundInitializer18.get();
        java.lang.Class<?> wildcardClass36 = multiBackgroundInitializer18.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertNull(executorService34);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test06954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06954");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService2 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService2);
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        boolean boolean5 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean7 = multiBackgroundInitializer0.start();
        boolean boolean8 = multiBackgroundInitializer0.isStarted();
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test06955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06955");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean9 = multiBackgroundInitializer3.start();
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNull(executorService15);
    }

    @Test
    public void test06956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06956");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer15);
        java.util.concurrent.ExecutorService executorService19 = null;
        multiBackgroundInitializer15.setExternalExecutor(executorService19);
        boolean boolean21 = multiBackgroundInitializer15.start();
        boolean boolean22 = multiBackgroundInitializer15.isStarted();
        java.util.concurrent.ExecutorService executorService23 = multiBackgroundInitializer15.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults24 = multiBackgroundInitializer15.get();
        boolean boolean25 = multiBackgroundInitializer15.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(executorService23);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test06957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06957");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.TimeUnit timeUnit9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializerResultsFuture7.get((long) (byte) 1, timeUnit9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
    }

    @Test
    public void test06958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06958");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer4.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer27.setExternalExecutor(executorService34);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer27.getExternalExecutor();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean38 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        boolean boolean40 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture41 = multiBackgroundInitializer0.getFuture();
        boolean boolean43 = multiBackgroundInitializerResultsFuture41.cancel(true);
        boolean boolean45 = multiBackgroundInitializerResultsFuture41.cancel(true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults46 = multiBackgroundInitializerResultsFuture41.get();
            org.junit.Assert.fail("Expected exception of type java.util.concurrent.CancellationException; message: null");
        } catch (java.util.concurrent.CancellationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test06959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06959");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean5 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
    }

    @Test
    public void test06960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06960");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer4.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer27.setExternalExecutor(executorService34);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer27.getExternalExecutor();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean38 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        java.util.concurrent.ExecutorService executorService40 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService40);
        boolean boolean42 = multiBackgroundInitializer0.isStarted();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer0.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test06961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06961");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer0.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService10 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService11 = multiBackgroundInitializer0.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(executorService10);
        org.junit.Assert.assertNull(executorService11);
    }

    @Test
    public void test06962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06962");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer21 = multiBackgroundInitializerResults19.getInitializer("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNull(executorService18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer21);
    }

    @Test
    public void test06963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06963");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture29 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture30 = multiBackgroundInitializer18.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults31 = multiBackgroundInitializer18.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer18.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture33 = multiBackgroundInitializer18.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture29);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture30);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults31);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture33);
    }

    @Test
    public void test06964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06964");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture6 = multiBackgroundInitializer0.getFuture();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer11.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer11.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer11.get();
        boolean boolean17 = multiBackgroundInitializer11.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer11.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializer11.get();
        java.util.concurrent.ExecutorService executorService20 = multiBackgroundInitializer11.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer11.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializer11.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture23 = multiBackgroundInitializer11.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults24 = multiBackgroundInitializer11.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture25 = multiBackgroundInitializer11.getFuture();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults19);
        org.junit.Assert.assertNull(executorService20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture23);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults24);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture25);
    }

    @Test
    public void test06965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06965");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer7.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer7.isStarted();
        boolean boolean13 = multiBackgroundInitializer7.start();
        boolean boolean14 = multiBackgroundInitializer7.start();
        boolean boolean15 = multiBackgroundInitializer7.start();
        boolean boolean16 = multiBackgroundInitializer7.isStarted();
        boolean boolean17 = multiBackgroundInitializer7.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer19 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean20 = multiBackgroundInitializer19.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer19.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer19.isStarted();
        boolean boolean26 = multiBackgroundInitializer19.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer19.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer19.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
    }

    @Test
    public void test06966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06966");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        boolean boolean2 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer4 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean5 = multiBackgroundInitializer4.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer4.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer24 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean25 = multiBackgroundInitializer24.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer24.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer31 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean32 = multiBackgroundInitializer31.isStarted();
        multiBackgroundInitializer27.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer31);
        java.util.concurrent.ExecutorService executorService34 = null;
        multiBackgroundInitializer27.setExternalExecutor(executorService34);
        java.util.concurrent.ExecutorService executorService36 = multiBackgroundInitializer27.getExternalExecutor();
        multiBackgroundInitializer4.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        boolean boolean38 = multiBackgroundInitializer4.start();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer4);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer4.get();
        boolean boolean41 = multiBackgroundInitializer4.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults42 = multiBackgroundInitializer4.get();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException44 = multiBackgroundInitializerResults42.getException("");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(executorService36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults42);
        org.junit.Assert.assertNull(concurrentException44);
    }

    @Test
    public void test06967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06967");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        java.util.concurrent.ExecutorService executorService1 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService3 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean4 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.TimeUnit timeUnit7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializerResultsFuture5.get((long) (short) 0, timeUnit7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(executorService1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(executorService3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
    }

    @Test
    public void test06968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06968");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults15 = multiBackgroundInitializer3.get();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService17 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(executorService17);
    }

    @Test
    public void test06969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06969");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        boolean boolean14 = multiBackgroundInitializer3.start();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        boolean boolean16 = multiBackgroundInitializer3.start();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService18 = multiBackgroundInitializer3.getExternalExecutor();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(executorService18);
    }

    @Test
    public void test06970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06970");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults4 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        boolean boolean8 = multiBackgroundInitializer0.start();
        boolean boolean9 = multiBackgroundInitializer0.start();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06971");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean14 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService16 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean17 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService19 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.setExternalExecutor(executorService19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertNull(executorService16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
    }

    @Test
    public void test06972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06972");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture21 = multiBackgroundInitializer3.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer26 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean27 = multiBackgroundInitializer26.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
        java.util.concurrent.ExecutorService executorService29 = null;
        multiBackgroundInitializer26.setExternalExecutor(executorService29);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer32 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean33 = multiBackgroundInitializer32.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer35 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean36 = multiBackgroundInitializer35.isStarted();
        multiBackgroundInitializer32.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer35);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer39 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean40 = multiBackgroundInitializer39.isStarted();
        multiBackgroundInitializer35.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer39);
        boolean boolean42 = multiBackgroundInitializer35.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults43 = multiBackgroundInitializer35.get();
        boolean boolean44 = multiBackgroundInitializer35.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture45 = multiBackgroundInitializer35.getFuture();
        multiBackgroundInitializer26.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer35);
        java.util.concurrent.ExecutorService executorService47 = multiBackgroundInitializer26.getExternalExecutor();
        boolean boolean48 = multiBackgroundInitializer26.isStarted();
        boolean boolean49 = multiBackgroundInitializer26.start();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture45);
        org.junit.Assert.assertNull(executorService47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test06973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06973");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer10.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer10.get();
        java.lang.Object obj22 = multiBackgroundInitializerResults20.getResultObject("hi!");
        java.util.Set<java.lang.String> strSet23 = multiBackgroundInitializerResults20.initializerNames();
        boolean boolean24 = multiBackgroundInitializerResults20.isSuccessful();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException26 = multiBackgroundInitializerResults20.getException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(concurrentException26);
    }

    @Test
    public void test06974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06974");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer11.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer14.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        boolean boolean21 = multiBackgroundInitializer14.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer14.getFuture();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean24 = multiBackgroundInitializer14.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture25 = multiBackgroundInitializer14.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults26 = multiBackgroundInitializer14.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults27 = multiBackgroundInitializer14.get();
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException29 = multiBackgroundInitializerResults27.getException("hi!");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture25);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults26);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults27);
        org.junit.Assert.assertNull(concurrentException29);
    }

    @Test
    public void test06975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06975");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isCancelled();
        boolean boolean5 = multiBackgroundInitializerResultsFuture2.cancel(true);
        boolean boolean6 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.cancel(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test06976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06976");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService6);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer9 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean10 = multiBackgroundInitializer9.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer12 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean13 = multiBackgroundInitializer12.isStarted();
        multiBackgroundInitializer9.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer12);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer16 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean17 = multiBackgroundInitializer16.isStarted();
        multiBackgroundInitializer12.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer16);
        boolean boolean19 = multiBackgroundInitializer12.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializer12.get();
        boolean boolean21 = multiBackgroundInitializer12.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture22 = multiBackgroundInitializer12.getFuture();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer12);
        java.util.concurrent.ExecutorService executorService24 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean25 = multiBackgroundInitializer3.isStarted();
        boolean boolean26 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService27 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults29 = multiBackgroundInitializer3.get();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: start() must be called first!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture22);
        org.junit.Assert.assertNull(executorService24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test06977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06977");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.TimeUnit timeUnit17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializerResultsFuture15.get((long) (byte) 1, timeUnit17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
    }

    @Test
    public void test06978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06978");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer3.get();
        boolean boolean8 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture9 = multiBackgroundInitializer3.getFuture();
        java.lang.Class<?> wildcardClass10 = multiBackgroundInitializer3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test06979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06979");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        boolean boolean10 = multiBackgroundInitializer0.start();
        boolean boolean11 = multiBackgroundInitializer0.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test06980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06980");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService7);
        boolean boolean9 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture10 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializerResultsFuture12.isDone();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test06981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06981");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer8 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean9 = multiBackgroundInitializer8.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.isStarted();
        multiBackgroundInitializer8.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer15 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean16 = multiBackgroundInitializer15.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer18 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean19 = multiBackgroundInitializer18.isStarted();
        multiBackgroundInitializer15.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        multiBackgroundInitializer18.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer22);
        boolean boolean25 = multiBackgroundInitializer18.start();
        multiBackgroundInitializer8.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer18);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults28 = multiBackgroundInitializer18.get();
        java.util.concurrent.ExecutorService executorService29 = multiBackgroundInitializer18.getExternalExecutor();
        boolean boolean30 = multiBackgroundInitializer18.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture31 = multiBackgroundInitializer18.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture32 = multiBackgroundInitializer18.getFuture();
        boolean boolean33 = multiBackgroundInitializer18.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults34 = multiBackgroundInitializer18.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture35 = multiBackgroundInitializer18.getFuture();
        boolean boolean37 = multiBackgroundInitializerResultsFuture35.cancel(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults28);
        org.junit.Assert.assertNull(executorService29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture31);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults34);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test06982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06982");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.start();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer3.getFuture();
        boolean boolean19 = multiBackgroundInitializer3.start();
        boolean boolean20 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer22 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean23 = multiBackgroundInitializer22.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer25 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean26 = multiBackgroundInitializer25.isStarted();
        multiBackgroundInitializer22.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer25);
        boolean boolean28 = multiBackgroundInitializer25.isStarted();
        boolean boolean29 = multiBackgroundInitializer25.start();
        java.util.concurrent.ExecutorService executorService30 = multiBackgroundInitializer25.getExternalExecutor();
        boolean boolean31 = multiBackgroundInitializer25.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults32 = multiBackgroundInitializer25.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults33 = multiBackgroundInitializer25.get();
        java.util.concurrent.ExecutorService executorService34 = multiBackgroundInitializer25.getExternalExecutor();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer3.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(executorService30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults32);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults33);
        org.junit.Assert.assertNull(executorService34);
    }

    @Test
    public void test06983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06983");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        java.lang.Object obj14 = multiBackgroundInitializerResults11.getResultObject("hi!");
        boolean boolean16 = multiBackgroundInitializerResults11.isException("hi!");
        boolean boolean18 = multiBackgroundInitializerResults11.isException("hi!");
        org.apache.commons.lang3.concurrent.ConcurrentException concurrentException20 = multiBackgroundInitializerResults11.getException("hi!");
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer22 = multiBackgroundInitializerResults11.getInitializer("hi!");
        org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer24 = multiBackgroundInitializerResults11.getInitializer("hi!");
        java.util.Set<java.lang.String> strSet25 = multiBackgroundInitializerResults11.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = multiBackgroundInitializerResults11.getResultObject("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(concurrentException20);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer22);
        org.junit.Assert.assertNotNull(wildcardBackgroundInitializer24);
        org.junit.Assert.assertNotNull(strSet25);
    }

    @Test
    public void test06984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06984");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean16 = multiBackgroundInitializerResultsFuture14.cancel(true);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults17 = multiBackgroundInitializerResultsFuture14.get();
        boolean boolean18 = multiBackgroundInitializerResultsFuture14.isDone();
        boolean boolean19 = multiBackgroundInitializerResultsFuture14.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults20 = multiBackgroundInitializerResultsFuture14.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults20);
    }

    @Test
    public void test06985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06985");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture17 = multiBackgroundInitializer3.getFuture();
        boolean boolean18 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        boolean boolean20 = multiBackgroundInitializerResultsFuture19.isCancelled();
        boolean boolean21 = multiBackgroundInitializerResultsFuture19.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults22 = multiBackgroundInitializerResultsFuture19.get();
        java.util.concurrent.TimeUnit timeUnit24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults25 = multiBackgroundInitializerResultsFuture19.get((long) (short) 100, timeUnit24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults22);
    }

    @Test
    public void test06986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06986");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        boolean boolean4 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializer0.get();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test06987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06987");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
    }

    @Test
    public void test06988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06988");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults36 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults37 = multiBackgroundInitializer0.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture38 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults39 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer0.get();
        java.lang.Object obj42 = multiBackgroundInitializerResults40.getResultObject("");
        java.util.Set<java.lang.String> strSet43 = multiBackgroundInitializerResults40.initializerNames();
        java.util.Set<java.lang.String> strSet44 = multiBackgroundInitializerResults40.initializerNames();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults36);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults37);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture38);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults39);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(strSet44);
    }

    @Test
    public void test06989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06989");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        java.util.concurrent.ExecutorService executorService10 = null;
        multiBackgroundInitializer3.setExternalExecutor(executorService10);
        boolean boolean12 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        boolean boolean15 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults16 = multiBackgroundInitializer3.get();
        boolean boolean18 = multiBackgroundInitializerResults16.isException("hi!");
        java.lang.Class<?> wildcardClass19 = multiBackgroundInitializerResults16.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test06990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06990");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer10 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean11 = multiBackgroundInitializer10.isStarted();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer14 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean15 = multiBackgroundInitializer14.isStarted();
        multiBackgroundInitializer10.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer14);
        boolean boolean17 = multiBackgroundInitializer10.start();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer10);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer20 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean21 = multiBackgroundInitializer20.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer23 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean24 = multiBackgroundInitializer23.isStarted();
        multiBackgroundInitializer20.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer27 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean28 = multiBackgroundInitializer27.isStarted();
        multiBackgroundInitializer23.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer27);
        java.util.concurrent.ExecutorService executorService30 = null;
        multiBackgroundInitializer23.setExternalExecutor(executorService30);
        java.util.concurrent.ExecutorService executorService32 = multiBackgroundInitializer23.getExternalExecutor();
        multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer23);
        boolean boolean34 = multiBackgroundInitializer0.start();
        boolean boolean35 = multiBackgroundInitializer0.isStarted();
        boolean boolean36 = multiBackgroundInitializer0.start();
        boolean boolean37 = multiBackgroundInitializer0.start();
        boolean boolean38 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture39 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults40 = multiBackgroundInitializer0.get();
        boolean boolean41 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults42 = multiBackgroundInitializer0.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer44 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean45 = multiBackgroundInitializer44.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer47 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean48 = multiBackgroundInitializer47.isStarted();
        multiBackgroundInitializer44.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer47);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer51 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean52 = multiBackgroundInitializer51.isStarted();
        multiBackgroundInitializer47.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer51);
        java.util.concurrent.ExecutorService executorService54 = null;
        multiBackgroundInitializer47.setExternalExecutor(executorService54);
        java.util.concurrent.ExecutorService executorService56 = multiBackgroundInitializer47.getExternalExecutor();
        boolean boolean57 = multiBackgroundInitializer47.start();
        boolean boolean58 = multiBackgroundInitializer47.start();
        boolean boolean59 = multiBackgroundInitializer47.start();
        boolean boolean60 = multiBackgroundInitializer47.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults61 = multiBackgroundInitializer47.get();
        boolean boolean62 = multiBackgroundInitializer47.start();
        java.util.concurrent.ExecutorService executorService63 = multiBackgroundInitializer47.getExternalExecutor();
        boolean boolean64 = multiBackgroundInitializer47.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture65 = multiBackgroundInitializer47.getFuture();
        java.util.concurrent.ExecutorService executorService66 = multiBackgroundInitializer47.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults67 = multiBackgroundInitializer47.get();
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.addInitializer("", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: addInitializer() must not be called after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(executorService32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture39);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(executorService56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(executorService63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture65);
        org.junit.Assert.assertNull(executorService66);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults67);
    }

    @Test
    public void test06991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06991");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean4 = multiBackgroundInitializerResultsFuture2.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults5 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean6 = multiBackgroundInitializerResultsFuture2.isCancelled();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults7 = multiBackgroundInitializerResultsFuture2.get();
        boolean boolean8 = multiBackgroundInitializerResultsFuture2.isDone();
        boolean boolean9 = multiBackgroundInitializerResultsFuture2.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06992");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults3 = multiBackgroundInitializer0.get();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture5 = multiBackgroundInitializer0.getFuture();
        boolean boolean6 = multiBackgroundInitializer0.isStarted();
        boolean boolean7 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults8 = multiBackgroundInitializer0.get();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.BackgroundInitializer<?> wildcardBackgroundInitializer10 = multiBackgroundInitializerResults8.getInitializer("");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name ");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults3);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults8);
    }

    @Test
    public void test06993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06993");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        boolean boolean6 = multiBackgroundInitializer3.isStarted();
        boolean boolean7 = multiBackgroundInitializer3.start();
        boolean boolean8 = multiBackgroundInitializer3.start();
        boolean boolean9 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.Set<java.lang.String> strSet12 = multiBackgroundInitializerResults11.initializerNames();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = multiBackgroundInitializerResults11.getResultObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No child initializer with name hi!");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test06994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06994");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture2 = multiBackgroundInitializer0.getFuture();
        boolean boolean3 = multiBackgroundInitializer0.start();
        java.util.concurrent.ExecutorService executorService4 = multiBackgroundInitializer0.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService5 = multiBackgroundInitializer0.getExternalExecutor();
        boolean boolean6 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture7 = multiBackgroundInitializer0.getFuture();
        java.util.concurrent.ExecutorService executorService8 = multiBackgroundInitializer0.getExternalExecutor();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer0.get();
        boolean boolean10 = multiBackgroundInitializer0.start();
        boolean boolean11 = multiBackgroundInitializer0.isStarted();
        java.util.concurrent.ExecutorService executorService12 = null;
        // The following exception was thrown during execution in test generation
        try {
            multiBackgroundInitializer0.setExternalExecutor(executorService12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot set ExecutorService after start()!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(executorService4);
        org.junit.Assert.assertNull(executorService5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture7);
        org.junit.Assert.assertNull(executorService8);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test06995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06995");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer11 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean12 = multiBackgroundInitializer11.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture13 = multiBackgroundInitializer11.getFuture();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer11.get();
        boolean boolean15 = multiBackgroundInitializer11.start();
        multiBackgroundInitializer7.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer11);
        boolean boolean17 = multiBackgroundInitializer11.isStarted();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture18 = multiBackgroundInitializer11.getFuture();
        java.util.concurrent.ExecutorService executorService19 = multiBackgroundInitializer11.getExternalExecutor();
        boolean boolean20 = multiBackgroundInitializer11.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults21 = multiBackgroundInitializer11.get();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture18);
        org.junit.Assert.assertNull(executorService19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults21);
    }

    @Test
    public void test06996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06996");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture11 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService12 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean13 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService14 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean15 = multiBackgroundInitializer3.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture16 = multiBackgroundInitializer3.getFuture();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture11);
        org.junit.Assert.assertNull(executorService12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(executorService14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture16);
    }

    @Test
    public void test06997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06997");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.start();
        boolean boolean2 = multiBackgroundInitializer0.start();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture3 = multiBackgroundInitializer0.getFuture();
        boolean boolean4 = multiBackgroundInitializerResultsFuture3.isCancelled();
        boolean boolean5 = multiBackgroundInitializerResultsFuture3.isDone();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults6 = multiBackgroundInitializerResultsFuture3.get();
        boolean boolean7 = multiBackgroundInitializerResultsFuture3.isCancelled();
        boolean boolean8 = multiBackgroundInitializerResultsFuture3.isDone();
        java.util.concurrent.TimeUnit timeUnit10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializerResultsFuture3.get((long) 100, timeUnit10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test06998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06998");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        java.util.concurrent.ExecutorService executorService9 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean10 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture12 = multiBackgroundInitializer3.getFuture();
        boolean boolean13 = multiBackgroundInitializerResultsFuture12.isCancelled();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(executorService9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test06999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06999");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer7 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean8 = multiBackgroundInitializer7.isStarted();
        multiBackgroundInitializer3.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer7);
        boolean boolean10 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        java.util.concurrent.ExecutorService executorService13 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture14 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.ExecutorService executorService15 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean16 = multiBackgroundInitializer3.isStarted();
        boolean boolean17 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults18 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture19 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture20 = multiBackgroundInitializer3.getFuture();
        java.util.concurrent.TimeUnit timeUnit22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults23 = multiBackgroundInitializerResultsFuture20.get(1L, timeUnit22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(executorService13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture14);
        org.junit.Assert.assertNull(executorService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults18);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture19);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture20);
    }

    @Test
    public void test07000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test07000");
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer0 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean1 = multiBackgroundInitializer0.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer multiBackgroundInitializer3 = new org.apache.commons.lang3.concurrent.MultiBackgroundInitializer();
        boolean boolean4 = multiBackgroundInitializer3.isStarted();
        multiBackgroundInitializer0.addInitializer("hi!", (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>) multiBackgroundInitializer3);
        java.util.concurrent.ExecutorService executorService6 = multiBackgroundInitializer3.getExternalExecutor();
        java.util.concurrent.ExecutorService executorService7 = multiBackgroundInitializer3.getExternalExecutor();
        boolean boolean8 = multiBackgroundInitializer3.start();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults9 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults10 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults11 = multiBackgroundInitializer3.get();
        boolean boolean12 = multiBackgroundInitializer3.isStarted();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults13 = multiBackgroundInitializer3.get();
        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults14 = multiBackgroundInitializer3.get();
        java.util.concurrent.Future<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults> multiBackgroundInitializerResultsFuture15 = multiBackgroundInitializer3.getFuture();
        boolean boolean16 = multiBackgroundInitializerResultsFuture15.isDone();
        java.util.concurrent.TimeUnit timeUnit18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults multiBackgroundInitializerResults19 = multiBackgroundInitializerResultsFuture15.get((long) 10, timeUnit18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(executorService6);
        org.junit.Assert.assertNull(executorService7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults9);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults10);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults13);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResults14);
        org.junit.Assert.assertNotNull(multiBackgroundInitializerResultsFuture15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }
}
